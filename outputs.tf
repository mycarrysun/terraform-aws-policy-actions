output "effects" {
  description = "All effects allowed in an AWS Policy"
  value       = {
    Allow = "Allow"
    Deny  = "Deny"
  }
}

output "actions" {
  description = "An object with all AWS policy actions separated by service"
  value       = {
    a2c = {
      AllActions = "a2c:*"
      GetContainerizationJobDetails = "a2c:GetContainerizationJobDetails"
      GetDeploymentJobDetails = "a2c:GetDeploymentJobDetails"
      StartContainerizationJob = "a2c:StartContainerizationJob"
      StartDeploymentJob = "a2c:StartDeploymentJob"
    }
    a4b = {
      AllActions = "a4b:*"
      ApproveSkill = "a4b:ApproveSkill"
      AssociateContactWithAddressBook = "a4b:AssociateContactWithAddressBook"
      AssociateDeviceWithNetworkProfile = "a4b:AssociateDeviceWithNetworkProfile"
      AssociateDeviceWithRoom = "a4b:AssociateDeviceWithRoom"
      AssociateSkillGroupWithRoom = "a4b:AssociateSkillGroupWithRoom"
      AssociateSkillWithSkillGroup = "a4b:AssociateSkillWithSkillGroup"
      AssociateSkillWithUsers = "a4b:AssociateSkillWithUsers"
      CompleteRegistration = "a4b:CompleteRegistration"
      CreateAddressBook = "a4b:CreateAddressBook"
      CreateBusinessReportSchedule = "a4b:CreateBusinessReportSchedule"
      CreateConferenceProvider = "a4b:CreateConferenceProvider"
      CreateContact = "a4b:CreateContact"
      CreateGatewayGroup = "a4b:CreateGatewayGroup"
      CreateNetworkProfile = "a4b:CreateNetworkProfile"
      CreateProfile = "a4b:CreateProfile"
      CreateRoom = "a4b:CreateRoom"
      CreateSkillGroup = "a4b:CreateSkillGroup"
      CreateUser = "a4b:CreateUser"
      DeleteAddressBook = "a4b:DeleteAddressBook"
      DeleteBusinessReportSchedule = "a4b:DeleteBusinessReportSchedule"
      DeleteConferenceProvider = "a4b:DeleteConferenceProvider"
      DeleteContact = "a4b:DeleteContact"
      DeleteDevice = "a4b:DeleteDevice"
      DeleteDeviceUsageData = "a4b:DeleteDeviceUsageData"
      DeleteGatewayGroup = "a4b:DeleteGatewayGroup"
      DeleteNetworkProfile = "a4b:DeleteNetworkProfile"
      DeleteProfile = "a4b:DeleteProfile"
      DeleteRoom = "a4b:DeleteRoom"
      DeleteRoomSkillParameter = "a4b:DeleteRoomSkillParameter"
      DeleteSkillAuthorization = "a4b:DeleteSkillAuthorization"
      DeleteSkillGroup = "a4b:DeleteSkillGroup"
      DeleteUser = "a4b:DeleteUser"
      DisassociateContactFromAddressBook = "a4b:DisassociateContactFromAddressBook"
      DisassociateDeviceFromRoom = "a4b:DisassociateDeviceFromRoom"
      DisassociateSkillFromSkillGroup = "a4b:DisassociateSkillFromSkillGroup"
      DisassociateSkillFromUsers = "a4b:DisassociateSkillFromUsers"
      DisassociateSkillGroupFromRoom = "a4b:DisassociateSkillGroupFromRoom"
      ForgetSmartHomeAppliances = "a4b:ForgetSmartHomeAppliances"
      GetAddressBook = "a4b:GetAddressBook"
      GetConferencePreference = "a4b:GetConferencePreference"
      GetConferenceProvider = "a4b:GetConferenceProvider"
      GetContact = "a4b:GetContact"
      GetDevice = "a4b:GetDevice"
      GetGateway = "a4b:GetGateway"
      GetGatewayGroup = "a4b:GetGatewayGroup"
      GetInvitationConfiguration = "a4b:GetInvitationConfiguration"
      GetNetworkProfile = "a4b:GetNetworkProfile"
      GetProfile = "a4b:GetProfile"
      GetRoom = "a4b:GetRoom"
      GetRoomSkillParameter = "a4b:GetRoomSkillParameter"
      GetSkillGroup = "a4b:GetSkillGroup"
      ListBusinessReportSchedules = "a4b:ListBusinessReportSchedules"
      ListConferenceProviders = "a4b:ListConferenceProviders"
      ListDeviceEvents = "a4b:ListDeviceEvents"
      ListGatewayGroups = "a4b:ListGatewayGroups"
      ListGateways = "a4b:ListGateways"
      ListSkills = "a4b:ListSkills"
      ListSkillsStoreCategories = "a4b:ListSkillsStoreCategories"
      ListSkillsStoreSkillsByCategory = "a4b:ListSkillsStoreSkillsByCategory"
      ListSmartHomeAppliances = "a4b:ListSmartHomeAppliances"
      ListTags = "a4b:ListTags"
      PutConferencePreference = "a4b:PutConferencePreference"
      PutDeviceSetupEvents = "a4b:PutDeviceSetupEvents"
      PutInvitationConfiguration = "a4b:PutInvitationConfiguration"
      PutRoomSkillParameter = "a4b:PutRoomSkillParameter"
      PutSkillAuthorization = "a4b:PutSkillAuthorization"
      RegisterAVSDevice = "a4b:RegisterAVSDevice"
      RegisterDevice = "a4b:RegisterDevice"
      RejectSkill = "a4b:RejectSkill"
      ResolveRoom = "a4b:ResolveRoom"
      RevokeInvitation = "a4b:RevokeInvitation"
      SearchAddressBooks = "a4b:SearchAddressBooks"
      SearchContacts = "a4b:SearchContacts"
      SearchDevices = "a4b:SearchDevices"
      SearchNetworkProfiles = "a4b:SearchNetworkProfiles"
      SearchProfiles = "a4b:SearchProfiles"
      SearchRooms = "a4b:SearchRooms"
      SearchSkillGroups = "a4b:SearchSkillGroups"
      SearchUsers = "a4b:SearchUsers"
      SendAnnouncement = "a4b:SendAnnouncement"
      SendInvitation = "a4b:SendInvitation"
      StartDeviceSync = "a4b:StartDeviceSync"
      StartSmartHomeApplianceDiscovery = "a4b:StartSmartHomeApplianceDiscovery"
      TagResource = "a4b:TagResource"
      UntagResource = "a4b:UntagResource"
      UpdateAddressBook = "a4b:UpdateAddressBook"
      UpdateBusinessReportSchedule = "a4b:UpdateBusinessReportSchedule"
      UpdateConferenceProvider = "a4b:UpdateConferenceProvider"
      UpdateContact = "a4b:UpdateContact"
      UpdateDevice = "a4b:UpdateDevice"
      UpdateGateway = "a4b:UpdateGateway"
      UpdateGatewayGroup = "a4b:UpdateGatewayGroup"
      UpdateNetworkProfile = "a4b:UpdateNetworkProfile"
      UpdateProfile = "a4b:UpdateProfile"
      UpdateRoom = "a4b:UpdateRoom"
      UpdateSkillGroup = "a4b:UpdateSkillGroup"
    }
    access-analyzer = {
      AllActions = "access-analyzer:*"
      ApplyArchiveRule = "access-analyzer:ApplyArchiveRule"
      CancelPolicyGeneration = "access-analyzer:CancelPolicyGeneration"
      CheckAccessNotGranted = "access-analyzer:CheckAccessNotGranted"
      CheckNoNewAccess = "access-analyzer:CheckNoNewAccess"
      CheckNoPublicAccess = "access-analyzer:CheckNoPublicAccess"
      CreateAccessPreview = "access-analyzer:CreateAccessPreview"
      CreateAnalyzer = "access-analyzer:CreateAnalyzer"
      CreateArchiveRule = "access-analyzer:CreateArchiveRule"
      DeleteAnalyzer = "access-analyzer:DeleteAnalyzer"
      DeleteArchiveRule = "access-analyzer:DeleteArchiveRule"
      GenerateFindingRecommendation = "access-analyzer:GenerateFindingRecommendation"
      GetAccessPreview = "access-analyzer:GetAccessPreview"
      GetAnalyzedResource = "access-analyzer:GetAnalyzedResource"
      GetAnalyzer = "access-analyzer:GetAnalyzer"
      GetArchiveRule = "access-analyzer:GetArchiveRule"
      GetFinding = "access-analyzer:GetFinding"
      GetFindingRecommendation = "access-analyzer:GetFindingRecommendation"
      GetFindingsStatistics = "access-analyzer:GetFindingsStatistics"
      GetGeneratedPolicy = "access-analyzer:GetGeneratedPolicy"
      ListAccessPreviewFindings = "access-analyzer:ListAccessPreviewFindings"
      ListAccessPreviews = "access-analyzer:ListAccessPreviews"
      ListAnalyzedResources = "access-analyzer:ListAnalyzedResources"
      ListAnalyzers = "access-analyzer:ListAnalyzers"
      ListArchiveRules = "access-analyzer:ListArchiveRules"
      ListFindings = "access-analyzer:ListFindings"
      ListPolicyGenerations = "access-analyzer:ListPolicyGenerations"
      ListTagsForResource = "access-analyzer:ListTagsForResource"
      StartPolicyGeneration = "access-analyzer:StartPolicyGeneration"
      StartResourceScan = "access-analyzer:StartResourceScan"
      TagResource = "access-analyzer:TagResource"
      UntagResource = "access-analyzer:UntagResource"
      UpdateArchiveRule = "access-analyzer:UpdateArchiveRule"
      UpdateFindings = "access-analyzer:UpdateFindings"
      ValidatePolicy = "access-analyzer:ValidatePolicy"
    }
    account = {
      AllActions = "account:*"
      AcceptPrimaryEmailUpdate = "account:AcceptPrimaryEmailUpdate"
      CloseAccount = "account:CloseAccount"
      DeleteAlternateContact = "account:DeleteAlternateContact"
      DisableRegion = "account:DisableRegion"
      EnableRegion = "account:EnableRegion"
      GetAccountInformation = "account:GetAccountInformation"
      GetAlternateContact = "account:GetAlternateContact"
      GetChallengeQuestions = "account:GetChallengeQuestions"
      GetContactInformation = "account:GetContactInformation"
      GetPrimaryEmail = "account:GetPrimaryEmail"
      GetRegionOptStatus = "account:GetRegionOptStatus"
      ListRegions = "account:ListRegions"
      PutAlternateContact = "account:PutAlternateContact"
      PutChallengeQuestions = "account:PutChallengeQuestions"
      PutContactInformation = "account:PutContactInformation"
      StartPrimaryEmailUpdate = "account:StartPrimaryEmailUpdate"
    }
    acm-pca = {
      AllActions = "acm-pca:*"
      CreateCertificateAuthority = "acm-pca:CreateCertificateAuthority"
      CreateCertificateAuthorityAuditReport = "acm-pca:CreateCertificateAuthorityAuditReport"
      CreatePermission = "acm-pca:CreatePermission"
      DeleteCertificateAuthority = "acm-pca:DeleteCertificateAuthority"
      DeletePermission = "acm-pca:DeletePermission"
      DeletePolicy = "acm-pca:DeletePolicy"
      DescribeCertificateAuthority = "acm-pca:DescribeCertificateAuthority"
      DescribeCertificateAuthorityAuditReport = "acm-pca:DescribeCertificateAuthorityAuditReport"
      GetCertificate = "acm-pca:GetCertificate"
      GetCertificateAuthorityCertificate = "acm-pca:GetCertificateAuthorityCertificate"
      GetCertificateAuthorityCsr = "acm-pca:GetCertificateAuthorityCsr"
      GetPolicy = "acm-pca:GetPolicy"
      ImportCertificateAuthorityCertificate = "acm-pca:ImportCertificateAuthorityCertificate"
      IssueCertificate = "acm-pca:IssueCertificate"
      ListCertificateAuthorities = "acm-pca:ListCertificateAuthorities"
      ListPermissions = "acm-pca:ListPermissions"
      ListTags = "acm-pca:ListTags"
      PutPolicy = "acm-pca:PutPolicy"
      RestoreCertificateAuthority = "acm-pca:RestoreCertificateAuthority"
      RevokeCertificate = "acm-pca:RevokeCertificate"
      TagCertificateAuthority = "acm-pca:TagCertificateAuthority"
      UntagCertificateAuthority = "acm-pca:UntagCertificateAuthority"
      UpdateCertificateAuthority = "acm-pca:UpdateCertificateAuthority"
    }
    acm = {
      AllActions = "acm:*"
      AddTagsToCertificate = "acm:AddTagsToCertificate"
      DeleteCertificate = "acm:DeleteCertificate"
      DescribeCertificate = "acm:DescribeCertificate"
      ExportCertificate = "acm:ExportCertificate"
      GetAccountConfiguration = "acm:GetAccountConfiguration"
      GetCertificate = "acm:GetCertificate"
      ImportCertificate = "acm:ImportCertificate"
      ListCertificates = "acm:ListCertificates"
      ListTagsForCertificate = "acm:ListTagsForCertificate"
      PutAccountConfiguration = "acm:PutAccountConfiguration"
      RemoveTagsFromCertificate = "acm:RemoveTagsFromCertificate"
      RenewCertificate = "acm:RenewCertificate"
      RequestCertificate = "acm:RequestCertificate"
      ResendValidationEmail = "acm:ResendValidationEmail"
      UpdateCertificateOptions = "acm:UpdateCertificateOptions"
    }
    activate = {
      AllActions = "activate:*"
      CreateForm = "activate:CreateForm"
      GetAccountContact = "activate:GetAccountContact"
      GetContentInfo = "activate:GetContentInfo"
      GetCosts = "activate:GetCosts"
      GetCredits = "activate:GetCredits"
      GetMemberInfo = "activate:GetMemberInfo"
      GetProgram = "activate:GetProgram"
      PutMemberInfo = "activate:PutMemberInfo"
    }
    airflow = {
      AllActions = "airflow:*"
      CreateCliToken = "airflow:CreateCliToken"
      CreateEnvironment = "airflow:CreateEnvironment"
      CreateWebLoginToken = "airflow:CreateWebLoginToken"
      DeleteEnvironment = "airflow:DeleteEnvironment"
      GetEnvironment = "airflow:GetEnvironment"
      ListEnvironments = "airflow:ListEnvironments"
      ListTagsForResource = "airflow:ListTagsForResource"
      PublishMetrics = "airflow:PublishMetrics"
      TagResource = "airflow:TagResource"
      UntagResource = "airflow:UntagResource"
      UpdateEnvironment = "airflow:UpdateEnvironment"
    }
    amplify = {
      AllActions = "amplify:*"
      CreateApp = "amplify:CreateApp"
      CreateBackendEnvironment = "amplify:CreateBackendEnvironment"
      CreateBranch = "amplify:CreateBranch"
      CreateDeployment = "amplify:CreateDeployment"
      CreateDomainAssociation = "amplify:CreateDomainAssociation"
      CreateWebHook = "amplify:CreateWebHook"
      DeleteApp = "amplify:DeleteApp"
      DeleteBackendEnvironment = "amplify:DeleteBackendEnvironment"
      DeleteBranch = "amplify:DeleteBranch"
      DeleteDomainAssociation = "amplify:DeleteDomainAssociation"
      DeleteJob = "amplify:DeleteJob"
      DeleteWebHook = "amplify:DeleteWebHook"
      GenerateAccessLogs = "amplify:GenerateAccessLogs"
      GetApp = "amplify:GetApp"
      GetArtifactUrl = "amplify:GetArtifactUrl"
      GetBackendEnvironment = "amplify:GetBackendEnvironment"
      GetBranch = "amplify:GetBranch"
      GetDomainAssociation = "amplify:GetDomainAssociation"
      GetJob = "amplify:GetJob"
      GetWebHook = "amplify:GetWebHook"
      ListApps = "amplify:ListApps"
      ListArtifacts = "amplify:ListArtifacts"
      ListBackendEnvironments = "amplify:ListBackendEnvironments"
      ListBranches = "amplify:ListBranches"
      ListDomainAssociations = "amplify:ListDomainAssociations"
      ListJobs = "amplify:ListJobs"
      ListTagsForResource = "amplify:ListTagsForResource"
      ListWebHooks = "amplify:ListWebHooks"
      StartDeployment = "amplify:StartDeployment"
      StartJob = "amplify:StartJob"
      StopJob = "amplify:StopJob"
      TagResource = "amplify:TagResource"
      UntagResource = "amplify:UntagResource"
      UpdateApp = "amplify:UpdateApp"
      UpdateBranch = "amplify:UpdateBranch"
      UpdateDomainAssociation = "amplify:UpdateDomainAssociation"
      UpdateWebHook = "amplify:UpdateWebHook"
    }
    amplifybackend = {
      AllActions = "amplifybackend:*"
      CloneBackend = "amplifybackend:CloneBackend"
      CreateBackend = "amplifybackend:CreateBackend"
      CreateBackendAPI = "amplifybackend:CreateBackendAPI"
      CreateBackendAuth = "amplifybackend:CreateBackendAuth"
      CreateBackendConfig = "amplifybackend:CreateBackendConfig"
      CreateBackendStorage = "amplifybackend:CreateBackendStorage"
      CreateToken = "amplifybackend:CreateToken"
      DeleteBackend = "amplifybackend:DeleteBackend"
      DeleteBackendAPI = "amplifybackend:DeleteBackendAPI"
      DeleteBackendAuth = "amplifybackend:DeleteBackendAuth"
      DeleteBackendStorage = "amplifybackend:DeleteBackendStorage"
      DeleteToken = "amplifybackend:DeleteToken"
      GenerateBackendAPIModels = "amplifybackend:GenerateBackendAPIModels"
      GetBackend = "amplifybackend:GetBackend"
      GetBackendAPI = "amplifybackend:GetBackendAPI"
      GetBackendAPIModels = "amplifybackend:GetBackendAPIModels"
      GetBackendAuth = "amplifybackend:GetBackendAuth"
      GetBackendJob = "amplifybackend:GetBackendJob"
      GetBackendStorage = "amplifybackend:GetBackendStorage"
      GetToken = "amplifybackend:GetToken"
      ImportBackendAuth = "amplifybackend:ImportBackendAuth"
      ImportBackendStorage = "amplifybackend:ImportBackendStorage"
      ListBackendJobs = "amplifybackend:ListBackendJobs"
      ListS3Buckets = "amplifybackend:ListS3Buckets"
      RemoveAllBackends = "amplifybackend:RemoveAllBackends"
      RemoveBackendConfig = "amplifybackend:RemoveBackendConfig"
      UpdateBackendAPI = "amplifybackend:UpdateBackendAPI"
      UpdateBackendAuth = "amplifybackend:UpdateBackendAuth"
      UpdateBackendConfig = "amplifybackend:UpdateBackendConfig"
      UpdateBackendJob = "amplifybackend:UpdateBackendJob"
      UpdateBackendStorage = "amplifybackend:UpdateBackendStorage"
    }
    amplifyuibuilder = {
      AllActions = "amplifyuibuilder:*"
      CreateComponent = "amplifyuibuilder:CreateComponent"
      CreateForm = "amplifyuibuilder:CreateForm"
      CreateTheme = "amplifyuibuilder:CreateTheme"
      DeleteComponent = "amplifyuibuilder:DeleteComponent"
      DeleteForm = "amplifyuibuilder:DeleteForm"
      DeleteTheme = "amplifyuibuilder:DeleteTheme"
      ExchangeCodeForToken = "amplifyuibuilder:ExchangeCodeForToken"
      ExportComponents = "amplifyuibuilder:ExportComponents"
      ExportForms = "amplifyuibuilder:ExportForms"
      ExportThemes = "amplifyuibuilder:ExportThemes"
      GetCodegenJob = "amplifyuibuilder:GetCodegenJob"
      GetComponent = "amplifyuibuilder:GetComponent"
      GetForm = "amplifyuibuilder:GetForm"
      GetMetadata = "amplifyuibuilder:GetMetadata"
      GetTheme = "amplifyuibuilder:GetTheme"
      ListCodegenJobs = "amplifyuibuilder:ListCodegenJobs"
      ListComponents = "amplifyuibuilder:ListComponents"
      ListForms = "amplifyuibuilder:ListForms"
      ListTagsForResource = "amplifyuibuilder:ListTagsForResource"
      ListThemes = "amplifyuibuilder:ListThemes"
      PutMetadataFlag = "amplifyuibuilder:PutMetadataFlag"
      RefreshToken = "amplifyuibuilder:RefreshToken"
      ResetMetadataFlag = "amplifyuibuilder:ResetMetadataFlag"
      StartCodegenJob = "amplifyuibuilder:StartCodegenJob"
      TagResource = "amplifyuibuilder:TagResource"
      UntagResource = "amplifyuibuilder:UntagResource"
      UpdateComponent = "amplifyuibuilder:UpdateComponent"
      UpdateForm = "amplifyuibuilder:UpdateForm"
      UpdateTheme = "amplifyuibuilder:UpdateTheme"
    }
    aoss = {
      AllActions = "aoss:*"
      APIAccessAll = "aoss:APIAccessAll"
      BatchGetCollection = "aoss:BatchGetCollection"
      BatchGetEffectiveLifecyclePolicy = "aoss:BatchGetEffectiveLifecyclePolicy"
      BatchGetLifecyclePolicy = "aoss:BatchGetLifecyclePolicy"
      BatchGetVpcEndpoint = "aoss:BatchGetVpcEndpoint"
      CreateAccessPolicy = "aoss:CreateAccessPolicy"
      CreateCollection = "aoss:CreateCollection"
      CreateLifecyclePolicy = "aoss:CreateLifecyclePolicy"
      CreateSecurityConfig = "aoss:CreateSecurityConfig"
      CreateSecurityPolicy = "aoss:CreateSecurityPolicy"
      CreateVpcEndpoint = "aoss:CreateVpcEndpoint"
      DashboardsAccessAll = "aoss:DashboardsAccessAll"
      DeleteAccessPolicy = "aoss:DeleteAccessPolicy"
      DeleteCollection = "aoss:DeleteCollection"
      DeleteLifecyclePolicy = "aoss:DeleteLifecyclePolicy"
      DeleteSecurityConfig = "aoss:DeleteSecurityConfig"
      DeleteSecurityPolicy = "aoss:DeleteSecurityPolicy"
      DeleteVpcEndpoint = "aoss:DeleteVpcEndpoint"
      GetAccessPolicy = "aoss:GetAccessPolicy"
      GetAccountSettings = "aoss:GetAccountSettings"
      GetPoliciesStats = "aoss:GetPoliciesStats"
      GetSecurityConfig = "aoss:GetSecurityConfig"
      GetSecurityPolicy = "aoss:GetSecurityPolicy"
      ListAccessPolicies = "aoss:ListAccessPolicies"
      ListCollections = "aoss:ListCollections"
      ListLifecyclePolicies = "aoss:ListLifecyclePolicies"
      ListSecurityConfigs = "aoss:ListSecurityConfigs"
      ListSecurityPolicies = "aoss:ListSecurityPolicies"
      ListTagsForResource = "aoss:ListTagsForResource"
      ListVpcEndpoints = "aoss:ListVpcEndpoints"
      TagResource = "aoss:TagResource"
      UntagResource = "aoss:UntagResource"
      UpdateAccessPolicy = "aoss:UpdateAccessPolicy"
      UpdateAccountSettings = "aoss:UpdateAccountSettings"
      UpdateCollection = "aoss:UpdateCollection"
      UpdateLifecyclePolicy = "aoss:UpdateLifecyclePolicy"
      UpdateSecurityConfig = "aoss:UpdateSecurityConfig"
      UpdateSecurityPolicy = "aoss:UpdateSecurityPolicy"
      UpdateVpcEndpoint = "aoss:UpdateVpcEndpoint"
    }
    apigateway = {
      AllActions = "apigateway:*"
      AddCertificateToDomain = "apigateway:AddCertificateToDomain"
      DELETE = "apigateway:DELETE"
      GET = "apigateway:GET"
      PATCH = "apigateway:PATCH"
      POST = "apigateway:POST"
      PUT = "apigateway:PUT"
      RemoveCertificateFromDomain = "apigateway:RemoveCertificateFromDomain"
      SetWebACL = "apigateway:SetWebACL"
      UpdateRestApiPolicy = "apigateway:UpdateRestApiPolicy"
    }
    app-integrations = {
      AllActions = "app-integrations:*"
      CreateApplication = "app-integrations:CreateApplication"
      CreateApplicationAssociation = "app-integrations:CreateApplicationAssociation"
      CreateDataIntegration = "app-integrations:CreateDataIntegration"
      CreateDataIntegrationAssociation = "app-integrations:CreateDataIntegrationAssociation"
      CreateEventIntegration = "app-integrations:CreateEventIntegration"
      CreateEventIntegrationAssociation = "app-integrations:CreateEventIntegrationAssociation"
      DeleteApplication = "app-integrations:DeleteApplication"
      DeleteApplicationAssociation = "app-integrations:DeleteApplicationAssociation"
      DeleteDataIntegration = "app-integrations:DeleteDataIntegration"
      DeleteDataIntegrationAssociation = "app-integrations:DeleteDataIntegrationAssociation"
      DeleteEventIntegration = "app-integrations:DeleteEventIntegration"
      DeleteEventIntegrationAssociation = "app-integrations:DeleteEventIntegrationAssociation"
      GetApplication = "app-integrations:GetApplication"
      GetDataIntegration = "app-integrations:GetDataIntegration"
      GetEventIntegration = "app-integrations:GetEventIntegration"
      ListApplicationAssociations = "app-integrations:ListApplicationAssociations"
      ListApplications = "app-integrations:ListApplications"
      ListDataIntegrationAssociations = "app-integrations:ListDataIntegrationAssociations"
      ListDataIntegrations = "app-integrations:ListDataIntegrations"
      ListEventIntegrationAssociations = "app-integrations:ListEventIntegrationAssociations"
      ListEventIntegrations = "app-integrations:ListEventIntegrations"
      ListTagsForResource = "app-integrations:ListTagsForResource"
      TagResource = "app-integrations:TagResource"
      UntagResource = "app-integrations:UntagResource"
      UpdateApplication = "app-integrations:UpdateApplication"
      UpdateDataIntegration = "app-integrations:UpdateDataIntegration"
      UpdateEventIntegration = "app-integrations:UpdateEventIntegration"
    }
    appconfig = {
      AllActions = "appconfig:*"
      CreateApplication = "appconfig:CreateApplication"
      CreateConfigurationProfile = "appconfig:CreateConfigurationProfile"
      CreateDeploymentStrategy = "appconfig:CreateDeploymentStrategy"
      CreateEnvironment = "appconfig:CreateEnvironment"
      CreateExtension = "appconfig:CreateExtension"
      CreateExtensionAssociation = "appconfig:CreateExtensionAssociation"
      CreateHostedConfigurationVersion = "appconfig:CreateHostedConfigurationVersion"
      DeleteApplication = "appconfig:DeleteApplication"
      DeleteConfigurationProfile = "appconfig:DeleteConfigurationProfile"
      DeleteDeploymentStrategy = "appconfig:DeleteDeploymentStrategy"
      DeleteEnvironment = "appconfig:DeleteEnvironment"
      DeleteExtension = "appconfig:DeleteExtension"
      DeleteExtensionAssociation = "appconfig:DeleteExtensionAssociation"
      DeleteHostedConfigurationVersion = "appconfig:DeleteHostedConfigurationVersion"
      GetApplication = "appconfig:GetApplication"
      GetConfiguration = "appconfig:GetConfiguration"
      GetConfigurationProfile = "appconfig:GetConfigurationProfile"
      GetDeployment = "appconfig:GetDeployment"
      GetDeploymentStrategy = "appconfig:GetDeploymentStrategy"
      GetEnvironment = "appconfig:GetEnvironment"
      GetExtension = "appconfig:GetExtension"
      GetExtensionAssociation = "appconfig:GetExtensionAssociation"
      GetHostedConfigurationVersion = "appconfig:GetHostedConfigurationVersion"
      GetLatestConfiguration = "appconfig:GetLatestConfiguration"
      ListApplications = "appconfig:ListApplications"
      ListConfigurationProfiles = "appconfig:ListConfigurationProfiles"
      ListDeploymentStrategies = "appconfig:ListDeploymentStrategies"
      ListDeployments = "appconfig:ListDeployments"
      ListEnvironments = "appconfig:ListEnvironments"
      ListExtensionAssociations = "appconfig:ListExtensionAssociations"
      ListExtensions = "appconfig:ListExtensions"
      ListHostedConfigurationVersions = "appconfig:ListHostedConfigurationVersions"
      ListTagsForResource = "appconfig:ListTagsForResource"
      StartConfigurationSession = "appconfig:StartConfigurationSession"
      StartDeployment = "appconfig:StartDeployment"
      StopDeployment = "appconfig:StopDeployment"
      TagResource = "appconfig:TagResource"
      UntagResource = "appconfig:UntagResource"
      UpdateApplication = "appconfig:UpdateApplication"
      UpdateConfigurationProfile = "appconfig:UpdateConfigurationProfile"
      UpdateDeploymentStrategy = "appconfig:UpdateDeploymentStrategy"
      UpdateEnvironment = "appconfig:UpdateEnvironment"
      UpdateExtension = "appconfig:UpdateExtension"
      UpdateExtensionAssociation = "appconfig:UpdateExtensionAssociation"
      ValidateConfiguration = "appconfig:ValidateConfiguration"
    }
    appfabric = {
      AllActions = "appfabric:*"
      BatchGetUserAccessTasks = "appfabric:BatchGetUserAccessTasks"
      ConnectAppAuthorization = "appfabric:ConnectAppAuthorization"
      CreateAppAuthorization = "appfabric:CreateAppAuthorization"
      CreateAppBundle = "appfabric:CreateAppBundle"
      CreateIngestion = "appfabric:CreateIngestion"
      CreateIngestionDestination = "appfabric:CreateIngestionDestination"
      DeleteAppAuthorization = "appfabric:DeleteAppAuthorization"
      DeleteAppBundle = "appfabric:DeleteAppBundle"
      DeleteIngestion = "appfabric:DeleteIngestion"
      DeleteIngestionDestination = "appfabric:DeleteIngestionDestination"
      GetAppAuthorization = "appfabric:GetAppAuthorization"
      GetAppBundle = "appfabric:GetAppBundle"
      GetIngestion = "appfabric:GetIngestion"
      GetIngestionDestination = "appfabric:GetIngestionDestination"
      ListAppAuthorizations = "appfabric:ListAppAuthorizations"
      ListAppBundles = "appfabric:ListAppBundles"
      ListIngestionDestinations = "appfabric:ListIngestionDestinations"
      ListIngestions = "appfabric:ListIngestions"
      ListTagsForResource = "appfabric:ListTagsForResource"
      StartIngestion = "appfabric:StartIngestion"
      StartUserAccessTasks = "appfabric:StartUserAccessTasks"
      StopIngestion = "appfabric:StopIngestion"
      TagResource = "appfabric:TagResource"
      UntagResource = "appfabric:UntagResource"
      UpdateAppAuthorization = "appfabric:UpdateAppAuthorization"
      UpdateIngestionDestination = "appfabric:UpdateIngestionDestination"
    }
    appflow = {
      AllActions = "appflow:*"
      CancelFlowExecutions = "appflow:CancelFlowExecutions"
      CreateConnectorProfile = "appflow:CreateConnectorProfile"
      CreateFlow = "appflow:CreateFlow"
      DeleteConnectorProfile = "appflow:DeleteConnectorProfile"
      DeleteFlow = "appflow:DeleteFlow"
      DescribeConnector = "appflow:DescribeConnector"
      DescribeConnectorEntity = "appflow:DescribeConnectorEntity"
      DescribeConnectorFields = "appflow:DescribeConnectorFields"
      DescribeConnectorProfiles = "appflow:DescribeConnectorProfiles"
      DescribeConnectors = "appflow:DescribeConnectors"
      DescribeFlow = "appflow:DescribeFlow"
      DescribeFlowExecution = "appflow:DescribeFlowExecution"
      DescribeFlowExecutionRecords = "appflow:DescribeFlowExecutionRecords"
      DescribeFlows = "appflow:DescribeFlows"
      ListConnectorEntities = "appflow:ListConnectorEntities"
      ListConnectorFields = "appflow:ListConnectorFields"
      ListConnectors = "appflow:ListConnectors"
      ListFlows = "appflow:ListFlows"
      ListTagsForResource = "appflow:ListTagsForResource"
      RegisterConnector = "appflow:RegisterConnector"
      ResetConnectorMetadataCache = "appflow:ResetConnectorMetadataCache"
      RunFlow = "appflow:RunFlow"
      StartFlow = "appflow:StartFlow"
      StopFlow = "appflow:StopFlow"
      TagResource = "appflow:TagResource"
      UnRegisterConnector = "appflow:UnRegisterConnector"
      UntagResource = "appflow:UntagResource"
      UpdateConnectorProfile = "appflow:UpdateConnectorProfile"
      UpdateConnectorRegistration = "appflow:UpdateConnectorRegistration"
      UpdateFlow = "appflow:UpdateFlow"
      UseConnectorProfile = "appflow:UseConnectorProfile"
    }
    application-autoscaling = {
      AllActions = "application-autoscaling:*"
      DeleteScalingPolicy = "application-autoscaling:DeleteScalingPolicy"
      DeleteScheduledAction = "application-autoscaling:DeleteScheduledAction"
      DeregisterScalableTarget = "application-autoscaling:DeregisterScalableTarget"
      DescribeScalableTargets = "application-autoscaling:DescribeScalableTargets"
      DescribeScalingActivities = "application-autoscaling:DescribeScalingActivities"
      DescribeScalingPolicies = "application-autoscaling:DescribeScalingPolicies"
      DescribeScheduledActions = "application-autoscaling:DescribeScheduledActions"
      ListTagsForResource = "application-autoscaling:ListTagsForResource"
      PutScalingPolicy = "application-autoscaling:PutScalingPolicy"
      PutScheduledAction = "application-autoscaling:PutScheduledAction"
      RegisterScalableTarget = "application-autoscaling:RegisterScalableTarget"
      TagResource = "application-autoscaling:TagResource"
      UntagResource = "application-autoscaling:UntagResource"
    }
    application-cost-profiler = {
      AllActions = "application-cost-profiler:*"
      DeleteReportDefinition = "application-cost-profiler:DeleteReportDefinition"
      GetReportDefinition = "application-cost-profiler:GetReportDefinition"
      ImportApplicationUsage = "application-cost-profiler:ImportApplicationUsage"
      ListReportDefinitions = "application-cost-profiler:ListReportDefinitions"
      PutReportDefinition = "application-cost-profiler:PutReportDefinition"
      UpdateReportDefinition = "application-cost-profiler:UpdateReportDefinition"
    }
    application-signals = {
      AllActions = "application-signals:*"
      BatchGetServiceLevelObjectiveBudgetReport = "application-signals:BatchGetServiceLevelObjectiveBudgetReport"
      CreateServiceLevelObjective = "application-signals:CreateServiceLevelObjective"
      DeleteServiceLevelObjective = "application-signals:DeleteServiceLevelObjective"
      GetService = "application-signals:GetService"
      GetServiceLevelObjective = "application-signals:GetServiceLevelObjective"
      ListServiceDependencies = "application-signals:ListServiceDependencies"
      ListServiceDependents = "application-signals:ListServiceDependents"
      ListServiceLevelObjectives = "application-signals:ListServiceLevelObjectives"
      ListServiceOperations = "application-signals:ListServiceOperations"
      ListServices = "application-signals:ListServices"
      ListTagsForResource = "application-signals:ListTagsForResource"
      StartDiscovery = "application-signals:StartDiscovery"
      TagResource = "application-signals:TagResource"
      UntagResource = "application-signals:UntagResource"
      UpdateServiceLevelObjective = "application-signals:UpdateServiceLevelObjective"
    }
    application-transformation = {
      AllActions = "application-transformation:*"
      GetContainerization = "application-transformation:GetContainerization"
      GetDeployment = "application-transformation:GetDeployment"
      GetGroupingAssessment = "application-transformation:GetGroupingAssessment"
      GetPortingCompatibilityAssessment = "application-transformation:GetPortingCompatibilityAssessment"
      GetPortingRecommendationAssessment = "application-transformation:GetPortingRecommendationAssessment"
      GetRuntimeAssessment = "application-transformation:GetRuntimeAssessment"
      PutLogData = "application-transformation:PutLogData"
      PutMetricData = "application-transformation:PutMetricData"
      StartContainerization = "application-transformation:StartContainerization"
      StartDeployment = "application-transformation:StartDeployment"
      StartGroupingAssessment = "application-transformation:StartGroupingAssessment"
      StartPortingCompatibilityAssessment = "application-transformation:StartPortingCompatibilityAssessment"
      StartPortingRecommendationAssessment = "application-transformation:StartPortingRecommendationAssessment"
      StartRuntimeAssessment = "application-transformation:StartRuntimeAssessment"
    }
    applicationinsights = {
      AllActions = "applicationinsights:*"
      AddWorkload = "applicationinsights:AddWorkload"
      CreateApplication = "applicationinsights:CreateApplication"
      CreateComponent = "applicationinsights:CreateComponent"
      CreateLogPattern = "applicationinsights:CreateLogPattern"
      DeleteApplication = "applicationinsights:DeleteApplication"
      DeleteComponent = "applicationinsights:DeleteComponent"
      DeleteLogPattern = "applicationinsights:DeleteLogPattern"
      DescribeApplication = "applicationinsights:DescribeApplication"
      DescribeComponent = "applicationinsights:DescribeComponent"
      DescribeComponentConfiguration = "applicationinsights:DescribeComponentConfiguration"
      DescribeComponentConfigurationRecommendation = "applicationinsights:DescribeComponentConfigurationRecommendation"
      DescribeLogPattern = "applicationinsights:DescribeLogPattern"
      DescribeObservation = "applicationinsights:DescribeObservation"
      DescribeProblem = "applicationinsights:DescribeProblem"
      DescribeProblemObservations = "applicationinsights:DescribeProblemObservations"
      DescribeWorkload = "applicationinsights:DescribeWorkload"
      Link = "applicationinsights:Link"
      ListApplications = "applicationinsights:ListApplications"
      ListComponents = "applicationinsights:ListComponents"
      ListConfigurationHistory = "applicationinsights:ListConfigurationHistory"
      ListLogPatternSets = "applicationinsights:ListLogPatternSets"
      ListLogPatterns = "applicationinsights:ListLogPatterns"
      ListProblems = "applicationinsights:ListProblems"
      ListTagsForResource = "applicationinsights:ListTagsForResource"
      ListWorkloads = "applicationinsights:ListWorkloads"
      RemoveWorkload = "applicationinsights:RemoveWorkload"
      TagResource = "applicationinsights:TagResource"
      UntagResource = "applicationinsights:UntagResource"
      UpdateApplication = "applicationinsights:UpdateApplication"
      UpdateComponent = "applicationinsights:UpdateComponent"
      UpdateComponentConfiguration = "applicationinsights:UpdateComponentConfiguration"
      UpdateLogPattern = "applicationinsights:UpdateLogPattern"
      UpdateProblem = "applicationinsights:UpdateProblem"
      UpdateWorkload = "applicationinsights:UpdateWorkload"
    }
    appmesh-preview = {
      AllActions = "appmesh-preview:*"
      CreateGatewayRoute = "appmesh-preview:CreateGatewayRoute"
      CreateMesh = "appmesh-preview:CreateMesh"
      CreateRoute = "appmesh-preview:CreateRoute"
      CreateVirtualGateway = "appmesh-preview:CreateVirtualGateway"
      CreateVirtualNode = "appmesh-preview:CreateVirtualNode"
      CreateVirtualRouter = "appmesh-preview:CreateVirtualRouter"
      CreateVirtualService = "appmesh-preview:CreateVirtualService"
      DeleteGatewayRoute = "appmesh-preview:DeleteGatewayRoute"
      DeleteMesh = "appmesh-preview:DeleteMesh"
      DeleteMeshPolicy = "appmesh-preview:DeleteMeshPolicy"
      DeleteRoute = "appmesh-preview:DeleteRoute"
      DeleteVirtualGateway = "appmesh-preview:DeleteVirtualGateway"
      DeleteVirtualNode = "appmesh-preview:DeleteVirtualNode"
      DeleteVirtualRouter = "appmesh-preview:DeleteVirtualRouter"
      DeleteVirtualService = "appmesh-preview:DeleteVirtualService"
      DescribeGatewayRoute = "appmesh-preview:DescribeGatewayRoute"
      DescribeMesh = "appmesh-preview:DescribeMesh"
      DescribeRoute = "appmesh-preview:DescribeRoute"
      DescribeVirtualGateway = "appmesh-preview:DescribeVirtualGateway"
      DescribeVirtualNode = "appmesh-preview:DescribeVirtualNode"
      DescribeVirtualRouter = "appmesh-preview:DescribeVirtualRouter"
      DescribeVirtualService = "appmesh-preview:DescribeVirtualService"
      GetMeshPolicy = "appmesh-preview:GetMeshPolicy"
      ListGatewayRoutes = "appmesh-preview:ListGatewayRoutes"
      ListMeshes = "appmesh-preview:ListMeshes"
      ListRoutes = "appmesh-preview:ListRoutes"
      ListVirtualGateways = "appmesh-preview:ListVirtualGateways"
      ListVirtualNodes = "appmesh-preview:ListVirtualNodes"
      ListVirtualRouters = "appmesh-preview:ListVirtualRouters"
      ListVirtualServices = "appmesh-preview:ListVirtualServices"
      PutMeshPolicy = "appmesh-preview:PutMeshPolicy"
      StreamAggregatedResources = "appmesh-preview:StreamAggregatedResources"
      UpdateGatewayRoute = "appmesh-preview:UpdateGatewayRoute"
      UpdateMesh = "appmesh-preview:UpdateMesh"
      UpdateRoute = "appmesh-preview:UpdateRoute"
      UpdateVirtualGateway = "appmesh-preview:UpdateVirtualGateway"
      UpdateVirtualNode = "appmesh-preview:UpdateVirtualNode"
      UpdateVirtualRouter = "appmesh-preview:UpdateVirtualRouter"
      UpdateVirtualService = "appmesh-preview:UpdateVirtualService"
    }
    appmesh = {
      AllActions = "appmesh:*"
      CreateGatewayRoute = "appmesh:CreateGatewayRoute"
      CreateMesh = "appmesh:CreateMesh"
      CreateRoute = "appmesh:CreateRoute"
      CreateVirtualGateway = "appmesh:CreateVirtualGateway"
      CreateVirtualNode = "appmesh:CreateVirtualNode"
      CreateVirtualRouter = "appmesh:CreateVirtualRouter"
      CreateVirtualService = "appmesh:CreateVirtualService"
      DeleteGatewayRoute = "appmesh:DeleteGatewayRoute"
      DeleteMesh = "appmesh:DeleteMesh"
      DeleteMeshPolicy = "appmesh:DeleteMeshPolicy"
      DeleteRoute = "appmesh:DeleteRoute"
      DeleteVirtualGateway = "appmesh:DeleteVirtualGateway"
      DeleteVirtualNode = "appmesh:DeleteVirtualNode"
      DeleteVirtualRouter = "appmesh:DeleteVirtualRouter"
      DeleteVirtualService = "appmesh:DeleteVirtualService"
      DescribeGatewayRoute = "appmesh:DescribeGatewayRoute"
      DescribeMesh = "appmesh:DescribeMesh"
      DescribeRoute = "appmesh:DescribeRoute"
      DescribeVirtualGateway = "appmesh:DescribeVirtualGateway"
      DescribeVirtualNode = "appmesh:DescribeVirtualNode"
      DescribeVirtualRouter = "appmesh:DescribeVirtualRouter"
      DescribeVirtualService = "appmesh:DescribeVirtualService"
      GetMeshPolicy = "appmesh:GetMeshPolicy"
      ListGatewayRoutes = "appmesh:ListGatewayRoutes"
      ListMeshes = "appmesh:ListMeshes"
      ListRoutes = "appmesh:ListRoutes"
      ListTagsForResource = "appmesh:ListTagsForResource"
      ListVirtualGateways = "appmesh:ListVirtualGateways"
      ListVirtualNodes = "appmesh:ListVirtualNodes"
      ListVirtualRouters = "appmesh:ListVirtualRouters"
      ListVirtualServices = "appmesh:ListVirtualServices"
      PutMeshPolicy = "appmesh:PutMeshPolicy"
      StreamAggregatedResources = "appmesh:StreamAggregatedResources"
      TagResource = "appmesh:TagResource"
      UntagResource = "appmesh:UntagResource"
      UpdateGatewayRoute = "appmesh:UpdateGatewayRoute"
      UpdateMesh = "appmesh:UpdateMesh"
      UpdateRoute = "appmesh:UpdateRoute"
      UpdateVirtualGateway = "appmesh:UpdateVirtualGateway"
      UpdateVirtualNode = "appmesh:UpdateVirtualNode"
      UpdateVirtualRouter = "appmesh:UpdateVirtualRouter"
      UpdateVirtualService = "appmesh:UpdateVirtualService"
    }
    apprunner = {
      AllActions = "apprunner:*"
      AssociateCustomDomain = "apprunner:AssociateCustomDomain"
      AssociateWebAcl = "apprunner:AssociateWebAcl"
      CreateAutoScalingConfiguration = "apprunner:CreateAutoScalingConfiguration"
      CreateConnection = "apprunner:CreateConnection"
      CreateObservabilityConfiguration = "apprunner:CreateObservabilityConfiguration"
      CreateService = "apprunner:CreateService"
      CreateVpcConnector = "apprunner:CreateVpcConnector"
      CreateVpcIngressConnection = "apprunner:CreateVpcIngressConnection"
      DeleteAutoScalingConfiguration = "apprunner:DeleteAutoScalingConfiguration"
      DeleteConnection = "apprunner:DeleteConnection"
      DeleteObservabilityConfiguration = "apprunner:DeleteObservabilityConfiguration"
      DeleteService = "apprunner:DeleteService"
      DeleteVpcConnector = "apprunner:DeleteVpcConnector"
      DeleteVpcIngressConnection = "apprunner:DeleteVpcIngressConnection"
      DescribeAutoScalingConfiguration = "apprunner:DescribeAutoScalingConfiguration"
      DescribeCustomDomains = "apprunner:DescribeCustomDomains"
      DescribeObservabilityConfiguration = "apprunner:DescribeObservabilityConfiguration"
      DescribeOperation = "apprunner:DescribeOperation"
      DescribeService = "apprunner:DescribeService"
      DescribeVpcConnector = "apprunner:DescribeVpcConnector"
      DescribeVpcIngressConnection = "apprunner:DescribeVpcIngressConnection"
      DescribeWebAclForService = "apprunner:DescribeWebAclForService"
      DisassociateCustomDomain = "apprunner:DisassociateCustomDomain"
      DisassociateWebAcl = "apprunner:DisassociateWebAcl"
      ListAssociatedServicesForWebAcl = "apprunner:ListAssociatedServicesForWebAcl"
      ListAutoScalingConfigurations = "apprunner:ListAutoScalingConfigurations"
      ListConnections = "apprunner:ListConnections"
      ListObservabilityConfigurations = "apprunner:ListObservabilityConfigurations"
      ListOperations = "apprunner:ListOperations"
      ListServices = "apprunner:ListServices"
      ListServicesForAutoScalingConfiguration = "apprunner:ListServicesForAutoScalingConfiguration"
      ListTagsForResource = "apprunner:ListTagsForResource"
      ListVpcConnectors = "apprunner:ListVpcConnectors"
      ListVpcIngressConnections = "apprunner:ListVpcIngressConnections"
      PauseService = "apprunner:PauseService"
      ResumeService = "apprunner:ResumeService"
      StartDeployment = "apprunner:StartDeployment"
      TagResource = "apprunner:TagResource"
      UntagResource = "apprunner:UntagResource"
      UpdateDefaultAutoScalingConfiguration = "apprunner:UpdateDefaultAutoScalingConfiguration"
      UpdateService = "apprunner:UpdateService"
      UpdateVpcIngressConnection = "apprunner:UpdateVpcIngressConnection"
    }
    appstream = {
      AllActions = "appstream:*"
      AssociateAppBlockBuilderAppBlock = "appstream:AssociateAppBlockBuilderAppBlock"
      AssociateApplicationFleet = "appstream:AssociateApplicationFleet"
      AssociateApplicationToEntitlement = "appstream:AssociateApplicationToEntitlement"
      AssociateFleet = "appstream:AssociateFleet"
      BatchAssociateUserStack = "appstream:BatchAssociateUserStack"
      BatchDisassociateUserStack = "appstream:BatchDisassociateUserStack"
      CopyImage = "appstream:CopyImage"
      CreateAppBlock = "appstream:CreateAppBlock"
      CreateAppBlockBuilder = "appstream:CreateAppBlockBuilder"
      CreateAppBlockBuilderStreamingURL = "appstream:CreateAppBlockBuilderStreamingURL"
      CreateApplication = "appstream:CreateApplication"
      CreateDirectoryConfig = "appstream:CreateDirectoryConfig"
      CreateEntitlement = "appstream:CreateEntitlement"
      CreateFleet = "appstream:CreateFleet"
      CreateImageBuilder = "appstream:CreateImageBuilder"
      CreateImageBuilderStreamingURL = "appstream:CreateImageBuilderStreamingURL"
      CreateStack = "appstream:CreateStack"
      CreateStreamingURL = "appstream:CreateStreamingURL"
      CreateUpdatedImage = "appstream:CreateUpdatedImage"
      CreateUsageReportSubscription = "appstream:CreateUsageReportSubscription"
      CreateUser = "appstream:CreateUser"
      DeleteAppBlock = "appstream:DeleteAppBlock"
      DeleteAppBlockBuilder = "appstream:DeleteAppBlockBuilder"
      DeleteApplication = "appstream:DeleteApplication"
      DeleteDirectoryConfig = "appstream:DeleteDirectoryConfig"
      DeleteEntitlement = "appstream:DeleteEntitlement"
      DeleteFleet = "appstream:DeleteFleet"
      DeleteImage = "appstream:DeleteImage"
      DeleteImageBuilder = "appstream:DeleteImageBuilder"
      DeleteImagePermissions = "appstream:DeleteImagePermissions"
      DeleteStack = "appstream:DeleteStack"
      DeleteUsageReportSubscription = "appstream:DeleteUsageReportSubscription"
      DeleteUser = "appstream:DeleteUser"
      DescribeAppBlockBuilderAppBlockAssociations = "appstream:DescribeAppBlockBuilderAppBlockAssociations"
      DescribeAppBlockBuilders = "appstream:DescribeAppBlockBuilders"
      DescribeAppBlocks = "appstream:DescribeAppBlocks"
      DescribeApplicationFleetAssociations = "appstream:DescribeApplicationFleetAssociations"
      DescribeApplications = "appstream:DescribeApplications"
      DescribeDirectoryConfigs = "appstream:DescribeDirectoryConfigs"
      DescribeEntitlements = "appstream:DescribeEntitlements"
      DescribeFleets = "appstream:DescribeFleets"
      DescribeImageBuilders = "appstream:DescribeImageBuilders"
      DescribeImagePermissions = "appstream:DescribeImagePermissions"
      DescribeImages = "appstream:DescribeImages"
      DescribeSessions = "appstream:DescribeSessions"
      DescribeStacks = "appstream:DescribeStacks"
      DescribeUsageReportSubscriptions = "appstream:DescribeUsageReportSubscriptions"
      DescribeUserStackAssociations = "appstream:DescribeUserStackAssociations"
      DescribeUsers = "appstream:DescribeUsers"
      DisableUser = "appstream:DisableUser"
      DisassociateAppBlockBuilderAppBlock = "appstream:DisassociateAppBlockBuilderAppBlock"
      DisassociateApplicationFleet = "appstream:DisassociateApplicationFleet"
      DisassociateApplicationFromEntitlement = "appstream:DisassociateApplicationFromEntitlement"
      DisassociateFleet = "appstream:DisassociateFleet"
      EnableUser = "appstream:EnableUser"
      ExpireSession = "appstream:ExpireSession"
      ListAssociatedFleets = "appstream:ListAssociatedFleets"
      ListAssociatedStacks = "appstream:ListAssociatedStacks"
      ListEntitledApplications = "appstream:ListEntitledApplications"
      ListTagsForResource = "appstream:ListTagsForResource"
      StartAppBlockBuilder = "appstream:StartAppBlockBuilder"
      StartFleet = "appstream:StartFleet"
      StartImageBuilder = "appstream:StartImageBuilder"
      StopAppBlockBuilder = "appstream:StopAppBlockBuilder"
      StopFleet = "appstream:StopFleet"
      StopImageBuilder = "appstream:StopImageBuilder"
      Stream = "appstream:Stream"
      TagResource = "appstream:TagResource"
      UntagResource = "appstream:UntagResource"
      UpdateAppBlockBuilder = "appstream:UpdateAppBlockBuilder"
      UpdateApplication = "appstream:UpdateApplication"
      UpdateDirectoryConfig = "appstream:UpdateDirectoryConfig"
      UpdateEntitlement = "appstream:UpdateEntitlement"
      UpdateFleet = "appstream:UpdateFleet"
      UpdateImagePermissions = "appstream:UpdateImagePermissions"
      UpdateStack = "appstream:UpdateStack"
    }
    appsync = {
      AllActions = "appsync:*"
      AssociateApi = "appsync:AssociateApi"
      AssociateMergedGraphqlApi = "appsync:AssociateMergedGraphqlApi"
      AssociateSourceGraphqlApi = "appsync:AssociateSourceGraphqlApi"
      CreateApiCache = "appsync:CreateApiCache"
      CreateApiKey = "appsync:CreateApiKey"
      CreateDataSource = "appsync:CreateDataSource"
      CreateDomainName = "appsync:CreateDomainName"
      CreateFunction = "appsync:CreateFunction"
      CreateGraphqlApi = "appsync:CreateGraphqlApi"
      CreateResolver = "appsync:CreateResolver"
      CreateType = "appsync:CreateType"
      DeleteApiCache = "appsync:DeleteApiCache"
      DeleteApiKey = "appsync:DeleteApiKey"
      DeleteDataSource = "appsync:DeleteDataSource"
      DeleteDomainName = "appsync:DeleteDomainName"
      DeleteFunction = "appsync:DeleteFunction"
      DeleteGraphqlApi = "appsync:DeleteGraphqlApi"
      DeleteResolver = "appsync:DeleteResolver"
      DeleteResourcePolicy = "appsync:DeleteResourcePolicy"
      DeleteType = "appsync:DeleteType"
      DisassociateApi = "appsync:DisassociateApi"
      DisassociateMergedGraphqlApi = "appsync:DisassociateMergedGraphqlApi"
      DisassociateSourceGraphqlApi = "appsync:DisassociateSourceGraphqlApi"
      EvaluateCode = "appsync:EvaluateCode"
      EvaluateMappingTemplate = "appsync:EvaluateMappingTemplate"
      FlushApiCache = "appsync:FlushApiCache"
      GetApiAssociation = "appsync:GetApiAssociation"
      GetApiCache = "appsync:GetApiCache"
      GetDataSource = "appsync:GetDataSource"
      GetDataSourceIntrospection = "appsync:GetDataSourceIntrospection"
      GetDomainName = "appsync:GetDomainName"
      GetFunction = "appsync:GetFunction"
      GetGraphqlApi = "appsync:GetGraphqlApi"
      GetGraphqlApiEnvironmentVariables = "appsync:GetGraphqlApiEnvironmentVariables"
      GetIntrospectionSchema = "appsync:GetIntrospectionSchema"
      GetResolver = "appsync:GetResolver"
      GetResourcePolicy = "appsync:GetResourcePolicy"
      GetSchemaCreationStatus = "appsync:GetSchemaCreationStatus"
      GetSourceApiAssociation = "appsync:GetSourceApiAssociation"
      GetType = "appsync:GetType"
      GraphQL = "appsync:GraphQL"
      ListApiKeys = "appsync:ListApiKeys"
      ListDataSources = "appsync:ListDataSources"
      ListDomainNames = "appsync:ListDomainNames"
      ListFunctions = "appsync:ListFunctions"
      ListGraphqlApis = "appsync:ListGraphqlApis"
      ListResolvers = "appsync:ListResolvers"
      ListResolversByFunction = "appsync:ListResolversByFunction"
      ListSourceApiAssociations = "appsync:ListSourceApiAssociations"
      ListTagsForResource = "appsync:ListTagsForResource"
      ListTypes = "appsync:ListTypes"
      ListTypesByAssociation = "appsync:ListTypesByAssociation"
      PutGraphqlApiEnvironmentVariables = "appsync:PutGraphqlApiEnvironmentVariables"
      PutResourcePolicy = "appsync:PutResourcePolicy"
      SetWebACL = "appsync:SetWebACL"
      SourceGraphQL = "appsync:SourceGraphQL"
      StartDataSourceIntrospection = "appsync:StartDataSourceIntrospection"
      StartSchemaCreation = "appsync:StartSchemaCreation"
      StartSchemaMerge = "appsync:StartSchemaMerge"
      TagResource = "appsync:TagResource"
      UntagResource = "appsync:UntagResource"
      UpdateApiCache = "appsync:UpdateApiCache"
      UpdateApiKey = "appsync:UpdateApiKey"
      UpdateDataSource = "appsync:UpdateDataSource"
      UpdateDomainName = "appsync:UpdateDomainName"
      UpdateFunction = "appsync:UpdateFunction"
      UpdateGraphqlApi = "appsync:UpdateGraphqlApi"
      UpdateResolver = "appsync:UpdateResolver"
      UpdateSourceApiAssociation = "appsync:UpdateSourceApiAssociation"
      UpdateType = "appsync:UpdateType"
    }
    apptest = {
      AllActions = "apptest:*"
      CreateTestCase = "apptest:CreateTestCase"
      CreateTestConfiguration = "apptest:CreateTestConfiguration"
      CreateTestSuite = "apptest:CreateTestSuite"
      DeleteTestCase = "apptest:DeleteTestCase"
      DeleteTestConfiguration = "apptest:DeleteTestConfiguration"
      DeleteTestRun = "apptest:DeleteTestRun"
      DeleteTestSuite = "apptest:DeleteTestSuite"
      GetTestCase = "apptest:GetTestCase"
      GetTestConfiguration = "apptest:GetTestConfiguration"
      GetTestRunStep = "apptest:GetTestRunStep"
      GetTestSuite = "apptest:GetTestSuite"
      ListTagsForResource = "apptest:ListTagsForResource"
      ListTestCases = "apptest:ListTestCases"
      ListTestConfigurations = "apptest:ListTestConfigurations"
      ListTestRunSteps = "apptest:ListTestRunSteps"
      ListTestRunTestCases = "apptest:ListTestRunTestCases"
      ListTestRuns = "apptest:ListTestRuns"
      ListTestSuites = "apptest:ListTestSuites"
      StartTestRun = "apptest:StartTestRun"
      TagResource = "apptest:TagResource"
      UntagResource = "apptest:UntagResource"
      UpdateTestCase = "apptest:UpdateTestCase"
      UpdateTestConfiguration = "apptest:UpdateTestConfiguration"
      UpdateTestSuite = "apptest:UpdateTestSuite"
    }
    aps = {
      AllActions = "aps:*"
      CreateAlertManagerAlerts = "aps:CreateAlertManagerAlerts"
      CreateAlertManagerDefinition = "aps:CreateAlertManagerDefinition"
      CreateLoggingConfiguration = "aps:CreateLoggingConfiguration"
      CreateRuleGroupsNamespace = "aps:CreateRuleGroupsNamespace"
      CreateScraper = "aps:CreateScraper"
      CreateWorkspace = "aps:CreateWorkspace"
      DeleteAlertManagerDefinition = "aps:DeleteAlertManagerDefinition"
      DeleteAlertManagerSilence = "aps:DeleteAlertManagerSilence"
      DeleteLoggingConfiguration = "aps:DeleteLoggingConfiguration"
      DeleteRuleGroupsNamespace = "aps:DeleteRuleGroupsNamespace"
      DeleteScraper = "aps:DeleteScraper"
      DeleteWorkspace = "aps:DeleteWorkspace"
      DescribeAlertManagerDefinition = "aps:DescribeAlertManagerDefinition"
      DescribeLoggingConfiguration = "aps:DescribeLoggingConfiguration"
      DescribeRuleGroupsNamespace = "aps:DescribeRuleGroupsNamespace"
      DescribeScraper = "aps:DescribeScraper"
      DescribeWorkspace = "aps:DescribeWorkspace"
      GetAlertManagerSilence = "aps:GetAlertManagerSilence"
      GetAlertManagerStatus = "aps:GetAlertManagerStatus"
      GetDefaultScraperConfiguration = "aps:GetDefaultScraperConfiguration"
      GetLabels = "aps:GetLabels"
      GetMetricMetadata = "aps:GetMetricMetadata"
      GetSeries = "aps:GetSeries"
      ListAlertManagerAlertGroups = "aps:ListAlertManagerAlertGroups"
      ListAlertManagerAlerts = "aps:ListAlertManagerAlerts"
      ListAlertManagerReceivers = "aps:ListAlertManagerReceivers"
      ListAlertManagerSilences = "aps:ListAlertManagerSilences"
      ListAlerts = "aps:ListAlerts"
      ListRuleGroupsNamespaces = "aps:ListRuleGroupsNamespaces"
      ListRules = "aps:ListRules"
      ListScrapers = "aps:ListScrapers"
      ListTagsForResource = "aps:ListTagsForResource"
      ListWorkspaces = "aps:ListWorkspaces"
      PutAlertManagerDefinition = "aps:PutAlertManagerDefinition"
      PutAlertManagerSilences = "aps:PutAlertManagerSilences"
      PutRuleGroupsNamespace = "aps:PutRuleGroupsNamespace"
      QueryMetrics = "aps:QueryMetrics"
      RemoteWrite = "aps:RemoteWrite"
      TagResource = "aps:TagResource"
      UntagResource = "aps:UntagResource"
      UpdateLoggingConfiguration = "aps:UpdateLoggingConfiguration"
      UpdateWorkspaceAlias = "aps:UpdateWorkspaceAlias"
    }
    arc-zonal-shift = {
      AllActions = "arc-zonal-shift:*"
      CancelZonalShift = "arc-zonal-shift:CancelZonalShift"
      CreatePracticeRunConfiguration = "arc-zonal-shift:CreatePracticeRunConfiguration"
      DeletePracticeRunConfiguration = "arc-zonal-shift:DeletePracticeRunConfiguration"
      GetManagedResource = "arc-zonal-shift:GetManagedResource"
      ListAutoshifts = "arc-zonal-shift:ListAutoshifts"
      ListManagedResources = "arc-zonal-shift:ListManagedResources"
      ListZonalShifts = "arc-zonal-shift:ListZonalShifts"
      StartZonalShift = "arc-zonal-shift:StartZonalShift"
      UpdatePracticeRunConfiguration = "arc-zonal-shift:UpdatePracticeRunConfiguration"
      UpdateZonalAutoshiftConfiguration = "arc-zonal-shift:UpdateZonalAutoshiftConfiguration"
      UpdateZonalShift = "arc-zonal-shift:UpdateZonalShift"
    }
    arsenal = {
      AllActions = "arsenal:*"
      RegisterOnPremisesAgent = "arsenal:RegisterOnPremisesAgent"
    }
    artifact = {
      AllActions = "artifact:*"
      AcceptAgreement = "artifact:AcceptAgreement"
      DownloadAgreement = "artifact:DownloadAgreement"
      Get = "artifact:Get"
      GetAccountSettings = "artifact:GetAccountSettings"
      GetReport = "artifact:GetReport"
      GetReportMetadata = "artifact:GetReportMetadata"
      GetTermForReport = "artifact:GetTermForReport"
      ListReports = "artifact:ListReports"
      PutAccountSettings = "artifact:PutAccountSettings"
      TerminateAgreement = "artifact:TerminateAgreement"
    }
    athena = {
      AllActions = "athena:*"
      BatchGetNamedQuery = "athena:BatchGetNamedQuery"
      BatchGetPreparedStatement = "athena:BatchGetPreparedStatement"
      BatchGetQueryExecution = "athena:BatchGetQueryExecution"
      CancelCapacityReservation = "athena:CancelCapacityReservation"
      CancelQueryExecution = "athena:CancelQueryExecution"
      CreateCapacityReservation = "athena:CreateCapacityReservation"
      CreateDataCatalog = "athena:CreateDataCatalog"
      CreateNamedQuery = "athena:CreateNamedQuery"
      CreateNotebook = "athena:CreateNotebook"
      CreatePreparedStatement = "athena:CreatePreparedStatement"
      CreatePresignedNotebookUrl = "athena:CreatePresignedNotebookUrl"
      CreateWorkGroup = "athena:CreateWorkGroup"
      DeleteCapacityReservation = "athena:DeleteCapacityReservation"
      DeleteDataCatalog = "athena:DeleteDataCatalog"
      DeleteNamedQuery = "athena:DeleteNamedQuery"
      DeleteNotebook = "athena:DeleteNotebook"
      DeletePreparedStatement = "athena:DeletePreparedStatement"
      DeleteWorkGroup = "athena:DeleteWorkGroup"
      ExportNotebook = "athena:ExportNotebook"
      GetCalculationExecution = "athena:GetCalculationExecution"
      GetCalculationExecutionCode = "athena:GetCalculationExecutionCode"
      GetCalculationExecutionStatus = "athena:GetCalculationExecutionStatus"
      GetCapacityAssignmentConfiguration = "athena:GetCapacityAssignmentConfiguration"
      GetCapacityReservation = "athena:GetCapacityReservation"
      GetCatalogs = "athena:GetCatalogs"
      GetDataCatalog = "athena:GetDataCatalog"
      GetDatabase = "athena:GetDatabase"
      GetExecutionEngine = "athena:GetExecutionEngine"
      GetExecutionEngines = "athena:GetExecutionEngines"
      GetNamedQuery = "athena:GetNamedQuery"
      GetNamespace = "athena:GetNamespace"
      GetNamespaces = "athena:GetNamespaces"
      GetNotebookMetadata = "athena:GetNotebookMetadata"
      GetPreparedStatement = "athena:GetPreparedStatement"
      GetQueryExecution = "athena:GetQueryExecution"
      GetQueryExecutions = "athena:GetQueryExecutions"
      GetQueryResults = "athena:GetQueryResults"
      GetQueryResultsStream = "athena:GetQueryResultsStream"
      GetQueryRuntimeStatistics = "athena:GetQueryRuntimeStatistics"
      GetSession = "athena:GetSession"
      GetSessionStatus = "athena:GetSessionStatus"
      GetTable = "athena:GetTable"
      GetTableMetadata = "athena:GetTableMetadata"
      GetTables = "athena:GetTables"
      GetWorkGroup = "athena:GetWorkGroup"
      ImportNotebook = "athena:ImportNotebook"
      ListApplicationDPUSizes = "athena:ListApplicationDPUSizes"
      ListCalculationExecutions = "athena:ListCalculationExecutions"
      ListCapacityReservations = "athena:ListCapacityReservations"
      ListDataCatalogs = "athena:ListDataCatalogs"
      ListDatabases = "athena:ListDatabases"
      ListEngineVersions = "athena:ListEngineVersions"
      ListExecutors = "athena:ListExecutors"
      ListNamedQueries = "athena:ListNamedQueries"
      ListNotebookMetadata = "athena:ListNotebookMetadata"
      ListNotebookSessions = "athena:ListNotebookSessions"
      ListPreparedStatements = "athena:ListPreparedStatements"
      ListQueryExecutions = "athena:ListQueryExecutions"
      ListSessions = "athena:ListSessions"
      ListTableMetadata = "athena:ListTableMetadata"
      ListTagsForResource = "athena:ListTagsForResource"
      ListWorkGroups = "athena:ListWorkGroups"
      PutCapacityAssignmentConfiguration = "athena:PutCapacityAssignmentConfiguration"
      RunQuery = "athena:RunQuery"
      StartCalculationExecution = "athena:StartCalculationExecution"
      StartQueryExecution = "athena:StartQueryExecution"
      StartSession = "athena:StartSession"
      StopCalculationExecution = "athena:StopCalculationExecution"
      StopQueryExecution = "athena:StopQueryExecution"
      TagResource = "athena:TagResource"
      TerminateSession = "athena:TerminateSession"
      UntagResource = "athena:UntagResource"
      UpdateCapacityReservation = "athena:UpdateCapacityReservation"
      UpdateDataCatalog = "athena:UpdateDataCatalog"
      UpdateNamedQuery = "athena:UpdateNamedQuery"
      UpdateNotebook = "athena:UpdateNotebook"
      UpdateNotebookMetadata = "athena:UpdateNotebookMetadata"
      UpdatePreparedStatement = "athena:UpdatePreparedStatement"
      UpdateWorkGroup = "athena:UpdateWorkGroup"
    }
    auditmanager = {
      AllActions = "auditmanager:*"
      AssociateAssessmentReportEvidenceFolder = "auditmanager:AssociateAssessmentReportEvidenceFolder"
      BatchAssociateAssessmentReportEvidence = "auditmanager:BatchAssociateAssessmentReportEvidence"
      BatchCreateDelegationByAssessment = "auditmanager:BatchCreateDelegationByAssessment"
      BatchDeleteDelegationByAssessment = "auditmanager:BatchDeleteDelegationByAssessment"
      BatchDisassociateAssessmentReportEvidence = "auditmanager:BatchDisassociateAssessmentReportEvidence"
      BatchImportEvidenceToAssessmentControl = "auditmanager:BatchImportEvidenceToAssessmentControl"
      CreateAssessment = "auditmanager:CreateAssessment"
      CreateAssessmentFramework = "auditmanager:CreateAssessmentFramework"
      CreateAssessmentReport = "auditmanager:CreateAssessmentReport"
      CreateControl = "auditmanager:CreateControl"
      DeleteAssessment = "auditmanager:DeleteAssessment"
      DeleteAssessmentFramework = "auditmanager:DeleteAssessmentFramework"
      DeleteAssessmentFrameworkShare = "auditmanager:DeleteAssessmentFrameworkShare"
      DeleteAssessmentReport = "auditmanager:DeleteAssessmentReport"
      DeleteControl = "auditmanager:DeleteControl"
      DeregisterAccount = "auditmanager:DeregisterAccount"
      DeregisterOrganizationAdminAccount = "auditmanager:DeregisterOrganizationAdminAccount"
      DisassociateAssessmentReportEvidenceFolder = "auditmanager:DisassociateAssessmentReportEvidenceFolder"
      GetAccountStatus = "auditmanager:GetAccountStatus"
      GetAssessment = "auditmanager:GetAssessment"
      GetAssessmentFramework = "auditmanager:GetAssessmentFramework"
      GetAssessmentReportUrl = "auditmanager:GetAssessmentReportUrl"
      GetChangeLogs = "auditmanager:GetChangeLogs"
      GetControl = "auditmanager:GetControl"
      GetDelegations = "auditmanager:GetDelegations"
      GetEvidence = "auditmanager:GetEvidence"
      GetEvidenceByEvidenceFolder = "auditmanager:GetEvidenceByEvidenceFolder"
      GetEvidenceFileUploadUrl = "auditmanager:GetEvidenceFileUploadUrl"
      GetEvidenceFolder = "auditmanager:GetEvidenceFolder"
      GetEvidenceFoldersByAssessment = "auditmanager:GetEvidenceFoldersByAssessment"
      GetEvidenceFoldersByAssessmentControl = "auditmanager:GetEvidenceFoldersByAssessmentControl"
      GetInsights = "auditmanager:GetInsights"
      GetInsightsByAssessment = "auditmanager:GetInsightsByAssessment"
      GetOrganizationAdminAccount = "auditmanager:GetOrganizationAdminAccount"
      GetServicesInScope = "auditmanager:GetServicesInScope"
      GetSettings = "auditmanager:GetSettings"
      ListAssessmentControlInsightsByControlDomain = "auditmanager:ListAssessmentControlInsightsByControlDomain"
      ListAssessmentFrameworkShareRequests = "auditmanager:ListAssessmentFrameworkShareRequests"
      ListAssessmentFrameworks = "auditmanager:ListAssessmentFrameworks"
      ListAssessmentReports = "auditmanager:ListAssessmentReports"
      ListAssessments = "auditmanager:ListAssessments"
      ListControlDomainInsights = "auditmanager:ListControlDomainInsights"
      ListControlDomainInsightsByAssessment = "auditmanager:ListControlDomainInsightsByAssessment"
      ListControlInsightsByControlDomain = "auditmanager:ListControlInsightsByControlDomain"
      ListControls = "auditmanager:ListControls"
      ListKeywordsForDataSource = "auditmanager:ListKeywordsForDataSource"
      ListNotifications = "auditmanager:ListNotifications"
      ListTagsForResource = "auditmanager:ListTagsForResource"
      RegisterAccount = "auditmanager:RegisterAccount"
      RegisterOrganizationAdminAccount = "auditmanager:RegisterOrganizationAdminAccount"
      StartAssessmentFrameworkShare = "auditmanager:StartAssessmentFrameworkShare"
      TagResource = "auditmanager:TagResource"
      UntagResource = "auditmanager:UntagResource"
      UpdateAssessment = "auditmanager:UpdateAssessment"
      UpdateAssessmentControl = "auditmanager:UpdateAssessmentControl"
      UpdateAssessmentControlSetStatus = "auditmanager:UpdateAssessmentControlSetStatus"
      UpdateAssessmentFramework = "auditmanager:UpdateAssessmentFramework"
      UpdateAssessmentFrameworkShare = "auditmanager:UpdateAssessmentFrameworkShare"
      UpdateAssessmentStatus = "auditmanager:UpdateAssessmentStatus"
      UpdateControl = "auditmanager:UpdateControl"
      UpdateSettings = "auditmanager:UpdateSettings"
      ValidateAssessmentReportIntegrity = "auditmanager:ValidateAssessmentReportIntegrity"
    }
    autoscaling-plans = {
      AllActions = "autoscaling-plans:*"
      CreateScalingPlan = "autoscaling-plans:CreateScalingPlan"
      DeleteScalingPlan = "autoscaling-plans:DeleteScalingPlan"
      DescribeScalingPlanResources = "autoscaling-plans:DescribeScalingPlanResources"
      DescribeScalingPlans = "autoscaling-plans:DescribeScalingPlans"
      GetScalingPlanResourceForecastData = "autoscaling-plans:GetScalingPlanResourceForecastData"
      UpdateScalingPlan = "autoscaling-plans:UpdateScalingPlan"
    }
    autoscaling = {
      AllActions = "autoscaling:*"
      AttachInstances = "autoscaling:AttachInstances"
      AttachLoadBalancerTargetGroups = "autoscaling:AttachLoadBalancerTargetGroups"
      AttachLoadBalancers = "autoscaling:AttachLoadBalancers"
      AttachTrafficSources = "autoscaling:AttachTrafficSources"
      BatchDeleteScheduledAction = "autoscaling:BatchDeleteScheduledAction"
      BatchPutScheduledUpdateGroupAction = "autoscaling:BatchPutScheduledUpdateGroupAction"
      CancelInstanceRefresh = "autoscaling:CancelInstanceRefresh"
      CompleteLifecycleAction = "autoscaling:CompleteLifecycleAction"
      CreateAutoScalingGroup = "autoscaling:CreateAutoScalingGroup"
      CreateLaunchConfiguration = "autoscaling:CreateLaunchConfiguration"
      CreateOrUpdateTags = "autoscaling:CreateOrUpdateTags"
      DeleteAutoScalingGroup = "autoscaling:DeleteAutoScalingGroup"
      DeleteLaunchConfiguration = "autoscaling:DeleteLaunchConfiguration"
      DeleteLifecycleHook = "autoscaling:DeleteLifecycleHook"
      DeleteNotificationConfiguration = "autoscaling:DeleteNotificationConfiguration"
      DeletePolicy = "autoscaling:DeletePolicy"
      DeleteScheduledAction = "autoscaling:DeleteScheduledAction"
      DeleteTags = "autoscaling:DeleteTags"
      DeleteWarmPool = "autoscaling:DeleteWarmPool"
      DescribeAccountLimits = "autoscaling:DescribeAccountLimits"
      DescribeAdjustmentTypes = "autoscaling:DescribeAdjustmentTypes"
      DescribeAutoScalingGroups = "autoscaling:DescribeAutoScalingGroups"
      DescribeAutoScalingInstances = "autoscaling:DescribeAutoScalingInstances"
      DescribeAutoScalingNotificationTypes = "autoscaling:DescribeAutoScalingNotificationTypes"
      DescribeInstanceRefreshes = "autoscaling:DescribeInstanceRefreshes"
      DescribeLaunchConfigurations = "autoscaling:DescribeLaunchConfigurations"
      DescribeLifecycleHookTypes = "autoscaling:DescribeLifecycleHookTypes"
      DescribeLifecycleHooks = "autoscaling:DescribeLifecycleHooks"
      DescribeLoadBalancerTargetGroups = "autoscaling:DescribeLoadBalancerTargetGroups"
      DescribeLoadBalancers = "autoscaling:DescribeLoadBalancers"
      DescribeMetricCollectionTypes = "autoscaling:DescribeMetricCollectionTypes"
      DescribeNotificationConfigurations = "autoscaling:DescribeNotificationConfigurations"
      DescribePolicies = "autoscaling:DescribePolicies"
      DescribeScalingActivities = "autoscaling:DescribeScalingActivities"
      DescribeScalingProcessTypes = "autoscaling:DescribeScalingProcessTypes"
      DescribeScheduledActions = "autoscaling:DescribeScheduledActions"
      DescribeTags = "autoscaling:DescribeTags"
      DescribeTerminationPolicyTypes = "autoscaling:DescribeTerminationPolicyTypes"
      DescribeTrafficSources = "autoscaling:DescribeTrafficSources"
      DescribeWarmPool = "autoscaling:DescribeWarmPool"
      DetachInstances = "autoscaling:DetachInstances"
      DetachLoadBalancerTargetGroups = "autoscaling:DetachLoadBalancerTargetGroups"
      DetachLoadBalancers = "autoscaling:DetachLoadBalancers"
      DetachTrafficSources = "autoscaling:DetachTrafficSources"
      DisableMetricsCollection = "autoscaling:DisableMetricsCollection"
      EnableMetricsCollection = "autoscaling:EnableMetricsCollection"
      EnterStandby = "autoscaling:EnterStandby"
      ExecutePolicy = "autoscaling:ExecutePolicy"
      ExitStandby = "autoscaling:ExitStandby"
      GetPredictiveScalingForecast = "autoscaling:GetPredictiveScalingForecast"
      PutLifecycleHook = "autoscaling:PutLifecycleHook"
      PutNotificationConfiguration = "autoscaling:PutNotificationConfiguration"
      PutScalingPolicy = "autoscaling:PutScalingPolicy"
      PutScheduledUpdateGroupAction = "autoscaling:PutScheduledUpdateGroupAction"
      PutWarmPool = "autoscaling:PutWarmPool"
      RecordLifecycleActionHeartbeat = "autoscaling:RecordLifecycleActionHeartbeat"
      ResumeProcesses = "autoscaling:ResumeProcesses"
      RollbackInstanceRefresh = "autoscaling:RollbackInstanceRefresh"
      SetDesiredCapacity = "autoscaling:SetDesiredCapacity"
      SetInstanceHealth = "autoscaling:SetInstanceHealth"
      SetInstanceProtection = "autoscaling:SetInstanceProtection"
      StartInstanceRefresh = "autoscaling:StartInstanceRefresh"
      SuspendProcesses = "autoscaling:SuspendProcesses"
      TerminateInstanceInAutoScalingGroup = "autoscaling:TerminateInstanceInAutoScalingGroup"
      UpdateAutoScalingGroup = "autoscaling:UpdateAutoScalingGroup"
    }
    aws-marketplace-management = {
      AllActions = "aws-marketplace-management:*"
      GetAdditionalSellerNotificationRecipients = "aws-marketplace-management:GetAdditionalSellerNotificationRecipients"
      GetBankAccountVerificationDetails = "aws-marketplace-management:GetBankAccountVerificationDetails"
      GetSecondaryUserVerificationDetails = "aws-marketplace-management:GetSecondaryUserVerificationDetails"
      GetSellerVerificationDetails = "aws-marketplace-management:GetSellerVerificationDetails"
      PutAdditionalSellerNotificationRecipients = "aws-marketplace-management:PutAdditionalSellerNotificationRecipients"
      PutBankAccountVerificationDetails = "aws-marketplace-management:PutBankAccountVerificationDetails"
      PutSecondaryUserVerificationDetails = "aws-marketplace-management:PutSecondaryUserVerificationDetails"
      PutSellerVerificationDetails = "aws-marketplace-management:PutSellerVerificationDetails"
      uploadFiles = "aws-marketplace-management:uploadFiles"
      viewMarketing = "aws-marketplace-management:viewMarketing"
      viewReports = "aws-marketplace-management:viewReports"
      viewSettings = "aws-marketplace-management:viewSettings"
      viewSupport = "aws-marketplace-management:viewSupport"
    }
    aws-marketplace = {
      AllActions = "aws-marketplace:*"
      AcceptAgreementApprovalRequest = "aws-marketplace:AcceptAgreementApprovalRequest"
      AcceptAgreementRequest = "aws-marketplace:AcceptAgreementRequest"
      AssociateProductsWithPrivateMarketplace = "aws-marketplace:AssociateProductsWithPrivateMarketplace"
      BatchMeterUsage = "aws-marketplace:BatchMeterUsage"
      CancelAgreement = "aws-marketplace:CancelAgreement"
      CancelAgreementRequest = "aws-marketplace:CancelAgreementRequest"
      CancelChangeSet = "aws-marketplace:CancelChangeSet"
      CompleteTask = "aws-marketplace:CompleteTask"
      CreateAgreementRequest = "aws-marketplace:CreateAgreementRequest"
      CreatePrivateMarketplaceRequests = "aws-marketplace:CreatePrivateMarketplaceRequests"
      DeleteResourcePolicy = "aws-marketplace:DeleteResourcePolicy"
      DescribeAgreement = "aws-marketplace:DescribeAgreement"
      DescribeAssessment = "aws-marketplace:DescribeAssessment"
      DescribeBuilds = "aws-marketplace:DescribeBuilds"
      DescribeChangeSet = "aws-marketplace:DescribeChangeSet"
      DescribeEntity = "aws-marketplace:DescribeEntity"
      DescribePrivateMarketplaceRequests = "aws-marketplace:DescribePrivateMarketplaceRequests"
      DescribeProcurementSystemConfiguration = "aws-marketplace:DescribeProcurementSystemConfiguration"
      DescribeTask = "aws-marketplace:DescribeTask"
      DisassociateProductsFromPrivateMarketplace = "aws-marketplace:DisassociateProductsFromPrivateMarketplace"
      GetAgreementApprovalRequest = "aws-marketplace:GetAgreementApprovalRequest"
      GetAgreementRequest = "aws-marketplace:GetAgreementRequest"
      GetAgreementTerms = "aws-marketplace:GetAgreementTerms"
      GetEntitlements = "aws-marketplace:GetEntitlements"
      GetResourcePolicy = "aws-marketplace:GetResourcePolicy"
      GetSellerDashboard = "aws-marketplace:GetSellerDashboard"
      ListAgreementApprovalRequests = "aws-marketplace:ListAgreementApprovalRequests"
      ListAgreementRequests = "aws-marketplace:ListAgreementRequests"
      ListAssessments = "aws-marketplace:ListAssessments"
      ListBuilds = "aws-marketplace:ListBuilds"
      ListChangeSets = "aws-marketplace:ListChangeSets"
      ListEntities = "aws-marketplace:ListEntities"
      ListEntitlementDetails = "aws-marketplace:ListEntitlementDetails"
      ListPrivateListings = "aws-marketplace:ListPrivateListings"
      ListPrivateMarketplaceRequests = "aws-marketplace:ListPrivateMarketplaceRequests"
      ListTagsForResource = "aws-marketplace:ListTagsForResource"
      ListTasks = "aws-marketplace:ListTasks"
      MeterUsage = "aws-marketplace:MeterUsage"
      PutDeploymentParameter = "aws-marketplace:PutDeploymentParameter"
      PutProcurementSystemConfiguration = "aws-marketplace:PutProcurementSystemConfiguration"
      PutResourcePolicy = "aws-marketplace:PutResourcePolicy"
      RegisterUsage = "aws-marketplace:RegisterUsage"
      RejectAgreementApprovalRequest = "aws-marketplace:RejectAgreementApprovalRequest"
      ResolveCustomer = "aws-marketplace:ResolveCustomer"
      SearchAgreements = "aws-marketplace:SearchAgreements"
      StartBuild = "aws-marketplace:StartBuild"
      StartChangeSet = "aws-marketplace:StartChangeSet"
      Subscribe = "aws-marketplace:Subscribe"
      TagResource = "aws-marketplace:TagResource"
      Unsubscribe = "aws-marketplace:Unsubscribe"
      UntagResource = "aws-marketplace:UntagResource"
      UpdateAgreementApprovalRequest = "aws-marketplace:UpdateAgreementApprovalRequest"
      UpdateTask = "aws-marketplace:UpdateTask"
      ViewSubscriptions = "aws-marketplace:ViewSubscriptions"
    }
    aws-portal = {
      AllActions = "aws-portal:*"
      GetConsoleActionSetEnforced = "aws-portal:GetConsoleActionSetEnforced"
      ModifyAccount = "aws-portal:ModifyAccount"
      ModifyBilling = "aws-portal:ModifyBilling"
      ModifyPaymentMethods = "aws-portal:ModifyPaymentMethods"
      UpdateConsoleActionSetEnforced = "aws-portal:UpdateConsoleActionSetEnforced"
      ViewAccount = "aws-portal:ViewAccount"
      ViewBilling = "aws-portal:ViewBilling"
      ViewPaymentMethods = "aws-portal:ViewPaymentMethods"
      ViewUsage = "aws-portal:ViewUsage"
    }
    awsconnector = {
      AllActions = "awsconnector:*"
      GetConnectorHealth = "awsconnector:GetConnectorHealth"
      RegisterConnector = "awsconnector:RegisterConnector"
      ValidateConnectorId = "awsconnector:ValidateConnectorId"
    }
    b2bi = {
      AllActions = "b2bi:*"
      CreateCapability = "b2bi:CreateCapability"
      CreatePartnership = "b2bi:CreatePartnership"
      CreateProfile = "b2bi:CreateProfile"
      CreateTransformer = "b2bi:CreateTransformer"
      DeleteCapability = "b2bi:DeleteCapability"
      DeletePartnership = "b2bi:DeletePartnership"
      DeleteProfile = "b2bi:DeleteProfile"
      DeleteTransformer = "b2bi:DeleteTransformer"
      GetCapability = "b2bi:GetCapability"
      GetPartnership = "b2bi:GetPartnership"
      GetProfile = "b2bi:GetProfile"
      GetTransformer = "b2bi:GetTransformer"
      GetTransformerJob = "b2bi:GetTransformerJob"
      ListCapabilities = "b2bi:ListCapabilities"
      ListPartnerships = "b2bi:ListPartnerships"
      ListProfiles = "b2bi:ListProfiles"
      ListTagsForResource = "b2bi:ListTagsForResource"
      ListTransformers = "b2bi:ListTransformers"
      StartTransformerJob = "b2bi:StartTransformerJob"
      TagResource = "b2bi:TagResource"
      TestMapping = "b2bi:TestMapping"
      TestParsing = "b2bi:TestParsing"
      UntagResource = "b2bi:UntagResource"
      UpdateCapability = "b2bi:UpdateCapability"
      UpdatePartnership = "b2bi:UpdatePartnership"
      UpdateProfile = "b2bi:UpdateProfile"
      UpdateTransformer = "b2bi:UpdateTransformer"
    }
    backup-gateway = {
      AllActions = "backup-gateway:*"
      AssociateGatewayToServer = "backup-gateway:AssociateGatewayToServer"
      Backup = "backup-gateway:Backup"
      CreateGateway = "backup-gateway:CreateGateway"
      DeleteGateway = "backup-gateway:DeleteGateway"
      DeleteHypervisor = "backup-gateway:DeleteHypervisor"
      DisassociateGatewayFromServer = "backup-gateway:DisassociateGatewayFromServer"
      GetBandwidthRateLimitSchedule = "backup-gateway:GetBandwidthRateLimitSchedule"
      GetGateway = "backup-gateway:GetGateway"
      GetHypervisor = "backup-gateway:GetHypervisor"
      GetHypervisorPropertyMappings = "backup-gateway:GetHypervisorPropertyMappings"
      GetVirtualMachine = "backup-gateway:GetVirtualMachine"
      ImportHypervisorConfiguration = "backup-gateway:ImportHypervisorConfiguration"
      ListGateways = "backup-gateway:ListGateways"
      ListHypervisors = "backup-gateway:ListHypervisors"
      ListTagsForResource = "backup-gateway:ListTagsForResource"
      ListVirtualMachines = "backup-gateway:ListVirtualMachines"
      PutBandwidthRateLimitSchedule = "backup-gateway:PutBandwidthRateLimitSchedule"
      PutHypervisorPropertyMappings = "backup-gateway:PutHypervisorPropertyMappings"
      PutMaintenanceStartTime = "backup-gateway:PutMaintenanceStartTime"
      Restore = "backup-gateway:Restore"
      StartVirtualMachinesMetadataSync = "backup-gateway:StartVirtualMachinesMetadataSync"
      TagResource = "backup-gateway:TagResource"
      TestHypervisorConfiguration = "backup-gateway:TestHypervisorConfiguration"
      UntagResource = "backup-gateway:UntagResource"
      UpdateGatewayInformation = "backup-gateway:UpdateGatewayInformation"
      UpdateGatewaySoftwareNow = "backup-gateway:UpdateGatewaySoftwareNow"
      UpdateHypervisor = "backup-gateway:UpdateHypervisor"
    }
    backup-storage = {
      AllActions = "backup-storage:*"
      CommitBackupJob = "backup-storage:CommitBackupJob"
      DeleteObjects = "backup-storage:DeleteObjects"
      DescribeBackupJob = "backup-storage:DescribeBackupJob"
      GetBaseBackup = "backup-storage:GetBaseBackup"
      GetChunk = "backup-storage:GetChunk"
      GetIncrementalBaseBackup = "backup-storage:GetIncrementalBaseBackup"
      GetObjectMetadata = "backup-storage:GetObjectMetadata"
      ListChunks = "backup-storage:ListChunks"
      ListObjects = "backup-storage:ListObjects"
      MountCapsule = "backup-storage:MountCapsule"
      NotifyObjectComplete = "backup-storage:NotifyObjectComplete"
      PutChunk = "backup-storage:PutChunk"
      PutObject = "backup-storage:PutObject"
      StartObject = "backup-storage:StartObject"
      UpdateObjectComplete = "backup-storage:UpdateObjectComplete"
    }
    backup = {
      AllActions = "backup:*"
      CancelLegalHold = "backup:CancelLegalHold"
      CopyFromBackupVault = "backup:CopyFromBackupVault"
      CopyIntoBackupVault = "backup:CopyIntoBackupVault"
      CreateBackupPlan = "backup:CreateBackupPlan"
      CreateBackupSelection = "backup:CreateBackupSelection"
      CreateBackupVault = "backup:CreateBackupVault"
      CreateFramework = "backup:CreateFramework"
      CreateLegalHold = "backup:CreateLegalHold"
      CreateLogicallyAirGappedBackupVault = "backup:CreateLogicallyAirGappedBackupVault"
      CreateReportPlan = "backup:CreateReportPlan"
      CreateRestoreTestingPlan = "backup:CreateRestoreTestingPlan"
      CreateRestoreTestingSelection = "backup:CreateRestoreTestingSelection"
      DeleteBackupPlan = "backup:DeleteBackupPlan"
      DeleteBackupSelection = "backup:DeleteBackupSelection"
      DeleteBackupVault = "backup:DeleteBackupVault"
      DeleteBackupVaultAccessPolicy = "backup:DeleteBackupVaultAccessPolicy"
      DeleteBackupVaultLockConfiguration = "backup:DeleteBackupVaultLockConfiguration"
      DeleteBackupVaultNotifications = "backup:DeleteBackupVaultNotifications"
      DeleteBackupVaultSharingPolicy = "backup:DeleteBackupVaultSharingPolicy"
      DeleteFramework = "backup:DeleteFramework"
      DeleteRecoveryPoint = "backup:DeleteRecoveryPoint"
      DeleteReportPlan = "backup:DeleteReportPlan"
      DeleteRestoreTestingPlan = "backup:DeleteRestoreTestingPlan"
      DeleteRestoreTestingSelection = "backup:DeleteRestoreTestingSelection"
      DescribeBackupJob = "backup:DescribeBackupJob"
      DescribeBackupVault = "backup:DescribeBackupVault"
      DescribeCopyJob = "backup:DescribeCopyJob"
      DescribeFramework = "backup:DescribeFramework"
      DescribeGlobalSettings = "backup:DescribeGlobalSettings"
      DescribeProtectedResource = "backup:DescribeProtectedResource"
      DescribeRecoveryPoint = "backup:DescribeRecoveryPoint"
      DescribeRegionSettings = "backup:DescribeRegionSettings"
      DescribeReportJob = "backup:DescribeReportJob"
      DescribeReportPlan = "backup:DescribeReportPlan"
      DescribeRestoreJob = "backup:DescribeRestoreJob"
      DisassociateRecoveryPoint = "backup:DisassociateRecoveryPoint"
      DisassociateRecoveryPointFromParent = "backup:DisassociateRecoveryPointFromParent"
      ExportBackupPlanTemplate = "backup:ExportBackupPlanTemplate"
      GetBackupPlan = "backup:GetBackupPlan"
      GetBackupPlanFromJSON = "backup:GetBackupPlanFromJSON"
      GetBackupPlanFromTemplate = "backup:GetBackupPlanFromTemplate"
      GetBackupSelection = "backup:GetBackupSelection"
      GetBackupVaultAccessPolicy = "backup:GetBackupVaultAccessPolicy"
      GetBackupVaultNotifications = "backup:GetBackupVaultNotifications"
      GetBackupVaultSharingPolicy = "backup:GetBackupVaultSharingPolicy"
      GetLegalHold = "backup:GetLegalHold"
      GetRecoveryPointRestoreMetadata = "backup:GetRecoveryPointRestoreMetadata"
      GetRestoreJobMetadata = "backup:GetRestoreJobMetadata"
      GetRestoreTestingInferredMetadata = "backup:GetRestoreTestingInferredMetadata"
      GetRestoreTestingPlan = "backup:GetRestoreTestingPlan"
      GetRestoreTestingSelection = "backup:GetRestoreTestingSelection"
      GetSupportedResourceTypes = "backup:GetSupportedResourceTypes"
      ListBackupJobSummaries = "backup:ListBackupJobSummaries"
      ListBackupJobs = "backup:ListBackupJobs"
      ListBackupPlanTemplates = "backup:ListBackupPlanTemplates"
      ListBackupPlanVersions = "backup:ListBackupPlanVersions"
      ListBackupPlans = "backup:ListBackupPlans"
      ListBackupSelections = "backup:ListBackupSelections"
      ListBackupVaults = "backup:ListBackupVaults"
      ListCopyJobSummaries = "backup:ListCopyJobSummaries"
      ListCopyJobs = "backup:ListCopyJobs"
      ListFrameworks = "backup:ListFrameworks"
      ListLegalHolds = "backup:ListLegalHolds"
      ListProtectedResources = "backup:ListProtectedResources"
      ListProtectedResourcesByBackupVault = "backup:ListProtectedResourcesByBackupVault"
      ListRecoveryPointsByBackupVault = "backup:ListRecoveryPointsByBackupVault"
      ListRecoveryPointsByLegalHold = "backup:ListRecoveryPointsByLegalHold"
      ListRecoveryPointsByResource = "backup:ListRecoveryPointsByResource"
      ListReportJobs = "backup:ListReportJobs"
      ListReportPlans = "backup:ListReportPlans"
      ListRestoreJobSummaries = "backup:ListRestoreJobSummaries"
      ListRestoreJobs = "backup:ListRestoreJobs"
      ListRestoreJobsByProtectedResource = "backup:ListRestoreJobsByProtectedResource"
      ListRestoreTestingPlans = "backup:ListRestoreTestingPlans"
      ListRestoreTestingSelections = "backup:ListRestoreTestingSelections"
      ListTags = "backup:ListTags"
      PutBackupVaultAccessPolicy = "backup:PutBackupVaultAccessPolicy"
      PutBackupVaultLockConfiguration = "backup:PutBackupVaultLockConfiguration"
      PutBackupVaultNotifications = "backup:PutBackupVaultNotifications"
      PutBackupVaultSharingPolicy = "backup:PutBackupVaultSharingPolicy"
      PutRestoreValidationResult = "backup:PutRestoreValidationResult"
      StartBackupJob = "backup:StartBackupJob"
      StartCopyJob = "backup:StartCopyJob"
      StartReportJob = "backup:StartReportJob"
      StartRestoreJob = "backup:StartRestoreJob"
      StopBackupJob = "backup:StopBackupJob"
      TagResource = "backup:TagResource"
      UntagResource = "backup:UntagResource"
      UpdateBackupPlan = "backup:UpdateBackupPlan"
      UpdateFramework = "backup:UpdateFramework"
      UpdateGlobalSettings = "backup:UpdateGlobalSettings"
      UpdateRecoveryPointLifecycle = "backup:UpdateRecoveryPointLifecycle"
      UpdateRegionSettings = "backup:UpdateRegionSettings"
      UpdateReportPlan = "backup:UpdateReportPlan"
      UpdateRestoreTestingPlan = "backup:UpdateRestoreTestingPlan"
      UpdateRestoreTestingSelection = "backup:UpdateRestoreTestingSelection"
    }
    batch = {
      AllActions = "batch:*"
      CancelJob = "batch:CancelJob"
      CreateComputeEnvironment = "batch:CreateComputeEnvironment"
      CreateJobQueue = "batch:CreateJobQueue"
      CreateSchedulingPolicy = "batch:CreateSchedulingPolicy"
      DeleteComputeEnvironment = "batch:DeleteComputeEnvironment"
      DeleteJobQueue = "batch:DeleteJobQueue"
      DeleteSchedulingPolicy = "batch:DeleteSchedulingPolicy"
      DeregisterJobDefinition = "batch:DeregisterJobDefinition"
      DescribeComputeEnvironments = "batch:DescribeComputeEnvironments"
      DescribeJobDefinitions = "batch:DescribeJobDefinitions"
      DescribeJobQueues = "batch:DescribeJobQueues"
      DescribeJobs = "batch:DescribeJobs"
      DescribeSchedulingPolicies = "batch:DescribeSchedulingPolicies"
      GetJobQueueSnapshot = "batch:GetJobQueueSnapshot"
      ListJobs = "batch:ListJobs"
      ListSchedulingPolicies = "batch:ListSchedulingPolicies"
      ListTagsForResource = "batch:ListTagsForResource"
      RegisterJobDefinition = "batch:RegisterJobDefinition"
      SubmitJob = "batch:SubmitJob"
      TagResource = "batch:TagResource"
      TerminateJob = "batch:TerminateJob"
      UntagResource = "batch:UntagResource"
      UpdateComputeEnvironment = "batch:UpdateComputeEnvironment"
      UpdateJobQueue = "batch:UpdateJobQueue"
      UpdateSchedulingPolicy = "batch:UpdateSchedulingPolicy"
    }
    bcm-data-exports = {
      AllActions = "bcm-data-exports:*"
      CreateExport = "bcm-data-exports:CreateExport"
      DeleteExport = "bcm-data-exports:DeleteExport"
      GetExecution = "bcm-data-exports:GetExecution"
      GetExport = "bcm-data-exports:GetExport"
      GetTable = "bcm-data-exports:GetTable"
      ListExecutions = "bcm-data-exports:ListExecutions"
      ListExports = "bcm-data-exports:ListExports"
      ListTables = "bcm-data-exports:ListTables"
      ListTagsForResource = "bcm-data-exports:ListTagsForResource"
      TagResource = "bcm-data-exports:TagResource"
      UntagResource = "bcm-data-exports:UntagResource"
      UpdateExport = "bcm-data-exports:UpdateExport"
    }
    bedrock = {
      AllActions = "bedrock:*"
      ApplyGuardrail = "bedrock:ApplyGuardrail"
      AssociateAgentKnowledgeBase = "bedrock:AssociateAgentKnowledgeBase"
      AssociateThirdPartyKnowledgeBase = "bedrock:AssociateThirdPartyKnowledgeBase"
      CreateAgent = "bedrock:CreateAgent"
      CreateAgentActionGroup = "bedrock:CreateAgentActionGroup"
      CreateAgentAlias = "bedrock:CreateAgentAlias"
      CreateDataSource = "bedrock:CreateDataSource"
      CreateEvaluationJob = "bedrock:CreateEvaluationJob"
      CreateFoundationModelAgreement = "bedrock:CreateFoundationModelAgreement"
      CreateGuardrail = "bedrock:CreateGuardrail"
      CreateGuardrailVersion = "bedrock:CreateGuardrailVersion"
      CreateKnowledgeBase = "bedrock:CreateKnowledgeBase"
      CreateModelCustomizationJob = "bedrock:CreateModelCustomizationJob"
      CreateModelEvaluationJob = "bedrock:CreateModelEvaluationJob"
      CreateModelInvocationJob = "bedrock:CreateModelInvocationJob"
      CreateProvisionedModelThroughput = "bedrock:CreateProvisionedModelThroughput"
      DeleteAgent = "bedrock:DeleteAgent"
      DeleteAgentActionGroup = "bedrock:DeleteAgentActionGroup"
      DeleteAgentAlias = "bedrock:DeleteAgentAlias"
      DeleteAgentVersion = "bedrock:DeleteAgentVersion"
      DeleteCustomModel = "bedrock:DeleteCustomModel"
      DeleteDataSource = "bedrock:DeleteDataSource"
      DeleteFoundationModelAgreement = "bedrock:DeleteFoundationModelAgreement"
      DeleteGuardrail = "bedrock:DeleteGuardrail"
      DeleteKnowledgeBase = "bedrock:DeleteKnowledgeBase"
      DeleteModelInvocationLoggingConfiguration = "bedrock:DeleteModelInvocationLoggingConfiguration"
      DeleteProvisionedModelThroughput = "bedrock:DeleteProvisionedModelThroughput"
      DetectGeneratedContent = "bedrock:DetectGeneratedContent"
      DisassociateAgentKnowledgeBase = "bedrock:DisassociateAgentKnowledgeBase"
      GetAgent = "bedrock:GetAgent"
      GetAgentActionGroup = "bedrock:GetAgentActionGroup"
      GetAgentAlias = "bedrock:GetAgentAlias"
      GetAgentKnowledgeBase = "bedrock:GetAgentKnowledgeBase"
      GetAgentVersion = "bedrock:GetAgentVersion"
      GetCustomModel = "bedrock:GetCustomModel"
      GetDataSource = "bedrock:GetDataSource"
      GetEvaluationJob = "bedrock:GetEvaluationJob"
      GetFoundationModel = "bedrock:GetFoundationModel"
      GetFoundationModelAvailability = "bedrock:GetFoundationModelAvailability"
      GetGuardrail = "bedrock:GetGuardrail"
      GetIngestionJob = "bedrock:GetIngestionJob"
      GetKnowledgeBase = "bedrock:GetKnowledgeBase"
      GetModelCustomizationJob = "bedrock:GetModelCustomizationJob"
      GetModelEvaluationJob = "bedrock:GetModelEvaluationJob"
      GetModelInvocationJob = "bedrock:GetModelInvocationJob"
      GetModelInvocationLoggingConfiguration = "bedrock:GetModelInvocationLoggingConfiguration"
      GetProvisionedModelThroughput = "bedrock:GetProvisionedModelThroughput"
      GetUseCaseForModelAccess = "bedrock:GetUseCaseForModelAccess"
      InvokeAgent = "bedrock:InvokeAgent"
      InvokeModel = "bedrock:InvokeModel"
      InvokeModelWithResponseStream = "bedrock:InvokeModelWithResponseStream"
      ListAgentActionGroups = "bedrock:ListAgentActionGroups"
      ListAgentAliases = "bedrock:ListAgentAliases"
      ListAgentKnowledgeBases = "bedrock:ListAgentKnowledgeBases"
      ListAgentVersions = "bedrock:ListAgentVersions"
      ListAgents = "bedrock:ListAgents"
      ListCustomModels = "bedrock:ListCustomModels"
      ListDataSources = "bedrock:ListDataSources"
      ListEvaluationJobs = "bedrock:ListEvaluationJobs"
      ListFoundationModelAgreementOffers = "bedrock:ListFoundationModelAgreementOffers"
      ListFoundationModels = "bedrock:ListFoundationModels"
      ListGuardrails = "bedrock:ListGuardrails"
      ListIngestionJobs = "bedrock:ListIngestionJobs"
      ListKnowledgeBases = "bedrock:ListKnowledgeBases"
      ListModelCustomizationJobs = "bedrock:ListModelCustomizationJobs"
      ListModelEvaluationJobs = "bedrock:ListModelEvaluationJobs"
      ListModelInvocationJobs = "bedrock:ListModelInvocationJobs"
      ListProvisionedModelThroughputs = "bedrock:ListProvisionedModelThroughputs"
      ListTagsForResource = "bedrock:ListTagsForResource"
      PrepareAgent = "bedrock:PrepareAgent"
      PutFoundationModelEntitlement = "bedrock:PutFoundationModelEntitlement"
      PutModelInvocationLoggingConfiguration = "bedrock:PutModelInvocationLoggingConfiguration"
      PutUseCaseForModelAccess = "bedrock:PutUseCaseForModelAccess"
      Retrieve = "bedrock:Retrieve"
      RetrieveAndGenerate = "bedrock:RetrieveAndGenerate"
      StartIngestionJob = "bedrock:StartIngestionJob"
      StopEvaluationJob = "bedrock:StopEvaluationJob"
      StopModelCustomizationJob = "bedrock:StopModelCustomizationJob"
      StopModelInvocationJob = "bedrock:StopModelInvocationJob"
      TagResource = "bedrock:TagResource"
      UntagResource = "bedrock:UntagResource"
      UpdateAgent = "bedrock:UpdateAgent"
      UpdateAgentActionGroup = "bedrock:UpdateAgentActionGroup"
      UpdateAgentAlias = "bedrock:UpdateAgentAlias"
      UpdateAgentKnowledgeBase = "bedrock:UpdateAgentKnowledgeBase"
      UpdateDataSource = "bedrock:UpdateDataSource"
      UpdateGuardrail = "bedrock:UpdateGuardrail"
      UpdateKnowledgeBase = "bedrock:UpdateKnowledgeBase"
      UpdateProvisionedModelThroughput = "bedrock:UpdateProvisionedModelThroughput"
    }
    billing = {
      AllActions = "billing:*"
      GetBillingData = "billing:GetBillingData"
      GetBillingDetails = "billing:GetBillingDetails"
      GetBillingNotifications = "billing:GetBillingNotifications"
      GetBillingPreferences = "billing:GetBillingPreferences"
      GetContractInformation = "billing:GetContractInformation"
      GetCredits = "billing:GetCredits"
      GetIAMAccessPreference = "billing:GetIAMAccessPreference"
      GetSellerOfRecord = "billing:GetSellerOfRecord"
      ListBillingViews = "billing:ListBillingViews"
      PutContractInformation = "billing:PutContractInformation"
      RedeemCredits = "billing:RedeemCredits"
      UpdateBillingPreferences = "billing:UpdateBillingPreferences"
      UpdateIAMAccessPreference = "billing:UpdateIAMAccessPreference"
    }
    billingconductor = {
      AllActions = "billingconductor:*"
      AssociateAccounts = "billingconductor:AssociateAccounts"
      AssociatePricingRules = "billingconductor:AssociatePricingRules"
      BatchAssociateResourcesToCustomLineItem = "billingconductor:BatchAssociateResourcesToCustomLineItem"
      BatchDisassociateResourcesFromCustomLineItem = "billingconductor:BatchDisassociateResourcesFromCustomLineItem"
      CreateBillingGroup = "billingconductor:CreateBillingGroup"
      CreateCustomLineItem = "billingconductor:CreateCustomLineItem"
      CreatePricingPlan = "billingconductor:CreatePricingPlan"
      CreatePricingRule = "billingconductor:CreatePricingRule"
      DeleteBillingGroup = "billingconductor:DeleteBillingGroup"
      DeleteCustomLineItem = "billingconductor:DeleteCustomLineItem"
      DeletePricingPlan = "billingconductor:DeletePricingPlan"
      DeletePricingRule = "billingconductor:DeletePricingRule"
      DisassociateAccounts = "billingconductor:DisassociateAccounts"
      DisassociatePricingRules = "billingconductor:DisassociatePricingRules"
      GetBillingGroupCostReport = "billingconductor:GetBillingGroupCostReport"
      ListAccountAssociations = "billingconductor:ListAccountAssociations"
      ListBillingGroupCostReports = "billingconductor:ListBillingGroupCostReports"
      ListBillingGroups = "billingconductor:ListBillingGroups"
      ListCustomLineItemVersions = "billingconductor:ListCustomLineItemVersions"
      ListCustomLineItems = "billingconductor:ListCustomLineItems"
      ListPricingPlans = "billingconductor:ListPricingPlans"
      ListPricingPlansAssociatedWithPricingRule = "billingconductor:ListPricingPlansAssociatedWithPricingRule"
      ListPricingRules = "billingconductor:ListPricingRules"
      ListPricingRulesAssociatedToPricingPlan = "billingconductor:ListPricingRulesAssociatedToPricingPlan"
      ListResourcesAssociatedToCustomLineItem = "billingconductor:ListResourcesAssociatedToCustomLineItem"
      ListTagsForResource = "billingconductor:ListTagsForResource"
      TagResource = "billingconductor:TagResource"
      UntagResource = "billingconductor:UntagResource"
      UpdateBillingGroup = "billingconductor:UpdateBillingGroup"
      UpdateCustomLineItem = "billingconductor:UpdateCustomLineItem"
      UpdatePricingPlan = "billingconductor:UpdatePricingPlan"
      UpdatePricingRule = "billingconductor:UpdatePricingRule"
    }
    braket = {
      AllActions = "braket:*"
      AcceptUserAgreement = "braket:AcceptUserAgreement"
      AccessBraketFeature = "braket:AccessBraketFeature"
      CancelJob = "braket:CancelJob"
      CancelQuantumTask = "braket:CancelQuantumTask"
      CreateJob = "braket:CreateJob"
      CreateQuantumTask = "braket:CreateQuantumTask"
      GetDevice = "braket:GetDevice"
      GetJob = "braket:GetJob"
      GetQuantumTask = "braket:GetQuantumTask"
      GetServiceLinkedRoleStatus = "braket:GetServiceLinkedRoleStatus"
      GetUserAgreementStatus = "braket:GetUserAgreementStatus"
      ListTagsForResource = "braket:ListTagsForResource"
      SearchDevices = "braket:SearchDevices"
      SearchJobs = "braket:SearchJobs"
      SearchQuantumTasks = "braket:SearchQuantumTasks"
      TagResource = "braket:TagResource"
      UntagResource = "braket:UntagResource"
    }
    budgets = {
      AllActions = "budgets:*"
      CreateBudgetAction = "budgets:CreateBudgetAction"
      DeleteBudgetAction = "budgets:DeleteBudgetAction"
      DescribeBudgetAction = "budgets:DescribeBudgetAction"
      DescribeBudgetActionHistories = "budgets:DescribeBudgetActionHistories"
      DescribeBudgetActionsForAccount = "budgets:DescribeBudgetActionsForAccount"
      DescribeBudgetActionsForBudget = "budgets:DescribeBudgetActionsForBudget"
      ExecuteBudgetAction = "budgets:ExecuteBudgetAction"
      ListTagsForResource = "budgets:ListTagsForResource"
      ModifyBudget = "budgets:ModifyBudget"
      TagResource = "budgets:TagResource"
      UntagResource = "budgets:UntagResource"
      UpdateBudgetAction = "budgets:UpdateBudgetAction"
      ViewBudget = "budgets:ViewBudget"
    }
    bugbust = {
      AllActions = "bugbust:*"
      CreateEvent = "bugbust:CreateEvent"
      EvaluateProfilingGroups = "bugbust:EvaluateProfilingGroups"
      GetEvent = "bugbust:GetEvent"
      GetJoinEventStatus = "bugbust:GetJoinEventStatus"
      JoinEvent = "bugbust:JoinEvent"
      ListBugs = "bugbust:ListBugs"
      ListEventParticipants = "bugbust:ListEventParticipants"
      ListEventScores = "bugbust:ListEventScores"
      ListEvents = "bugbust:ListEvents"
      ListProfilingGroups = "bugbust:ListProfilingGroups"
      ListPullRequests = "bugbust:ListPullRequests"
      ListTagsForResource = "bugbust:ListTagsForResource"
      TagResource = "bugbust:TagResource"
      UntagResource = "bugbust:UntagResource"
      UpdateEvent = "bugbust:UpdateEvent"
      UpdateWorkItem = "bugbust:UpdateWorkItem"
      UpdateWorkItemAdmin = "bugbust:UpdateWorkItemAdmin"
    }
    cases = {
      AllActions = "cases:*"
      BatchGetField = "cases:BatchGetField"
      BatchPutFieldOptions = "cases:BatchPutFieldOptions"
      CreateCase = "cases:CreateCase"
      CreateDomain = "cases:CreateDomain"
      CreateField = "cases:CreateField"
      CreateLayout = "cases:CreateLayout"
      CreateRelatedItem = "cases:CreateRelatedItem"
      CreateTemplate = "cases:CreateTemplate"
      DeleteDomain = "cases:DeleteDomain"
      DeleteField = "cases:DeleteField"
      DeleteLayout = "cases:DeleteLayout"
      DeleteRelatedItem = "cases:DeleteRelatedItem"
      DeleteTemplate = "cases:DeleteTemplate"
      GetCase = "cases:GetCase"
      GetCaseAuditEvents = "cases:GetCaseAuditEvents"
      GetCaseEventConfiguration = "cases:GetCaseEventConfiguration"
      GetDomain = "cases:GetDomain"
      GetLayout = "cases:GetLayout"
      GetTemplate = "cases:GetTemplate"
      ListCasesForContact = "cases:ListCasesForContact"
      ListDomains = "cases:ListDomains"
      ListFieldOptions = "cases:ListFieldOptions"
      ListFields = "cases:ListFields"
      ListLayouts = "cases:ListLayouts"
      ListTagsForResource = "cases:ListTagsForResource"
      ListTemplates = "cases:ListTemplates"
      PutCaseEventConfiguration = "cases:PutCaseEventConfiguration"
      SearchCases = "cases:SearchCases"
      SearchRelatedItems = "cases:SearchRelatedItems"
      TagResource = "cases:TagResource"
      UntagResource = "cases:UntagResource"
      UpdateCase = "cases:UpdateCase"
      UpdateField = "cases:UpdateField"
      UpdateLayout = "cases:UpdateLayout"
      UpdateTemplate = "cases:UpdateTemplate"
    }
    cassandra = {
      AllActions = "cassandra:*"
      Alter = "cassandra:Alter"
      AlterMultiRegionResource = "cassandra:AlterMultiRegionResource"
      Create = "cassandra:Create"
      CreateMultiRegionResource = "cassandra:CreateMultiRegionResource"
      Drop = "cassandra:Drop"
      DropMultiRegionResource = "cassandra:DropMultiRegionResource"
      Modify = "cassandra:Modify"
      ModifyMultiRegionResource = "cassandra:ModifyMultiRegionResource"
      Restore = "cassandra:Restore"
      RestoreMultiRegionTable = "cassandra:RestoreMultiRegionTable"
      Select = "cassandra:Select"
      SelectMultiRegionResource = "cassandra:SelectMultiRegionResource"
      TagMultiRegionResource = "cassandra:TagMultiRegionResource"
      TagResource = "cassandra:TagResource"
      UnTagMultiRegionResource = "cassandra:UnTagMultiRegionResource"
      UntagResource = "cassandra:UntagResource"
      UpdatePartitioner = "cassandra:UpdatePartitioner"
    }
    ce = {
      AllActions = "ce:*"
      CreateAnomalyMonitor = "ce:CreateAnomalyMonitor"
      CreateAnomalySubscription = "ce:CreateAnomalySubscription"
      CreateCostCategoryDefinition = "ce:CreateCostCategoryDefinition"
      CreateNotificationSubscription = "ce:CreateNotificationSubscription"
      CreateReport = "ce:CreateReport"
      DeleteAnomalyMonitor = "ce:DeleteAnomalyMonitor"
      DeleteAnomalySubscription = "ce:DeleteAnomalySubscription"
      DeleteCostCategoryDefinition = "ce:DeleteCostCategoryDefinition"
      DeleteNotificationSubscription = "ce:DeleteNotificationSubscription"
      DeleteReport = "ce:DeleteReport"
      DescribeCostCategoryDefinition = "ce:DescribeCostCategoryDefinition"
      DescribeNotificationSubscription = "ce:DescribeNotificationSubscription"
      DescribeReport = "ce:DescribeReport"
      GetAnomalies = "ce:GetAnomalies"
      GetAnomalyMonitors = "ce:GetAnomalyMonitors"
      GetAnomalySubscriptions = "ce:GetAnomalySubscriptions"
      GetApproximateUsageRecords = "ce:GetApproximateUsageRecords"
      GetConsoleActionSetEnforced = "ce:GetConsoleActionSetEnforced"
      GetCostAndUsage = "ce:GetCostAndUsage"
      GetCostAndUsageWithResources = "ce:GetCostAndUsageWithResources"
      GetCostCategories = "ce:GetCostCategories"
      GetCostForecast = "ce:GetCostForecast"
      GetDimensionValues = "ce:GetDimensionValues"
      GetPreferences = "ce:GetPreferences"
      GetReservationCoverage = "ce:GetReservationCoverage"
      GetReservationPurchaseRecommendation = "ce:GetReservationPurchaseRecommendation"
      GetReservationUtilization = "ce:GetReservationUtilization"
      GetRightsizingRecommendation = "ce:GetRightsizingRecommendation"
      GetSavingsPlanPurchaseRecommendationDetails = "ce:GetSavingsPlanPurchaseRecommendationDetails"
      GetSavingsPlansCoverage = "ce:GetSavingsPlansCoverage"
      GetSavingsPlansPurchaseRecommendation = "ce:GetSavingsPlansPurchaseRecommendation"
      GetSavingsPlansUtilization = "ce:GetSavingsPlansUtilization"
      GetSavingsPlansUtilizationDetails = "ce:GetSavingsPlansUtilizationDetails"
      GetTags = "ce:GetTags"
      GetUsageForecast = "ce:GetUsageForecast"
      ListCostAllocationTagBackfillHistory = "ce:ListCostAllocationTagBackfillHistory"
      ListCostAllocationTags = "ce:ListCostAllocationTags"
      ListCostCategoryDefinitions = "ce:ListCostCategoryDefinitions"
      ListSavingsPlansPurchaseRecommendationGeneration = "ce:ListSavingsPlansPurchaseRecommendationGeneration"
      ListTagsForResource = "ce:ListTagsForResource"
      ProvideAnomalyFeedback = "ce:ProvideAnomalyFeedback"
      StartCostAllocationTagBackfill = "ce:StartCostAllocationTagBackfill"
      StartSavingsPlansPurchaseRecommendationGeneration = "ce:StartSavingsPlansPurchaseRecommendationGeneration"
      TagResource = "ce:TagResource"
      UntagResource = "ce:UntagResource"
      UpdateAnomalyMonitor = "ce:UpdateAnomalyMonitor"
      UpdateAnomalySubscription = "ce:UpdateAnomalySubscription"
      UpdateConsoleActionSetEnforced = "ce:UpdateConsoleActionSetEnforced"
      UpdateCostAllocationTagsStatus = "ce:UpdateCostAllocationTagsStatus"
      UpdateCostCategoryDefinition = "ce:UpdateCostCategoryDefinition"
      UpdateNotificationSubscription = "ce:UpdateNotificationSubscription"
      UpdatePreferences = "ce:UpdatePreferences"
      UpdateReport = "ce:UpdateReport"
    }
    chatbot = {
      AllActions = "chatbot:*"
      CreateChimeWebhookConfiguration = "chatbot:CreateChimeWebhookConfiguration"
      CreateMicrosoftTeamsChannelConfiguration = "chatbot:CreateMicrosoftTeamsChannelConfiguration"
      CreateSlackChannelConfiguration = "chatbot:CreateSlackChannelConfiguration"
      DeleteChimeWebhookConfiguration = "chatbot:DeleteChimeWebhookConfiguration"
      DeleteMicrosoftTeamsChannelConfiguration = "chatbot:DeleteMicrosoftTeamsChannelConfiguration"
      DeleteMicrosoftTeamsConfiguredTeam = "chatbot:DeleteMicrosoftTeamsConfiguredTeam"
      DeleteMicrosoftTeamsUserIdentity = "chatbot:DeleteMicrosoftTeamsUserIdentity"
      DeleteSlackChannelConfiguration = "chatbot:DeleteSlackChannelConfiguration"
      DeleteSlackUserIdentity = "chatbot:DeleteSlackUserIdentity"
      DeleteSlackWorkspaceAuthorization = "chatbot:DeleteSlackWorkspaceAuthorization"
      DescribeChimeWebhookConfigurations = "chatbot:DescribeChimeWebhookConfigurations"
      DescribeSlackChannelConfigurations = "chatbot:DescribeSlackChannelConfigurations"
      DescribeSlackChannels = "chatbot:DescribeSlackChannels"
      DescribeSlackUserIdentities = "chatbot:DescribeSlackUserIdentities"
      DescribeSlackWorkspaces = "chatbot:DescribeSlackWorkspaces"
      GetAccountPreferences = "chatbot:GetAccountPreferences"
      GetMicrosoftTeamsChannelConfiguration = "chatbot:GetMicrosoftTeamsChannelConfiguration"
      GetMicrosoftTeamsOauthParameters = "chatbot:GetMicrosoftTeamsOauthParameters"
      GetSlackOauthParameters = "chatbot:GetSlackOauthParameters"
      ListMicrosoftTeamsChannelConfigurations = "chatbot:ListMicrosoftTeamsChannelConfigurations"
      ListMicrosoftTeamsConfiguredTeams = "chatbot:ListMicrosoftTeamsConfiguredTeams"
      ListMicrosoftTeamsUserIdentities = "chatbot:ListMicrosoftTeamsUserIdentities"
      ListTagsForResource = "chatbot:ListTagsForResource"
      RedeemMicrosoftTeamsOauthCode = "chatbot:RedeemMicrosoftTeamsOauthCode"
      RedeemSlackOauthCode = "chatbot:RedeemSlackOauthCode"
      TagResource = "chatbot:TagResource"
      UntagResource = "chatbot:UntagResource"
      UpdateAccountPreferences = "chatbot:UpdateAccountPreferences"
      UpdateChimeWebhookConfiguration = "chatbot:UpdateChimeWebhookConfiguration"
      UpdateMicrosoftTeamsChannelConfiguration = "chatbot:UpdateMicrosoftTeamsChannelConfiguration"
      UpdateSlackChannelConfiguration = "chatbot:UpdateSlackChannelConfiguration"
    }
    chime = {
      AllActions = "chime:*"
      AcceptDelegate = "chime:AcceptDelegate"
      ActivateUsers = "chime:ActivateUsers"
      AddDomain = "chime:AddDomain"
      AddOrUpdateGroups = "chime:AddOrUpdateGroups"
      AssociateChannelFlow = "chime:AssociateChannelFlow"
      AssociatePhoneNumberWithUser = "chime:AssociatePhoneNumberWithUser"
      AssociatePhoneNumbersWithVoiceConnector = "chime:AssociatePhoneNumbersWithVoiceConnector"
      AssociatePhoneNumbersWithVoiceConnectorGroup = "chime:AssociatePhoneNumbersWithVoiceConnectorGroup"
      AssociateSigninDelegateGroupsWithAccount = "chime:AssociateSigninDelegateGroupsWithAccount"
      AuthorizeDirectory = "chime:AuthorizeDirectory"
      BatchCreateAttendee = "chime:BatchCreateAttendee"
      BatchCreateChannelMembership = "chime:BatchCreateChannelMembership"
      BatchCreateRoomMembership = "chime:BatchCreateRoomMembership"
      BatchDeletePhoneNumber = "chime:BatchDeletePhoneNumber"
      BatchSuspendUser = "chime:BatchSuspendUser"
      BatchUnsuspendUser = "chime:BatchUnsuspendUser"
      BatchUpdateAttendeeCapabilitiesExcept = "chime:BatchUpdateAttendeeCapabilitiesExcept"
      BatchUpdatePhoneNumber = "chime:BatchUpdatePhoneNumber"
      BatchUpdateUser = "chime:BatchUpdateUser"
      ChannelFlowCallback = "chime:ChannelFlowCallback"
      Connect = "chime:Connect"
      ConnectDirectory = "chime:ConnectDirectory"
      CreateAccount = "chime:CreateAccount"
      CreateApiKey = "chime:CreateApiKey"
      CreateAppInstance = "chime:CreateAppInstance"
      CreateAppInstanceAdmin = "chime:CreateAppInstanceAdmin"
      CreateAppInstanceBot = "chime:CreateAppInstanceBot"
      CreateAppInstanceUser = "chime:CreateAppInstanceUser"
      CreateAttendee = "chime:CreateAttendee"
      CreateBot = "chime:CreateBot"
      CreateCDRBucket = "chime:CreateCDRBucket"
      CreateChannel = "chime:CreateChannel"
      CreateChannelBan = "chime:CreateChannelBan"
      CreateChannelFlow = "chime:CreateChannelFlow"
      CreateChannelMembership = "chime:CreateChannelMembership"
      CreateChannelModerator = "chime:CreateChannelModerator"
      CreateMediaCapturePipeline = "chime:CreateMediaCapturePipeline"
      CreateMediaConcatenationPipeline = "chime:CreateMediaConcatenationPipeline"
      CreateMediaInsightsPipeline = "chime:CreateMediaInsightsPipeline"
      CreateMediaInsightsPipelineConfiguration = "chime:CreateMediaInsightsPipelineConfiguration"
      CreateMediaLiveConnectorPipeline = "chime:CreateMediaLiveConnectorPipeline"
      CreateMediaPipelineKinesisVideoStreamPool = "chime:CreateMediaPipelineKinesisVideoStreamPool"
      CreateMediaStreamPipeline = "chime:CreateMediaStreamPipeline"
      CreateMeeting = "chime:CreateMeeting"
      CreateMeetingDialOut = "chime:CreateMeetingDialOut"
      CreateMeetingWithAttendees = "chime:CreateMeetingWithAttendees"
      CreatePhoneNumberOrder = "chime:CreatePhoneNumberOrder"
      CreateProxySession = "chime:CreateProxySession"
      CreateRoom = "chime:CreateRoom"
      CreateRoomMembership = "chime:CreateRoomMembership"
      CreateSipMediaApplication = "chime:CreateSipMediaApplication"
      CreateSipMediaApplicationCall = "chime:CreateSipMediaApplicationCall"
      CreateSipRule = "chime:CreateSipRule"
      CreateUser = "chime:CreateUser"
      CreateVoiceConnector = "chime:CreateVoiceConnector"
      CreateVoiceConnectorGroup = "chime:CreateVoiceConnectorGroup"
      CreateVoiceProfile = "chime:CreateVoiceProfile"
      CreateVoiceProfileDomain = "chime:CreateVoiceProfileDomain"
      DeleteAccount = "chime:DeleteAccount"
      DeleteAccountOpenIdConfig = "chime:DeleteAccountOpenIdConfig"
      DeleteApiKey = "chime:DeleteApiKey"
      DeleteAppInstance = "chime:DeleteAppInstance"
      DeleteAppInstanceAdmin = "chime:DeleteAppInstanceAdmin"
      DeleteAppInstanceBot = "chime:DeleteAppInstanceBot"
      DeleteAppInstanceStreamingConfigurations = "chime:DeleteAppInstanceStreamingConfigurations"
      DeleteAppInstanceUser = "chime:DeleteAppInstanceUser"
      DeleteAttendee = "chime:DeleteAttendee"
      DeleteCDRBucket = "chime:DeleteCDRBucket"
      DeleteChannel = "chime:DeleteChannel"
      DeleteChannelBan = "chime:DeleteChannelBan"
      DeleteChannelFlow = "chime:DeleteChannelFlow"
      DeleteChannelMembership = "chime:DeleteChannelMembership"
      DeleteChannelMessage = "chime:DeleteChannelMessage"
      DeleteChannelModerator = "chime:DeleteChannelModerator"
      DeleteDelegate = "chime:DeleteDelegate"
      DeleteDomain = "chime:DeleteDomain"
      DeleteEventsConfiguration = "chime:DeleteEventsConfiguration"
      DeleteGroups = "chime:DeleteGroups"
      DeleteMediaCapturePipeline = "chime:DeleteMediaCapturePipeline"
      DeleteMediaInsightsPipelineConfiguration = "chime:DeleteMediaInsightsPipelineConfiguration"
      DeleteMediaPipeline = "chime:DeleteMediaPipeline"
      DeleteMediaPipelineKinesisVideoStreamPool = "chime:DeleteMediaPipelineKinesisVideoStreamPool"
      DeleteMeeting = "chime:DeleteMeeting"
      DeleteMessagingStreamingConfigurations = "chime:DeleteMessagingStreamingConfigurations"
      DeletePhoneNumber = "chime:DeletePhoneNumber"
      DeleteProxySession = "chime:DeleteProxySession"
      DeleteRoom = "chime:DeleteRoom"
      DeleteRoomMembership = "chime:DeleteRoomMembership"
      DeleteSipMediaApplication = "chime:DeleteSipMediaApplication"
      DeleteSipRule = "chime:DeleteSipRule"
      DeleteVoiceConnector = "chime:DeleteVoiceConnector"
      DeleteVoiceConnectorEmergencyCallingConfiguration = "chime:DeleteVoiceConnectorEmergencyCallingConfiguration"
      DeleteVoiceConnectorGroup = "chime:DeleteVoiceConnectorGroup"
      DeleteVoiceConnectorOrigination = "chime:DeleteVoiceConnectorOrigination"
      DeleteVoiceConnectorProxy = "chime:DeleteVoiceConnectorProxy"
      DeleteVoiceConnectorStreamingConfiguration = "chime:DeleteVoiceConnectorStreamingConfiguration"
      DeleteVoiceConnectorTermination = "chime:DeleteVoiceConnectorTermination"
      DeleteVoiceConnectorTerminationCredentials = "chime:DeleteVoiceConnectorTerminationCredentials"
      DeleteVoiceProfile = "chime:DeleteVoiceProfile"
      DeleteVoiceProfileDomain = "chime:DeleteVoiceProfileDomain"
      DeregisterAppInstanceUserEndpoint = "chime:DeregisterAppInstanceUserEndpoint"
      DescribeAppInstance = "chime:DescribeAppInstance"
      DescribeAppInstanceAdmin = "chime:DescribeAppInstanceAdmin"
      DescribeAppInstanceBot = "chime:DescribeAppInstanceBot"
      DescribeAppInstanceUser = "chime:DescribeAppInstanceUser"
      DescribeAppInstanceUserEndpoint = "chime:DescribeAppInstanceUserEndpoint"
      DescribeChannel = "chime:DescribeChannel"
      DescribeChannelBan = "chime:DescribeChannelBan"
      DescribeChannelFlow = "chime:DescribeChannelFlow"
      DescribeChannelMembership = "chime:DescribeChannelMembership"
      DescribeChannelMembershipForAppInstanceUser = "chime:DescribeChannelMembershipForAppInstanceUser"
      DescribeChannelModeratedByAppInstanceUser = "chime:DescribeChannelModeratedByAppInstanceUser"
      DescribeChannelModerator = "chime:DescribeChannelModerator"
      DisassociateChannelFlow = "chime:DisassociateChannelFlow"
      DisassociatePhoneNumberFromUser = "chime:DisassociatePhoneNumberFromUser"
      DisassociatePhoneNumbersFromVoiceConnector = "chime:DisassociatePhoneNumbersFromVoiceConnector"
      DisassociatePhoneNumbersFromVoiceConnectorGroup = "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup"
      DisassociateSigninDelegateGroupsFromAccount = "chime:DisassociateSigninDelegateGroupsFromAccount"
      DisconnectDirectory = "chime:DisconnectDirectory"
      GetAccount = "chime:GetAccount"
      GetAccountResource = "chime:GetAccountResource"
      GetAccountSettings = "chime:GetAccountSettings"
      GetAccountWithOpenIdConfig = "chime:GetAccountWithOpenIdConfig"
      GetAppInstanceRetentionSettings = "chime:GetAppInstanceRetentionSettings"
      GetAppInstanceStreamingConfigurations = "chime:GetAppInstanceStreamingConfigurations"
      GetAttendee = "chime:GetAttendee"
      GetBot = "chime:GetBot"
      GetCDRBucket = "chime:GetCDRBucket"
      GetChannelMembershipPreferences = "chime:GetChannelMembershipPreferences"
      GetChannelMessage = "chime:GetChannelMessage"
      GetChannelMessageStatus = "chime:GetChannelMessageStatus"
      GetDomain = "chime:GetDomain"
      GetEventsConfiguration = "chime:GetEventsConfiguration"
      GetGlobalSettings = "chime:GetGlobalSettings"
      GetMediaCapturePipeline = "chime:GetMediaCapturePipeline"
      GetMediaInsightsPipelineConfiguration = "chime:GetMediaInsightsPipelineConfiguration"
      GetMediaPipeline = "chime:GetMediaPipeline"
      GetMediaPipelineKinesisVideoStreamPool = "chime:GetMediaPipelineKinesisVideoStreamPool"
      GetMeeting = "chime:GetMeeting"
      GetMeetingDetail = "chime:GetMeetingDetail"
      GetMessagingSessionEndpoint = "chime:GetMessagingSessionEndpoint"
      GetMessagingStreamingConfigurations = "chime:GetMessagingStreamingConfigurations"
      GetPhoneNumber = "chime:GetPhoneNumber"
      GetPhoneNumberOrder = "chime:GetPhoneNumberOrder"
      GetPhoneNumberSettings = "chime:GetPhoneNumberSettings"
      GetProxySession = "chime:GetProxySession"
      GetRetentionSettings = "chime:GetRetentionSettings"
      GetRoom = "chime:GetRoom"
      GetSipMediaApplication = "chime:GetSipMediaApplication"
      GetSipMediaApplicationAlexaSkillConfiguration = "chime:GetSipMediaApplicationAlexaSkillConfiguration"
      GetSipMediaApplicationLoggingConfiguration = "chime:GetSipMediaApplicationLoggingConfiguration"
      GetSipRule = "chime:GetSipRule"
      GetSpeakerSearchTask = "chime:GetSpeakerSearchTask"
      GetTelephonyLimits = "chime:GetTelephonyLimits"
      GetUser = "chime:GetUser"
      GetUserActivityReportData = "chime:GetUserActivityReportData"
      GetUserByEmail = "chime:GetUserByEmail"
      GetUserSettings = "chime:GetUserSettings"
      GetVoiceConnector = "chime:GetVoiceConnector"
      GetVoiceConnectorEmergencyCallingConfiguration = "chime:GetVoiceConnectorEmergencyCallingConfiguration"
      GetVoiceConnectorGroup = "chime:GetVoiceConnectorGroup"
      GetVoiceConnectorLoggingConfiguration = "chime:GetVoiceConnectorLoggingConfiguration"
      GetVoiceConnectorOrigination = "chime:GetVoiceConnectorOrigination"
      GetVoiceConnectorProxy = "chime:GetVoiceConnectorProxy"
      GetVoiceConnectorStreamingConfiguration = "chime:GetVoiceConnectorStreamingConfiguration"
      GetVoiceConnectorTermination = "chime:GetVoiceConnectorTermination"
      GetVoiceConnectorTerminationHealth = "chime:GetVoiceConnectorTerminationHealth"
      GetVoiceProfile = "chime:GetVoiceProfile"
      GetVoiceProfileDomain = "chime:GetVoiceProfileDomain"
      GetVoiceToneAnalysisTask = "chime:GetVoiceToneAnalysisTask"
      InviteDelegate = "chime:InviteDelegate"
      InviteUsers = "chime:InviteUsers"
      InviteUsersFromProvider = "chime:InviteUsersFromProvider"
      ListAccountUsageReportData = "chime:ListAccountUsageReportData"
      ListAccounts = "chime:ListAccounts"
      ListApiKeys = "chime:ListApiKeys"
      ListAppInstanceAdmins = "chime:ListAppInstanceAdmins"
      ListAppInstanceBots = "chime:ListAppInstanceBots"
      ListAppInstanceUserEndpoints = "chime:ListAppInstanceUserEndpoints"
      ListAppInstanceUsers = "chime:ListAppInstanceUsers"
      ListAppInstances = "chime:ListAppInstances"
      ListAttendeeTags = "chime:ListAttendeeTags"
      ListAttendees = "chime:ListAttendees"
      ListAvailableVoiceConnectorRegions = "chime:ListAvailableVoiceConnectorRegions"
      ListBots = "chime:ListBots"
      ListCDRBucket = "chime:ListCDRBucket"
      ListCallingRegions = "chime:ListCallingRegions"
      ListChannelBans = "chime:ListChannelBans"
      ListChannelFlows = "chime:ListChannelFlows"
      ListChannelMemberships = "chime:ListChannelMemberships"
      ListChannelMembershipsForAppInstanceUser = "chime:ListChannelMembershipsForAppInstanceUser"
      ListChannelMessages = "chime:ListChannelMessages"
      ListChannelModerators = "chime:ListChannelModerators"
      ListChannels = "chime:ListChannels"
      ListChannelsAssociatedWithChannelFlow = "chime:ListChannelsAssociatedWithChannelFlow"
      ListChannelsModeratedByAppInstanceUser = "chime:ListChannelsModeratedByAppInstanceUser"
      ListDelegates = "chime:ListDelegates"
      ListDirectories = "chime:ListDirectories"
      ListDomains = "chime:ListDomains"
      ListGroups = "chime:ListGroups"
      ListMediaCapturePipelines = "chime:ListMediaCapturePipelines"
      ListMediaInsightsPipelineConfigurations = "chime:ListMediaInsightsPipelineConfigurations"
      ListMediaPipelineKinesisVideoStreamPools = "chime:ListMediaPipelineKinesisVideoStreamPools"
      ListMediaPipelines = "chime:ListMediaPipelines"
      ListMeetingEvents = "chime:ListMeetingEvents"
      ListMeetingTags = "chime:ListMeetingTags"
      ListMeetings = "chime:ListMeetings"
      ListMeetingsReportData = "chime:ListMeetingsReportData"
      ListPhoneNumberOrders = "chime:ListPhoneNumberOrders"
      ListPhoneNumbers = "chime:ListPhoneNumbers"
      ListProxySessions = "chime:ListProxySessions"
      ListRoomMemberships = "chime:ListRoomMemberships"
      ListRooms = "chime:ListRooms"
      ListSipMediaApplications = "chime:ListSipMediaApplications"
      ListSipRules = "chime:ListSipRules"
      ListSubChannels = "chime:ListSubChannels"
      ListSupportedPhoneNumberCountries = "chime:ListSupportedPhoneNumberCountries"
      ListTagsForResource = "chime:ListTagsForResource"
      ListUsers = "chime:ListUsers"
      ListVoiceConnectorGroups = "chime:ListVoiceConnectorGroups"
      ListVoiceConnectorTerminationCredentials = "chime:ListVoiceConnectorTerminationCredentials"
      ListVoiceConnectors = "chime:ListVoiceConnectors"
      ListVoiceProfileDomains = "chime:ListVoiceProfileDomains"
      ListVoiceProfiles = "chime:ListVoiceProfiles"
      LogoutUser = "chime:LogoutUser"
      PutAppInstanceRetentionSettings = "chime:PutAppInstanceRetentionSettings"
      PutAppInstanceStreamingConfigurations = "chime:PutAppInstanceStreamingConfigurations"
      PutAppInstanceUserExpirationSettings = "chime:PutAppInstanceUserExpirationSettings"
      PutChannelExpirationSettings = "chime:PutChannelExpirationSettings"
      PutChannelMembershipPreferences = "chime:PutChannelMembershipPreferences"
      PutEventsConfiguration = "chime:PutEventsConfiguration"
      PutMessagingStreamingConfigurations = "chime:PutMessagingStreamingConfigurations"
      PutRetentionSettings = "chime:PutRetentionSettings"
      PutSipMediaApplicationAlexaSkillConfiguration = "chime:PutSipMediaApplicationAlexaSkillConfiguration"
      PutSipMediaApplicationLoggingConfiguration = "chime:PutSipMediaApplicationLoggingConfiguration"
      PutVoiceConnectorEmergencyCallingConfiguration = "chime:PutVoiceConnectorEmergencyCallingConfiguration"
      PutVoiceConnectorLoggingConfiguration = "chime:PutVoiceConnectorLoggingConfiguration"
      PutVoiceConnectorOrigination = "chime:PutVoiceConnectorOrigination"
      PutVoiceConnectorProxy = "chime:PutVoiceConnectorProxy"
      PutVoiceConnectorStreamingConfiguration = "chime:PutVoiceConnectorStreamingConfiguration"
      PutVoiceConnectorTermination = "chime:PutVoiceConnectorTermination"
      PutVoiceConnectorTerminationCredentials = "chime:PutVoiceConnectorTerminationCredentials"
      RedactChannelMessage = "chime:RedactChannelMessage"
      RedactConversationMessage = "chime:RedactConversationMessage"
      RedactRoomMessage = "chime:RedactRoomMessage"
      RegenerateSecurityToken = "chime:RegenerateSecurityToken"
      RegisterAppInstanceUserEndpoint = "chime:RegisterAppInstanceUserEndpoint"
      RenameAccount = "chime:RenameAccount"
      RenewDelegate = "chime:RenewDelegate"
      ResetAccountResource = "chime:ResetAccountResource"
      ResetPersonalPIN = "chime:ResetPersonalPIN"
      RestorePhoneNumber = "chime:RestorePhoneNumber"
      RetrieveDataExports = "chime:RetrieveDataExports"
      SearchAvailablePhoneNumbers = "chime:SearchAvailablePhoneNumbers"
      SearchChannels = "chime:SearchChannels"
      SendChannelMessage = "chime:SendChannelMessage"
      StartDataExport = "chime:StartDataExport"
      StartMeetingTranscription = "chime:StartMeetingTranscription"
      StartSpeakerSearchTask = "chime:StartSpeakerSearchTask"
      StartVoiceToneAnalysisTask = "chime:StartVoiceToneAnalysisTask"
      StopMeetingTranscription = "chime:StopMeetingTranscription"
      StopSpeakerSearchTask = "chime:StopSpeakerSearchTask"
      StopVoiceToneAnalysisTask = "chime:StopVoiceToneAnalysisTask"
      SubmitSupportRequest = "chime:SubmitSupportRequest"
      SuspendUsers = "chime:SuspendUsers"
      TagAttendee = "chime:TagAttendee"
      TagMeeting = "chime:TagMeeting"
      TagResource = "chime:TagResource"
      UnauthorizeDirectory = "chime:UnauthorizeDirectory"
      UntagAttendee = "chime:UntagAttendee"
      UntagMeeting = "chime:UntagMeeting"
      UntagResource = "chime:UntagResource"
      UpdateAccount = "chime:UpdateAccount"
      UpdateAccountOpenIdConfig = "chime:UpdateAccountOpenIdConfig"
      UpdateAccountResource = "chime:UpdateAccountResource"
      UpdateAccountSettings = "chime:UpdateAccountSettings"
      UpdateAppInstance = "chime:UpdateAppInstance"
      UpdateAppInstanceBot = "chime:UpdateAppInstanceBot"
      UpdateAppInstanceUser = "chime:UpdateAppInstanceUser"
      UpdateAppInstanceUserEndpoint = "chime:UpdateAppInstanceUserEndpoint"
      UpdateAttendeeCapabilities = "chime:UpdateAttendeeCapabilities"
      UpdateBot = "chime:UpdateBot"
      UpdateCDRSettings = "chime:UpdateCDRSettings"
      UpdateChannel = "chime:UpdateChannel"
      UpdateChannelFlow = "chime:UpdateChannelFlow"
      UpdateChannelMessage = "chime:UpdateChannelMessage"
      UpdateChannelReadMarker = "chime:UpdateChannelReadMarker"
      UpdateGlobalSettings = "chime:UpdateGlobalSettings"
      UpdateMediaInsightsPipelineConfiguration = "chime:UpdateMediaInsightsPipelineConfiguration"
      UpdateMediaInsightsPipelineStatus = "chime:UpdateMediaInsightsPipelineStatus"
      UpdateMediaPipelineKinesisVideoStreamPool = "chime:UpdateMediaPipelineKinesisVideoStreamPool"
      UpdatePhoneNumber = "chime:UpdatePhoneNumber"
      UpdatePhoneNumberSettings = "chime:UpdatePhoneNumberSettings"
      UpdateProxySession = "chime:UpdateProxySession"
      UpdateRoom = "chime:UpdateRoom"
      UpdateRoomMembership = "chime:UpdateRoomMembership"
      UpdateSipMediaApplication = "chime:UpdateSipMediaApplication"
      UpdateSipMediaApplicationCall = "chime:UpdateSipMediaApplicationCall"
      UpdateSipRule = "chime:UpdateSipRule"
      UpdateSupportedLicenses = "chime:UpdateSupportedLicenses"
      UpdateUser = "chime:UpdateUser"
      UpdateUserLicenses = "chime:UpdateUserLicenses"
      UpdateUserSettings = "chime:UpdateUserSettings"
      UpdateVoiceConnector = "chime:UpdateVoiceConnector"
      UpdateVoiceConnectorGroup = "chime:UpdateVoiceConnectorGroup"
      UpdateVoiceProfile = "chime:UpdateVoiceProfile"
      UpdateVoiceProfileDomain = "chime:UpdateVoiceProfileDomain"
      ValidateAccountResource = "chime:ValidateAccountResource"
      ValidateE911Address = "chime:ValidateE911Address"
    }
    cleanrooms-ml = {
      AllActions = "cleanrooms-ml:*"
      CreateAudienceModel = "cleanrooms-ml:CreateAudienceModel"
      CreateConfiguredAudienceModel = "cleanrooms-ml:CreateConfiguredAudienceModel"
      CreateTrainingDataset = "cleanrooms-ml:CreateTrainingDataset"
      DeleteAudienceGenerationJob = "cleanrooms-ml:DeleteAudienceGenerationJob"
      DeleteAudienceModel = "cleanrooms-ml:DeleteAudienceModel"
      DeleteConfiguredAudienceModel = "cleanrooms-ml:DeleteConfiguredAudienceModel"
      DeleteConfiguredAudienceModelPolicy = "cleanrooms-ml:DeleteConfiguredAudienceModelPolicy"
      DeleteTrainingDataset = "cleanrooms-ml:DeleteTrainingDataset"
      GetAudienceGenerationJob = "cleanrooms-ml:GetAudienceGenerationJob"
      GetAudienceModel = "cleanrooms-ml:GetAudienceModel"
      GetConfiguredAudienceModel = "cleanrooms-ml:GetConfiguredAudienceModel"
      GetConfiguredAudienceModelPolicy = "cleanrooms-ml:GetConfiguredAudienceModelPolicy"
      GetTrainingDataset = "cleanrooms-ml:GetTrainingDataset"
      ListAudienceExportJobs = "cleanrooms-ml:ListAudienceExportJobs"
      ListAudienceGenerationJobs = "cleanrooms-ml:ListAudienceGenerationJobs"
      ListAudienceModels = "cleanrooms-ml:ListAudienceModels"
      ListConfiguredAudienceModels = "cleanrooms-ml:ListConfiguredAudienceModels"
      ListTagsForResource = "cleanrooms-ml:ListTagsForResource"
      ListTrainingDatasets = "cleanrooms-ml:ListTrainingDatasets"
      PutConfiguredAudienceModelPolicy = "cleanrooms-ml:PutConfiguredAudienceModelPolicy"
      StartAudienceExportJob = "cleanrooms-ml:StartAudienceExportJob"
      StartAudienceGenerationJob = "cleanrooms-ml:StartAudienceGenerationJob"
      TagResource = "cleanrooms-ml:TagResource"
      UnTagResource = "cleanrooms-ml:UnTagResource"
      UpdateConfiguredAudienceModel = "cleanrooms-ml:UpdateConfiguredAudienceModel"
    }
    cleanrooms = {
      AllActions = "cleanrooms:*"
      BatchGetCollaborationAnalysisTemplate = "cleanrooms:BatchGetCollaborationAnalysisTemplate"
      BatchGetSchema = "cleanrooms:BatchGetSchema"
      BatchGetSchemaAnalysisRule = "cleanrooms:BatchGetSchemaAnalysisRule"
      CreateAnalysisTemplate = "cleanrooms:CreateAnalysisTemplate"
      CreateCollaboration = "cleanrooms:CreateCollaboration"
      CreateConfiguredAudienceModelAssociation = "cleanrooms:CreateConfiguredAudienceModelAssociation"
      CreateConfiguredTable = "cleanrooms:CreateConfiguredTable"
      CreateConfiguredTableAnalysisRule = "cleanrooms:CreateConfiguredTableAnalysisRule"
      CreateConfiguredTableAssociation = "cleanrooms:CreateConfiguredTableAssociation"
      CreateMembership = "cleanrooms:CreateMembership"
      CreatePrivacyBudgetTemplate = "cleanrooms:CreatePrivacyBudgetTemplate"
      DeleteAnalysisTemplate = "cleanrooms:DeleteAnalysisTemplate"
      DeleteCollaboration = "cleanrooms:DeleteCollaboration"
      DeleteConfiguredAudienceModelAssociation = "cleanrooms:DeleteConfiguredAudienceModelAssociation"
      DeleteConfiguredTable = "cleanrooms:DeleteConfiguredTable"
      DeleteConfiguredTableAnalysisRule = "cleanrooms:DeleteConfiguredTableAnalysisRule"
      DeleteConfiguredTableAssociation = "cleanrooms:DeleteConfiguredTableAssociation"
      DeleteMember = "cleanrooms:DeleteMember"
      DeleteMembership = "cleanrooms:DeleteMembership"
      DeletePrivacyBudgetTemplate = "cleanrooms:DeletePrivacyBudgetTemplate"
      GetAnalysisTemplate = "cleanrooms:GetAnalysisTemplate"
      GetCollaboration = "cleanrooms:GetCollaboration"
      GetCollaborationAnalysisTemplate = "cleanrooms:GetCollaborationAnalysisTemplate"
      GetCollaborationConfiguredAudienceModelAssociation = "cleanrooms:GetCollaborationConfiguredAudienceModelAssociation"
      GetCollaborationPrivacyBudgetTemplate = "cleanrooms:GetCollaborationPrivacyBudgetTemplate"
      GetConfiguredAudienceModelAssociation = "cleanrooms:GetConfiguredAudienceModelAssociation"
      GetConfiguredTable = "cleanrooms:GetConfiguredTable"
      GetConfiguredTableAnalysisRule = "cleanrooms:GetConfiguredTableAnalysisRule"
      GetConfiguredTableAssociation = "cleanrooms:GetConfiguredTableAssociation"
      GetMembership = "cleanrooms:GetMembership"
      GetPrivacyBudgetTemplate = "cleanrooms:GetPrivacyBudgetTemplate"
      GetProtectedQuery = "cleanrooms:GetProtectedQuery"
      GetSchema = "cleanrooms:GetSchema"
      GetSchemaAnalysisRule = "cleanrooms:GetSchemaAnalysisRule"
      ListAnalysisTemplates = "cleanrooms:ListAnalysisTemplates"
      ListCollaborationAnalysisTemplates = "cleanrooms:ListCollaborationAnalysisTemplates"
      ListCollaborationConfiguredAudienceModelAssociations = "cleanrooms:ListCollaborationConfiguredAudienceModelAssociations"
      ListCollaborationPrivacyBudgetTemplates = "cleanrooms:ListCollaborationPrivacyBudgetTemplates"
      ListCollaborationPrivacyBudgets = "cleanrooms:ListCollaborationPrivacyBudgets"
      ListCollaborations = "cleanrooms:ListCollaborations"
      ListConfiguredAudienceModelAssociations = "cleanrooms:ListConfiguredAudienceModelAssociations"
      ListConfiguredTableAssociations = "cleanrooms:ListConfiguredTableAssociations"
      ListConfiguredTables = "cleanrooms:ListConfiguredTables"
      ListMembers = "cleanrooms:ListMembers"
      ListMemberships = "cleanrooms:ListMemberships"
      ListPrivacyBudgetTemplates = "cleanrooms:ListPrivacyBudgetTemplates"
      ListPrivacyBudgets = "cleanrooms:ListPrivacyBudgets"
      ListProtectedQueries = "cleanrooms:ListProtectedQueries"
      ListSchemas = "cleanrooms:ListSchemas"
      ListTagsForResource = "cleanrooms:ListTagsForResource"
      PreviewPrivacyImpact = "cleanrooms:PreviewPrivacyImpact"
      StartProtectedQuery = "cleanrooms:StartProtectedQuery"
      TagResource = "cleanrooms:TagResource"
      UntagResource = "cleanrooms:UntagResource"
      UpdateAnalysisTemplate = "cleanrooms:UpdateAnalysisTemplate"
      UpdateCollaboration = "cleanrooms:UpdateCollaboration"
      UpdateConfiguredAudienceModelAssociation = "cleanrooms:UpdateConfiguredAudienceModelAssociation"
      UpdateConfiguredTable = "cleanrooms:UpdateConfiguredTable"
      UpdateConfiguredTableAnalysisRule = "cleanrooms:UpdateConfiguredTableAnalysisRule"
      UpdateConfiguredTableAssociation = "cleanrooms:UpdateConfiguredTableAssociation"
      UpdateMembership = "cleanrooms:UpdateMembership"
      UpdatePrivacyBudgetTemplate = "cleanrooms:UpdatePrivacyBudgetTemplate"
      UpdateProtectedQuery = "cleanrooms:UpdateProtectedQuery"
    }
    cloud9 = {
      AllActions = "cloud9:*"
      ActivateEC2Remote = "cloud9:ActivateEC2Remote"
      CreateEnvironmentEC2 = "cloud9:CreateEnvironmentEC2"
      CreateEnvironmentMembership = "cloud9:CreateEnvironmentMembership"
      CreateEnvironmentSSH = "cloud9:CreateEnvironmentSSH"
      CreateEnvironmentToken = "cloud9:CreateEnvironmentToken"
      DeleteEnvironment = "cloud9:DeleteEnvironment"
      DeleteEnvironmentMembership = "cloud9:DeleteEnvironmentMembership"
      DescribeEC2Remote = "cloud9:DescribeEC2Remote"
      DescribeEnvironmentMemberships = "cloud9:DescribeEnvironmentMemberships"
      DescribeEnvironmentStatus = "cloud9:DescribeEnvironmentStatus"
      DescribeEnvironments = "cloud9:DescribeEnvironments"
      DescribeSSHRemote = "cloud9:DescribeSSHRemote"
      GetEnvironmentConfig = "cloud9:GetEnvironmentConfig"
      GetEnvironmentSettings = "cloud9:GetEnvironmentSettings"
      GetMembershipSettings = "cloud9:GetMembershipSettings"
      GetMigrationExperiences = "cloud9:GetMigrationExperiences"
      GetUserPublicKey = "cloud9:GetUserPublicKey"
      GetUserSettings = "cloud9:GetUserSettings"
      ListEnvironments = "cloud9:ListEnvironments"
      ListTagsForResource = "cloud9:ListTagsForResource"
      ModifyTemporaryCredentialsOnEnvironmentEC2 = "cloud9:ModifyTemporaryCredentialsOnEnvironmentEC2"
      TagResource = "cloud9:TagResource"
      UntagResource = "cloud9:UntagResource"
      UpdateEnvironment = "cloud9:UpdateEnvironment"
      UpdateEnvironmentMembership = "cloud9:UpdateEnvironmentMembership"
      UpdateEnvironmentSettings = "cloud9:UpdateEnvironmentSettings"
      UpdateMembershipSettings = "cloud9:UpdateMembershipSettings"
      UpdateSSHRemote = "cloud9:UpdateSSHRemote"
      UpdateUserSettings = "cloud9:UpdateUserSettings"
      ValidateEnvironmentName = "cloud9:ValidateEnvironmentName"
    }
    clouddirectory = {
      AllActions = "clouddirectory:*"
      AddFacetToObject = "clouddirectory:AddFacetToObject"
      ApplySchema = "clouddirectory:ApplySchema"
      AttachObject = "clouddirectory:AttachObject"
      AttachPolicy = "clouddirectory:AttachPolicy"
      AttachToIndex = "clouddirectory:AttachToIndex"
      AttachTypedLink = "clouddirectory:AttachTypedLink"
      BatchRead = "clouddirectory:BatchRead"
      BatchWrite = "clouddirectory:BatchWrite"
      CreateDirectory = "clouddirectory:CreateDirectory"
      CreateFacet = "clouddirectory:CreateFacet"
      CreateIndex = "clouddirectory:CreateIndex"
      CreateObject = "clouddirectory:CreateObject"
      CreateSchema = "clouddirectory:CreateSchema"
      CreateTypedLinkFacet = "clouddirectory:CreateTypedLinkFacet"
      DeleteDirectory = "clouddirectory:DeleteDirectory"
      DeleteFacet = "clouddirectory:DeleteFacet"
      DeleteObject = "clouddirectory:DeleteObject"
      DeleteSchema = "clouddirectory:DeleteSchema"
      DeleteTypedLinkFacet = "clouddirectory:DeleteTypedLinkFacet"
      DetachFromIndex = "clouddirectory:DetachFromIndex"
      DetachObject = "clouddirectory:DetachObject"
      DetachPolicy = "clouddirectory:DetachPolicy"
      DetachTypedLink = "clouddirectory:DetachTypedLink"
      DisableDirectory = "clouddirectory:DisableDirectory"
      EnableDirectory = "clouddirectory:EnableDirectory"
      GetAppliedSchemaVersion = "clouddirectory:GetAppliedSchemaVersion"
      GetDirectory = "clouddirectory:GetDirectory"
      GetFacet = "clouddirectory:GetFacet"
      GetLinkAttributes = "clouddirectory:GetLinkAttributes"
      GetObjectAttributes = "clouddirectory:GetObjectAttributes"
      GetObjectInformation = "clouddirectory:GetObjectInformation"
      GetSchemaAsJson = "clouddirectory:GetSchemaAsJson"
      GetTypedLinkFacetInformation = "clouddirectory:GetTypedLinkFacetInformation"
      ListAppliedSchemaArns = "clouddirectory:ListAppliedSchemaArns"
      ListAttachedIndices = "clouddirectory:ListAttachedIndices"
      ListDevelopmentSchemaArns = "clouddirectory:ListDevelopmentSchemaArns"
      ListDirectories = "clouddirectory:ListDirectories"
      ListFacetAttributes = "clouddirectory:ListFacetAttributes"
      ListFacetNames = "clouddirectory:ListFacetNames"
      ListIncomingTypedLinks = "clouddirectory:ListIncomingTypedLinks"
      ListIndex = "clouddirectory:ListIndex"
      ListManagedSchemaArns = "clouddirectory:ListManagedSchemaArns"
      ListObjectAttributes = "clouddirectory:ListObjectAttributes"
      ListObjectChildren = "clouddirectory:ListObjectChildren"
      ListObjectParentPaths = "clouddirectory:ListObjectParentPaths"
      ListObjectParents = "clouddirectory:ListObjectParents"
      ListObjectPolicies = "clouddirectory:ListObjectPolicies"
      ListOutgoingTypedLinks = "clouddirectory:ListOutgoingTypedLinks"
      ListPolicyAttachments = "clouddirectory:ListPolicyAttachments"
      ListPublishedSchemaArns = "clouddirectory:ListPublishedSchemaArns"
      ListTagsForResource = "clouddirectory:ListTagsForResource"
      ListTypedLinkFacetAttributes = "clouddirectory:ListTypedLinkFacetAttributes"
      ListTypedLinkFacetNames = "clouddirectory:ListTypedLinkFacetNames"
      LookupPolicy = "clouddirectory:LookupPolicy"
      PublishSchema = "clouddirectory:PublishSchema"
      PutSchemaFromJson = "clouddirectory:PutSchemaFromJson"
      RemoveFacetFromObject = "clouddirectory:RemoveFacetFromObject"
      TagResource = "clouddirectory:TagResource"
      UntagResource = "clouddirectory:UntagResource"
      UpdateFacet = "clouddirectory:UpdateFacet"
      UpdateLinkAttributes = "clouddirectory:UpdateLinkAttributes"
      UpdateObjectAttributes = "clouddirectory:UpdateObjectAttributes"
      UpdateSchema = "clouddirectory:UpdateSchema"
      UpdateTypedLinkFacet = "clouddirectory:UpdateTypedLinkFacet"
      UpgradeAppliedSchema = "clouddirectory:UpgradeAppliedSchema"
      UpgradePublishedSchema = "clouddirectory:UpgradePublishedSchema"
    }
    cloudformation = {
      AllActions = "cloudformation:*"
      ActivateOrganizationsAccess = "cloudformation:ActivateOrganizationsAccess"
      ActivateType = "cloudformation:ActivateType"
      BatchDescribeTypeConfigurations = "cloudformation:BatchDescribeTypeConfigurations"
      CancelResourceRequest = "cloudformation:CancelResourceRequest"
      CancelUpdateStack = "cloudformation:CancelUpdateStack"
      ContinueUpdateRollback = "cloudformation:ContinueUpdateRollback"
      CreateChangeSet = "cloudformation:CreateChangeSet"
      CreateGeneratedTemplate = "cloudformation:CreateGeneratedTemplate"
      CreateResource = "cloudformation:CreateResource"
      CreateStack = "cloudformation:CreateStack"
      CreateStackInstances = "cloudformation:CreateStackInstances"
      CreateStackSet = "cloudformation:CreateStackSet"
      CreateUploadBucket = "cloudformation:CreateUploadBucket"
      DeactivateOrganizationsAccess = "cloudformation:DeactivateOrganizationsAccess"
      DeactivateType = "cloudformation:DeactivateType"
      DeleteChangeSet = "cloudformation:DeleteChangeSet"
      DeleteGeneratedTemplate = "cloudformation:DeleteGeneratedTemplate"
      DeleteResource = "cloudformation:DeleteResource"
      DeleteStack = "cloudformation:DeleteStack"
      DeleteStackInstances = "cloudformation:DeleteStackInstances"
      DeleteStackSet = "cloudformation:DeleteStackSet"
      DeregisterType = "cloudformation:DeregisterType"
      DescribeAccountLimits = "cloudformation:DescribeAccountLimits"
      DescribeChangeSet = "cloudformation:DescribeChangeSet"
      DescribeChangeSetHooks = "cloudformation:DescribeChangeSetHooks"
      DescribeGeneratedTemplate = "cloudformation:DescribeGeneratedTemplate"
      DescribeOrganizationsAccess = "cloudformation:DescribeOrganizationsAccess"
      DescribePublisher = "cloudformation:DescribePublisher"
      DescribeResourceScan = "cloudformation:DescribeResourceScan"
      DescribeStackDriftDetectionStatus = "cloudformation:DescribeStackDriftDetectionStatus"
      DescribeStackEvents = "cloudformation:DescribeStackEvents"
      DescribeStackInstance = "cloudformation:DescribeStackInstance"
      DescribeStackResource = "cloudformation:DescribeStackResource"
      DescribeStackResourceDrifts = "cloudformation:DescribeStackResourceDrifts"
      DescribeStackResources = "cloudformation:DescribeStackResources"
      DescribeStackSet = "cloudformation:DescribeStackSet"
      DescribeStackSetOperation = "cloudformation:DescribeStackSetOperation"
      DescribeStacks = "cloudformation:DescribeStacks"
      DescribeType = "cloudformation:DescribeType"
      DescribeTypeRegistration = "cloudformation:DescribeTypeRegistration"
      DetectStackDrift = "cloudformation:DetectStackDrift"
      DetectStackResourceDrift = "cloudformation:DetectStackResourceDrift"
      DetectStackSetDrift = "cloudformation:DetectStackSetDrift"
      EstimateTemplateCost = "cloudformation:EstimateTemplateCost"
      ExecuteChangeSet = "cloudformation:ExecuteChangeSet"
      GetGeneratedTemplate = "cloudformation:GetGeneratedTemplate"
      GetResource = "cloudformation:GetResource"
      GetResourceRequestStatus = "cloudformation:GetResourceRequestStatus"
      GetStackPolicy = "cloudformation:GetStackPolicy"
      GetTemplate = "cloudformation:GetTemplate"
      GetTemplateSummary = "cloudformation:GetTemplateSummary"
      ImportStacksToStackSet = "cloudformation:ImportStacksToStackSet"
      ListChangeSets = "cloudformation:ListChangeSets"
      ListExports = "cloudformation:ListExports"
      ListGeneratedTemplates = "cloudformation:ListGeneratedTemplates"
      ListImports = "cloudformation:ListImports"
      ListResourceRequests = "cloudformation:ListResourceRequests"
      ListResourceScanRelatedResources = "cloudformation:ListResourceScanRelatedResources"
      ListResourceScanResources = "cloudformation:ListResourceScanResources"
      ListResourceScans = "cloudformation:ListResourceScans"
      ListResources = "cloudformation:ListResources"
      ListStackInstanceResourceDrifts = "cloudformation:ListStackInstanceResourceDrifts"
      ListStackInstances = "cloudformation:ListStackInstances"
      ListStackResources = "cloudformation:ListStackResources"
      ListStackSetAutoDeploymentTargets = "cloudformation:ListStackSetAutoDeploymentTargets"
      ListStackSetOperationResults = "cloudformation:ListStackSetOperationResults"
      ListStackSetOperations = "cloudformation:ListStackSetOperations"
      ListStackSets = "cloudformation:ListStackSets"
      ListStacks = "cloudformation:ListStacks"
      ListTypeRegistrations = "cloudformation:ListTypeRegistrations"
      ListTypeVersions = "cloudformation:ListTypeVersions"
      ListTypes = "cloudformation:ListTypes"
      PublishType = "cloudformation:PublishType"
      RecordHandlerProgress = "cloudformation:RecordHandlerProgress"
      RegisterPublisher = "cloudformation:RegisterPublisher"
      RegisterType = "cloudformation:RegisterType"
      RollbackStack = "cloudformation:RollbackStack"
      SetStackPolicy = "cloudformation:SetStackPolicy"
      SetTypeConfiguration = "cloudformation:SetTypeConfiguration"
      SetTypeDefaultVersion = "cloudformation:SetTypeDefaultVersion"
      SignalResource = "cloudformation:SignalResource"
      StartResourceScan = "cloudformation:StartResourceScan"
      StopStackSetOperation = "cloudformation:StopStackSetOperation"
      TagResource = "cloudformation:TagResource"
      TestType = "cloudformation:TestType"
      UntagResource = "cloudformation:UntagResource"
      UpdateGeneratedTemplate = "cloudformation:UpdateGeneratedTemplate"
      UpdateResource = "cloudformation:UpdateResource"
      UpdateStack = "cloudformation:UpdateStack"
      UpdateStackInstances = "cloudformation:UpdateStackInstances"
      UpdateStackSet = "cloudformation:UpdateStackSet"
      UpdateTerminationProtection = "cloudformation:UpdateTerminationProtection"
      ValidateTemplate = "cloudformation:ValidateTemplate"
    }
    cloudfront-keyvaluestore = {
      AllActions = "cloudfront-keyvaluestore:*"
      DeleteKey = "cloudfront-keyvaluestore:DeleteKey"
      DescribeKeyValueStore = "cloudfront-keyvaluestore:DescribeKeyValueStore"
      GetKey = "cloudfront-keyvaluestore:GetKey"
      ListKeys = "cloudfront-keyvaluestore:ListKeys"
      PutKey = "cloudfront-keyvaluestore:PutKey"
      UpdateKeys = "cloudfront-keyvaluestore:UpdateKeys"
    }
    cloudfront = {
      AllActions = "cloudfront:*"
      AssociateAlias = "cloudfront:AssociateAlias"
      CopyDistribution = "cloudfront:CopyDistribution"
      CreateCachePolicy = "cloudfront:CreateCachePolicy"
      CreateCloudFrontOriginAccessIdentity = "cloudfront:CreateCloudFrontOriginAccessIdentity"
      CreateContinuousDeploymentPolicy = "cloudfront:CreateContinuousDeploymentPolicy"
      CreateDistribution = "cloudfront:CreateDistribution"
      CreateFieldLevelEncryptionConfig = "cloudfront:CreateFieldLevelEncryptionConfig"
      CreateFieldLevelEncryptionProfile = "cloudfront:CreateFieldLevelEncryptionProfile"
      CreateFunction = "cloudfront:CreateFunction"
      CreateInvalidation = "cloudfront:CreateInvalidation"
      CreateKeyGroup = "cloudfront:CreateKeyGroup"
      CreateKeyValueStore = "cloudfront:CreateKeyValueStore"
      CreateMonitoringSubscription = "cloudfront:CreateMonitoringSubscription"
      CreateOriginAccessControl = "cloudfront:CreateOriginAccessControl"
      CreateOriginRequestPolicy = "cloudfront:CreateOriginRequestPolicy"
      CreatePublicKey = "cloudfront:CreatePublicKey"
      CreateRealtimeLogConfig = "cloudfront:CreateRealtimeLogConfig"
      CreateResponseHeadersPolicy = "cloudfront:CreateResponseHeadersPolicy"
      CreateSavingsPlan = "cloudfront:CreateSavingsPlan"
      CreateStreamingDistribution = "cloudfront:CreateStreamingDistribution"
      CreateStreamingDistributionWithTags = "cloudfront:CreateStreamingDistributionWithTags"
      DeleteCachePolicy = "cloudfront:DeleteCachePolicy"
      DeleteCloudFrontOriginAccessIdentity = "cloudfront:DeleteCloudFrontOriginAccessIdentity"
      DeleteContinuousDeploymentPolicy = "cloudfront:DeleteContinuousDeploymentPolicy"
      DeleteDistribution = "cloudfront:DeleteDistribution"
      DeleteFieldLevelEncryptionConfig = "cloudfront:DeleteFieldLevelEncryptionConfig"
      DeleteFieldLevelEncryptionProfile = "cloudfront:DeleteFieldLevelEncryptionProfile"
      DeleteFunction = "cloudfront:DeleteFunction"
      DeleteKeyGroup = "cloudfront:DeleteKeyGroup"
      DeleteKeyValueStore = "cloudfront:DeleteKeyValueStore"
      DeleteMonitoringSubscription = "cloudfront:DeleteMonitoringSubscription"
      DeleteOriginAccessControl = "cloudfront:DeleteOriginAccessControl"
      DeleteOriginRequestPolicy = "cloudfront:DeleteOriginRequestPolicy"
      DeletePublicKey = "cloudfront:DeletePublicKey"
      DeleteRealtimeLogConfig = "cloudfront:DeleteRealtimeLogConfig"
      DeleteResponseHeadersPolicy = "cloudfront:DeleteResponseHeadersPolicy"
      DeleteStreamingDistribution = "cloudfront:DeleteStreamingDistribution"
      DescribeFunction = "cloudfront:DescribeFunction"
      DescribeKeyValueStore = "cloudfront:DescribeKeyValueStore"
      GetCachePolicy = "cloudfront:GetCachePolicy"
      GetCachePolicyConfig = "cloudfront:GetCachePolicyConfig"
      GetCloudFrontOriginAccessIdentity = "cloudfront:GetCloudFrontOriginAccessIdentity"
      GetCloudFrontOriginAccessIdentityConfig = "cloudfront:GetCloudFrontOriginAccessIdentityConfig"
      GetContinuousDeploymentPolicy = "cloudfront:GetContinuousDeploymentPolicy"
      GetContinuousDeploymentPolicyConfig = "cloudfront:GetContinuousDeploymentPolicyConfig"
      GetDistribution = "cloudfront:GetDistribution"
      GetDistributionConfig = "cloudfront:GetDistributionConfig"
      GetFieldLevelEncryption = "cloudfront:GetFieldLevelEncryption"
      GetFieldLevelEncryptionConfig = "cloudfront:GetFieldLevelEncryptionConfig"
      GetFieldLevelEncryptionProfile = "cloudfront:GetFieldLevelEncryptionProfile"
      GetFieldLevelEncryptionProfileConfig = "cloudfront:GetFieldLevelEncryptionProfileConfig"
      GetFunction = "cloudfront:GetFunction"
      GetInvalidation = "cloudfront:GetInvalidation"
      GetKeyGroup = "cloudfront:GetKeyGroup"
      GetKeyGroupConfig = "cloudfront:GetKeyGroupConfig"
      GetMonitoringSubscription = "cloudfront:GetMonitoringSubscription"
      GetOriginAccessControl = "cloudfront:GetOriginAccessControl"
      GetOriginAccessControlConfig = "cloudfront:GetOriginAccessControlConfig"
      GetOriginRequestPolicy = "cloudfront:GetOriginRequestPolicy"
      GetOriginRequestPolicyConfig = "cloudfront:GetOriginRequestPolicyConfig"
      GetPublicKey = "cloudfront:GetPublicKey"
      GetPublicKeyConfig = "cloudfront:GetPublicKeyConfig"
      GetRealtimeLogConfig = "cloudfront:GetRealtimeLogConfig"
      GetResponseHeadersPolicy = "cloudfront:GetResponseHeadersPolicy"
      GetResponseHeadersPolicyConfig = "cloudfront:GetResponseHeadersPolicyConfig"
      GetSavingsPlan = "cloudfront:GetSavingsPlan"
      GetStreamingDistribution = "cloudfront:GetStreamingDistribution"
      GetStreamingDistributionConfig = "cloudfront:GetStreamingDistributionConfig"
      ListCachePolicies = "cloudfront:ListCachePolicies"
      ListCloudFrontOriginAccessIdentities = "cloudfront:ListCloudFrontOriginAccessIdentities"
      ListConflictingAliases = "cloudfront:ListConflictingAliases"
      ListContinuousDeploymentPolicies = "cloudfront:ListContinuousDeploymentPolicies"
      ListDistributions = "cloudfront:ListDistributions"
      ListDistributionsByCachePolicyId = "cloudfront:ListDistributionsByCachePolicyId"
      ListDistributionsByKeyGroup = "cloudfront:ListDistributionsByKeyGroup"
      ListDistributionsByLambdaFunction = "cloudfront:ListDistributionsByLambdaFunction"
      ListDistributionsByOriginRequestPolicyId = "cloudfront:ListDistributionsByOriginRequestPolicyId"
      ListDistributionsByRealtimeLogConfig = "cloudfront:ListDistributionsByRealtimeLogConfig"
      ListDistributionsByResponseHeadersPolicyId = "cloudfront:ListDistributionsByResponseHeadersPolicyId"
      ListDistributionsByWebACLId = "cloudfront:ListDistributionsByWebACLId"
      ListFieldLevelEncryptionConfigs = "cloudfront:ListFieldLevelEncryptionConfigs"
      ListFieldLevelEncryptionProfiles = "cloudfront:ListFieldLevelEncryptionProfiles"
      ListFunctions = "cloudfront:ListFunctions"
      ListInvalidations = "cloudfront:ListInvalidations"
      ListKeyGroups = "cloudfront:ListKeyGroups"
      ListKeyValueStores = "cloudfront:ListKeyValueStores"
      ListOriginAccessControls = "cloudfront:ListOriginAccessControls"
      ListOriginRequestPolicies = "cloudfront:ListOriginRequestPolicies"
      ListPublicKeys = "cloudfront:ListPublicKeys"
      ListRateCards = "cloudfront:ListRateCards"
      ListRealtimeLogConfigs = "cloudfront:ListRealtimeLogConfigs"
      ListResponseHeadersPolicies = "cloudfront:ListResponseHeadersPolicies"
      ListSavingsPlans = "cloudfront:ListSavingsPlans"
      ListStreamingDistributions = "cloudfront:ListStreamingDistributions"
      ListTagsForResource = "cloudfront:ListTagsForResource"
      ListUsages = "cloudfront:ListUsages"
      PublishFunction = "cloudfront:PublishFunction"
      TagResource = "cloudfront:TagResource"
      TestFunction = "cloudfront:TestFunction"
      UntagResource = "cloudfront:UntagResource"
      UpdateCachePolicy = "cloudfront:UpdateCachePolicy"
      UpdateCloudFrontOriginAccessIdentity = "cloudfront:UpdateCloudFrontOriginAccessIdentity"
      UpdateContinuousDeploymentPolicy = "cloudfront:UpdateContinuousDeploymentPolicy"
      UpdateDistribution = "cloudfront:UpdateDistribution"
      UpdateFieldLevelEncryptionConfig = "cloudfront:UpdateFieldLevelEncryptionConfig"
      UpdateFieldLevelEncryptionProfile = "cloudfront:UpdateFieldLevelEncryptionProfile"
      UpdateFunction = "cloudfront:UpdateFunction"
      UpdateKeyGroup = "cloudfront:UpdateKeyGroup"
      UpdateKeyValueStore = "cloudfront:UpdateKeyValueStore"
      UpdateOriginAccessControl = "cloudfront:UpdateOriginAccessControl"
      UpdateOriginRequestPolicy = "cloudfront:UpdateOriginRequestPolicy"
      UpdatePublicKey = "cloudfront:UpdatePublicKey"
      UpdateRealtimeLogConfig = "cloudfront:UpdateRealtimeLogConfig"
      UpdateResponseHeadersPolicy = "cloudfront:UpdateResponseHeadersPolicy"
      UpdateSavingsPlan = "cloudfront:UpdateSavingsPlan"
      UpdateStreamingDistribution = "cloudfront:UpdateStreamingDistribution"
    }
    cloudhsm = {
      AllActions = "cloudhsm:*"
      AddTagsToResource = "cloudhsm:AddTagsToResource"
      CopyBackupToRegion = "cloudhsm:CopyBackupToRegion"
      CreateCluster = "cloudhsm:CreateCluster"
      CreateHapg = "cloudhsm:CreateHapg"
      CreateHsm = "cloudhsm:CreateHsm"
      CreateLunaClient = "cloudhsm:CreateLunaClient"
      DeleteBackup = "cloudhsm:DeleteBackup"
      DeleteCluster = "cloudhsm:DeleteCluster"
      DeleteHapg = "cloudhsm:DeleteHapg"
      DeleteHsm = "cloudhsm:DeleteHsm"
      DeleteLunaClient = "cloudhsm:DeleteLunaClient"
      DescribeBackups = "cloudhsm:DescribeBackups"
      DescribeClusters = "cloudhsm:DescribeClusters"
      DescribeHapg = "cloudhsm:DescribeHapg"
      DescribeHsm = "cloudhsm:DescribeHsm"
      DescribeLunaClient = "cloudhsm:DescribeLunaClient"
      GetConfig = "cloudhsm:GetConfig"
      InitializeCluster = "cloudhsm:InitializeCluster"
      ListAvailableZones = "cloudhsm:ListAvailableZones"
      ListHapgs = "cloudhsm:ListHapgs"
      ListHsms = "cloudhsm:ListHsms"
      ListLunaClients = "cloudhsm:ListLunaClients"
      ListTags = "cloudhsm:ListTags"
      ListTagsForResource = "cloudhsm:ListTagsForResource"
      ModifyBackupAttributes = "cloudhsm:ModifyBackupAttributes"
      ModifyCluster = "cloudhsm:ModifyCluster"
      ModifyHapg = "cloudhsm:ModifyHapg"
      ModifyHsm = "cloudhsm:ModifyHsm"
      ModifyLunaClient = "cloudhsm:ModifyLunaClient"
      RemoveTagsFromResource = "cloudhsm:RemoveTagsFromResource"
      RestoreBackup = "cloudhsm:RestoreBackup"
      TagResource = "cloudhsm:TagResource"
      UntagResource = "cloudhsm:UntagResource"
    }
    cloudsearch = {
      AllActions = "cloudsearch:*"
      AddTags = "cloudsearch:AddTags"
      BuildSuggesters = "cloudsearch:BuildSuggesters"
      CreateDomain = "cloudsearch:CreateDomain"
      DefineAnalysisScheme = "cloudsearch:DefineAnalysisScheme"
      DefineExpression = "cloudsearch:DefineExpression"
      DefineIndexField = "cloudsearch:DefineIndexField"
      DefineSuggester = "cloudsearch:DefineSuggester"
      DeleteAnalysisScheme = "cloudsearch:DeleteAnalysisScheme"
      DeleteDomain = "cloudsearch:DeleteDomain"
      DeleteExpression = "cloudsearch:DeleteExpression"
      DeleteIndexField = "cloudsearch:DeleteIndexField"
      DeleteSuggester = "cloudsearch:DeleteSuggester"
      DescribeAnalysisSchemes = "cloudsearch:DescribeAnalysisSchemes"
      DescribeAvailabilityOptions = "cloudsearch:DescribeAvailabilityOptions"
      DescribeDomainEndpointOptions = "cloudsearch:DescribeDomainEndpointOptions"
      DescribeDomains = "cloudsearch:DescribeDomains"
      DescribeExpressions = "cloudsearch:DescribeExpressions"
      DescribeIndexFields = "cloudsearch:DescribeIndexFields"
      DescribeScalingParameters = "cloudsearch:DescribeScalingParameters"
      DescribeServiceAccessPolicies = "cloudsearch:DescribeServiceAccessPolicies"
      DescribeSuggesters = "cloudsearch:DescribeSuggesters"
      IndexDocuments = "cloudsearch:IndexDocuments"
      ListDomainNames = "cloudsearch:ListDomainNames"
      ListTags = "cloudsearch:ListTags"
      RemoveTags = "cloudsearch:RemoveTags"
      UpdateAvailabilityOptions = "cloudsearch:UpdateAvailabilityOptions"
      UpdateDomainEndpointOptions = "cloudsearch:UpdateDomainEndpointOptions"
      UpdateScalingParameters = "cloudsearch:UpdateScalingParameters"
      UpdateServiceAccessPolicies = "cloudsearch:UpdateServiceAccessPolicies"
      document = "cloudsearch:document"
      search = "cloudsearch:search"
      suggest = "cloudsearch:suggest"
    }
    cloudshell = {
      AllActions = "cloudshell:*"
      CreateEnvironment = "cloudshell:CreateEnvironment"
      CreateSession = "cloudshell:CreateSession"
      DeleteEnvironment = "cloudshell:DeleteEnvironment"
      GetEnvironmentStatus = "cloudshell:GetEnvironmentStatus"
      GetFileDownloadUrls = "cloudshell:GetFileDownloadUrls"
      GetFileUploadUrls = "cloudshell:GetFileUploadUrls"
      PutCredentials = "cloudshell:PutCredentials"
      StartEnvironment = "cloudshell:StartEnvironment"
      StopEnvironment = "cloudshell:StopEnvironment"
    }
    cloudtrail-data = {
      AllActions = "cloudtrail-data:*"
      PutAuditEvents = "cloudtrail-data:PutAuditEvents"
    }
    cloudtrail = {
      AllActions = "cloudtrail:*"
      AddTags = "cloudtrail:AddTags"
      CancelQuery = "cloudtrail:CancelQuery"
      CreateChannel = "cloudtrail:CreateChannel"
      CreateEventDataStore = "cloudtrail:CreateEventDataStore"
      CreateServiceLinkedChannel = "cloudtrail:CreateServiceLinkedChannel"
      CreateTrail = "cloudtrail:CreateTrail"
      DeleteChannel = "cloudtrail:DeleteChannel"
      DeleteEventDataStore = "cloudtrail:DeleteEventDataStore"
      DeleteResourcePolicy = "cloudtrail:DeleteResourcePolicy"
      DeleteServiceLinkedChannel = "cloudtrail:DeleteServiceLinkedChannel"
      DeleteTrail = "cloudtrail:DeleteTrail"
      DeregisterOrganizationDelegatedAdmin = "cloudtrail:DeregisterOrganizationDelegatedAdmin"
      DescribeQuery = "cloudtrail:DescribeQuery"
      DescribeTrails = "cloudtrail:DescribeTrails"
      DisableFederation = "cloudtrail:DisableFederation"
      EnableFederation = "cloudtrail:EnableFederation"
      GenerateQuery = "cloudtrail:GenerateQuery"
      GetChannel = "cloudtrail:GetChannel"
      GetEventDataStore = "cloudtrail:GetEventDataStore"
      GetEventDataStoreData = "cloudtrail:GetEventDataStoreData"
      GetEventSelectors = "cloudtrail:GetEventSelectors"
      GetImport = "cloudtrail:GetImport"
      GetInsightSelectors = "cloudtrail:GetInsightSelectors"
      GetQueryResults = "cloudtrail:GetQueryResults"
      GetResourcePolicy = "cloudtrail:GetResourcePolicy"
      GetServiceLinkedChannel = "cloudtrail:GetServiceLinkedChannel"
      GetTrail = "cloudtrail:GetTrail"
      GetTrailStatus = "cloudtrail:GetTrailStatus"
      ListChannels = "cloudtrail:ListChannels"
      ListEventDataStores = "cloudtrail:ListEventDataStores"
      ListImportFailures = "cloudtrail:ListImportFailures"
      ListImports = "cloudtrail:ListImports"
      ListPublicKeys = "cloudtrail:ListPublicKeys"
      ListQueries = "cloudtrail:ListQueries"
      ListServiceLinkedChannels = "cloudtrail:ListServiceLinkedChannels"
      ListTags = "cloudtrail:ListTags"
      ListTrails = "cloudtrail:ListTrails"
      LookupEvents = "cloudtrail:LookupEvents"
      PutEventSelectors = "cloudtrail:PutEventSelectors"
      PutInsightSelectors = "cloudtrail:PutInsightSelectors"
      PutResourcePolicy = "cloudtrail:PutResourcePolicy"
      RegisterOrganizationDelegatedAdmin = "cloudtrail:RegisterOrganizationDelegatedAdmin"
      RemoveTags = "cloudtrail:RemoveTags"
      RestoreEventDataStore = "cloudtrail:RestoreEventDataStore"
      StartEventDataStoreIngestion = "cloudtrail:StartEventDataStoreIngestion"
      StartImport = "cloudtrail:StartImport"
      StartLogging = "cloudtrail:StartLogging"
      StartQuery = "cloudtrail:StartQuery"
      StopEventDataStoreIngestion = "cloudtrail:StopEventDataStoreIngestion"
      StopImport = "cloudtrail:StopImport"
      StopLogging = "cloudtrail:StopLogging"
      UpdateChannel = "cloudtrail:UpdateChannel"
      UpdateEventDataStore = "cloudtrail:UpdateEventDataStore"
      UpdateServiceLinkedChannel = "cloudtrail:UpdateServiceLinkedChannel"
      UpdateTrail = "cloudtrail:UpdateTrail"
    }
    cloudwatch = {
      AllActions = "cloudwatch:*"
      BatchGetServiceLevelIndicatorReport = "cloudwatch:BatchGetServiceLevelIndicatorReport"
      BatchGetServiceLevelObjectiveBudgetReport = "cloudwatch:BatchGetServiceLevelObjectiveBudgetReport"
      CreateServiceLevelObjective = "cloudwatch:CreateServiceLevelObjective"
      DeleteAlarms = "cloudwatch:DeleteAlarms"
      DeleteAnomalyDetector = "cloudwatch:DeleteAnomalyDetector"
      DeleteDashboards = "cloudwatch:DeleteDashboards"
      DeleteInsightRules = "cloudwatch:DeleteInsightRules"
      DeleteMetricStream = "cloudwatch:DeleteMetricStream"
      DeleteServiceLevelObjective = "cloudwatch:DeleteServiceLevelObjective"
      DescribeAlarmHistory = "cloudwatch:DescribeAlarmHistory"
      DescribeAlarms = "cloudwatch:DescribeAlarms"
      DescribeAlarmsForMetric = "cloudwatch:DescribeAlarmsForMetric"
      DescribeAnomalyDetectors = "cloudwatch:DescribeAnomalyDetectors"
      DescribeInsightRules = "cloudwatch:DescribeInsightRules"
      DisableAlarmActions = "cloudwatch:DisableAlarmActions"
      DisableInsightRules = "cloudwatch:DisableInsightRules"
      EnableAlarmActions = "cloudwatch:EnableAlarmActions"
      EnableInsightRules = "cloudwatch:EnableInsightRules"
      EnableTopologyDiscovery = "cloudwatch:EnableTopologyDiscovery"
      GenerateQuery = "cloudwatch:GenerateQuery"
      GetDashboard = "cloudwatch:GetDashboard"
      GetInsightRuleReport = "cloudwatch:GetInsightRuleReport"
      GetMetricData = "cloudwatch:GetMetricData"
      GetMetricStatistics = "cloudwatch:GetMetricStatistics"
      GetMetricStream = "cloudwatch:GetMetricStream"
      GetMetricWidgetImage = "cloudwatch:GetMetricWidgetImage"
      GetService = "cloudwatch:GetService"
      GetServiceData = "cloudwatch:GetServiceData"
      GetServiceLevelObjective = "cloudwatch:GetServiceLevelObjective"
      GetTopologyDiscoveryStatus = "cloudwatch:GetTopologyDiscoveryStatus"
      GetTopologyMap = "cloudwatch:GetTopologyMap"
      Link = "cloudwatch:Link"
      ListDashboards = "cloudwatch:ListDashboards"
      ListManagedInsightRules = "cloudwatch:ListManagedInsightRules"
      ListMetricStreams = "cloudwatch:ListMetricStreams"
      ListMetrics = "cloudwatch:ListMetrics"
      ListServiceLevelObjectives = "cloudwatch:ListServiceLevelObjectives"
      ListServices = "cloudwatch:ListServices"
      ListTagsForResource = "cloudwatch:ListTagsForResource"
      ListTagsForResource [CloudWatch-Alarm] = "cloudwatch:ListTagsForResource [CloudWatch-Alarm]"
      ListTagsForResource [CloudWatch-InsightRule] = "cloudwatch:ListTagsForResource [CloudWatch-InsightRule]"
      ListTagsForResource [CloudWatch-ServiceLevelObjective] = "cloudwatch:ListTagsForResource [CloudWatch-ServiceLevelObjective]"
      PutAnomalyDetector = "cloudwatch:PutAnomalyDetector"
      PutCompositeAlarm = "cloudwatch:PutCompositeAlarm"
      PutDashboard = "cloudwatch:PutDashboard"
      PutInsightRule = "cloudwatch:PutInsightRule"
      PutManagedInsightRules = "cloudwatch:PutManagedInsightRules"
      PutMetricAlarm = "cloudwatch:PutMetricAlarm"
      PutMetricData = "cloudwatch:PutMetricData"
      PutMetricStream = "cloudwatch:PutMetricStream"
      SetAlarmState = "cloudwatch:SetAlarmState"
      StartMetricStreams = "cloudwatch:StartMetricStreams"
      StopMetricStreams = "cloudwatch:StopMetricStreams"
      TagResource = "cloudwatch:TagResource"
      TagResource [CloudWatch-Alarm] = "cloudwatch:TagResource [CloudWatch-Alarm]"
      TagResource [CloudWatch-InsightRule] = "cloudwatch:TagResource [CloudWatch-InsightRule]"
      TagResource [CloudWatch-ServiceLevelObjective] = "cloudwatch:TagResource [CloudWatch-ServiceLevelObjective]"
      UntagResource = "cloudwatch:UntagResource"
      UntagResource [CloudWatch-Alarm] = "cloudwatch:UntagResource [CloudWatch-Alarm]"
      UntagResource [CloudWatch-InsightRule] = "cloudwatch:UntagResource [CloudWatch-InsightRule]"
      UntagResource [CloudWatch-ServiceLevelObjective] = "cloudwatch:UntagResource [CloudWatch-ServiceLevelObjective]"
      UpdateServiceLevelObjective = "cloudwatch:UpdateServiceLevelObjective"
    }
    codeartifact = {
      AllActions = "codeartifact:*"
      AssociateExternalConnection = "codeartifact:AssociateExternalConnection"
      AssociateWithDownstreamRepository = "codeartifact:AssociateWithDownstreamRepository"
      CopyPackageVersions = "codeartifact:CopyPackageVersions"
      CreateDomain = "codeartifact:CreateDomain"
      CreatePackageGroup = "codeartifact:CreatePackageGroup"
      CreateRepository = "codeartifact:CreateRepository"
      DeleteDomain = "codeartifact:DeleteDomain"
      DeleteDomainPermissionsPolicy = "codeartifact:DeleteDomainPermissionsPolicy"
      DeletePackage = "codeartifact:DeletePackage"
      DeletePackageGroup = "codeartifact:DeletePackageGroup"
      DeletePackageVersions = "codeartifact:DeletePackageVersions"
      DeleteRepository = "codeartifact:DeleteRepository"
      DeleteRepositoryPermissionsPolicy = "codeartifact:DeleteRepositoryPermissionsPolicy"
      DescribeDomain = "codeartifact:DescribeDomain"
      DescribePackage = "codeartifact:DescribePackage"
      DescribePackageGroup = "codeartifact:DescribePackageGroup"
      DescribePackageVersion = "codeartifact:DescribePackageVersion"
      DescribeRepository = "codeartifact:DescribeRepository"
      DisassociateExternalConnection = "codeartifact:DisassociateExternalConnection"
      DisposePackageVersions = "codeartifact:DisposePackageVersions"
      GetAssociatedPackageGroup = "codeartifact:GetAssociatedPackageGroup"
      GetAuthorizationToken = "codeartifact:GetAuthorizationToken"
      GetDomainPermissionsPolicy = "codeartifact:GetDomainPermissionsPolicy"
      GetPackageVersionAsset = "codeartifact:GetPackageVersionAsset"
      GetPackageVersionReadme = "codeartifact:GetPackageVersionReadme"
      GetRepositoryEndpoint = "codeartifact:GetRepositoryEndpoint"
      GetRepositoryPermissionsPolicy = "codeartifact:GetRepositoryPermissionsPolicy"
      ListAllowedRepositoriesForGroup = "codeartifact:ListAllowedRepositoriesForGroup"
      ListAssociatedPackages = "codeartifact:ListAssociatedPackages"
      ListDomains = "codeartifact:ListDomains"
      ListPackageGroups = "codeartifact:ListPackageGroups"
      ListPackageVersionAssets = "codeartifact:ListPackageVersionAssets"
      ListPackageVersionDependencies = "codeartifact:ListPackageVersionDependencies"
      ListPackageVersions = "codeartifact:ListPackageVersions"
      ListPackages = "codeartifact:ListPackages"
      ListRepositories = "codeartifact:ListRepositories"
      ListRepositoriesInDomain = "codeartifact:ListRepositoriesInDomain"
      ListSubPackageGroups = "codeartifact:ListSubPackageGroups"
      ListTagsForResource = "codeartifact:ListTagsForResource"
      PublishPackageVersion = "codeartifact:PublishPackageVersion"
      PutDomainPermissionsPolicy = "codeartifact:PutDomainPermissionsPolicy"
      PutPackageMetadata = "codeartifact:PutPackageMetadata"
      PutPackageOriginConfiguration = "codeartifact:PutPackageOriginConfiguration"
      PutRepositoryPermissionsPolicy = "codeartifact:PutRepositoryPermissionsPolicy"
      ReadFromRepository = "codeartifact:ReadFromRepository"
      TagResource = "codeartifact:TagResource"
      UntagResource = "codeartifact:UntagResource"
      UpdatePackageGroup = "codeartifact:UpdatePackageGroup"
      UpdatePackageGroupOriginConfiguration = "codeartifact:UpdatePackageGroupOriginConfiguration"
      UpdatePackageVersionsStatus = "codeartifact:UpdatePackageVersionsStatus"
      UpdateRepository = "codeartifact:UpdateRepository"
    }
    codebuild = {
      AllActions = "codebuild:*"
      BatchDeleteBuilds = "codebuild:BatchDeleteBuilds"
      BatchGetBuildBatches = "codebuild:BatchGetBuildBatches"
      BatchGetBuilds = "codebuild:BatchGetBuilds"
      BatchGetFleets = "codebuild:BatchGetFleets"
      BatchGetProjects = "codebuild:BatchGetProjects"
      BatchGetReportGroups = "codebuild:BatchGetReportGroups"
      BatchGetReports = "codebuild:BatchGetReports"
      BatchPutCodeCoverages = "codebuild:BatchPutCodeCoverages"
      BatchPutTestCases = "codebuild:BatchPutTestCases"
      CreateFleet = "codebuild:CreateFleet"
      CreateProject = "codebuild:CreateProject"
      CreateReport = "codebuild:CreateReport"
      CreateReportGroup = "codebuild:CreateReportGroup"
      CreateWebhook = "codebuild:CreateWebhook"
      DeleteBuildBatch = "codebuild:DeleteBuildBatch"
      DeleteFleet = "codebuild:DeleteFleet"
      DeleteOAuthToken = "codebuild:DeleteOAuthToken"
      DeleteProject = "codebuild:DeleteProject"
      DeleteReport = "codebuild:DeleteReport"
      DeleteReportGroup = "codebuild:DeleteReportGroup"
      DeleteResourcePolicy = "codebuild:DeleteResourcePolicy"
      DeleteSourceCredentials = "codebuild:DeleteSourceCredentials"
      DeleteWebhook = "codebuild:DeleteWebhook"
      DescribeCodeCoverages = "codebuild:DescribeCodeCoverages"
      DescribeTestCases = "codebuild:DescribeTestCases"
      GetReportGroupTrend = "codebuild:GetReportGroupTrend"
      GetResourcePolicy = "codebuild:GetResourcePolicy"
      ImportSourceCredentials = "codebuild:ImportSourceCredentials"
      InvalidateProjectCache = "codebuild:InvalidateProjectCache"
      ListBuildBatches = "codebuild:ListBuildBatches"
      ListBuildBatchesForProject = "codebuild:ListBuildBatchesForProject"
      ListBuilds = "codebuild:ListBuilds"
      ListBuildsForProject = "codebuild:ListBuildsForProject"
      ListConnectedOAuthAccounts = "codebuild:ListConnectedOAuthAccounts"
      ListCuratedEnvironmentImages = "codebuild:ListCuratedEnvironmentImages"
      ListFleets = "codebuild:ListFleets"
      ListProjects = "codebuild:ListProjects"
      ListReportGroups = "codebuild:ListReportGroups"
      ListReports = "codebuild:ListReports"
      ListReportsForReportGroup = "codebuild:ListReportsForReportGroup"
      ListRepositories = "codebuild:ListRepositories"
      ListSharedProjects = "codebuild:ListSharedProjects"
      ListSharedReportGroups = "codebuild:ListSharedReportGroups"
      ListSourceCredentials = "codebuild:ListSourceCredentials"
      PersistOAuthToken = "codebuild:PersistOAuthToken"
      PutResourcePolicy = "codebuild:PutResourcePolicy"
      RetryBuild = "codebuild:RetryBuild"
      RetryBuildBatch = "codebuild:RetryBuildBatch"
      StartBuild = "codebuild:StartBuild"
      StartBuildBatch = "codebuild:StartBuildBatch"
      StopBuild = "codebuild:StopBuild"
      StopBuildBatch = "codebuild:StopBuildBatch"
      UpdateFleet = "codebuild:UpdateFleet"
      UpdateProject = "codebuild:UpdateProject"
      UpdateProjectVisibility = "codebuild:UpdateProjectVisibility"
      UpdateReport = "codebuild:UpdateReport"
      UpdateReportGroup = "codebuild:UpdateReportGroup"
      UpdateWebhook = "codebuild:UpdateWebhook"
    }
    codecatalyst = {
      AllActions = "codecatalyst:*"
      AcceptConnection = "codecatalyst:AcceptConnection"
      AssociateIamRoleToConnection = "codecatalyst:AssociateIamRoleToConnection"
      AssociateIdentityCenterApplicationToSpace = "codecatalyst:AssociateIdentityCenterApplicationToSpace"
      AssociateIdentityToIdentityCenterApplication = "codecatalyst:AssociateIdentityToIdentityCenterApplication"
      BatchAssociateIdentitiesToIdentityCenterApplication = "codecatalyst:BatchAssociateIdentitiesToIdentityCenterApplication"
      BatchDisassociateIdentitiesFromIdentityCenterApplication = "codecatalyst:BatchDisassociateIdentitiesFromIdentityCenterApplication"
      CreateIdentityCenterApplication = "codecatalyst:CreateIdentityCenterApplication"
      CreateSpace = "codecatalyst:CreateSpace"
      CreateSpaceAdminRoleAssignment = "codecatalyst:CreateSpaceAdminRoleAssignment"
      DeleteConnection = "codecatalyst:DeleteConnection"
      DeleteIdentityCenterApplication = "codecatalyst:DeleteIdentityCenterApplication"
      DisassociateIamRoleFromConnection = "codecatalyst:DisassociateIamRoleFromConnection"
      DisassociateIdentityCenterApplicationFromSpace = "codecatalyst:DisassociateIdentityCenterApplicationFromSpace"
      DisassociateIdentityFromIdentityCenterApplication = "codecatalyst:DisassociateIdentityFromIdentityCenterApplication"
      GetBillingAuthorization = "codecatalyst:GetBillingAuthorization"
      GetConnection = "codecatalyst:GetConnection"
      GetIdentityCenterApplication = "codecatalyst:GetIdentityCenterApplication"
      GetPendingConnection = "codecatalyst:GetPendingConnection"
      ListConnections = "codecatalyst:ListConnections"
      ListIamRolesForConnection = "codecatalyst:ListIamRolesForConnection"
      ListIdentityCenterApplications = "codecatalyst:ListIdentityCenterApplications"
      ListIdentityCenterApplicationsForSpace = "codecatalyst:ListIdentityCenterApplicationsForSpace"
      ListSpacesForIdentityCenterApplication = "codecatalyst:ListSpacesForIdentityCenterApplication"
      ListTagsForResource = "codecatalyst:ListTagsForResource"
      PutBillingAuthorization = "codecatalyst:PutBillingAuthorization"
      RejectConnection = "codecatalyst:RejectConnection"
      SynchronizeIdentityCenterApplication = "codecatalyst:SynchronizeIdentityCenterApplication"
      TagResource = "codecatalyst:TagResource"
      UntagResource = "codecatalyst:UntagResource"
      UpdateIdentityCenterApplication = "codecatalyst:UpdateIdentityCenterApplication"
    }
    codecommit = {
      AllActions = "codecommit:*"
      AssociateApprovalRuleTemplateWithRepository = "codecommit:AssociateApprovalRuleTemplateWithRepository"
      BatchAssociateApprovalRuleTemplateWithRepositories = "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories"
      BatchDescribeMergeConflicts = "codecommit:BatchDescribeMergeConflicts"
      BatchDisassociateApprovalRuleTemplateFromRepositories = "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories"
      BatchGetCommits = "codecommit:BatchGetCommits"
      BatchGetPullRequests = "codecommit:BatchGetPullRequests"
      BatchGetRepositories = "codecommit:BatchGetRepositories"
      CancelUploadArchive = "codecommit:CancelUploadArchive"
      CreateApprovalRuleTemplate = "codecommit:CreateApprovalRuleTemplate"
      CreateBranch = "codecommit:CreateBranch"
      CreateCommit = "codecommit:CreateCommit"
      CreatePullRequest = "codecommit:CreatePullRequest"
      CreatePullRequestApprovalRule = "codecommit:CreatePullRequestApprovalRule"
      CreateRepository = "codecommit:CreateRepository"
      CreateUnreferencedMergeCommit = "codecommit:CreateUnreferencedMergeCommit"
      DeleteApprovalRuleTemplate = "codecommit:DeleteApprovalRuleTemplate"
      DeleteBranch = "codecommit:DeleteBranch"
      DeleteCommentContent = "codecommit:DeleteCommentContent"
      DeleteFile = "codecommit:DeleteFile"
      DeletePullRequestApprovalRule = "codecommit:DeletePullRequestApprovalRule"
      DeleteRepository = "codecommit:DeleteRepository"
      DescribeMergeConflicts = "codecommit:DescribeMergeConflicts"
      DescribePullRequestEvents = "codecommit:DescribePullRequestEvents"
      DisassociateApprovalRuleTemplateFromRepository = "codecommit:DisassociateApprovalRuleTemplateFromRepository"
      EvaluatePullRequestApprovalRules = "codecommit:EvaluatePullRequestApprovalRules"
      GetApprovalRuleTemplate = "codecommit:GetApprovalRuleTemplate"
      GetBlob = "codecommit:GetBlob"
      GetBranch = "codecommit:GetBranch"
      GetComment = "codecommit:GetComment"
      GetCommentReactions = "codecommit:GetCommentReactions"
      GetCommentsForComparedCommit = "codecommit:GetCommentsForComparedCommit"
      GetCommentsForPullRequest = "codecommit:GetCommentsForPullRequest"
      GetCommit = "codecommit:GetCommit"
      GetCommitHistory = "codecommit:GetCommitHistory"
      GetCommitsFromMergeBase = "codecommit:GetCommitsFromMergeBase"
      GetDifferences = "codecommit:GetDifferences"
      GetFile = "codecommit:GetFile"
      GetFolder = "codecommit:GetFolder"
      GetMergeCommit = "codecommit:GetMergeCommit"
      GetMergeConflicts = "codecommit:GetMergeConflicts"
      GetMergeOptions = "codecommit:GetMergeOptions"
      GetObjectIdentifier = "codecommit:GetObjectIdentifier"
      GetPullRequest = "codecommit:GetPullRequest"
      GetPullRequestApprovalStates = "codecommit:GetPullRequestApprovalStates"
      GetPullRequestOverrideState = "codecommit:GetPullRequestOverrideState"
      GetReferences = "codecommit:GetReferences"
      GetRepository = "codecommit:GetRepository"
      GetRepositoryTriggers = "codecommit:GetRepositoryTriggers"
      GetTree = "codecommit:GetTree"
      GetUploadArchiveStatus = "codecommit:GetUploadArchiveStatus"
      GitPull = "codecommit:GitPull"
      GitPush = "codecommit:GitPush"
      ListApprovalRuleTemplates = "codecommit:ListApprovalRuleTemplates"
      ListAssociatedApprovalRuleTemplatesForRepository = "codecommit:ListAssociatedApprovalRuleTemplatesForRepository"
      ListBranches = "codecommit:ListBranches"
      ListFileCommitHistory = "codecommit:ListFileCommitHistory"
      ListPullRequests = "codecommit:ListPullRequests"
      ListRepositories = "codecommit:ListRepositories"
      ListRepositoriesForApprovalRuleTemplate = "codecommit:ListRepositoriesForApprovalRuleTemplate"
      ListTagsForResource = "codecommit:ListTagsForResource"
      MergeBranchesByFastForward = "codecommit:MergeBranchesByFastForward"
      MergeBranchesBySquash = "codecommit:MergeBranchesBySquash"
      MergeBranchesByThreeWay = "codecommit:MergeBranchesByThreeWay"
      MergePullRequestByFastForward = "codecommit:MergePullRequestByFastForward"
      MergePullRequestBySquash = "codecommit:MergePullRequestBySquash"
      MergePullRequestByThreeWay = "codecommit:MergePullRequestByThreeWay"
      OverridePullRequestApprovalRules = "codecommit:OverridePullRequestApprovalRules"
      PostCommentForComparedCommit = "codecommit:PostCommentForComparedCommit"
      PostCommentForPullRequest = "codecommit:PostCommentForPullRequest"
      PostCommentReply = "codecommit:PostCommentReply"
      PutCommentReaction = "codecommit:PutCommentReaction"
      PutFile = "codecommit:PutFile"
      PutRepositoryTriggers = "codecommit:PutRepositoryTriggers"
      TagResource = "codecommit:TagResource"
      TestRepositoryTriggers = "codecommit:TestRepositoryTriggers"
      UntagResource = "codecommit:UntagResource"
      UpdateApprovalRuleTemplateContent = "codecommit:UpdateApprovalRuleTemplateContent"
      UpdateApprovalRuleTemplateDescription = "codecommit:UpdateApprovalRuleTemplateDescription"
      UpdateApprovalRuleTemplateName = "codecommit:UpdateApprovalRuleTemplateName"
      UpdateComment = "codecommit:UpdateComment"
      UpdateDefaultBranch = "codecommit:UpdateDefaultBranch"
      UpdatePullRequestApprovalRuleContent = "codecommit:UpdatePullRequestApprovalRuleContent"
      UpdatePullRequestApprovalState = "codecommit:UpdatePullRequestApprovalState"
      UpdatePullRequestDescription = "codecommit:UpdatePullRequestDescription"
      UpdatePullRequestStatus = "codecommit:UpdatePullRequestStatus"
      UpdatePullRequestTitle = "codecommit:UpdatePullRequestTitle"
      UpdateRepositoryDescription = "codecommit:UpdateRepositoryDescription"
      UpdateRepositoryEncryptionKey = "codecommit:UpdateRepositoryEncryptionKey"
      UpdateRepositoryName = "codecommit:UpdateRepositoryName"
      UploadArchive = "codecommit:UploadArchive"
    }
    codeconnections = {
      AllActions = "codeconnections:*"
      CreateConnection = "codeconnections:CreateConnection"
      CreateHost = "codeconnections:CreateHost"
      CreateRepositoryLink = "codeconnections:CreateRepositoryLink"
      CreateSyncConfiguration = "codeconnections:CreateSyncConfiguration"
      DeleteConnection = "codeconnections:DeleteConnection"
      DeleteHost = "codeconnections:DeleteHost"
      DeleteRepositoryLink = "codeconnections:DeleteRepositoryLink"
      DeleteSyncConfiguration = "codeconnections:DeleteSyncConfiguration"
      GetConnection = "codeconnections:GetConnection"
      GetHost = "codeconnections:GetHost"
      GetIndividualAccessToken = "codeconnections:GetIndividualAccessToken"
      GetInstallationUrl = "codeconnections:GetInstallationUrl"
      GetRepositoryLink = "codeconnections:GetRepositoryLink"
      GetRepositorySyncStatus = "codeconnections:GetRepositorySyncStatus"
      GetResourceSyncStatus = "codeconnections:GetResourceSyncStatus"
      GetSyncBlockerSummary = "codeconnections:GetSyncBlockerSummary"
      GetSyncConfiguration = "codeconnections:GetSyncConfiguration"
      ListConnections = "codeconnections:ListConnections"
      ListHosts = "codeconnections:ListHosts"
      ListInstallationTargets = "codeconnections:ListInstallationTargets"
      ListRepositoryLinks = "codeconnections:ListRepositoryLinks"
      ListRepositorySyncDefinitions = "codeconnections:ListRepositorySyncDefinitions"
      ListSyncConfigurations = "codeconnections:ListSyncConfigurations"
      ListTagsForResource = "codeconnections:ListTagsForResource"
      PassConnection = "codeconnections:PassConnection"
      PassRepository = "codeconnections:PassRepository"
      RegisterAppCode = "codeconnections:RegisterAppCode"
      StartAppRegistrationHandshake = "codeconnections:StartAppRegistrationHandshake"
      StartOAuthHandshake = "codeconnections:StartOAuthHandshake"
      TagResource = "codeconnections:TagResource"
      UntagResource = "codeconnections:UntagResource"
      UpdateConnectionInstallation = "codeconnections:UpdateConnectionInstallation"
      UpdateHost = "codeconnections:UpdateHost"
      UpdateRepositoryLink = "codeconnections:UpdateRepositoryLink"
      UpdateSyncBlocker = "codeconnections:UpdateSyncBlocker"
      UpdateSyncConfiguration = "codeconnections:UpdateSyncConfiguration"
      UseConnection = "codeconnections:UseConnection"
    }
    codedeploy-commands-secure = {
      AllActions = "codedeploy-commands-secure:*"
      GetDeploymentSpecification = "codedeploy-commands-secure:GetDeploymentSpecification"
      PollHostCommand = "codedeploy-commands-secure:PollHostCommand"
      PutHostCommandAcknowledgement = "codedeploy-commands-secure:PutHostCommandAcknowledgement"
      PutHostCommandComplete = "codedeploy-commands-secure:PutHostCommandComplete"
    }
    codedeploy = {
      AllActions = "codedeploy:*"
      AddTagsToOnPremisesInstances = "codedeploy:AddTagsToOnPremisesInstances"
      BatchGetApplicationRevisions = "codedeploy:BatchGetApplicationRevisions"
      BatchGetApplications = "codedeploy:BatchGetApplications"
      BatchGetDeploymentGroups = "codedeploy:BatchGetDeploymentGroups"
      BatchGetDeploymentInstances = "codedeploy:BatchGetDeploymentInstances"
      BatchGetDeploymentTargets = "codedeploy:BatchGetDeploymentTargets"
      BatchGetDeployments = "codedeploy:BatchGetDeployments"
      BatchGetOnPremisesInstances = "codedeploy:BatchGetOnPremisesInstances"
      ContinueDeployment = "codedeploy:ContinueDeployment"
      CreateApplication = "codedeploy:CreateApplication"
      CreateCloudFormationDeployment = "codedeploy:CreateCloudFormationDeployment"
      CreateDeployment = "codedeploy:CreateDeployment"
      CreateDeploymentConfig = "codedeploy:CreateDeploymentConfig"
      CreateDeploymentGroup = "codedeploy:CreateDeploymentGroup"
      DeleteApplication = "codedeploy:DeleteApplication"
      DeleteDeploymentConfig = "codedeploy:DeleteDeploymentConfig"
      DeleteDeploymentGroup = "codedeploy:DeleteDeploymentGroup"
      DeleteGitHubAccountToken = "codedeploy:DeleteGitHubAccountToken"
      DeleteResourcesByExternalId = "codedeploy:DeleteResourcesByExternalId"
      DeregisterOnPremisesInstance = "codedeploy:DeregisterOnPremisesInstance"
      GetApplication = "codedeploy:GetApplication"
      GetApplicationRevision = "codedeploy:GetApplicationRevision"
      GetDeployment = "codedeploy:GetDeployment"
      GetDeploymentConfig = "codedeploy:GetDeploymentConfig"
      GetDeploymentGroup = "codedeploy:GetDeploymentGroup"
      GetDeploymentInstance = "codedeploy:GetDeploymentInstance"
      GetDeploymentTarget = "codedeploy:GetDeploymentTarget"
      GetOnPremisesInstance = "codedeploy:GetOnPremisesInstance"
      ListApplicationRevisions = "codedeploy:ListApplicationRevisions"
      ListApplications = "codedeploy:ListApplications"
      ListDeploymentConfigs = "codedeploy:ListDeploymentConfigs"
      ListDeploymentGroups = "codedeploy:ListDeploymentGroups"
      ListDeploymentInstances = "codedeploy:ListDeploymentInstances"
      ListDeploymentTargets = "codedeploy:ListDeploymentTargets"
      ListDeployments = "codedeploy:ListDeployments"
      ListGitHubAccountTokenNames = "codedeploy:ListGitHubAccountTokenNames"
      ListOnPremisesInstances = "codedeploy:ListOnPremisesInstances"
      ListTagsForResource = "codedeploy:ListTagsForResource"
      PutLifecycleEventHookExecutionStatus = "codedeploy:PutLifecycleEventHookExecutionStatus"
      RegisterApplicationRevision = "codedeploy:RegisterApplicationRevision"
      RegisterOnPremisesInstance = "codedeploy:RegisterOnPremisesInstance"
      RemoveTagsFromOnPremisesInstances = "codedeploy:RemoveTagsFromOnPremisesInstances"
      SkipWaitTimeForInstanceTermination = "codedeploy:SkipWaitTimeForInstanceTermination"
      StopDeployment = "codedeploy:StopDeployment"
      TagResource = "codedeploy:TagResource"
      UntagResource = "codedeploy:UntagResource"
      UpdateApplication = "codedeploy:UpdateApplication"
      UpdateDeploymentGroup = "codedeploy:UpdateDeploymentGroup"
    }
    codeguru-profiler = {
      AllActions = "codeguru-profiler:*"
      AddNotificationChannels = "codeguru-profiler:AddNotificationChannels"
      BatchGetFrameMetricData = "codeguru-profiler:BatchGetFrameMetricData"
      ConfigureAgent = "codeguru-profiler:ConfigureAgent"
      CreateProfilingGroup = "codeguru-profiler:CreateProfilingGroup"
      DeleteProfilingGroup = "codeguru-profiler:DeleteProfilingGroup"
      DescribeProfilingGroup = "codeguru-profiler:DescribeProfilingGroup"
      GetFindingsReportAccountSummary = "codeguru-profiler:GetFindingsReportAccountSummary"
      GetNotificationConfiguration = "codeguru-profiler:GetNotificationConfiguration"
      GetPolicy = "codeguru-profiler:GetPolicy"
      GetProfile = "codeguru-profiler:GetProfile"
      GetRecommendations = "codeguru-profiler:GetRecommendations"
      ListFindingsReports = "codeguru-profiler:ListFindingsReports"
      ListProfileTimes = "codeguru-profiler:ListProfileTimes"
      ListProfilingGroups = "codeguru-profiler:ListProfilingGroups"
      ListTagsForResource = "codeguru-profiler:ListTagsForResource"
      PostAgentProfile = "codeguru-profiler:PostAgentProfile"
      PutPermission = "codeguru-profiler:PutPermission"
      RemoveNotificationChannel = "codeguru-profiler:RemoveNotificationChannel"
      RemovePermission = "codeguru-profiler:RemovePermission"
      SubmitFeedback = "codeguru-profiler:SubmitFeedback"
      TagResource = "codeguru-profiler:TagResource"
      UntagResource = "codeguru-profiler:UntagResource"
      UpdateProfilingGroup = "codeguru-profiler:UpdateProfilingGroup"
    }
    codeguru-reviewer = {
      AllActions = "codeguru-reviewer:*"
      AssociateRepository = "codeguru-reviewer:AssociateRepository"
      CreateCodeReview = "codeguru-reviewer:CreateCodeReview"
      CreateConnectionToken = "codeguru-reviewer:CreateConnectionToken"
      DescribeCodeReview = "codeguru-reviewer:DescribeCodeReview"
      DescribeRecommendationFeedback = "codeguru-reviewer:DescribeRecommendationFeedback"
      DescribeRepositoryAssociation = "codeguru-reviewer:DescribeRepositoryAssociation"
      DisassociateRepository = "codeguru-reviewer:DisassociateRepository"
      GetMetricsData = "codeguru-reviewer:GetMetricsData"
      ListCodeReviews = "codeguru-reviewer:ListCodeReviews"
      ListRecommendationFeedback = "codeguru-reviewer:ListRecommendationFeedback"
      ListRecommendations = "codeguru-reviewer:ListRecommendations"
      ListRepositoryAssociations = "codeguru-reviewer:ListRepositoryAssociations"
      ListTagsForResource = "codeguru-reviewer:ListTagsForResource"
      ListThirdPartyRepositories = "codeguru-reviewer:ListThirdPartyRepositories"
      PutRecommendationFeedback = "codeguru-reviewer:PutRecommendationFeedback"
      TagResource = "codeguru-reviewer:TagResource"
      UnTagResource = "codeguru-reviewer:UnTagResource"
    }
    codeguru-security = {
      AllActions = "codeguru-security:*"
      BatchGetFindings = "codeguru-security:BatchGetFindings"
      CreateScan = "codeguru-security:CreateScan"
      CreateUploadUrl = "codeguru-security:CreateUploadUrl"
      DeleteScansByCategory = "codeguru-security:DeleteScansByCategory"
      GetAccountConfiguration = "codeguru-security:GetAccountConfiguration"
      GetFindings = "codeguru-security:GetFindings"
      GetMetricsSummary = "codeguru-security:GetMetricsSummary"
      GetScan = "codeguru-security:GetScan"
      ListFindings = "codeguru-security:ListFindings"
      ListFindingsMetrics = "codeguru-security:ListFindingsMetrics"
      ListScans = "codeguru-security:ListScans"
      ListTagsForResource = "codeguru-security:ListTagsForResource"
      TagResource = "codeguru-security:TagResource"
      UntagResource = "codeguru-security:UntagResource"
      UpdateAccountConfiguration = "codeguru-security:UpdateAccountConfiguration"
    }
    codeguru = {
      AllActions = "codeguru:*"
      GetCodeGuruFreeTrialSummary = "codeguru:GetCodeGuruFreeTrialSummary"
    }
    codepipeline = {
      AllActions = "codepipeline:*"
      AcknowledgeJob = "codepipeline:AcknowledgeJob"
      AcknowledgeThirdPartyJob = "codepipeline:AcknowledgeThirdPartyJob"
      CreateCustomActionType = "codepipeline:CreateCustomActionType"
      CreatePipeline = "codepipeline:CreatePipeline"
      DeleteCustomActionType = "codepipeline:DeleteCustomActionType"
      DeletePipeline = "codepipeline:DeletePipeline"
      DeleteWebhook = "codepipeline:DeleteWebhook"
      DeregisterWebhookWithThirdParty = "codepipeline:DeregisterWebhookWithThirdParty"
      DisableStageTransition = "codepipeline:DisableStageTransition"
      EnableStageTransition = "codepipeline:EnableStageTransition"
      GetActionType = "codepipeline:GetActionType"
      GetJobDetails = "codepipeline:GetJobDetails"
      GetPipeline = "codepipeline:GetPipeline"
      GetPipelineExecution = "codepipeline:GetPipelineExecution"
      GetPipelineState = "codepipeline:GetPipelineState"
      GetThirdPartyJobDetails = "codepipeline:GetThirdPartyJobDetails"
      ListActionExecutions = "codepipeline:ListActionExecutions"
      ListActionTypes = "codepipeline:ListActionTypes"
      ListPipelineExecutions = "codepipeline:ListPipelineExecutions"
      ListPipelines = "codepipeline:ListPipelines"
      ListTagsForResource = "codepipeline:ListTagsForResource"
      ListWebhooks = "codepipeline:ListWebhooks"
      PollForJobs = "codepipeline:PollForJobs"
      PollForThirdPartyJobs = "codepipeline:PollForThirdPartyJobs"
      PutActionRevision = "codepipeline:PutActionRevision"
      PutApprovalResult = "codepipeline:PutApprovalResult"
      PutJobFailureResult = "codepipeline:PutJobFailureResult"
      PutJobSuccessResult = "codepipeline:PutJobSuccessResult"
      PutThirdPartyJobFailureResult = "codepipeline:PutThirdPartyJobFailureResult"
      PutThirdPartyJobSuccessResult = "codepipeline:PutThirdPartyJobSuccessResult"
      PutWebhook = "codepipeline:PutWebhook"
      RegisterWebhookWithThirdParty = "codepipeline:RegisterWebhookWithThirdParty"
      RetryStageExecution = "codepipeline:RetryStageExecution"
      RollbackStage = "codepipeline:RollbackStage"
      StartPipelineExecution = "codepipeline:StartPipelineExecution"
      StopPipelineExecution = "codepipeline:StopPipelineExecution"
      TagResource = "codepipeline:TagResource"
      UntagResource = "codepipeline:UntagResource"
      UpdateActionType = "codepipeline:UpdateActionType"
      UpdatePipeline = "codepipeline:UpdatePipeline"
    }
    codestar-connections = {
      AllActions = "codestar-connections:*"
      CreateConnection = "codestar-connections:CreateConnection"
      CreateHost = "codestar-connections:CreateHost"
      CreateRepositoryLink = "codestar-connections:CreateRepositoryLink"
      CreateSyncConfiguration = "codestar-connections:CreateSyncConfiguration"
      DeleteConnection = "codestar-connections:DeleteConnection"
      DeleteHost = "codestar-connections:DeleteHost"
      DeleteRepositoryLink = "codestar-connections:DeleteRepositoryLink"
      DeleteSyncConfiguration = "codestar-connections:DeleteSyncConfiguration"
      GetConnection = "codestar-connections:GetConnection"
      GetHost = "codestar-connections:GetHost"
      GetIndividualAccessToken = "codestar-connections:GetIndividualAccessToken"
      GetInstallationUrl = "codestar-connections:GetInstallationUrl"
      GetRepositoryLink = "codestar-connections:GetRepositoryLink"
      GetRepositorySyncStatus = "codestar-connections:GetRepositorySyncStatus"
      GetResourceSyncStatus = "codestar-connections:GetResourceSyncStatus"
      GetSyncBlockerSummary = "codestar-connections:GetSyncBlockerSummary"
      GetSyncConfiguration = "codestar-connections:GetSyncConfiguration"
      ListConnections = "codestar-connections:ListConnections"
      ListHosts = "codestar-connections:ListHosts"
      ListInstallationTargets = "codestar-connections:ListInstallationTargets"
      ListRepositoryLinks = "codestar-connections:ListRepositoryLinks"
      ListRepositorySyncDefinitions = "codestar-connections:ListRepositorySyncDefinitions"
      ListSyncConfigurations = "codestar-connections:ListSyncConfigurations"
      ListTagsForResource = "codestar-connections:ListTagsForResource"
      PassConnection = "codestar-connections:PassConnection"
      PassRepository = "codestar-connections:PassRepository"
      RegisterAppCode = "codestar-connections:RegisterAppCode"
      StartAppRegistrationHandshake = "codestar-connections:StartAppRegistrationHandshake"
      StartOAuthHandshake = "codestar-connections:StartOAuthHandshake"
      TagResource = "codestar-connections:TagResource"
      UntagResource = "codestar-connections:UntagResource"
      UpdateConnectionInstallation = "codestar-connections:UpdateConnectionInstallation"
      UpdateHost = "codestar-connections:UpdateHost"
      UpdateRepositoryLink = "codestar-connections:UpdateRepositoryLink"
      UpdateSyncBlocker = "codestar-connections:UpdateSyncBlocker"
      UpdateSyncConfiguration = "codestar-connections:UpdateSyncConfiguration"
      UseConnection = "codestar-connections:UseConnection"
    }
    codestar-notifications = {
      AllActions = "codestar-notifications:*"
      CreateNotificationRule = "codestar-notifications:CreateNotificationRule"
      DeleteNotificationRule = "codestar-notifications:DeleteNotificationRule"
      DeleteTarget = "codestar-notifications:DeleteTarget"
      DescribeNotificationRule = "codestar-notifications:DescribeNotificationRule"
      ListEventTypes = "codestar-notifications:ListEventTypes"
      ListNotificationRules = "codestar-notifications:ListNotificationRules"
      ListTagsForResource = "codestar-notifications:ListTagsForResource"
      ListTargets = "codestar-notifications:ListTargets"
      Subscribe = "codestar-notifications:Subscribe"
      TagResource = "codestar-notifications:TagResource"
      Unsubscribe = "codestar-notifications:Unsubscribe"
      UntagResource = "codestar-notifications:UntagResource"
      UpdateNotificationRule = "codestar-notifications:UpdateNotificationRule"
    }
    codestar = {
      AllActions = "codestar:*"
      AssociateTeamMember = "codestar:AssociateTeamMember"
      CreateProject = "codestar:CreateProject"
      CreateUserProfile = "codestar:CreateUserProfile"
      DeleteExtendedAccess = "codestar:DeleteExtendedAccess"
      DeleteProject = "codestar:DeleteProject"
      DeleteUserProfile = "codestar:DeleteUserProfile"
      DescribeProject = "codestar:DescribeProject"
      DescribeUserProfile = "codestar:DescribeUserProfile"
      DisassociateTeamMember = "codestar:DisassociateTeamMember"
      GetExtendedAccess = "codestar:GetExtendedAccess"
      ListProjects = "codestar:ListProjects"
      ListResources = "codestar:ListResources"
      ListTagsForProject = "codestar:ListTagsForProject"
      ListTeamMembers = "codestar:ListTeamMembers"
      ListUserProfiles = "codestar:ListUserProfiles"
      PutExtendedAccess = "codestar:PutExtendedAccess"
      TagProject = "codestar:TagProject"
      UntagProject = "codestar:UntagProject"
      UpdateProject = "codestar:UpdateProject"
      UpdateTeamMember = "codestar:UpdateTeamMember"
      UpdateUserProfile = "codestar:UpdateUserProfile"
      VerifyServiceRole = "codestar:VerifyServiceRole"
    }
    codewhisperer = {
      AllActions = "codewhisperer:*"
      AllowVendedLogDeliveryForResource = "codewhisperer:AllowVendedLogDeliveryForResource"
      AssociateCustomizationPermission = "codewhisperer:AssociateCustomizationPermission"
      CreateCustomization = "codewhisperer:CreateCustomization"
      CreateProfile = "codewhisperer:CreateProfile"
      DeleteCustomization = "codewhisperer:DeleteCustomization"
      DeleteProfile = "codewhisperer:DeleteProfile"
      DisassociateCustomizationPermission = "codewhisperer:DisassociateCustomizationPermission"
      GenerateRecommendations = "codewhisperer:GenerateRecommendations"
      GetCustomization = "codewhisperer:GetCustomization"
      ListCustomizationPermissions = "codewhisperer:ListCustomizationPermissions"
      ListCustomizationVersions = "codewhisperer:ListCustomizationVersions"
      ListCustomizations = "codewhisperer:ListCustomizations"
      ListProfiles = "codewhisperer:ListProfiles"
      ListTagsForResource = "codewhisperer:ListTagsForResource"
      TagResource = "codewhisperer:TagResource"
      UntagResource = "codewhisperer:UntagResource"
      UpdateCustomization = "codewhisperer:UpdateCustomization"
      UpdateProfile = "codewhisperer:UpdateProfile"
    }
    cognito-identity = {
      AllActions = "cognito-identity:*"
      CreateIdentityPool = "cognito-identity:CreateIdentityPool"
      DeleteIdentities = "cognito-identity:DeleteIdentities"
      DeleteIdentityPool = "cognito-identity:DeleteIdentityPool"
      DescribeIdentity = "cognito-identity:DescribeIdentity"
      DescribeIdentityPool = "cognito-identity:DescribeIdentityPool"
      GetCredentialsForIdentity = "cognito-identity:GetCredentialsForIdentity"
      GetId = "cognito-identity:GetId"
      GetIdentityPoolAnalytics = "cognito-identity:GetIdentityPoolAnalytics"
      GetIdentityPoolDailyAnalytics = "cognito-identity:GetIdentityPoolDailyAnalytics"
      GetIdentityPoolRoles = "cognito-identity:GetIdentityPoolRoles"
      GetIdentityProviderDailyAnalytics = "cognito-identity:GetIdentityProviderDailyAnalytics"
      GetOpenIdToken = "cognito-identity:GetOpenIdToken"
      GetOpenIdTokenForDeveloperIdentity = "cognito-identity:GetOpenIdTokenForDeveloperIdentity"
      GetPrincipalTagAttributeMap = "cognito-identity:GetPrincipalTagAttributeMap"
      ListIdentities = "cognito-identity:ListIdentities"
      ListIdentityPools = "cognito-identity:ListIdentityPools"
      ListTagsForResource = "cognito-identity:ListTagsForResource"
      LookupDeveloperIdentity = "cognito-identity:LookupDeveloperIdentity"
      MergeDeveloperIdentities = "cognito-identity:MergeDeveloperIdentities"
      SetIdentityPoolRoles = "cognito-identity:SetIdentityPoolRoles"
      SetPrincipalTagAttributeMap = "cognito-identity:SetPrincipalTagAttributeMap"
      TagResource = "cognito-identity:TagResource"
      UnlinkDeveloperIdentity = "cognito-identity:UnlinkDeveloperIdentity"
      UnlinkIdentity = "cognito-identity:UnlinkIdentity"
      UntagResource = "cognito-identity:UntagResource"
      UpdateIdentityPool = "cognito-identity:UpdateIdentityPool"
    }
    cognito-idp = {
      AllActions = "cognito-idp:*"
      AddCustomAttributes = "cognito-idp:AddCustomAttributes"
      AdminAddUserToGroup = "cognito-idp:AdminAddUserToGroup"
      AdminConfirmSignUp = "cognito-idp:AdminConfirmSignUp"
      AdminCreateUser = "cognito-idp:AdminCreateUser"
      AdminDeleteUser = "cognito-idp:AdminDeleteUser"
      AdminDeleteUserAttributes = "cognito-idp:AdminDeleteUserAttributes"
      AdminDisableProviderForUser = "cognito-idp:AdminDisableProviderForUser"
      AdminDisableUser = "cognito-idp:AdminDisableUser"
      AdminEnableUser = "cognito-idp:AdminEnableUser"
      AdminForgetDevice = "cognito-idp:AdminForgetDevice"
      AdminGetDevice = "cognito-idp:AdminGetDevice"
      AdminGetUser = "cognito-idp:AdminGetUser"
      AdminInitiateAuth = "cognito-idp:AdminInitiateAuth"
      AdminLinkProviderForUser = "cognito-idp:AdminLinkProviderForUser"
      AdminListDevices = "cognito-idp:AdminListDevices"
      AdminListGroupsForUser = "cognito-idp:AdminListGroupsForUser"
      AdminListUserAuthEvents = "cognito-idp:AdminListUserAuthEvents"
      AdminRemoveUserFromGroup = "cognito-idp:AdminRemoveUserFromGroup"
      AdminResetUserPassword = "cognito-idp:AdminResetUserPassword"
      AdminRespondToAuthChallenge = "cognito-idp:AdminRespondToAuthChallenge"
      AdminSetUserMFAPreference = "cognito-idp:AdminSetUserMFAPreference"
      AdminSetUserPassword = "cognito-idp:AdminSetUserPassword"
      AdminSetUserSettings = "cognito-idp:AdminSetUserSettings"
      AdminUpdateAuthEventFeedback = "cognito-idp:AdminUpdateAuthEventFeedback"
      AdminUpdateDeviceStatus = "cognito-idp:AdminUpdateDeviceStatus"
      AdminUpdateUserAttributes = "cognito-idp:AdminUpdateUserAttributes"
      AdminUserGlobalSignOut = "cognito-idp:AdminUserGlobalSignOut"
      AssociateSoftwareToken = "cognito-idp:AssociateSoftwareToken"
      AssociateWebACL = "cognito-idp:AssociateWebACL"
      ChangePassword = "cognito-idp:ChangePassword"
      ConfirmDevice = "cognito-idp:ConfirmDevice"
      ConfirmForgotPassword = "cognito-idp:ConfirmForgotPassword"
      ConfirmSignUp = "cognito-idp:ConfirmSignUp"
      CreateGroup = "cognito-idp:CreateGroup"
      CreateIdentityProvider = "cognito-idp:CreateIdentityProvider"
      CreateResourceServer = "cognito-idp:CreateResourceServer"
      CreateUserImportJob = "cognito-idp:CreateUserImportJob"
      CreateUserPool = "cognito-idp:CreateUserPool"
      CreateUserPoolClient = "cognito-idp:CreateUserPoolClient"
      CreateUserPoolDomain = "cognito-idp:CreateUserPoolDomain"
      DeleteGroup = "cognito-idp:DeleteGroup"
      DeleteIdentityProvider = "cognito-idp:DeleteIdentityProvider"
      DeleteResourceServer = "cognito-idp:DeleteResourceServer"
      DeleteUser = "cognito-idp:DeleteUser"
      DeleteUserAttributes = "cognito-idp:DeleteUserAttributes"
      DeleteUserPool = "cognito-idp:DeleteUserPool"
      DeleteUserPoolClient = "cognito-idp:DeleteUserPoolClient"
      DeleteUserPoolDomain = "cognito-idp:DeleteUserPoolDomain"
      DescribeIdentityProvider = "cognito-idp:DescribeIdentityProvider"
      DescribeResourceServer = "cognito-idp:DescribeResourceServer"
      DescribeRiskConfiguration = "cognito-idp:DescribeRiskConfiguration"
      DescribeUserImportJob = "cognito-idp:DescribeUserImportJob"
      DescribeUserPool = "cognito-idp:DescribeUserPool"
      DescribeUserPoolClient = "cognito-idp:DescribeUserPoolClient"
      DescribeUserPoolDomain = "cognito-idp:DescribeUserPoolDomain"
      DisassociateWebACL = "cognito-idp:DisassociateWebACL"
      ForgetDevice = "cognito-idp:ForgetDevice"
      ForgotPassword = "cognito-idp:ForgotPassword"
      GetCSVHeader = "cognito-idp:GetCSVHeader"
      GetDevice = "cognito-idp:GetDevice"
      GetGroup = "cognito-idp:GetGroup"
      GetIdentityProviderByIdentifier = "cognito-idp:GetIdentityProviderByIdentifier"
      GetLogDeliveryConfiguration = "cognito-idp:GetLogDeliveryConfiguration"
      GetSigningCertificate = "cognito-idp:GetSigningCertificate"
      GetUICustomization = "cognito-idp:GetUICustomization"
      GetUser = "cognito-idp:GetUser"
      GetUserAttributeVerificationCode = "cognito-idp:GetUserAttributeVerificationCode"
      GetUserPoolMfaConfig = "cognito-idp:GetUserPoolMfaConfig"
      GetWebACLForResource = "cognito-idp:GetWebACLForResource"
      GlobalSignOut = "cognito-idp:GlobalSignOut"
      InitiateAuth = "cognito-idp:InitiateAuth"
      ListDevices = "cognito-idp:ListDevices"
      ListGroups = "cognito-idp:ListGroups"
      ListIdentityProviders = "cognito-idp:ListIdentityProviders"
      ListResourceServers = "cognito-idp:ListResourceServers"
      ListResourcesForWebACL = "cognito-idp:ListResourcesForWebACL"
      ListTagsForResource = "cognito-idp:ListTagsForResource"
      ListUserImportJobs = "cognito-idp:ListUserImportJobs"
      ListUserPoolClients = "cognito-idp:ListUserPoolClients"
      ListUserPools = "cognito-idp:ListUserPools"
      ListUsers = "cognito-idp:ListUsers"
      ListUsersInGroup = "cognito-idp:ListUsersInGroup"
      ResendConfirmationCode = "cognito-idp:ResendConfirmationCode"
      RespondToAuthChallenge = "cognito-idp:RespondToAuthChallenge"
      RevokeToken = "cognito-idp:RevokeToken"
      SetLogDeliveryConfiguration = "cognito-idp:SetLogDeliveryConfiguration"
      SetRiskConfiguration = "cognito-idp:SetRiskConfiguration"
      SetUICustomization = "cognito-idp:SetUICustomization"
      SetUserMFAPreference = "cognito-idp:SetUserMFAPreference"
      SetUserPoolMfaConfig = "cognito-idp:SetUserPoolMfaConfig"
      SetUserSettings = "cognito-idp:SetUserSettings"
      SignUp = "cognito-idp:SignUp"
      StartUserImportJob = "cognito-idp:StartUserImportJob"
      StopUserImportJob = "cognito-idp:StopUserImportJob"
      TagResource = "cognito-idp:TagResource"
      UntagResource = "cognito-idp:UntagResource"
      UpdateAuthEventFeedback = "cognito-idp:UpdateAuthEventFeedback"
      UpdateDeviceStatus = "cognito-idp:UpdateDeviceStatus"
      UpdateGroup = "cognito-idp:UpdateGroup"
      UpdateIdentityProvider = "cognito-idp:UpdateIdentityProvider"
      UpdateResourceServer = "cognito-idp:UpdateResourceServer"
      UpdateUserAttributes = "cognito-idp:UpdateUserAttributes"
      UpdateUserPool = "cognito-idp:UpdateUserPool"
      UpdateUserPoolClient = "cognito-idp:UpdateUserPoolClient"
      UpdateUserPoolDomain = "cognito-idp:UpdateUserPoolDomain"
      VerifySoftwareToken = "cognito-idp:VerifySoftwareToken"
      VerifyUserAttribute = "cognito-idp:VerifyUserAttribute"
    }
    cognito-sync = {
      AllActions = "cognito-sync:*"
      BulkPublish = "cognito-sync:BulkPublish"
      DeleteDataset = "cognito-sync:DeleteDataset"
      DescribeDataset = "cognito-sync:DescribeDataset"
      DescribeIdentityPoolUsage = "cognito-sync:DescribeIdentityPoolUsage"
      DescribeIdentityUsage = "cognito-sync:DescribeIdentityUsage"
      GetBulkPublishDetails = "cognito-sync:GetBulkPublishDetails"
      GetCognitoEvents = "cognito-sync:GetCognitoEvents"
      GetIdentityPoolConfiguration = "cognito-sync:GetIdentityPoolConfiguration"
      ListDatasets = "cognito-sync:ListDatasets"
      ListIdentityPoolUsage = "cognito-sync:ListIdentityPoolUsage"
      ListRecords = "cognito-sync:ListRecords"
      QueryRecords = "cognito-sync:QueryRecords"
      RegisterDevice = "cognito-sync:RegisterDevice"
      SetCognitoEvents = "cognito-sync:SetCognitoEvents"
      SetDatasetConfiguration = "cognito-sync:SetDatasetConfiguration"
      SetIdentityPoolConfiguration = "cognito-sync:SetIdentityPoolConfiguration"
      SubscribeToDataset = "cognito-sync:SubscribeToDataset"
      UnsubscribeFromDataset = "cognito-sync:UnsubscribeFromDataset"
      UpdateRecords = "cognito-sync:UpdateRecords"
    }
    comprehend = {
      AllActions = "comprehend:*"
      BatchDetectDominantLanguage = "comprehend:BatchDetectDominantLanguage"
      BatchDetectEntities = "comprehend:BatchDetectEntities"
      BatchDetectKeyPhrases = "comprehend:BatchDetectKeyPhrases"
      BatchDetectSentiment = "comprehend:BatchDetectSentiment"
      BatchDetectSyntax = "comprehend:BatchDetectSyntax"
      BatchDetectTargetedSentiment = "comprehend:BatchDetectTargetedSentiment"
      ClassifyDocument = "comprehend:ClassifyDocument"
      ContainsPiiEntities = "comprehend:ContainsPiiEntities"
      CreateDataset = "comprehend:CreateDataset"
      CreateDocumentClassifier = "comprehend:CreateDocumentClassifier"
      CreateEndpoint = "comprehend:CreateEndpoint"
      CreateEntityRecognizer = "comprehend:CreateEntityRecognizer"
      CreateFlywheel = "comprehend:CreateFlywheel"
      DeleteDocumentClassifier = "comprehend:DeleteDocumentClassifier"
      DeleteEndpoint = "comprehend:DeleteEndpoint"
      DeleteEntityRecognizer = "comprehend:DeleteEntityRecognizer"
      DeleteFlywheel = "comprehend:DeleteFlywheel"
      DeleteResourcePolicy = "comprehend:DeleteResourcePolicy"
      DescribeDataset = "comprehend:DescribeDataset"
      DescribeDocumentClassificationJob = "comprehend:DescribeDocumentClassificationJob"
      DescribeDocumentClassifier = "comprehend:DescribeDocumentClassifier"
      DescribeDominantLanguageDetectionJob = "comprehend:DescribeDominantLanguageDetectionJob"
      DescribeEndpoint = "comprehend:DescribeEndpoint"
      DescribeEntitiesDetectionJob = "comprehend:DescribeEntitiesDetectionJob"
      DescribeEntityRecognizer = "comprehend:DescribeEntityRecognizer"
      DescribeEventsDetectionJob = "comprehend:DescribeEventsDetectionJob"
      DescribeFlywheel = "comprehend:DescribeFlywheel"
      DescribeFlywheelIteration = "comprehend:DescribeFlywheelIteration"
      DescribeKeyPhrasesDetectionJob = "comprehend:DescribeKeyPhrasesDetectionJob"
      DescribePiiEntitiesDetectionJob = "comprehend:DescribePiiEntitiesDetectionJob"
      DescribeResourcePolicy = "comprehend:DescribeResourcePolicy"
      DescribeSentimentDetectionJob = "comprehend:DescribeSentimentDetectionJob"
      DescribeTargetedSentimentDetectionJob = "comprehend:DescribeTargetedSentimentDetectionJob"
      DescribeTopicsDetectionJob = "comprehend:DescribeTopicsDetectionJob"
      DetectDominantLanguage = "comprehend:DetectDominantLanguage"
      DetectEntities = "comprehend:DetectEntities"
      DetectKeyPhrases = "comprehend:DetectKeyPhrases"
      DetectPiiEntities = "comprehend:DetectPiiEntities"
      DetectSentiment = "comprehend:DetectSentiment"
      DetectSyntax = "comprehend:DetectSyntax"
      DetectTargetedSentiment = "comprehend:DetectTargetedSentiment"
      DetectToxicContent = "comprehend:DetectToxicContent"
      ImportModel = "comprehend:ImportModel"
      ListDatasets = "comprehend:ListDatasets"
      ListDocumentClassificationJobs = "comprehend:ListDocumentClassificationJobs"
      ListDocumentClassifierSummaries = "comprehend:ListDocumentClassifierSummaries"
      ListDocumentClassifiers = "comprehend:ListDocumentClassifiers"
      ListDominantLanguageDetectionJobs = "comprehend:ListDominantLanguageDetectionJobs"
      ListEndpoints = "comprehend:ListEndpoints"
      ListEntitiesDetectionJobs = "comprehend:ListEntitiesDetectionJobs"
      ListEntityRecognizerSummaries = "comprehend:ListEntityRecognizerSummaries"
      ListEntityRecognizers = "comprehend:ListEntityRecognizers"
      ListEventsDetectionJobs = "comprehend:ListEventsDetectionJobs"
      ListFlywheelIterationHistory = "comprehend:ListFlywheelIterationHistory"
      ListFlywheels = "comprehend:ListFlywheels"
      ListKeyPhrasesDetectionJobs = "comprehend:ListKeyPhrasesDetectionJobs"
      ListPiiEntitiesDetectionJobs = "comprehend:ListPiiEntitiesDetectionJobs"
      ListSentimentDetectionJobs = "comprehend:ListSentimentDetectionJobs"
      ListTagsForResource = "comprehend:ListTagsForResource"
      ListTargetedSentimentDetectionJobs = "comprehend:ListTargetedSentimentDetectionJobs"
      ListTopicsDetectionJobs = "comprehend:ListTopicsDetectionJobs"
      PutResourcePolicy = "comprehend:PutResourcePolicy"
      StartDocumentClassificationJob = "comprehend:StartDocumentClassificationJob"
      StartDominantLanguageDetectionJob = "comprehend:StartDominantLanguageDetectionJob"
      StartEntitiesDetectionJob = "comprehend:StartEntitiesDetectionJob"
      StartEventsDetectionJob = "comprehend:StartEventsDetectionJob"
      StartFlywheelIteration = "comprehend:StartFlywheelIteration"
      StartKeyPhrasesDetectionJob = "comprehend:StartKeyPhrasesDetectionJob"
      StartPiiEntitiesDetectionJob = "comprehend:StartPiiEntitiesDetectionJob"
      StartSentimentDetectionJob = "comprehend:StartSentimentDetectionJob"
      StartTargetedSentimentDetectionJob = "comprehend:StartTargetedSentimentDetectionJob"
      StartTopicsDetectionJob = "comprehend:StartTopicsDetectionJob"
      StopDominantLanguageDetectionJob = "comprehend:StopDominantLanguageDetectionJob"
      StopEntitiesDetectionJob = "comprehend:StopEntitiesDetectionJob"
      StopEventsDetectionJob = "comprehend:StopEventsDetectionJob"
      StopKeyPhrasesDetectionJob = "comprehend:StopKeyPhrasesDetectionJob"
      StopPiiEntitiesDetectionJob = "comprehend:StopPiiEntitiesDetectionJob"
      StopSentimentDetectionJob = "comprehend:StopSentimentDetectionJob"
      StopTargetedSentimentDetectionJob = "comprehend:StopTargetedSentimentDetectionJob"
      StopTrainingDocumentClassifier = "comprehend:StopTrainingDocumentClassifier"
      StopTrainingEntityRecognizer = "comprehend:StopTrainingEntityRecognizer"
      TagResource = "comprehend:TagResource"
      UntagResource = "comprehend:UntagResource"
      UpdateEndpoint = "comprehend:UpdateEndpoint"
      UpdateFlywheel = "comprehend:UpdateFlywheel"
    }
    comprehendmedical = {
      AllActions = "comprehendmedical:*"
      DescribeEntitiesDetectionV2Job = "comprehendmedical:DescribeEntitiesDetectionV2Job"
      DescribeICD10CMInferenceJob = "comprehendmedical:DescribeICD10CMInferenceJob"
      DescribePHIDetectionJob = "comprehendmedical:DescribePHIDetectionJob"
      DescribeRxNormInferenceJob = "comprehendmedical:DescribeRxNormInferenceJob"
      DescribeSNOMEDCTInferenceJob = "comprehendmedical:DescribeSNOMEDCTInferenceJob"
      DetectEntitiesV2 = "comprehendmedical:DetectEntitiesV2"
      DetectPHI = "comprehendmedical:DetectPHI"
      InferICD10CM = "comprehendmedical:InferICD10CM"
      InferRxNorm = "comprehendmedical:InferRxNorm"
      InferSNOMEDCT = "comprehendmedical:InferSNOMEDCT"
      ListEntitiesDetectionV2Jobs = "comprehendmedical:ListEntitiesDetectionV2Jobs"
      ListICD10CMInferenceJobs = "comprehendmedical:ListICD10CMInferenceJobs"
      ListPHIDetectionJobs = "comprehendmedical:ListPHIDetectionJobs"
      ListRxNormInferenceJobs = "comprehendmedical:ListRxNormInferenceJobs"
      ListSNOMEDCTInferenceJobs = "comprehendmedical:ListSNOMEDCTInferenceJobs"
      StartEntitiesDetectionV2Job = "comprehendmedical:StartEntitiesDetectionV2Job"
      StartICD10CMInferenceJob = "comprehendmedical:StartICD10CMInferenceJob"
      StartPHIDetectionJob = "comprehendmedical:StartPHIDetectionJob"
      StartRxNormInferenceJob = "comprehendmedical:StartRxNormInferenceJob"
      StartSNOMEDCTInferenceJob = "comprehendmedical:StartSNOMEDCTInferenceJob"
      StopEntitiesDetectionV2Job = "comprehendmedical:StopEntitiesDetectionV2Job"
      StopICD10CMInferenceJob = "comprehendmedical:StopICD10CMInferenceJob"
      StopPHIDetectionJob = "comprehendmedical:StopPHIDetectionJob"
      StopRxNormInferenceJob = "comprehendmedical:StopRxNormInferenceJob"
      StopSNOMEDCTInferenceJob = "comprehendmedical:StopSNOMEDCTInferenceJob"
    }
    compute-optimizer = {
      AllActions = "compute-optimizer:*"
      DeleteRecommendationPreferences = "compute-optimizer:DeleteRecommendationPreferences"
      DescribeRecommendationExportJobs = "compute-optimizer:DescribeRecommendationExportJobs"
      ExportAutoScalingGroupRecommendations = "compute-optimizer:ExportAutoScalingGroupRecommendations"
      ExportEBSVolumeRecommendations = "compute-optimizer:ExportEBSVolumeRecommendations"
      ExportEC2InstanceRecommendations = "compute-optimizer:ExportEC2InstanceRecommendations"
      ExportECSServiceRecommendations = "compute-optimizer:ExportECSServiceRecommendations"
      ExportLambdaFunctionRecommendations = "compute-optimizer:ExportLambdaFunctionRecommendations"
      ExportLicenseRecommendations = "compute-optimizer:ExportLicenseRecommendations"
      GetAutoScalingGroupRecommendations = "compute-optimizer:GetAutoScalingGroupRecommendations"
      GetEBSVolumeRecommendations = "compute-optimizer:GetEBSVolumeRecommendations"
      GetEC2InstanceRecommendations = "compute-optimizer:GetEC2InstanceRecommendations"
      GetEC2RecommendationProjectedMetrics = "compute-optimizer:GetEC2RecommendationProjectedMetrics"
      GetECSServiceRecommendationProjectedMetrics = "compute-optimizer:GetECSServiceRecommendationProjectedMetrics"
      GetECSServiceRecommendations = "compute-optimizer:GetECSServiceRecommendations"
      GetEffectiveRecommendationPreferences = "compute-optimizer:GetEffectiveRecommendationPreferences"
      GetEnrollmentStatus = "compute-optimizer:GetEnrollmentStatus"
      GetEnrollmentStatusesForOrganization = "compute-optimizer:GetEnrollmentStatusesForOrganization"
      GetLambdaFunctionRecommendations = "compute-optimizer:GetLambdaFunctionRecommendations"
      GetLicenseRecommendations = "compute-optimizer:GetLicenseRecommendations"
      GetRecommendationPreferences = "compute-optimizer:GetRecommendationPreferences"
      GetRecommendationSummaries = "compute-optimizer:GetRecommendationSummaries"
      PutRecommendationPreferences = "compute-optimizer:PutRecommendationPreferences"
      UpdateEnrollmentStatus = "compute-optimizer:UpdateEnrollmentStatus"
    }
    config = {
      AllActions = "config:*"
      BatchGetAggregateResourceConfig = "config:BatchGetAggregateResourceConfig"
      BatchGetResourceConfig = "config:BatchGetResourceConfig"
      DeleteAggregationAuthorization = "config:DeleteAggregationAuthorization"
      DeleteConfigRule = "config:DeleteConfigRule"
      DeleteConfigurationAggregator = "config:DeleteConfigurationAggregator"
      DeleteConfigurationRecorder = "config:DeleteConfigurationRecorder"
      DeleteConformancePack = "config:DeleteConformancePack"
      DeleteDeliveryChannel = "config:DeleteDeliveryChannel"
      DeleteEvaluationResults = "config:DeleteEvaluationResults"
      DeleteOrganizationConfigRule = "config:DeleteOrganizationConfigRule"
      DeleteOrganizationConformancePack = "config:DeleteOrganizationConformancePack"
      DeletePendingAggregationRequest = "config:DeletePendingAggregationRequest"
      DeleteRemediationConfiguration = "config:DeleteRemediationConfiguration"
      DeleteRemediationExceptions = "config:DeleteRemediationExceptions"
      DeleteResourceConfig = "config:DeleteResourceConfig"
      DeleteRetentionConfiguration = "config:DeleteRetentionConfiguration"
      DeleteStoredQuery = "config:DeleteStoredQuery"
      DeliverConfigSnapshot = "config:DeliverConfigSnapshot"
      DescribeAggregateComplianceByConfigRules = "config:DescribeAggregateComplianceByConfigRules"
      DescribeAggregateComplianceByConformancePacks = "config:DescribeAggregateComplianceByConformancePacks"
      DescribeAggregationAuthorizations = "config:DescribeAggregationAuthorizations"
      DescribeComplianceByConfigRule = "config:DescribeComplianceByConfigRule"
      DescribeComplianceByResource = "config:DescribeComplianceByResource"
      DescribeConfigRuleEvaluationStatus = "config:DescribeConfigRuleEvaluationStatus"
      DescribeConfigRules = "config:DescribeConfigRules"
      DescribeConfigurationAggregatorSourcesStatus = "config:DescribeConfigurationAggregatorSourcesStatus"
      DescribeConfigurationAggregators = "config:DescribeConfigurationAggregators"
      DescribeConfigurationRecorderStatus = "config:DescribeConfigurationRecorderStatus"
      DescribeConfigurationRecorders = "config:DescribeConfigurationRecorders"
      DescribeConformancePackCompliance = "config:DescribeConformancePackCompliance"
      DescribeConformancePackStatus = "config:DescribeConformancePackStatus"
      DescribeConformancePacks = "config:DescribeConformancePacks"
      DescribeDeliveryChannelStatus = "config:DescribeDeliveryChannelStatus"
      DescribeDeliveryChannels = "config:DescribeDeliveryChannels"
      DescribeOrganizationConfigRuleStatuses = "config:DescribeOrganizationConfigRuleStatuses"
      DescribeOrganizationConfigRules = "config:DescribeOrganizationConfigRules"
      DescribeOrganizationConformancePackStatuses = "config:DescribeOrganizationConformancePackStatuses"
      DescribeOrganizationConformancePacks = "config:DescribeOrganizationConformancePacks"
      DescribePendingAggregationRequests = "config:DescribePendingAggregationRequests"
      DescribeRemediationConfigurations = "config:DescribeRemediationConfigurations"
      DescribeRemediationExceptions = "config:DescribeRemediationExceptions"
      DescribeRemediationExecutionStatus = "config:DescribeRemediationExecutionStatus"
      DescribeRetentionConfigurations = "config:DescribeRetentionConfigurations"
      GetAggregateComplianceDetailsByConfigRule = "config:GetAggregateComplianceDetailsByConfigRule"
      GetAggregateConfigRuleComplianceSummary = "config:GetAggregateConfigRuleComplianceSummary"
      GetAggregateConformancePackComplianceSummary = "config:GetAggregateConformancePackComplianceSummary"
      GetAggregateDiscoveredResourceCounts = "config:GetAggregateDiscoveredResourceCounts"
      GetAggregateResourceConfig = "config:GetAggregateResourceConfig"
      GetComplianceDetailsByConfigRule = "config:GetComplianceDetailsByConfigRule"
      GetComplianceDetailsByResource = "config:GetComplianceDetailsByResource"
      GetComplianceSummaryByConfigRule = "config:GetComplianceSummaryByConfigRule"
      GetComplianceSummaryByResourceType = "config:GetComplianceSummaryByResourceType"
      GetConformancePackComplianceDetails = "config:GetConformancePackComplianceDetails"
      GetConformancePackComplianceSummary = "config:GetConformancePackComplianceSummary"
      GetCustomRulePolicy = "config:GetCustomRulePolicy"
      GetDiscoveredResourceCounts = "config:GetDiscoveredResourceCounts"
      GetOrganizationConfigRuleDetailedStatus = "config:GetOrganizationConfigRuleDetailedStatus"
      GetOrganizationConformancePackDetailedStatus = "config:GetOrganizationConformancePackDetailedStatus"
      GetOrganizationCustomRulePolicy = "config:GetOrganizationCustomRulePolicy"
      GetResourceConfigHistory = "config:GetResourceConfigHistory"
      GetResourceEvaluationSummary = "config:GetResourceEvaluationSummary"
      GetStoredQuery = "config:GetStoredQuery"
      ListAggregateDiscoveredResources = "config:ListAggregateDiscoveredResources"
      ListConformancePackComplianceScores = "config:ListConformancePackComplianceScores"
      ListDiscoveredResources = "config:ListDiscoveredResources"
      ListResourceEvaluations = "config:ListResourceEvaluations"
      ListStoredQueries = "config:ListStoredQueries"
      ListTagsForResource = "config:ListTagsForResource"
      PutAggregationAuthorization = "config:PutAggregationAuthorization"
      PutConfigRule = "config:PutConfigRule"
      PutConfigurationAggregator = "config:PutConfigurationAggregator"
      PutConfigurationRecorder = "config:PutConfigurationRecorder"
      PutConformancePack = "config:PutConformancePack"
      PutDeliveryChannel = "config:PutDeliveryChannel"
      PutEvaluations = "config:PutEvaluations"
      PutExternalEvaluation = "config:PutExternalEvaluation"
      PutOrganizationConfigRule = "config:PutOrganizationConfigRule"
      PutOrganizationConformancePack = "config:PutOrganizationConformancePack"
      PutRemediationConfigurations = "config:PutRemediationConfigurations"
      PutRemediationExceptions = "config:PutRemediationExceptions"
      PutResourceConfig = "config:PutResourceConfig"
      PutRetentionConfiguration = "config:PutRetentionConfiguration"
      PutStoredQuery = "config:PutStoredQuery"
      SelectAggregateResourceConfig = "config:SelectAggregateResourceConfig"
      SelectResourceConfig = "config:SelectResourceConfig"
      StartConfigRulesEvaluation = "config:StartConfigRulesEvaluation"
      StartConfigurationRecorder = "config:StartConfigurationRecorder"
      StartRemediationExecution = "config:StartRemediationExecution"
      StartResourceEvaluation = "config:StartResourceEvaluation"
      StopConfigurationRecorder = "config:StopConfigurationRecorder"
      TagResource = "config:TagResource"
      UntagResource = "config:UntagResource"
    }
    connect-campaigns = {
      AllActions = "connect-campaigns:*"
      CreateCampaign = "connect-campaigns:CreateCampaign"
      DeleteCampaign = "connect-campaigns:DeleteCampaign"
      DeleteConnectInstanceConfig = "connect-campaigns:DeleteConnectInstanceConfig"
      DeleteInstanceOnboardingJob = "connect-campaigns:DeleteInstanceOnboardingJob"
      DescribeCampaign = "connect-campaigns:DescribeCampaign"
      GetCampaignState = "connect-campaigns:GetCampaignState"
      GetCampaignStateBatch = "connect-campaigns:GetCampaignStateBatch"
      GetConnectInstanceConfig = "connect-campaigns:GetConnectInstanceConfig"
      GetInstanceOnboardingJobStatus = "connect-campaigns:GetInstanceOnboardingJobStatus"
      ListCampaigns = "connect-campaigns:ListCampaigns"
      ListTagsForResource = "connect-campaigns:ListTagsForResource"
      PauseCampaign = "connect-campaigns:PauseCampaign"
      PutDialRequestBatch = "connect-campaigns:PutDialRequestBatch"
      ResumeCampaign = "connect-campaigns:ResumeCampaign"
      StartCampaign = "connect-campaigns:StartCampaign"
      StartInstanceOnboardingJob = "connect-campaigns:StartInstanceOnboardingJob"
      StopCampaign = "connect-campaigns:StopCampaign"
      TagResource = "connect-campaigns:TagResource"
      UntagResource = "connect-campaigns:UntagResource"
      UpdateCampaignDialerConfig = "connect-campaigns:UpdateCampaignDialerConfig"
      UpdateCampaignName = "connect-campaigns:UpdateCampaignName"
      UpdateCampaignOutboundCallConfig = "connect-campaigns:UpdateCampaignOutboundCallConfig"
    }
    connect = {
      AllActions = "connect:*"
      ActivateEvaluationForm = "connect:ActivateEvaluationForm"
      AdminGetEmergencyAccessToken = "connect:AdminGetEmergencyAccessToken"
      AssociateApprovedOrigin = "connect:AssociateApprovedOrigin"
      AssociateBot = "connect:AssociateBot"
      AssociateCustomerProfilesDomain = "connect:AssociateCustomerProfilesDomain"
      AssociateDefaultVocabulary = "connect:AssociateDefaultVocabulary"
      AssociateFlow = "connect:AssociateFlow"
      AssociateInstanceStorageConfig = "connect:AssociateInstanceStorageConfig"
      AssociateLambdaFunction = "connect:AssociateLambdaFunction"
      AssociateLexBot = "connect:AssociateLexBot"
      AssociatePhoneNumberContactFlow = "connect:AssociatePhoneNumberContactFlow"
      AssociateQueueQuickConnects = "connect:AssociateQueueQuickConnects"
      AssociateRoutingProfileQueues = "connect:AssociateRoutingProfileQueues"
      AssociateSecurityKey = "connect:AssociateSecurityKey"
      AssociateTrafficDistributionGroupUser = "connect:AssociateTrafficDistributionGroupUser"
      AssociateUserProficiencies = "connect:AssociateUserProficiencies"
      BatchAssociateAnalyticsDataSet = "connect:BatchAssociateAnalyticsDataSet"
      BatchDisassociateAnalyticsDataSet = "connect:BatchDisassociateAnalyticsDataSet"
      BatchGetAttachedFileMetadata = "connect:BatchGetAttachedFileMetadata"
      BatchGetFlowAssociation = "connect:BatchGetFlowAssociation"
      BatchPutContact = "connect:BatchPutContact"
      ClaimPhoneNumber = "connect:ClaimPhoneNumber"
      CompleteAttachedFileUpload = "connect:CompleteAttachedFileUpload"
      CreateAgentStatus = "connect:CreateAgentStatus"
      CreateContactFlow = "connect:CreateContactFlow"
      CreateContactFlowModule = "connect:CreateContactFlowModule"
      CreateEvaluationForm = "connect:CreateEvaluationForm"
      CreateHoursOfOperation = "connect:CreateHoursOfOperation"
      CreateInstance = "connect:CreateInstance"
      CreateIntegrationAssociation = "connect:CreateIntegrationAssociation"
      CreateParticipant = "connect:CreateParticipant"
      CreatePersistentContactAssociation = "connect:CreatePersistentContactAssociation"
      CreatePredefinedAttribute = "connect:CreatePredefinedAttribute"
      CreatePrompt = "connect:CreatePrompt"
      CreateQueue = "connect:CreateQueue"
      CreateQuickConnect = "connect:CreateQuickConnect"
      CreateRoutingProfile = "connect:CreateRoutingProfile"
      CreateRule = "connect:CreateRule"
      CreateSecurityProfile = "connect:CreateSecurityProfile"
      CreateTaskTemplate = "connect:CreateTaskTemplate"
      CreateTrafficDistributionGroup = "connect:CreateTrafficDistributionGroup"
      CreateUseCase = "connect:CreateUseCase"
      CreateUser = "connect:CreateUser"
      CreateUserHierarchyGroup = "connect:CreateUserHierarchyGroup"
      CreateView = "connect:CreateView"
      CreateViewVersion = "connect:CreateViewVersion"
      CreateVocabulary = "connect:CreateVocabulary"
      DeactivateEvaluationForm = "connect:DeactivateEvaluationForm"
      DeleteAttachedFile = "connect:DeleteAttachedFile"
      DeleteContactEvaluation = "connect:DeleteContactEvaluation"
      DeleteContactFlow = "connect:DeleteContactFlow"
      DeleteContactFlowModule = "connect:DeleteContactFlowModule"
      DeleteEvaluationForm = "connect:DeleteEvaluationForm"
      DeleteHoursOfOperation = "connect:DeleteHoursOfOperation"
      DeleteInstance = "connect:DeleteInstance"
      DeleteIntegrationAssociation = "connect:DeleteIntegrationAssociation"
      DeletePredefinedAttribute = "connect:DeletePredefinedAttribute"
      DeletePrompt = "connect:DeletePrompt"
      DeleteQueue = "connect:DeleteQueue"
      DeleteQuickConnect = "connect:DeleteQuickConnect"
      DeleteRoutingProfile = "connect:DeleteRoutingProfile"
      DeleteRule = "connect:DeleteRule"
      DeleteSecurityProfile = "connect:DeleteSecurityProfile"
      DeleteTaskTemplate = "connect:DeleteTaskTemplate"
      DeleteTrafficDistributionGroup = "connect:DeleteTrafficDistributionGroup"
      DeleteUseCase = "connect:DeleteUseCase"
      DeleteUser = "connect:DeleteUser"
      DeleteUserHierarchyGroup = "connect:DeleteUserHierarchyGroup"
      DeleteView = "connect:DeleteView"
      DeleteViewVersion = "connect:DeleteViewVersion"
      DeleteVocabulary = "connect:DeleteVocabulary"
      DescribeAgentStatus = "connect:DescribeAgentStatus"
      DescribeContact = "connect:DescribeContact"
      DescribeContactEvaluation = "connect:DescribeContactEvaluation"
      DescribeContactFlow = "connect:DescribeContactFlow"
      DescribeContactFlowModule = "connect:DescribeContactFlowModule"
      DescribeEvaluationForm = "connect:DescribeEvaluationForm"
      DescribeForecastingPlanningSchedulingIntegration = "connect:DescribeForecastingPlanningSchedulingIntegration"
      DescribeHoursOfOperation = "connect:DescribeHoursOfOperation"
      DescribeInstance = "connect:DescribeInstance"
      DescribeInstanceAttribute = "connect:DescribeInstanceAttribute"
      DescribeInstanceStorageConfig = "connect:DescribeInstanceStorageConfig"
      DescribePhoneNumber = "connect:DescribePhoneNumber"
      DescribePredefinedAttribute = "connect:DescribePredefinedAttribute"
      DescribePrompt = "connect:DescribePrompt"
      DescribeQueue = "connect:DescribeQueue"
      DescribeQuickConnect = "connect:DescribeQuickConnect"
      DescribeRoutingProfile = "connect:DescribeRoutingProfile"
      DescribeRule = "connect:DescribeRule"
      DescribeSecurityProfile = "connect:DescribeSecurityProfile"
      DescribeTrafficDistributionGroup = "connect:DescribeTrafficDistributionGroup"
      DescribeUser = "connect:DescribeUser"
      DescribeUserHierarchyGroup = "connect:DescribeUserHierarchyGroup"
      DescribeUserHierarchyStructure = "connect:DescribeUserHierarchyStructure"
      DescribeView = "connect:DescribeView"
      DescribeVocabulary = "connect:DescribeVocabulary"
      DisassociateApprovedOrigin = "connect:DisassociateApprovedOrigin"
      DisassociateBot = "connect:DisassociateBot"
      DisassociateCustomerProfilesDomain = "connect:DisassociateCustomerProfilesDomain"
      DisassociateFlow = "connect:DisassociateFlow"
      DisassociateInstanceStorageConfig = "connect:DisassociateInstanceStorageConfig"
      DisassociateLambdaFunction = "connect:DisassociateLambdaFunction"
      DisassociateLexBot = "connect:DisassociateLexBot"
      DisassociatePhoneNumberContactFlow = "connect:DisassociatePhoneNumberContactFlow"
      DisassociateQueueQuickConnects = "connect:DisassociateQueueQuickConnects"
      DisassociateRoutingProfileQueues = "connect:DisassociateRoutingProfileQueues"
      DisassociateSecurityKey = "connect:DisassociateSecurityKey"
      DisassociateTrafficDistributionGroupUser = "connect:DisassociateTrafficDistributionGroupUser"
      DisassociateUserProficiencies = "connect:DisassociateUserProficiencies"
      DismissUserContact = "connect:DismissUserContact"
      GetAttachedFile = "connect:GetAttachedFile"
      GetContactAttributes = "connect:GetContactAttributes"
      GetCurrentMetricData = "connect:GetCurrentMetricData"
      GetCurrentUserData = "connect:GetCurrentUserData"
      GetFederationToken = "connect:GetFederationToken"
      GetFlowAssociation = "connect:GetFlowAssociation"
      GetMetricData = "connect:GetMetricData"
      GetMetricDataV2 = "connect:GetMetricDataV2"
      GetPromptFile = "connect:GetPromptFile"
      GetTaskTemplate = "connect:GetTaskTemplate"
      GetTrafficDistribution = "connect:GetTrafficDistribution"
      ImportPhoneNumber = "connect:ImportPhoneNumber"
      ListAgentStatuses = "connect:ListAgentStatuses"
      ListApprovedOrigins = "connect:ListApprovedOrigins"
      ListBots = "connect:ListBots"
      ListContactEvaluations = "connect:ListContactEvaluations"
      ListContactFlowModules = "connect:ListContactFlowModules"
      ListContactFlows = "connect:ListContactFlows"
      ListContactReferences = "connect:ListContactReferences"
      ListDefaultVocabularies = "connect:ListDefaultVocabularies"
      ListEvaluationFormVersions = "connect:ListEvaluationFormVersions"
      ListEvaluationForms = "connect:ListEvaluationForms"
      ListFlowAssociations = "connect:ListFlowAssociations"
      ListHoursOfOperations = "connect:ListHoursOfOperations"
      ListInstanceAttributes = "connect:ListInstanceAttributes"
      ListInstanceStorageConfigs = "connect:ListInstanceStorageConfigs"
      ListInstances = "connect:ListInstances"
      ListIntegrationAssociations = "connect:ListIntegrationAssociations"
      ListLambdaFunctions = "connect:ListLambdaFunctions"
      ListLexBots = "connect:ListLexBots"
      ListPhoneNumbers = "connect:ListPhoneNumbers"
      ListPhoneNumbersV2 = "connect:ListPhoneNumbersV2"
      ListPredefinedAttributes = "connect:ListPredefinedAttributes"
      ListPrompts = "connect:ListPrompts"
      ListQueueQuickConnects = "connect:ListQueueQuickConnects"
      ListQueues = "connect:ListQueues"
      ListQuickConnects = "connect:ListQuickConnects"
      ListRealtimeContactAnalysisSegments = "connect:ListRealtimeContactAnalysisSegments"
      ListRealtimeContactAnalysisSegmentsV2 = "connect:ListRealtimeContactAnalysisSegmentsV2"
      ListRoutingProfileQueues = "connect:ListRoutingProfileQueues"
      ListRoutingProfiles = "connect:ListRoutingProfiles"
      ListRules = "connect:ListRules"
      ListSecurityKeys = "connect:ListSecurityKeys"
      ListSecurityProfileApplications = "connect:ListSecurityProfileApplications"
      ListSecurityProfilePermissions = "connect:ListSecurityProfilePermissions"
      ListSecurityProfiles = "connect:ListSecurityProfiles"
      ListTagsForResource = "connect:ListTagsForResource"
      ListTaskTemplates = "connect:ListTaskTemplates"
      ListTrafficDistributionGroupUsers = "connect:ListTrafficDistributionGroupUsers"
      ListTrafficDistributionGroups = "connect:ListTrafficDistributionGroups"
      ListUseCases = "connect:ListUseCases"
      ListUserHierarchyGroups = "connect:ListUserHierarchyGroups"
      ListUserProficiencies = "connect:ListUserProficiencies"
      ListUsers = "connect:ListUsers"
      ListViewVersions = "connect:ListViewVersions"
      ListViews = "connect:ListViews"
      MonitorContact = "connect:MonitorContact"
      PauseContact = "connect:PauseContact"
      PutUserStatus = "connect:PutUserStatus"
      ReleasePhoneNumber = "connect:ReleasePhoneNumber"
      ReplicateInstance = "connect:ReplicateInstance"
      ResumeContact = "connect:ResumeContact"
      ResumeContactRecording = "connect:ResumeContactRecording"
      SearchAvailablePhoneNumbers = "connect:SearchAvailablePhoneNumbers"
      SearchContactFlowModules = "connect:SearchContactFlowModules"
      SearchContactFlows = "connect:SearchContactFlows"
      SearchContacts = "connect:SearchContacts"
      SearchHoursOfOperations = "connect:SearchHoursOfOperations"
      SearchPredefinedAttributes = "connect:SearchPredefinedAttributes"
      SearchPrompts = "connect:SearchPrompts"
      SearchQueues = "connect:SearchQueues"
      SearchQuickConnects = "connect:SearchQuickConnects"
      SearchResourceTags = "connect:SearchResourceTags"
      SearchRoutingProfiles = "connect:SearchRoutingProfiles"
      SearchSecurityProfiles = "connect:SearchSecurityProfiles"
      SearchUsers = "connect:SearchUsers"
      SearchVocabularies = "connect:SearchVocabularies"
      SendChatIntegrationEvent = "connect:SendChatIntegrationEvent"
      StartAttachedFileUpload = "connect:StartAttachedFileUpload"
      StartChatContact = "connect:StartChatContact"
      StartContactEvaluation = "connect:StartContactEvaluation"
      StartContactRecording = "connect:StartContactRecording"
      StartContactStreaming = "connect:StartContactStreaming"
      StartForecastingPlanningSchedulingIntegration = "connect:StartForecastingPlanningSchedulingIntegration"
      StartOutboundVoiceContact = "connect:StartOutboundVoiceContact"
      StartTaskContact = "connect:StartTaskContact"
      StartWebRTCContact = "connect:StartWebRTCContact"
      StopContact = "connect:StopContact"
      StopContactRecording = "connect:StopContactRecording"
      StopContactStreaming = "connect:StopContactStreaming"
      StopForecastingPlanningSchedulingIntegration = "connect:StopForecastingPlanningSchedulingIntegration"
      SubmitContactEvaluation = "connect:SubmitContactEvaluation"
      SuspendContactRecording = "connect:SuspendContactRecording"
      TagContact = "connect:TagContact"
      TagResource = "connect:TagResource"
      TransferContact = "connect:TransferContact"
      UntagContact = "connect:UntagContact"
      UntagResource = "connect:UntagResource"
      UpdateAgentStatus = "connect:UpdateAgentStatus"
      UpdateContact = "connect:UpdateContact"
      UpdateContactAttributes = "connect:UpdateContactAttributes"
      UpdateContactEvaluation = "connect:UpdateContactEvaluation"
      UpdateContactFlowContent = "connect:UpdateContactFlowContent"
      UpdateContactFlowMetadata = "connect:UpdateContactFlowMetadata"
      UpdateContactFlowModuleContent = "connect:UpdateContactFlowModuleContent"
      UpdateContactFlowModuleMetadata = "connect:UpdateContactFlowModuleMetadata"
      UpdateContactFlowName = "connect:UpdateContactFlowName"
      UpdateContactRoutingData = "connect:UpdateContactRoutingData"
      UpdateContactSchedule = "connect:UpdateContactSchedule"
      UpdateEvaluationForm = "connect:UpdateEvaluationForm"
      UpdateHoursOfOperation = "connect:UpdateHoursOfOperation"
      UpdateInstanceAttribute = "connect:UpdateInstanceAttribute"
      UpdateInstanceStorageConfig = "connect:UpdateInstanceStorageConfig"
      UpdateParticipantRoleConfig = "connect:UpdateParticipantRoleConfig"
      UpdatePhoneNumber = "connect:UpdatePhoneNumber"
      UpdatePhoneNumberMetadata = "connect:UpdatePhoneNumberMetadata"
      UpdatePredefinedAttribute = "connect:UpdatePredefinedAttribute"
      UpdatePrompt = "connect:UpdatePrompt"
      UpdateQueueHoursOfOperation = "connect:UpdateQueueHoursOfOperation"
      UpdateQueueMaxContacts = "connect:UpdateQueueMaxContacts"
      UpdateQueueName = "connect:UpdateQueueName"
      UpdateQueueOutboundCallerConfig = "connect:UpdateQueueOutboundCallerConfig"
      UpdateQueueStatus = "connect:UpdateQueueStatus"
      UpdateQuickConnectConfig = "connect:UpdateQuickConnectConfig"
      UpdateQuickConnectName = "connect:UpdateQuickConnectName"
      UpdateRoutingProfileAgentAvailabilityTimer = "connect:UpdateRoutingProfileAgentAvailabilityTimer"
      UpdateRoutingProfileConcurrency = "connect:UpdateRoutingProfileConcurrency"
      UpdateRoutingProfileDefaultOutboundQueue = "connect:UpdateRoutingProfileDefaultOutboundQueue"
      UpdateRoutingProfileName = "connect:UpdateRoutingProfileName"
      UpdateRoutingProfileQueues = "connect:UpdateRoutingProfileQueues"
      UpdateRule = "connect:UpdateRule"
      UpdateSecurityProfile = "connect:UpdateSecurityProfile"
      UpdateTaskTemplate = "connect:UpdateTaskTemplate"
      UpdateTrafficDistribution = "connect:UpdateTrafficDistribution"
      UpdateUserHierarchy = "connect:UpdateUserHierarchy"
      UpdateUserHierarchyGroupName = "connect:UpdateUserHierarchyGroupName"
      UpdateUserHierarchyStructure = "connect:UpdateUserHierarchyStructure"
      UpdateUserIdentityInfo = "connect:UpdateUserIdentityInfo"
      UpdateUserPhoneConfig = "connect:UpdateUserPhoneConfig"
      UpdateUserProficiencies = "connect:UpdateUserProficiencies"
      UpdateUserRoutingProfile = "connect:UpdateUserRoutingProfile"
      UpdateUserSecurityProfiles = "connect:UpdateUserSecurityProfiles"
      UpdateViewContent = "connect:UpdateViewContent"
      UpdateViewMetadata = "connect:UpdateViewMetadata"
    }
    consoleapp = {
      AllActions = "consoleapp:*"
      GetDeviceIdentity = "consoleapp:GetDeviceIdentity"
      ListDeviceIdentities = "consoleapp:ListDeviceIdentities"
    }
    consolidatedbilling = {
      AllActions = "consolidatedbilling:*"
      GetAccountBillingRole = "consolidatedbilling:GetAccountBillingRole"
      ListLinkedAccounts = "consolidatedbilling:ListLinkedAccounts"
    }
    controlcatalog = {
      AllActions = "controlcatalog:*"
      ListCommonControls = "controlcatalog:ListCommonControls"
      ListDomains = "controlcatalog:ListDomains"
      ListObjectives = "controlcatalog:ListObjectives"
    }
    controltower = {
      AllActions = "controltower:*"
      CreateLandingZone = "controltower:CreateLandingZone"
      CreateManagedAccount = "controltower:CreateManagedAccount"
      DeleteLandingZone = "controltower:DeleteLandingZone"
      DeregisterManagedAccount = "controltower:DeregisterManagedAccount"
      DeregisterOrganizationalUnit = "controltower:DeregisterOrganizationalUnit"
      DescribeAccountFactoryConfig = "controltower:DescribeAccountFactoryConfig"
      DescribeCoreService = "controltower:DescribeCoreService"
      DescribeGuardrail = "controltower:DescribeGuardrail"
      DescribeGuardrailForTarget = "controltower:DescribeGuardrailForTarget"
      DescribeLandingZoneConfiguration = "controltower:DescribeLandingZoneConfiguration"
      DescribeManagedAccount = "controltower:DescribeManagedAccount"
      DescribeManagedOrganizationalUnit = "controltower:DescribeManagedOrganizationalUnit"
      DescribeRegisterOrganizationalUnitOperation = "controltower:DescribeRegisterOrganizationalUnitOperation"
      DescribeSingleSignOn = "controltower:DescribeSingleSignOn"
      DisableBaseline = "controltower:DisableBaseline"
      DisableControl = "controltower:DisableControl"
      DisableGuardrail = "controltower:DisableGuardrail"
      EnableBaseline = "controltower:EnableBaseline"
      EnableControl = "controltower:EnableControl"
      EnableGuardrail = "controltower:EnableGuardrail"
      GetAccountInfo = "controltower:GetAccountInfo"
      GetAvailableUpdates = "controltower:GetAvailableUpdates"
      GetBaseline = "controltower:GetBaseline"
      GetBaselineOperation = "controltower:GetBaselineOperation"
      GetControlOperation = "controltower:GetControlOperation"
      GetEnabledBaseline = "controltower:GetEnabledBaseline"
      GetEnabledControl = "controltower:GetEnabledControl"
      GetGuardrailComplianceStatus = "controltower:GetGuardrailComplianceStatus"
      GetHomeRegion = "controltower:GetHomeRegion"
      GetLandingZone = "controltower:GetLandingZone"
      GetLandingZoneDriftStatus = "controltower:GetLandingZoneDriftStatus"
      GetLandingZoneOperation = "controltower:GetLandingZoneOperation"
      GetLandingZoneStatus = "controltower:GetLandingZoneStatus"
      ListBaselines = "controltower:ListBaselines"
      ListControlOperations = "controltower:ListControlOperations"
      ListDirectoryGroups = "controltower:ListDirectoryGroups"
      ListDriftDetails = "controltower:ListDriftDetails"
      ListEnabledBaselines = "controltower:ListEnabledBaselines"
      ListEnabledControls = "controltower:ListEnabledControls"
      ListEnabledGuardrails = "controltower:ListEnabledGuardrails"
      ListExtendGovernancePrecheckDetails = "controltower:ListExtendGovernancePrecheckDetails"
      ListExternalConfigRuleCompliance = "controltower:ListExternalConfigRuleCompliance"
      ListGuardrailViolations = "controltower:ListGuardrailViolations"
      ListGuardrails = "controltower:ListGuardrails"
      ListGuardrailsForTarget = "controltower:ListGuardrailsForTarget"
      ListLandingZones = "controltower:ListLandingZones"
      ListManagedAccounts = "controltower:ListManagedAccounts"
      ListManagedAccountsForGuardrail = "controltower:ListManagedAccountsForGuardrail"
      ListManagedAccountsForParent = "controltower:ListManagedAccountsForParent"
      ListManagedOrganizationalUnits = "controltower:ListManagedOrganizationalUnits"
      ListManagedOrganizationalUnitsForGuardrail = "controltower:ListManagedOrganizationalUnitsForGuardrail"
      ListTagsForResource = "controltower:ListTagsForResource"
      ManageOrganizationalUnit = "controltower:ManageOrganizationalUnit"
      PerformPreLaunchChecks = "controltower:PerformPreLaunchChecks"
      ResetEnabledBaseline = "controltower:ResetEnabledBaseline"
      ResetLandingZone = "controltower:ResetLandingZone"
      SetupLandingZone = "controltower:SetupLandingZone"
      TagResource = "controltower:TagResource"
      UntagResource = "controltower:UntagResource"
      UpdateAccountFactoryConfig = "controltower:UpdateAccountFactoryConfig"
      UpdateEnabledBaseline = "controltower:UpdateEnabledBaseline"
      UpdateEnabledControl = "controltower:UpdateEnabledControl"
      UpdateLandingZone = "controltower:UpdateLandingZone"
    }
    cost-optimization-hub = {
      AllActions = "cost-optimization-hub:*"
      GetPreferences = "cost-optimization-hub:GetPreferences"
      GetRecommendation = "cost-optimization-hub:GetRecommendation"
      ListEnrollmentStatuses = "cost-optimization-hub:ListEnrollmentStatuses"
      ListRecommendationSummaries = "cost-optimization-hub:ListRecommendationSummaries"
      ListRecommendations = "cost-optimization-hub:ListRecommendations"
      UpdateEnrollmentStatus = "cost-optimization-hub:UpdateEnrollmentStatus"
      UpdatePreferences = "cost-optimization-hub:UpdatePreferences"
    }
    cur = {
      AllActions = "cur:*"
      DeleteReportDefinition = "cur:DeleteReportDefinition"
      DescribeReportDefinitions = "cur:DescribeReportDefinitions"
      GetClassicReport = "cur:GetClassicReport"
      GetClassicReportPreferences = "cur:GetClassicReportPreferences"
      GetUsageReport = "cur:GetUsageReport"
      ListTagsForResource = "cur:ListTagsForResource"
      ModifyReportDefinition = "cur:ModifyReportDefinition"
      PutClassicReportPreferences = "cur:PutClassicReportPreferences"
      PutReportDefinition = "cur:PutReportDefinition"
      TagResource = "cur:TagResource"
      UntagResource = "cur:UntagResource"
      ValidateReportDestination = "cur:ValidateReportDestination"
    }
    customer-verification = {
      AllActions = "customer-verification:*"
      CreateCustomerVerificationDetails = "customer-verification:CreateCustomerVerificationDetails"
      GetCustomerVerificationDetails = "customer-verification:GetCustomerVerificationDetails"
      GetCustomerVerificationEligibility = "customer-verification:GetCustomerVerificationEligibility"
      UpdateCustomerVerificationDetails = "customer-verification:UpdateCustomerVerificationDetails"
    }
    databrew = {
      AllActions = "databrew:*"
      BatchDeleteRecipeVersion = "databrew:BatchDeleteRecipeVersion"
      CreateDataset = "databrew:CreateDataset"
      CreateProfileJob = "databrew:CreateProfileJob"
      CreateProject = "databrew:CreateProject"
      CreateRecipe = "databrew:CreateRecipe"
      CreateRecipeJob = "databrew:CreateRecipeJob"
      CreateRuleset = "databrew:CreateRuleset"
      CreateSchedule = "databrew:CreateSchedule"
      DeleteDataset = "databrew:DeleteDataset"
      DeleteJob = "databrew:DeleteJob"
      DeleteProject = "databrew:DeleteProject"
      DeleteRecipeVersion = "databrew:DeleteRecipeVersion"
      DeleteRuleset = "databrew:DeleteRuleset"
      DeleteSchedule = "databrew:DeleteSchedule"
      DescribeDataset = "databrew:DescribeDataset"
      DescribeJob = "databrew:DescribeJob"
      DescribeJobRun = "databrew:DescribeJobRun"
      DescribeProject = "databrew:DescribeProject"
      DescribeRecipe = "databrew:DescribeRecipe"
      DescribeRuleset = "databrew:DescribeRuleset"
      DescribeSchedule = "databrew:DescribeSchedule"
      ListDatasets = "databrew:ListDatasets"
      ListJobRuns = "databrew:ListJobRuns"
      ListJobs = "databrew:ListJobs"
      ListProjects = "databrew:ListProjects"
      ListRecipeVersions = "databrew:ListRecipeVersions"
      ListRecipes = "databrew:ListRecipes"
      ListRulesets = "databrew:ListRulesets"
      ListSchedules = "databrew:ListSchedules"
      ListTagsForResource = "databrew:ListTagsForResource"
      PublishRecipe = "databrew:PublishRecipe"
      SendProjectSessionAction = "databrew:SendProjectSessionAction"
      StartJobRun = "databrew:StartJobRun"
      StartProjectSession = "databrew:StartProjectSession"
      StopJobRun = "databrew:StopJobRun"
      TagResource = "databrew:TagResource"
      UntagResource = "databrew:UntagResource"
      UpdateDataset = "databrew:UpdateDataset"
      UpdateProfileJob = "databrew:UpdateProfileJob"
      UpdateProject = "databrew:UpdateProject"
      UpdateRecipe = "databrew:UpdateRecipe"
      UpdateRecipeJob = "databrew:UpdateRecipeJob"
      UpdateRuleset = "databrew:UpdateRuleset"
      UpdateSchedule = "databrew:UpdateSchedule"
    }
    dataexchange = {
      AllActions = "dataexchange:*"
      CancelJob = "dataexchange:CancelJob"
      CreateAsset = "dataexchange:CreateAsset"
      CreateDataSet = "dataexchange:CreateDataSet"
      CreateEventAction = "dataexchange:CreateEventAction"
      CreateJob = "dataexchange:CreateJob"
      CreateRevision = "dataexchange:CreateRevision"
      DeleteAsset = "dataexchange:DeleteAsset"
      DeleteDataSet = "dataexchange:DeleteDataSet"
      DeleteEventAction = "dataexchange:DeleteEventAction"
      DeleteRevision = "dataexchange:DeleteRevision"
      GetAsset = "dataexchange:GetAsset"
      GetDataSet = "dataexchange:GetDataSet"
      GetEventAction = "dataexchange:GetEventAction"
      GetJob = "dataexchange:GetJob"
      GetRevision = "dataexchange:GetRevision"
      ListDataSetRevisions = "dataexchange:ListDataSetRevisions"
      ListDataSets = "dataexchange:ListDataSets"
      ListEventActions = "dataexchange:ListEventActions"
      ListJobs = "dataexchange:ListJobs"
      ListRevisionAssets = "dataexchange:ListRevisionAssets"
      ListTagsForResource = "dataexchange:ListTagsForResource"
      PublishDataSet = "dataexchange:PublishDataSet"
      RevokeRevision = "dataexchange:RevokeRevision"
      SendApiAsset = "dataexchange:SendApiAsset"
      SendDataSetNotification = "dataexchange:SendDataSetNotification"
      StartJob = "dataexchange:StartJob"
      TagResource = "dataexchange:TagResource"
      UntagResource = "dataexchange:UntagResource"
      UpdateAsset = "dataexchange:UpdateAsset"
      UpdateDataSet = "dataexchange:UpdateDataSet"
      UpdateEventAction = "dataexchange:UpdateEventAction"
      UpdateRevision = "dataexchange:UpdateRevision"
    }
    datapipeline = {
      AllActions = "datapipeline:*"
      ActivatePipeline = "datapipeline:ActivatePipeline"
      AddTags = "datapipeline:AddTags"
      CreatePipeline = "datapipeline:CreatePipeline"
      DeactivatePipeline = "datapipeline:DeactivatePipeline"
      DeletePipeline = "datapipeline:DeletePipeline"
      DescribeObjects = "datapipeline:DescribeObjects"
      DescribePipelines = "datapipeline:DescribePipelines"
      EvaluateExpression = "datapipeline:EvaluateExpression"
      GetAccountLimits = "datapipeline:GetAccountLimits"
      GetPipelineDefinition = "datapipeline:GetPipelineDefinition"
      ListPipelines = "datapipeline:ListPipelines"
      PollForTask = "datapipeline:PollForTask"
      PutAccountLimits = "datapipeline:PutAccountLimits"
      PutPipelineDefinition = "datapipeline:PutPipelineDefinition"
      QueryObjects = "datapipeline:QueryObjects"
      RemoveTags = "datapipeline:RemoveTags"
      ReportTaskProgress = "datapipeline:ReportTaskProgress"
      ReportTaskRunnerHeartbeat = "datapipeline:ReportTaskRunnerHeartbeat"
      SetStatus = "datapipeline:SetStatus"
      SetTaskStatus = "datapipeline:SetTaskStatus"
      ValidatePipelineDefinition = "datapipeline:ValidatePipelineDefinition"
    }
    datasync = {
      AllActions = "datasync:*"
      AddStorageSystem = "datasync:AddStorageSystem"
      CancelTaskExecution = "datasync:CancelTaskExecution"
      CreateAgent = "datasync:CreateAgent"
      CreateLocationAzureBlob = "datasync:CreateLocationAzureBlob"
      CreateLocationEfs = "datasync:CreateLocationEfs"
      CreateLocationFsxLustre = "datasync:CreateLocationFsxLustre"
      CreateLocationFsxOntap = "datasync:CreateLocationFsxOntap"
      CreateLocationFsxOpenZfs = "datasync:CreateLocationFsxOpenZfs"
      CreateLocationFsxWindows = "datasync:CreateLocationFsxWindows"
      CreateLocationHdfs = "datasync:CreateLocationHdfs"
      CreateLocationNfs = "datasync:CreateLocationNfs"
      CreateLocationObjectStorage = "datasync:CreateLocationObjectStorage"
      CreateLocationS3 = "datasync:CreateLocationS3"
      CreateLocationSmb = "datasync:CreateLocationSmb"
      CreateTask = "datasync:CreateTask"
      DeleteAgent = "datasync:DeleteAgent"
      DeleteLocation = "datasync:DeleteLocation"
      DeleteTask = "datasync:DeleteTask"
      DescribeAgent = "datasync:DescribeAgent"
      DescribeDiscoveryJob = "datasync:DescribeDiscoveryJob"
      DescribeLocationAzureBlob = "datasync:DescribeLocationAzureBlob"
      DescribeLocationEfs = "datasync:DescribeLocationEfs"
      DescribeLocationFsxLustre = "datasync:DescribeLocationFsxLustre"
      DescribeLocationFsxOntap = "datasync:DescribeLocationFsxOntap"
      DescribeLocationFsxOpenZfs = "datasync:DescribeLocationFsxOpenZfs"
      DescribeLocationFsxWindows = "datasync:DescribeLocationFsxWindows"
      DescribeLocationHdfs = "datasync:DescribeLocationHdfs"
      DescribeLocationNfs = "datasync:DescribeLocationNfs"
      DescribeLocationObjectStorage = "datasync:DescribeLocationObjectStorage"
      DescribeLocationS3 = "datasync:DescribeLocationS3"
      DescribeLocationSmb = "datasync:DescribeLocationSmb"
      DescribeStorageSystem = "datasync:DescribeStorageSystem"
      DescribeStorageSystemResourceMetrics = "datasync:DescribeStorageSystemResourceMetrics"
      DescribeStorageSystemResources = "datasync:DescribeStorageSystemResources"
      DescribeTask = "datasync:DescribeTask"
      DescribeTaskExecution = "datasync:DescribeTaskExecution"
      GenerateRecommendations = "datasync:GenerateRecommendations"
      ListAgents = "datasync:ListAgents"
      ListDiscoveryJobs = "datasync:ListDiscoveryJobs"
      ListLocations = "datasync:ListLocations"
      ListStorageSystems = "datasync:ListStorageSystems"
      ListTagsForResource = "datasync:ListTagsForResource"
      ListTaskExecutions = "datasync:ListTaskExecutions"
      ListTasks = "datasync:ListTasks"
      RemoveStorageSystem = "datasync:RemoveStorageSystem"
      StartDiscoveryJob = "datasync:StartDiscoveryJob"
      StartTaskExecution = "datasync:StartTaskExecution"
      StopDiscoveryJob = "datasync:StopDiscoveryJob"
      TagResource = "datasync:TagResource"
      UntagResource = "datasync:UntagResource"
      UpdateAgent = "datasync:UpdateAgent"
      UpdateDiscoveryJob = "datasync:UpdateDiscoveryJob"
      UpdateLocationAzureBlob = "datasync:UpdateLocationAzureBlob"
      UpdateLocationHdfs = "datasync:UpdateLocationHdfs"
      UpdateLocationNfs = "datasync:UpdateLocationNfs"
      UpdateLocationObjectStorage = "datasync:UpdateLocationObjectStorage"
      UpdateLocationSmb = "datasync:UpdateLocationSmb"
      UpdateStorageSystem = "datasync:UpdateStorageSystem"
      UpdateTask = "datasync:UpdateTask"
      UpdateTaskExecution = "datasync:UpdateTaskExecution"
    }
    datazone = {
      AllActions = "datazone:*"
      AcceptPredictions = "datazone:AcceptPredictions"
      AcceptSubscriptionRequest = "datazone:AcceptSubscriptionRequest"
      AddPolicyGrant = "datazone:AddPolicyGrant"
      AssociateEnvironmentRole = "datazone:AssociateEnvironmentRole"
      CancelMetadataGenerationRun = "datazone:CancelMetadataGenerationRun"
      CancelSubscription = "datazone:CancelSubscription"
      CreateAsset = "datazone:CreateAsset"
      CreateAssetRevision = "datazone:CreateAssetRevision"
      CreateAssetType = "datazone:CreateAssetType"
      CreateDataSource = "datazone:CreateDataSource"
      CreateDomain = "datazone:CreateDomain"
      CreateEnvironment = "datazone:CreateEnvironment"
      CreateEnvironmentAction = "datazone:CreateEnvironmentAction"
      CreateEnvironmentBlueprint = "datazone:CreateEnvironmentBlueprint"
      CreateEnvironmentProfile = "datazone:CreateEnvironmentProfile"
      CreateFormType = "datazone:CreateFormType"
      CreateGlossary = "datazone:CreateGlossary"
      CreateGlossaryTerm = "datazone:CreateGlossaryTerm"
      CreateGroupProfile = "datazone:CreateGroupProfile"
      CreateListingChangeSet = "datazone:CreateListingChangeSet"
      CreateProject = "datazone:CreateProject"
      CreateProjectMembership = "datazone:CreateProjectMembership"
      CreateSubscriptionGrant = "datazone:CreateSubscriptionGrant"
      CreateSubscriptionRequest = "datazone:CreateSubscriptionRequest"
      CreateSubscriptionTarget = "datazone:CreateSubscriptionTarget"
      CreateUserProfile = "datazone:CreateUserProfile"
      DeleteAsset = "datazone:DeleteAsset"
      DeleteAssetType = "datazone:DeleteAssetType"
      DeleteDataSource = "datazone:DeleteDataSource"
      DeleteDomain = "datazone:DeleteDomain"
      DeleteDomainSharingPolicy = "datazone:DeleteDomainSharingPolicy"
      DeleteEnvironment = "datazone:DeleteEnvironment"
      DeleteEnvironmentAction = "datazone:DeleteEnvironmentAction"
      DeleteEnvironmentBlueprint = "datazone:DeleteEnvironmentBlueprint"
      DeleteEnvironmentBlueprintConfiguration = "datazone:DeleteEnvironmentBlueprintConfiguration"
      DeleteEnvironmentProfile = "datazone:DeleteEnvironmentProfile"
      DeleteFormType = "datazone:DeleteFormType"
      DeleteGlossary = "datazone:DeleteGlossary"
      DeleteGlossaryTerm = "datazone:DeleteGlossaryTerm"
      DeleteListing = "datazone:DeleteListing"
      DeleteProject = "datazone:DeleteProject"
      DeleteProjectMembership = "datazone:DeleteProjectMembership"
      DeleteSubscriptionGrant = "datazone:DeleteSubscriptionGrant"
      DeleteSubscriptionRequest = "datazone:DeleteSubscriptionRequest"
      DeleteSubscriptionTarget = "datazone:DeleteSubscriptionTarget"
      DeleteTimeSeriesDataPoints = "datazone:DeleteTimeSeriesDataPoints"
      DisassociateEnvironmentRole = "datazone:DisassociateEnvironmentRole"
      GetAsset = "datazone:GetAsset"
      GetAssetType = "datazone:GetAssetType"
      GetDataSource = "datazone:GetDataSource"
      GetDataSourceRun = "datazone:GetDataSourceRun"
      GetDomain = "datazone:GetDomain"
      GetDomainSharingPolicy = "datazone:GetDomainSharingPolicy"
      GetEnvironment = "datazone:GetEnvironment"
      GetEnvironmentAction = "datazone:GetEnvironmentAction"
      GetEnvironmentActionLink = "datazone:GetEnvironmentActionLink"
      GetEnvironmentBlueprint = "datazone:GetEnvironmentBlueprint"
      GetEnvironmentBlueprintConfiguration = "datazone:GetEnvironmentBlueprintConfiguration"
      GetEnvironmentCredentials = "datazone:GetEnvironmentCredentials"
      GetEnvironmentProfile = "datazone:GetEnvironmentProfile"
      GetFormType = "datazone:GetFormType"
      GetGlossary = "datazone:GetGlossary"
      GetGlossaryTerm = "datazone:GetGlossaryTerm"
      GetGroupProfile = "datazone:GetGroupProfile"
      GetIamPortalLoginUrl = "datazone:GetIamPortalLoginUrl"
      GetListing = "datazone:GetListing"
      GetMetadataGenerationRun = "datazone:GetMetadataGenerationRun"
      GetProject = "datazone:GetProject"
      GetSubscription = "datazone:GetSubscription"
      GetSubscriptionEligibility = "datazone:GetSubscriptionEligibility"
      GetSubscriptionGrant = "datazone:GetSubscriptionGrant"
      GetSubscriptionRequestDetails = "datazone:GetSubscriptionRequestDetails"
      GetSubscriptionTarget = "datazone:GetSubscriptionTarget"
      GetTimeSeriesDataPoint = "datazone:GetTimeSeriesDataPoint"
      GetUserProfile = "datazone:GetUserProfile"
      ListAccountEnvironments = "datazone:ListAccountEnvironments"
      ListAssetRevisions = "datazone:ListAssetRevisions"
      ListDataSourceRunActivities = "datazone:ListDataSourceRunActivities"
      ListDataSourceRuns = "datazone:ListDataSourceRuns"
      ListDataSources = "datazone:ListDataSources"
      ListDomains = "datazone:ListDomains"
      ListEnvironmentActions = "datazone:ListEnvironmentActions"
      ListEnvironmentBlueprintConfigurationSummaries = "datazone:ListEnvironmentBlueprintConfigurationSummaries"
      ListEnvironmentBlueprintConfigurations = "datazone:ListEnvironmentBlueprintConfigurations"
      ListEnvironmentBlueprints = "datazone:ListEnvironmentBlueprints"
      ListEnvironmentProfiles = "datazone:ListEnvironmentProfiles"
      ListEnvironments = "datazone:ListEnvironments"
      ListGroupsForUser = "datazone:ListGroupsForUser"
      ListMetadataGenerationRuns = "datazone:ListMetadataGenerationRuns"
      ListNotifications = "datazone:ListNotifications"
      ListPolicyGrants = "datazone:ListPolicyGrants"
      ListProjectMemberships = "datazone:ListProjectMemberships"
      ListProjects = "datazone:ListProjects"
      ListSubscriptionGrants = "datazone:ListSubscriptionGrants"
      ListSubscriptionRequests = "datazone:ListSubscriptionRequests"
      ListSubscriptionTargets = "datazone:ListSubscriptionTargets"
      ListSubscriptions = "datazone:ListSubscriptions"
      ListTagsForResource = "datazone:ListTagsForResource"
      ListTimeSeriesDataPoints = "datazone:ListTimeSeriesDataPoints"
      ListWarehouseMetadata = "datazone:ListWarehouseMetadata"
      PostTimeSeriesDataPoints = "datazone:PostTimeSeriesDataPoints"
      ProvisionDomain = "datazone:ProvisionDomain"
      PutDomainSharingPolicy = "datazone:PutDomainSharingPolicy"
      PutEnvironmentBlueprintConfiguration = "datazone:PutEnvironmentBlueprintConfiguration"
      RefreshToken = "datazone:RefreshToken"
      RejectPredictions = "datazone:RejectPredictions"
      RejectSubscriptionRequest = "datazone:RejectSubscriptionRequest"
      RemovePolicyGrant = "datazone:RemovePolicyGrant"
      RevokeSubscription = "datazone:RevokeSubscription"
      Search = "datazone:Search"
      SearchGroupProfiles = "datazone:SearchGroupProfiles"
      SearchListings = "datazone:SearchListings"
      SearchTypes = "datazone:SearchTypes"
      SearchUserProfiles = "datazone:SearchUserProfiles"
      SsoLogin = "datazone:SsoLogin"
      SsoLogout = "datazone:SsoLogout"
      StartDataSourceRun = "datazone:StartDataSourceRun"
      StartMetadataGenerationRun = "datazone:StartMetadataGenerationRun"
      StopMetadataGenerationRun = "datazone:StopMetadataGenerationRun"
      TagResource = "datazone:TagResource"
      UntagResource = "datazone:UntagResource"
      UpdateDataSource = "datazone:UpdateDataSource"
      UpdateDataSourceRunActivities = "datazone:UpdateDataSourceRunActivities"
      UpdateDomain = "datazone:UpdateDomain"
      UpdateEnvironment = "datazone:UpdateEnvironment"
      UpdateEnvironmentAction = "datazone:UpdateEnvironmentAction"
      UpdateEnvironmentBlueprint = "datazone:UpdateEnvironmentBlueprint"
      UpdateEnvironmentConfiguration = "datazone:UpdateEnvironmentConfiguration"
      UpdateEnvironmentDeploymentStatus = "datazone:UpdateEnvironmentDeploymentStatus"
      UpdateEnvironmentProfile = "datazone:UpdateEnvironmentProfile"
      UpdateGlossary = "datazone:UpdateGlossary"
      UpdateGlossaryTerm = "datazone:UpdateGlossaryTerm"
      UpdateGroupProfile = "datazone:UpdateGroupProfile"
      UpdateProject = "datazone:UpdateProject"
      UpdateSubscriptionGrantStatus = "datazone:UpdateSubscriptionGrantStatus"
      UpdateSubscriptionRequest = "datazone:UpdateSubscriptionRequest"
      UpdateSubscriptionTarget = "datazone:UpdateSubscriptionTarget"
      UpdateUserProfile = "datazone:UpdateUserProfile"
      ValidatePassRole = "datazone:ValidatePassRole"
    }
    dax = {
      AllActions = "dax:*"
      BatchGetItem = "dax:BatchGetItem"
      BatchWriteItem = "dax:BatchWriteItem"
      ConditionCheckItem = "dax:ConditionCheckItem"
      CreateCluster = "dax:CreateCluster"
      CreateParameterGroup = "dax:CreateParameterGroup"
      CreateSubnetGroup = "dax:CreateSubnetGroup"
      DecreaseReplicationFactor = "dax:DecreaseReplicationFactor"
      DeleteCluster = "dax:DeleteCluster"
      DeleteItem = "dax:DeleteItem"
      DeleteParameterGroup = "dax:DeleteParameterGroup"
      DeleteSubnetGroup = "dax:DeleteSubnetGroup"
      DescribeClusters = "dax:DescribeClusters"
      DescribeDefaultParameters = "dax:DescribeDefaultParameters"
      DescribeEvents = "dax:DescribeEvents"
      DescribeParameterGroups = "dax:DescribeParameterGroups"
      DescribeParameters = "dax:DescribeParameters"
      DescribeSubnetGroups = "dax:DescribeSubnetGroups"
      GetItem = "dax:GetItem"
      IncreaseReplicationFactor = "dax:IncreaseReplicationFactor"
      ListTags = "dax:ListTags"
      PutItem = "dax:PutItem"
      Query = "dax:Query"
      RebootNode = "dax:RebootNode"
      Scan = "dax:Scan"
      TagResource = "dax:TagResource"
      UntagResource = "dax:UntagResource"
      UpdateCluster = "dax:UpdateCluster"
      UpdateItem = "dax:UpdateItem"
      UpdateParameterGroup = "dax:UpdateParameterGroup"
      UpdateSubnetGroup = "dax:UpdateSubnetGroup"
    }
    dbqms = {
      AllActions = "dbqms:*"
      CreateFavoriteQuery = "dbqms:CreateFavoriteQuery"
      CreateQueryHistory = "dbqms:CreateQueryHistory"
      CreateTab = "dbqms:CreateTab"
      DeleteFavoriteQueries = "dbqms:DeleteFavoriteQueries"
      DeleteQueryHistory = "dbqms:DeleteQueryHistory"
      DeleteTab = "dbqms:DeleteTab"
      DescribeFavoriteQueries = "dbqms:DescribeFavoriteQueries"
      DescribeQueryHistory = "dbqms:DescribeQueryHistory"
      DescribeTabs = "dbqms:DescribeTabs"
      GetQueryString = "dbqms:GetQueryString"
      UpdateFavoriteQuery = "dbqms:UpdateFavoriteQuery"
      UpdateQueryHistory = "dbqms:UpdateQueryHistory"
      UpdateTab = "dbqms:UpdateTab"
    }
    deadline = {
      AllActions = "deadline:*"
      AssociateMemberToFarm = "deadline:AssociateMemberToFarm"
      AssociateMemberToFleet = "deadline:AssociateMemberToFleet"
      AssociateMemberToJob = "deadline:AssociateMemberToJob"
      AssociateMemberToQueue = "deadline:AssociateMemberToQueue"
      AssumeFleetRoleForRead = "deadline:AssumeFleetRoleForRead"
      AssumeFleetRoleForWorker = "deadline:AssumeFleetRoleForWorker"
      AssumeQueueRoleForRead = "deadline:AssumeQueueRoleForRead"
      AssumeQueueRoleForUser = "deadline:AssumeQueueRoleForUser"
      AssumeQueueRoleForWorker = "deadline:AssumeQueueRoleForWorker"
      BatchGetJobEntity = "deadline:BatchGetJobEntity"
      CopyJobTemplate = "deadline:CopyJobTemplate"
      CreateBudget = "deadline:CreateBudget"
      CreateFarm = "deadline:CreateFarm"
      CreateFleet = "deadline:CreateFleet"
      CreateJob = "deadline:CreateJob"
      CreateLicenseEndpoint = "deadline:CreateLicenseEndpoint"
      CreateMonitor = "deadline:CreateMonitor"
      CreateQueue = "deadline:CreateQueue"
      CreateQueueEnvironment = "deadline:CreateQueueEnvironment"
      CreateQueueFleetAssociation = "deadline:CreateQueueFleetAssociation"
      CreateStorageProfile = "deadline:CreateStorageProfile"
      CreateWorker = "deadline:CreateWorker"
      DeleteBudget = "deadline:DeleteBudget"
      DeleteFarm = "deadline:DeleteFarm"
      DeleteFleet = "deadline:DeleteFleet"
      DeleteLicenseEndpoint = "deadline:DeleteLicenseEndpoint"
      DeleteMeteredProduct = "deadline:DeleteMeteredProduct"
      DeleteMonitor = "deadline:DeleteMonitor"
      DeleteQueue = "deadline:DeleteQueue"
      DeleteQueueEnvironment = "deadline:DeleteQueueEnvironment"
      DeleteQueueFleetAssociation = "deadline:DeleteQueueFleetAssociation"
      DeleteStorageProfile = "deadline:DeleteStorageProfile"
      DeleteWorker = "deadline:DeleteWorker"
      DisassociateMemberFromFarm = "deadline:DisassociateMemberFromFarm"
      DisassociateMemberFromFleet = "deadline:DisassociateMemberFromFleet"
      DisassociateMemberFromJob = "deadline:DisassociateMemberFromJob"
      DisassociateMemberFromQueue = "deadline:DisassociateMemberFromQueue"
      GetApplicationVersion = "deadline:GetApplicationVersion"
      GetBudget = "deadline:GetBudget"
      GetFarm = "deadline:GetFarm"
      GetFleet = "deadline:GetFleet"
      GetJob = "deadline:GetJob"
      GetLicenseEndpoint = "deadline:GetLicenseEndpoint"
      GetMonitor = "deadline:GetMonitor"
      GetQueue = "deadline:GetQueue"
      GetQueueEnvironment = "deadline:GetQueueEnvironment"
      GetQueueFleetAssociation = "deadline:GetQueueFleetAssociation"
      GetSession = "deadline:GetSession"
      GetSessionAction = "deadline:GetSessionAction"
      GetSessionsStatisticsAggregation = "deadline:GetSessionsStatisticsAggregation"
      GetStep = "deadline:GetStep"
      GetStorageProfile = "deadline:GetStorageProfile"
      GetStorageProfileForQueue = "deadline:GetStorageProfileForQueue"
      GetTask = "deadline:GetTask"
      GetWorker = "deadline:GetWorker"
      ListAvailableMeteredProducts = "deadline:ListAvailableMeteredProducts"
      ListBudgets = "deadline:ListBudgets"
      ListFarmMembers = "deadline:ListFarmMembers"
      ListFarms = "deadline:ListFarms"
      ListFleetMembers = "deadline:ListFleetMembers"
      ListFleets = "deadline:ListFleets"
      ListJobMembers = "deadline:ListJobMembers"
      ListJobs = "deadline:ListJobs"
      ListLicenseEndpoints = "deadline:ListLicenseEndpoints"
      ListMeteredProducts = "deadline:ListMeteredProducts"
      ListMonitors = "deadline:ListMonitors"
      ListQueueEnvironments = "deadline:ListQueueEnvironments"
      ListQueueFleetAssociations = "deadline:ListQueueFleetAssociations"
      ListQueueMembers = "deadline:ListQueueMembers"
      ListQueues = "deadline:ListQueues"
      ListSessionActions = "deadline:ListSessionActions"
      ListSessions = "deadline:ListSessions"
      ListSessionsForWorker = "deadline:ListSessionsForWorker"
      ListStepConsumers = "deadline:ListStepConsumers"
      ListStepDependencies = "deadline:ListStepDependencies"
      ListSteps = "deadline:ListSteps"
      ListStorageProfiles = "deadline:ListStorageProfiles"
      ListStorageProfilesForQueue = "deadline:ListStorageProfilesForQueue"
      ListTagsForResource = "deadline:ListTagsForResource"
      ListTasks = "deadline:ListTasks"
      ListWorkers = "deadline:ListWorkers"
      PutMeteredProduct = "deadline:PutMeteredProduct"
      SearchJobs = "deadline:SearchJobs"
      SearchSteps = "deadline:SearchSteps"
      SearchTasks = "deadline:SearchTasks"
      SearchWorkers = "deadline:SearchWorkers"
      StartSessionsStatisticsAggregation = "deadline:StartSessionsStatisticsAggregation"
      TagResource = "deadline:TagResource"
      UntagResource = "deadline:UntagResource"
      UpdateBudget = "deadline:UpdateBudget"
      UpdateFarm = "deadline:UpdateFarm"
      UpdateFleet = "deadline:UpdateFleet"
      UpdateJob = "deadline:UpdateJob"
      UpdateMonitor = "deadline:UpdateMonitor"
      UpdateQueue = "deadline:UpdateQueue"
      UpdateQueueEnvironment = "deadline:UpdateQueueEnvironment"
      UpdateQueueFleetAssociation = "deadline:UpdateQueueFleetAssociation"
      UpdateSession = "deadline:UpdateSession"
      UpdateStep = "deadline:UpdateStep"
      UpdateStorageProfile = "deadline:UpdateStorageProfile"
      UpdateTask = "deadline:UpdateTask"
      UpdateWorker = "deadline:UpdateWorker"
      UpdateWorkerSchedule = "deadline:UpdateWorkerSchedule"
    }
    deepcomposer = {
      AllActions = "deepcomposer:*"
      AssociateCoupon = "deepcomposer:AssociateCoupon"
      CreateAudio = "deepcomposer:CreateAudio"
      CreateComposition = "deepcomposer:CreateComposition"
      CreateModel = "deepcomposer:CreateModel"
      DeleteComposition = "deepcomposer:DeleteComposition"
      DeleteModel = "deepcomposer:DeleteModel"
      GetComposition = "deepcomposer:GetComposition"
      GetModel = "deepcomposer:GetModel"
      GetSampleModel = "deepcomposer:GetSampleModel"
      ListCompositions = "deepcomposer:ListCompositions"
      ListModels = "deepcomposer:ListModels"
      ListSampleModels = "deepcomposer:ListSampleModels"
      ListTagsForResource = "deepcomposer:ListTagsForResource"
      ListTrainingTopics = "deepcomposer:ListTrainingTopics"
      TagResource = "deepcomposer:TagResource"
      UntagResource = "deepcomposer:UntagResource"
      UpdateComposition = "deepcomposer:UpdateComposition"
      UpdateModel = "deepcomposer:UpdateModel"
    }
    deeplens = {
      AllActions = "deeplens:*"
      AssociateServiceRoleToAccount = "deeplens:AssociateServiceRoleToAccount"
      BatchGetDevice = "deeplens:BatchGetDevice"
      BatchGetModel = "deeplens:BatchGetModel"
      BatchGetProject = "deeplens:BatchGetProject"
      CreateDeviceCertificates = "deeplens:CreateDeviceCertificates"
      CreateModel = "deeplens:CreateModel"
      CreateProject = "deeplens:CreateProject"
      DeleteModel = "deeplens:DeleteModel"
      DeleteProject = "deeplens:DeleteProject"
      DeployProject = "deeplens:DeployProject"
      DeregisterDevice = "deeplens:DeregisterDevice"
      GetAssociatedResources = "deeplens:GetAssociatedResources"
      GetDeploymentStatus = "deeplens:GetDeploymentStatus"
      GetDevice = "deeplens:GetDevice"
      GetModel = "deeplens:GetModel"
      GetProject = "deeplens:GetProject"
      ImportProjectFromTemplate = "deeplens:ImportProjectFromTemplate"
      ListDeployments = "deeplens:ListDeployments"
      ListDevices = "deeplens:ListDevices"
      ListModels = "deeplens:ListModels"
      ListProjects = "deeplens:ListProjects"
      RegisterDevice = "deeplens:RegisterDevice"
      RemoveProject = "deeplens:RemoveProject"
      UpdateProject = "deeplens:UpdateProject"
    }
    deepracer = {
      AllActions = "deepracer:*"
      AddLeaderboardAccessPermission = "deepracer:AddLeaderboardAccessPermission"
      AdminGetAccountConfig = "deepracer:AdminGetAccountConfig"
      AdminListAssociatedResources = "deepracer:AdminListAssociatedResources"
      AdminListAssociatedUsers = "deepracer:AdminListAssociatedUsers"
      AdminManageUser = "deepracer:AdminManageUser"
      AdminSetAccountConfig = "deepracer:AdminSetAccountConfig"
      CloneReinforcementLearningModel = "deepracer:CloneReinforcementLearningModel"
      CreateCar = "deepracer:CreateCar"
      CreateLeaderboard = "deepracer:CreateLeaderboard"
      CreateLeaderboardAccessToken = "deepracer:CreateLeaderboardAccessToken"
      CreateLeaderboardSubmission = "deepracer:CreateLeaderboardSubmission"
      CreateReinforcementLearningModel = "deepracer:CreateReinforcementLearningModel"
      DeleteLeaderboard = "deepracer:DeleteLeaderboard"
      DeleteModel = "deepracer:DeleteModel"
      EditLeaderboard = "deepracer:EditLeaderboard"
      GetAccountConfig = "deepracer:GetAccountConfig"
      GetAlias = "deepracer:GetAlias"
      GetAssetUrl = "deepracer:GetAssetUrl"
      GetCar = "deepracer:GetCar"
      GetCars = "deepracer:GetCars"
      GetEvaluation = "deepracer:GetEvaluation"
      GetLatestUserSubmission = "deepracer:GetLatestUserSubmission"
      GetLeaderboard = "deepracer:GetLeaderboard"
      GetModel = "deepracer:GetModel"
      GetPrivateLeaderboard = "deepracer:GetPrivateLeaderboard"
      GetRankedUserSubmission = "deepracer:GetRankedUserSubmission"
      GetTrack = "deepracer:GetTrack"
      GetTrainingJob = "deepracer:GetTrainingJob"
      ImportModel = "deepracer:ImportModel"
      ListEvaluations = "deepracer:ListEvaluations"
      ListLeaderboardEvaluations = "deepracer:ListLeaderboardEvaluations"
      ListLeaderboardSubmissions = "deepracer:ListLeaderboardSubmissions"
      ListLeaderboards = "deepracer:ListLeaderboards"
      ListModels = "deepracer:ListModels"
      ListPrivateLeaderboardParticipants = "deepracer:ListPrivateLeaderboardParticipants"
      ListPrivateLeaderboards = "deepracer:ListPrivateLeaderboards"
      ListSubscribedPrivateLeaderboards = "deepracer:ListSubscribedPrivateLeaderboards"
      ListTagsForResource = "deepracer:ListTagsForResource"
      ListTracks = "deepracer:ListTracks"
      ListTrainingJobs = "deepracer:ListTrainingJobs"
      MigrateModels = "deepracer:MigrateModels"
      PerformLeaderboardOperation = "deepracer:PerformLeaderboardOperation"
      RemoveLeaderboardAccessPermission = "deepracer:RemoveLeaderboardAccessPermission"
      SetAlias = "deepracer:SetAlias"
      StartEvaluation = "deepracer:StartEvaluation"
      StopEvaluation = "deepracer:StopEvaluation"
      StopTrainingReinforcementLearningModel = "deepracer:StopTrainingReinforcementLearningModel"
      TagResource = "deepracer:TagResource"
      TestRewardFunction = "deepracer:TestRewardFunction"
      UntagResource = "deepracer:UntagResource"
      UpdateCar = "deepracer:UpdateCar"
    }
    detective = {
      AllActions = "detective:*"
      AcceptInvitation = "detective:AcceptInvitation"
      BatchGetGraphMemberDatasources = "detective:BatchGetGraphMemberDatasources"
      BatchGetMembershipDatasources = "detective:BatchGetMembershipDatasources"
      CreateGraph = "detective:CreateGraph"
      CreateMembers = "detective:CreateMembers"
      DeleteGraph = "detective:DeleteGraph"
      DeleteMembers = "detective:DeleteMembers"
      DescribeOrganizationConfiguration = "detective:DescribeOrganizationConfiguration"
      DisableOrganizationAdminAccount = "detective:DisableOrganizationAdminAccount"
      DisassociateMembership = "detective:DisassociateMembership"
      EnableOrganizationAdminAccount = "detective:EnableOrganizationAdminAccount"
      GetFreeTrialEligibility = "detective:GetFreeTrialEligibility"
      GetGraphIngestState = "detective:GetGraphIngestState"
      GetInvestigation = "detective:GetInvestigation"
      GetMembers = "detective:GetMembers"
      GetPricingInformation = "detective:GetPricingInformation"
      GetUsageInformation = "detective:GetUsageInformation"
      InvokeAssistant = "detective:InvokeAssistant"
      ListDatasourcePackages = "detective:ListDatasourcePackages"
      ListGraphs = "detective:ListGraphs"
      ListHighDegreeEntities = "detective:ListHighDegreeEntities"
      ListIndicators = "detective:ListIndicators"
      ListInvestigations = "detective:ListInvestigations"
      ListInvitations = "detective:ListInvitations"
      ListMembers = "detective:ListMembers"
      ListOrganizationAdminAccount = "detective:ListOrganizationAdminAccount"
      ListTagsForResource = "detective:ListTagsForResource"
      RejectInvitation = "detective:RejectInvitation"
      SearchGraph = "detective:SearchGraph"
      StartInvestigation = "detective:StartInvestigation"
      StartMonitoringMember = "detective:StartMonitoringMember"
      TagResource = "detective:TagResource"
      UntagResource = "detective:UntagResource"
      UpdateDatasourcePackages = "detective:UpdateDatasourcePackages"
      UpdateInvestigationState = "detective:UpdateInvestigationState"
      UpdateOrganizationConfiguration = "detective:UpdateOrganizationConfiguration"
    }
    devicefarm = {
      AllActions = "devicefarm:*"
      CreateDevicePool = "devicefarm:CreateDevicePool"
      CreateInstanceProfile = "devicefarm:CreateInstanceProfile"
      CreateNetworkProfile = "devicefarm:CreateNetworkProfile"
      CreateProject = "devicefarm:CreateProject"
      CreateRemoteAccessSession = "devicefarm:CreateRemoteAccessSession"
      CreateTestGridProject = "devicefarm:CreateTestGridProject"
      CreateTestGridUrl = "devicefarm:CreateTestGridUrl"
      CreateUpload = "devicefarm:CreateUpload"
      CreateVPCEConfiguration = "devicefarm:CreateVPCEConfiguration"
      DeleteDevicePool = "devicefarm:DeleteDevicePool"
      DeleteInstanceProfile = "devicefarm:DeleteInstanceProfile"
      DeleteNetworkProfile = "devicefarm:DeleteNetworkProfile"
      DeleteProject = "devicefarm:DeleteProject"
      DeleteRemoteAccessSession = "devicefarm:DeleteRemoteAccessSession"
      DeleteRun = "devicefarm:DeleteRun"
      DeleteTestGridProject = "devicefarm:DeleteTestGridProject"
      DeleteUpload = "devicefarm:DeleteUpload"
      DeleteVPCEConfiguration = "devicefarm:DeleteVPCEConfiguration"
      GetAccountSettings = "devicefarm:GetAccountSettings"
      GetDevice = "devicefarm:GetDevice"
      GetDeviceInstance = "devicefarm:GetDeviceInstance"
      GetDevicePool = "devicefarm:GetDevicePool"
      GetDevicePoolCompatibility = "devicefarm:GetDevicePoolCompatibility"
      GetInstanceProfile = "devicefarm:GetInstanceProfile"
      GetJob = "devicefarm:GetJob"
      GetNetworkProfile = "devicefarm:GetNetworkProfile"
      GetOfferingStatus = "devicefarm:GetOfferingStatus"
      GetProject = "devicefarm:GetProject"
      GetRemoteAccessSession = "devicefarm:GetRemoteAccessSession"
      GetRun = "devicefarm:GetRun"
      GetSuite = "devicefarm:GetSuite"
      GetTest = "devicefarm:GetTest"
      GetTestGridProject = "devicefarm:GetTestGridProject"
      GetTestGridSession = "devicefarm:GetTestGridSession"
      GetUpload = "devicefarm:GetUpload"
      GetVPCEConfiguration = "devicefarm:GetVPCEConfiguration"
      InstallToRemoteAccessSession = "devicefarm:InstallToRemoteAccessSession"
      ListArtifacts = "devicefarm:ListArtifacts"
      ListDeviceInstances = "devicefarm:ListDeviceInstances"
      ListDevicePools = "devicefarm:ListDevicePools"
      ListDevices = "devicefarm:ListDevices"
      ListInstanceProfiles = "devicefarm:ListInstanceProfiles"
      ListJobs = "devicefarm:ListJobs"
      ListNetworkProfiles = "devicefarm:ListNetworkProfiles"
      ListOfferingPromotions = "devicefarm:ListOfferingPromotions"
      ListOfferingTransactions = "devicefarm:ListOfferingTransactions"
      ListOfferings = "devicefarm:ListOfferings"
      ListProjects = "devicefarm:ListProjects"
      ListRemoteAccessSessions = "devicefarm:ListRemoteAccessSessions"
      ListRuns = "devicefarm:ListRuns"
      ListSamples = "devicefarm:ListSamples"
      ListSuites = "devicefarm:ListSuites"
      ListTagsForResource = "devicefarm:ListTagsForResource"
      ListTestGridProjects = "devicefarm:ListTestGridProjects"
      ListTestGridSessionActions = "devicefarm:ListTestGridSessionActions"
      ListTestGridSessionArtifacts = "devicefarm:ListTestGridSessionArtifacts"
      ListTestGridSessions = "devicefarm:ListTestGridSessions"
      ListTests = "devicefarm:ListTests"
      ListUniqueProblems = "devicefarm:ListUniqueProblems"
      ListUploads = "devicefarm:ListUploads"
      ListVPCEConfigurations = "devicefarm:ListVPCEConfigurations"
      PurchaseOffering = "devicefarm:PurchaseOffering"
      RenewOffering = "devicefarm:RenewOffering"
      ScheduleRun = "devicefarm:ScheduleRun"
      StopJob = "devicefarm:StopJob"
      StopRemoteAccessSession = "devicefarm:StopRemoteAccessSession"
      StopRun = "devicefarm:StopRun"
      TagResource = "devicefarm:TagResource"
      UntagResource = "devicefarm:UntagResource"
      UpdateDeviceInstance = "devicefarm:UpdateDeviceInstance"
      UpdateDevicePool = "devicefarm:UpdateDevicePool"
      UpdateInstanceProfile = "devicefarm:UpdateInstanceProfile"
      UpdateNetworkProfile = "devicefarm:UpdateNetworkProfile"
      UpdateProject = "devicefarm:UpdateProject"
      UpdateTestGridProject = "devicefarm:UpdateTestGridProject"
      UpdateUpload = "devicefarm:UpdateUpload"
      UpdateVPCEConfiguration = "devicefarm:UpdateVPCEConfiguration"
    }
    devops-guru = {
      AllActions = "devops-guru:*"
      AddNotificationChannel = "devops-guru:AddNotificationChannel"
      DeleteInsight = "devops-guru:DeleteInsight"
      DescribeAccountHealth = "devops-guru:DescribeAccountHealth"
      DescribeAccountOverview = "devops-guru:DescribeAccountOverview"
      DescribeAnomaly = "devops-guru:DescribeAnomaly"
      DescribeEventSourcesConfig = "devops-guru:DescribeEventSourcesConfig"
      DescribeFeedback = "devops-guru:DescribeFeedback"
      DescribeInsight = "devops-guru:DescribeInsight"
      DescribeOrganizationHealth = "devops-guru:DescribeOrganizationHealth"
      DescribeOrganizationOverview = "devops-guru:DescribeOrganizationOverview"
      DescribeOrganizationResourceCollectionHealth = "devops-guru:DescribeOrganizationResourceCollectionHealth"
      DescribeResourceCollectionHealth = "devops-guru:DescribeResourceCollectionHealth"
      DescribeServiceIntegration = "devops-guru:DescribeServiceIntegration"
      GetCostEstimation = "devops-guru:GetCostEstimation"
      GetResourceCollection = "devops-guru:GetResourceCollection"
      ListAnomaliesForInsight = "devops-guru:ListAnomaliesForInsight"
      ListAnomalousLogGroups = "devops-guru:ListAnomalousLogGroups"
      ListEvents = "devops-guru:ListEvents"
      ListInsights = "devops-guru:ListInsights"
      ListMonitoredResources = "devops-guru:ListMonitoredResources"
      ListNotificationChannels = "devops-guru:ListNotificationChannels"
      ListOrganizationInsights = "devops-guru:ListOrganizationInsights"
      ListRecommendations = "devops-guru:ListRecommendations"
      PutFeedback = "devops-guru:PutFeedback"
      RemoveNotificationChannel = "devops-guru:RemoveNotificationChannel"
      SearchInsights = "devops-guru:SearchInsights"
      SearchOrganizationInsights = "devops-guru:SearchOrganizationInsights"
      StartCostEstimation = "devops-guru:StartCostEstimation"
      UpdateEventSourcesConfig = "devops-guru:UpdateEventSourcesConfig"
      UpdateResourceCollection = "devops-guru:UpdateResourceCollection"
      UpdateServiceIntegration = "devops-guru:UpdateServiceIntegration"
    }
    directconnect = {
      AllActions = "directconnect:*"
      AcceptDirectConnectGatewayAssociationProposal = "directconnect:AcceptDirectConnectGatewayAssociationProposal"
      AllocateConnectionOnInterconnect = "directconnect:AllocateConnectionOnInterconnect"
      AllocateHostedConnection = "directconnect:AllocateHostedConnection"
      AllocatePrivateVirtualInterface = "directconnect:AllocatePrivateVirtualInterface"
      AllocatePublicVirtualInterface = "directconnect:AllocatePublicVirtualInterface"
      AllocateTransitVirtualInterface = "directconnect:AllocateTransitVirtualInterface"
      AssociateConnectionWithLag = "directconnect:AssociateConnectionWithLag"
      AssociateHostedConnection = "directconnect:AssociateHostedConnection"
      AssociateMacSecKey = "directconnect:AssociateMacSecKey"
      AssociateVirtualInterface = "directconnect:AssociateVirtualInterface"
      ConfirmConnection = "directconnect:ConfirmConnection"
      ConfirmCustomerAgreement = "directconnect:ConfirmCustomerAgreement"
      ConfirmPrivateVirtualInterface = "directconnect:ConfirmPrivateVirtualInterface"
      ConfirmPublicVirtualInterface = "directconnect:ConfirmPublicVirtualInterface"
      ConfirmTransitVirtualInterface = "directconnect:ConfirmTransitVirtualInterface"
      CreateBGPPeer = "directconnect:CreateBGPPeer"
      CreateConnection = "directconnect:CreateConnection"
      CreateDirectConnectGateway = "directconnect:CreateDirectConnectGateway"
      CreateDirectConnectGatewayAssociation = "directconnect:CreateDirectConnectGatewayAssociation"
      CreateDirectConnectGatewayAssociationProposal = "directconnect:CreateDirectConnectGatewayAssociationProposal"
      CreateInterconnect = "directconnect:CreateInterconnect"
      CreateLag = "directconnect:CreateLag"
      CreatePrivateVirtualInterface = "directconnect:CreatePrivateVirtualInterface"
      CreatePublicVirtualInterface = "directconnect:CreatePublicVirtualInterface"
      CreateTransitVirtualInterface = "directconnect:CreateTransitVirtualInterface"
      DeleteBGPPeer = "directconnect:DeleteBGPPeer"
      DeleteConnection = "directconnect:DeleteConnection"
      DeleteDirectConnectGateway = "directconnect:DeleteDirectConnectGateway"
      DeleteDirectConnectGatewayAssociation = "directconnect:DeleteDirectConnectGatewayAssociation"
      DeleteDirectConnectGatewayAssociationProposal = "directconnect:DeleteDirectConnectGatewayAssociationProposal"
      DeleteInterconnect = "directconnect:DeleteInterconnect"
      DeleteLag = "directconnect:DeleteLag"
      DeleteVirtualInterface = "directconnect:DeleteVirtualInterface"
      DescribeConnectionLoa = "directconnect:DescribeConnectionLoa"
      DescribeConnections = "directconnect:DescribeConnections"
      DescribeConnectionsOnInterconnect = "directconnect:DescribeConnectionsOnInterconnect"
      DescribeCustomerMetadata = "directconnect:DescribeCustomerMetadata"
      DescribeDirectConnectGatewayAssociationProposals = "directconnect:DescribeDirectConnectGatewayAssociationProposals"
      DescribeDirectConnectGatewayAssociations = "directconnect:DescribeDirectConnectGatewayAssociations"
      DescribeDirectConnectGatewayAttachments = "directconnect:DescribeDirectConnectGatewayAttachments"
      DescribeDirectConnectGateways = "directconnect:DescribeDirectConnectGateways"
      DescribeHostedConnections = "directconnect:DescribeHostedConnections"
      DescribeInterconnectLoa = "directconnect:DescribeInterconnectLoa"
      DescribeInterconnects = "directconnect:DescribeInterconnects"
      DescribeLags = "directconnect:DescribeLags"
      DescribeLoa = "directconnect:DescribeLoa"
      DescribeLocations = "directconnect:DescribeLocations"
      DescribeRouterConfiguration = "directconnect:DescribeRouterConfiguration"
      DescribeTags = "directconnect:DescribeTags"
      DescribeVirtualGateways = "directconnect:DescribeVirtualGateways"
      DescribeVirtualInterfaces = "directconnect:DescribeVirtualInterfaces"
      DisassociateConnectionFromLag = "directconnect:DisassociateConnectionFromLag"
      DisassociateMacSecKey = "directconnect:DisassociateMacSecKey"
      ListVirtualInterfaceTestHistory = "directconnect:ListVirtualInterfaceTestHistory"
      StartBgpFailoverTest = "directconnect:StartBgpFailoverTest"
      StopBgpFailoverTest = "directconnect:StopBgpFailoverTest"
      TagResource = "directconnect:TagResource"
      UntagResource = "directconnect:UntagResource"
      UpdateConnection = "directconnect:UpdateConnection"
      UpdateDirectConnectGateway = "directconnect:UpdateDirectConnectGateway"
      UpdateDirectConnectGatewayAssociation = "directconnect:UpdateDirectConnectGatewayAssociation"
      UpdateLag = "directconnect:UpdateLag"
      UpdateVirtualInterfaceAttributes = "directconnect:UpdateVirtualInterfaceAttributes"
    }
    discovery = {
      AllActions = "discovery:*"
      AssociateConfigurationItemsToApplication = "discovery:AssociateConfigurationItemsToApplication"
      BatchDeleteAgents = "discovery:BatchDeleteAgents"
      BatchDeleteImportData = "discovery:BatchDeleteImportData"
      CreateApplication = "discovery:CreateApplication"
      CreateTags = "discovery:CreateTags"
      DeleteApplications = "discovery:DeleteApplications"
      DeleteTags = "discovery:DeleteTags"
      DescribeAgents = "discovery:DescribeAgents"
      DescribeBatchDeleteConfigurationTask = "discovery:DescribeBatchDeleteConfigurationTask"
      DescribeConfigurations = "discovery:DescribeConfigurations"
      DescribeContinuousExports = "discovery:DescribeContinuousExports"
      DescribeExportConfigurations = "discovery:DescribeExportConfigurations"
      DescribeExportTasks = "discovery:DescribeExportTasks"
      DescribeImportTasks = "discovery:DescribeImportTasks"
      DescribeTags = "discovery:DescribeTags"
      DisassociateConfigurationItemsFromApplication = "discovery:DisassociateConfigurationItemsFromApplication"
      ExportConfigurations = "discovery:ExportConfigurations"
      GetDiscoverySummary = "discovery:GetDiscoverySummary"
      GetNetworkConnectionGraph = "discovery:GetNetworkConnectionGraph"
      ListConfigurations = "discovery:ListConfigurations"
      ListServerNeighbors = "discovery:ListServerNeighbors"
      StartBatchDeleteConfigurationTask = "discovery:StartBatchDeleteConfigurationTask"
      StartContinuousExport = "discovery:StartContinuousExport"
      StartDataCollectionByAgentIds = "discovery:StartDataCollectionByAgentIds"
      StartExportTask = "discovery:StartExportTask"
      StartImportTask = "discovery:StartImportTask"
      StopContinuousExport = "discovery:StopContinuousExport"
      StopDataCollectionByAgentIds = "discovery:StopDataCollectionByAgentIds"
      UpdateApplication = "discovery:UpdateApplication"
    }
    dlm = {
      AllActions = "dlm:*"
      CreateLifecyclePolicy = "dlm:CreateLifecyclePolicy"
      DeleteLifecyclePolicy = "dlm:DeleteLifecyclePolicy"
      GetLifecyclePolicies = "dlm:GetLifecyclePolicies"
      GetLifecyclePolicy = "dlm:GetLifecyclePolicy"
      ListTagsForResource = "dlm:ListTagsForResource"
      TagResource = "dlm:TagResource"
      UntagResource = "dlm:UntagResource"
      UpdateLifecyclePolicy = "dlm:UpdateLifecyclePolicy"
    }
    dms = {
      AllActions = "dms:*"
      AddTagsToResource = "dms:AddTagsToResource"
      ApplyPendingMaintenanceAction = "dms:ApplyPendingMaintenanceAction"
      AssociateExtensionPack = "dms:AssociateExtensionPack"
      BatchStartRecommendations = "dms:BatchStartRecommendations"
      CancelMetadataModelAssessment = "dms:CancelMetadataModelAssessment"
      CancelMetadataModelConversion = "dms:CancelMetadataModelConversion"
      CancelMetadataModelExport = "dms:CancelMetadataModelExport"
      CancelReplicationTaskAssessmentRun = "dms:CancelReplicationTaskAssessmentRun"
      CreateDataMigration = "dms:CreateDataMigration"
      CreateDataProvider = "dms:CreateDataProvider"
      CreateEndpoint = "dms:CreateEndpoint"
      CreateEventSubscription = "dms:CreateEventSubscription"
      CreateFleetAdvisorCollector = "dms:CreateFleetAdvisorCollector"
      CreateInstanceProfile = "dms:CreateInstanceProfile"
      CreateMigrationProject = "dms:CreateMigrationProject"
      CreateReplicationConfig = "dms:CreateReplicationConfig"
      CreateReplicationInstance = "dms:CreateReplicationInstance"
      CreateReplicationSubnetGroup = "dms:CreateReplicationSubnetGroup"
      CreateReplicationTask = "dms:CreateReplicationTask"
      DeleteCertificate = "dms:DeleteCertificate"
      DeleteConnection = "dms:DeleteConnection"
      DeleteDataMigration = "dms:DeleteDataMigration"
      DeleteDataProvider = "dms:DeleteDataProvider"
      DeleteEndpoint = "dms:DeleteEndpoint"
      DeleteEventSubscription = "dms:DeleteEventSubscription"
      DeleteFleetAdvisorCollector = "dms:DeleteFleetAdvisorCollector"
      DeleteFleetAdvisorDatabases = "dms:DeleteFleetAdvisorDatabases"
      DeleteInstanceProfile = "dms:DeleteInstanceProfile"
      DeleteMigrationProject = "dms:DeleteMigrationProject"
      DeleteReplicationConfig = "dms:DeleteReplicationConfig"
      DeleteReplicationInstance = "dms:DeleteReplicationInstance"
      DeleteReplicationSubnetGroup = "dms:DeleteReplicationSubnetGroup"
      DeleteReplicationTask = "dms:DeleteReplicationTask"
      DeleteReplicationTaskAssessmentRun = "dms:DeleteReplicationTaskAssessmentRun"
      DescribeAccountAttributes = "dms:DescribeAccountAttributes"
      DescribeApplicableIndividualAssessments = "dms:DescribeApplicableIndividualAssessments"
      DescribeCertificates = "dms:DescribeCertificates"
      DescribeConnections = "dms:DescribeConnections"
      DescribeConversionConfiguration = "dms:DescribeConversionConfiguration"
      DescribeDataMigrations = "dms:DescribeDataMigrations"
      DescribeDataProviders = "dms:DescribeDataProviders"
      DescribeEndpointSettings = "dms:DescribeEndpointSettings"
      DescribeEndpointTypes = "dms:DescribeEndpointTypes"
      DescribeEndpoints = "dms:DescribeEndpoints"
      DescribeEngineVersions = "dms:DescribeEngineVersions"
      DescribeEventCategories = "dms:DescribeEventCategories"
      DescribeEventSubscriptions = "dms:DescribeEventSubscriptions"
      DescribeEvents = "dms:DescribeEvents"
      DescribeExtensionPackAssociations = "dms:DescribeExtensionPackAssociations"
      DescribeFleetAdvisorCollectors = "dms:DescribeFleetAdvisorCollectors"
      DescribeFleetAdvisorDatabases = "dms:DescribeFleetAdvisorDatabases"
      DescribeFleetAdvisorLsaAnalysis = "dms:DescribeFleetAdvisorLsaAnalysis"
      DescribeFleetAdvisorSchemaObjectSummary = "dms:DescribeFleetAdvisorSchemaObjectSummary"
      DescribeFleetAdvisorSchemas = "dms:DescribeFleetAdvisorSchemas"
      DescribeInstanceProfiles = "dms:DescribeInstanceProfiles"
      DescribeMetadataModelAssessments = "dms:DescribeMetadataModelAssessments"
      DescribeMetadataModelConversions = "dms:DescribeMetadataModelConversions"
      DescribeMetadataModelExportsAsScript = "dms:DescribeMetadataModelExportsAsScript"
      DescribeMetadataModelExportsToTarget = "dms:DescribeMetadataModelExportsToTarget"
      DescribeMetadataModelImports = "dms:DescribeMetadataModelImports"
      DescribeMigrationProjects = "dms:DescribeMigrationProjects"
      DescribeOrderableReplicationInstances = "dms:DescribeOrderableReplicationInstances"
      DescribePendingMaintenanceActions = "dms:DescribePendingMaintenanceActions"
      DescribeRecommendationLimitations = "dms:DescribeRecommendationLimitations"
      DescribeRecommendations = "dms:DescribeRecommendations"
      DescribeRefreshSchemasStatus = "dms:DescribeRefreshSchemasStatus"
      DescribeReplicationConfigs = "dms:DescribeReplicationConfigs"
      DescribeReplicationInstanceTaskLogs = "dms:DescribeReplicationInstanceTaskLogs"
      DescribeReplicationInstances = "dms:DescribeReplicationInstances"
      DescribeReplicationSubnetGroups = "dms:DescribeReplicationSubnetGroups"
      DescribeReplicationTableStatistics = "dms:DescribeReplicationTableStatistics"
      DescribeReplicationTaskAssessmentResults = "dms:DescribeReplicationTaskAssessmentResults"
      DescribeReplicationTaskAssessmentRuns = "dms:DescribeReplicationTaskAssessmentRuns"
      DescribeReplicationTaskIndividualAssessments = "dms:DescribeReplicationTaskIndividualAssessments"
      DescribeReplicationTasks = "dms:DescribeReplicationTasks"
      DescribeReplications = "dms:DescribeReplications"
      DescribeSchemas = "dms:DescribeSchemas"
      DescribeTableStatistics = "dms:DescribeTableStatistics"
      DisassociateExtensionPack = "dms:DisassociateExtensionPack"
      ExportMetadataModelAssessment = "dms:ExportMetadataModelAssessment"
      GetMetadataModel = "dms:GetMetadataModel"
      ImportCertificate = "dms:ImportCertificate"
      ListDataProviders = "dms:ListDataProviders"
      ListExtensionPacks = "dms:ListExtensionPacks"
      ListInstanceProfiles = "dms:ListInstanceProfiles"
      ListMetadataModelAssessmentActionItems = "dms:ListMetadataModelAssessmentActionItems"
      ListMetadataModelAssessments = "dms:ListMetadataModelAssessments"
      ListMetadataModelConversions = "dms:ListMetadataModelConversions"
      ListMetadataModelExports = "dms:ListMetadataModelExports"
      ListMigrationProjects = "dms:ListMigrationProjects"
      ListTagsForResource = "dms:ListTagsForResource"
      ModifyConversionConfiguration = "dms:ModifyConversionConfiguration"
      ModifyDataMigration = "dms:ModifyDataMigration"
      ModifyDataProvider = "dms:ModifyDataProvider"
      ModifyEndpoint = "dms:ModifyEndpoint"
      ModifyEventSubscription = "dms:ModifyEventSubscription"
      ModifyFleetAdvisorCollector = "dms:ModifyFleetAdvisorCollector"
      ModifyFleetAdvisorCollectorStatuses = "dms:ModifyFleetAdvisorCollectorStatuses"
      ModifyInstanceProfile = "dms:ModifyInstanceProfile"
      ModifyMigrationProject = "dms:ModifyMigrationProject"
      ModifyReplicationConfig = "dms:ModifyReplicationConfig"
      ModifyReplicationInstance = "dms:ModifyReplicationInstance"
      ModifyReplicationSubnetGroup = "dms:ModifyReplicationSubnetGroup"
      ModifyReplicationTask = "dms:ModifyReplicationTask"
      MoveReplicationTask = "dms:MoveReplicationTask"
      RebootReplicationInstance = "dms:RebootReplicationInstance"
      RefreshSchemas = "dms:RefreshSchemas"
      ReloadReplicationTables = "dms:ReloadReplicationTables"
      ReloadTables = "dms:ReloadTables"
      RemoveTagsFromResource = "dms:RemoveTagsFromResource"
      RunFleetAdvisorLsaAnalysis = "dms:RunFleetAdvisorLsaAnalysis"
      StartDataMigration = "dms:StartDataMigration"
      StartExtensionPackAssociation = "dms:StartExtensionPackAssociation"
      StartMetadataModelAssessment = "dms:StartMetadataModelAssessment"
      StartMetadataModelConversion = "dms:StartMetadataModelConversion"
      StartMetadataModelExportAsScript = "dms:StartMetadataModelExportAsScript"
      StartMetadataModelExportAsScripts = "dms:StartMetadataModelExportAsScripts"
      StartMetadataModelExportToTarget = "dms:StartMetadataModelExportToTarget"
      StartMetadataModelImport = "dms:StartMetadataModelImport"
      StartRecommendations = "dms:StartRecommendations"
      StartReplication = "dms:StartReplication"
      StartReplicationTask = "dms:StartReplicationTask"
      StartReplicationTaskAssessment = "dms:StartReplicationTaskAssessment"
      StartReplicationTaskAssessmentRun = "dms:StartReplicationTaskAssessmentRun"
      StopDataMigration = "dms:StopDataMigration"
      StopReplication = "dms:StopReplication"
      StopReplicationTask = "dms:StopReplicationTask"
      TestConnection = "dms:TestConnection"
      UpdateConversionConfiguration = "dms:UpdateConversionConfiguration"
      UpdateDataProvider = "dms:UpdateDataProvider"
      UpdateInstanceProfile = "dms:UpdateInstanceProfile"
      UpdateMigrationProject = "dms:UpdateMigrationProject"
      UpdateSubscriptionsToEventBridge = "dms:UpdateSubscriptionsToEventBridge"
      UploadFileMetadataList = "dms:UploadFileMetadataList"
    }
    docdb-elastic = {
      AllActions = "docdb-elastic:*"
      CopyClusterSnapshot = "docdb-elastic:CopyClusterSnapshot"
      CreateCluster = "docdb-elastic:CreateCluster"
      CreateClusterSnapshot = "docdb-elastic:CreateClusterSnapshot"
      DeleteCluster = "docdb-elastic:DeleteCluster"
      DeleteClusterSnapshot = "docdb-elastic:DeleteClusterSnapshot"
      GetCluster = "docdb-elastic:GetCluster"
      GetClusterSnapshot = "docdb-elastic:GetClusterSnapshot"
      ListClusterSnapshots = "docdb-elastic:ListClusterSnapshots"
      ListClusters = "docdb-elastic:ListClusters"
      ListTagsForResource = "docdb-elastic:ListTagsForResource"
      RestoreClusterFromSnapshot = "docdb-elastic:RestoreClusterFromSnapshot"
      StartCluster = "docdb-elastic:StartCluster"
      StopCluster = "docdb-elastic:StopCluster"
      TagResource = "docdb-elastic:TagResource"
      UntagResource = "docdb-elastic:UntagResource"
      UpdateCluster = "docdb-elastic:UpdateCluster"
    }
    drs = {
      AllActions = "drs:*"
      AssociateFailbackClientToRecoveryInstanceForDrs = "drs:AssociateFailbackClientToRecoveryInstanceForDrs"
      AssociateSourceNetworkStack = "drs:AssociateSourceNetworkStack"
      BatchCreateVolumeSnapshotGroupForDrs = "drs:BatchCreateVolumeSnapshotGroupForDrs"
      BatchDeleteSnapshotRequestForDrs = "drs:BatchDeleteSnapshotRequestForDrs"
      CreateConvertedSnapshotForDrs = "drs:CreateConvertedSnapshotForDrs"
      CreateExtendedSourceServer = "drs:CreateExtendedSourceServer"
      CreateLaunchConfigurationTemplate = "drs:CreateLaunchConfigurationTemplate"
      CreateRecoveryInstanceForDrs = "drs:CreateRecoveryInstanceForDrs"
      CreateReplicationConfigurationTemplate = "drs:CreateReplicationConfigurationTemplate"
      CreateSourceNetwork = "drs:CreateSourceNetwork"
      CreateSourceServerForDrs = "drs:CreateSourceServerForDrs"
      DeleteJob = "drs:DeleteJob"
      DeleteLaunchAction = "drs:DeleteLaunchAction"
      DeleteLaunchConfigurationTemplate = "drs:DeleteLaunchConfigurationTemplate"
      DeleteRecoveryInstance = "drs:DeleteRecoveryInstance"
      DeleteReplicationConfigurationTemplate = "drs:DeleteReplicationConfigurationTemplate"
      DeleteSourceNetwork = "drs:DeleteSourceNetwork"
      DeleteSourceServer = "drs:DeleteSourceServer"
      DescribeJobLogItems = "drs:DescribeJobLogItems"
      DescribeJobs = "drs:DescribeJobs"
      DescribeLaunchConfigurationTemplates = "drs:DescribeLaunchConfigurationTemplates"
      DescribeRecoveryInstances = "drs:DescribeRecoveryInstances"
      DescribeRecoverySnapshots = "drs:DescribeRecoverySnapshots"
      DescribeReplicationConfigurationTemplates = "drs:DescribeReplicationConfigurationTemplates"
      DescribeReplicationServerAssociationsForDrs = "drs:DescribeReplicationServerAssociationsForDrs"
      DescribeSnapshotRequestsForDrs = "drs:DescribeSnapshotRequestsForDrs"
      DescribeSourceNetworks = "drs:DescribeSourceNetworks"
      DescribeSourceServers = "drs:DescribeSourceServers"
      DisconnectRecoveryInstance = "drs:DisconnectRecoveryInstance"
      DisconnectSourceServer = "drs:DisconnectSourceServer"
      ExportSourceNetworkCfnTemplate = "drs:ExportSourceNetworkCfnTemplate"
      GetAgentCommandForDrs = "drs:GetAgentCommandForDrs"
      GetAgentConfirmedResumeInfoForDrs = "drs:GetAgentConfirmedResumeInfoForDrs"
      GetAgentInstallationAssetsForDrs = "drs:GetAgentInstallationAssetsForDrs"
      GetAgentReplicationInfoForDrs = "drs:GetAgentReplicationInfoForDrs"
      GetAgentRuntimeConfigurationForDrs = "drs:GetAgentRuntimeConfigurationForDrs"
      GetAgentSnapshotCreditsForDrs = "drs:GetAgentSnapshotCreditsForDrs"
      GetChannelCommandsForDrs = "drs:GetChannelCommandsForDrs"
      GetFailbackCommandForDrs = "drs:GetFailbackCommandForDrs"
      GetFailbackLaunchRequestedForDrs = "drs:GetFailbackLaunchRequestedForDrs"
      GetFailbackReplicationConfiguration = "drs:GetFailbackReplicationConfiguration"
      GetLaunchConfiguration = "drs:GetLaunchConfiguration"
      GetReplicationConfiguration = "drs:GetReplicationConfiguration"
      GetSuggestedFailbackClientDeviceMappingForDrs = "drs:GetSuggestedFailbackClientDeviceMappingForDrs"
      InitializeService = "drs:InitializeService"
      IssueAgentCertificateForDrs = "drs:IssueAgentCertificateForDrs"
      ListExtensibleSourceServers = "drs:ListExtensibleSourceServers"
      ListLaunchActions = "drs:ListLaunchActions"
      ListStagingAccounts = "drs:ListStagingAccounts"
      ListTagsForResource = "drs:ListTagsForResource"
      NotifyAgentAuthenticationForDrs = "drs:NotifyAgentAuthenticationForDrs"
      NotifyAgentConnectedForDrs = "drs:NotifyAgentConnectedForDrs"
      NotifyAgentDisconnectedForDrs = "drs:NotifyAgentDisconnectedForDrs"
      NotifyAgentReplicationProgressForDrs = "drs:NotifyAgentReplicationProgressForDrs"
      NotifyConsistencyAttainedForDrs = "drs:NotifyConsistencyAttainedForDrs"
      NotifyReplicationServerAuthenticationForDrs = "drs:NotifyReplicationServerAuthenticationForDrs"
      NotifyVolumeEventForDrs = "drs:NotifyVolumeEventForDrs"
      PutLaunchAction = "drs:PutLaunchAction"
      RetryDataReplication = "drs:RetryDataReplication"
      ReverseReplication = "drs:ReverseReplication"
      SendAgentLogsForDrs = "drs:SendAgentLogsForDrs"
      SendAgentMetricsForDrs = "drs:SendAgentMetricsForDrs"
      SendChannelCommandResultForDrs = "drs:SendChannelCommandResultForDrs"
      SendClientLogsForDrs = "drs:SendClientLogsForDrs"
      SendClientMetricsForDrs = "drs:SendClientMetricsForDrs"
      SendVolumeStatsForDrs = "drs:SendVolumeStatsForDrs"
      StartFailbackLaunch = "drs:StartFailbackLaunch"
      StartRecovery = "drs:StartRecovery"
      StartReplication = "drs:StartReplication"
      StartSourceNetworkRecovery = "drs:StartSourceNetworkRecovery"
      StartSourceNetworkReplication = "drs:StartSourceNetworkReplication"
      StopFailback = "drs:StopFailback"
      StopReplication = "drs:StopReplication"
      StopSourceNetworkReplication = "drs:StopSourceNetworkReplication"
      TagResource = "drs:TagResource"
      TerminateRecoveryInstances = "drs:TerminateRecoveryInstances"
      UntagResource = "drs:UntagResource"
      UpdateAgentBacklogForDrs = "drs:UpdateAgentBacklogForDrs"
      UpdateAgentConversionInfoForDrs = "drs:UpdateAgentConversionInfoForDrs"
      UpdateAgentReplicationInfoForDrs = "drs:UpdateAgentReplicationInfoForDrs"
      UpdateAgentReplicationProcessStateForDrs = "drs:UpdateAgentReplicationProcessStateForDrs"
      UpdateAgentSourcePropertiesForDrs = "drs:UpdateAgentSourcePropertiesForDrs"
      UpdateFailbackClientDeviceMappingForDrs = "drs:UpdateFailbackClientDeviceMappingForDrs"
      UpdateFailbackClientLastSeenForDrs = "drs:UpdateFailbackClientLastSeenForDrs"
      UpdateFailbackReplicationConfiguration = "drs:UpdateFailbackReplicationConfiguration"
      UpdateLaunchConfiguration = "drs:UpdateLaunchConfiguration"
      UpdateLaunchConfigurationTemplate = "drs:UpdateLaunchConfigurationTemplate"
      UpdateReplicationCertificateForDrs = "drs:UpdateReplicationCertificateForDrs"
      UpdateReplicationConfiguration = "drs:UpdateReplicationConfiguration"
      UpdateReplicationConfigurationTemplate = "drs:UpdateReplicationConfigurationTemplate"
    }
    ds = {
      AllActions = "ds:*"
      AcceptSharedDirectory = "ds:AcceptSharedDirectory"
      AddIpRoutes = "ds:AddIpRoutes"
      AddRegion = "ds:AddRegion"
      AddTagsToResource = "ds:AddTagsToResource"
      AuthorizeApplication = "ds:AuthorizeApplication"
      CancelSchemaExtension = "ds:CancelSchemaExtension"
      CheckAlias = "ds:CheckAlias"
      ConnectDirectory = "ds:ConnectDirectory"
      CreateAlias = "ds:CreateAlias"
      CreateComputer = "ds:CreateComputer"
      CreateConditionalForwarder = "ds:CreateConditionalForwarder"
      CreateDirectory = "ds:CreateDirectory"
      CreateIdentityPoolDirectory = "ds:CreateIdentityPoolDirectory"
      CreateLogSubscription = "ds:CreateLogSubscription"
      CreateMicrosoftAD = "ds:CreateMicrosoftAD"
      CreateSnapshot = "ds:CreateSnapshot"
      CreateTrust = "ds:CreateTrust"
      DeleteConditionalForwarder = "ds:DeleteConditionalForwarder"
      DeleteDirectory = "ds:DeleteDirectory"
      DeleteLogSubscription = "ds:DeleteLogSubscription"
      DeleteSnapshot = "ds:DeleteSnapshot"
      DeleteTrust = "ds:DeleteTrust"
      DeregisterCertificate = "ds:DeregisterCertificate"
      DeregisterEventTopic = "ds:DeregisterEventTopic"
      DescribeCertificate = "ds:DescribeCertificate"
      DescribeClientAuthenticationSettings = "ds:DescribeClientAuthenticationSettings"
      DescribeConditionalForwarders = "ds:DescribeConditionalForwarders"
      DescribeDirectories = "ds:DescribeDirectories"
      DescribeDomainControllers = "ds:DescribeDomainControllers"
      DescribeEventTopics = "ds:DescribeEventTopics"
      DescribeLDAPSSettings = "ds:DescribeLDAPSSettings"
      DescribeRegions = "ds:DescribeRegions"
      DescribeSettings = "ds:DescribeSettings"
      DescribeSharedDirectories = "ds:DescribeSharedDirectories"
      DescribeSnapshots = "ds:DescribeSnapshots"
      DescribeTrusts = "ds:DescribeTrusts"
      DescribeUpdateDirectory = "ds:DescribeUpdateDirectory"
      DisableClientAuthentication = "ds:DisableClientAuthentication"
      DisableLDAPS = "ds:DisableLDAPS"
      DisableRadius = "ds:DisableRadius"
      DisableRoleAccess = "ds:DisableRoleAccess"
      DisableSso = "ds:DisableSso"
      EnableClientAuthentication = "ds:EnableClientAuthentication"
      EnableLDAPS = "ds:EnableLDAPS"
      EnableRadius = "ds:EnableRadius"
      EnableRoleAccess = "ds:EnableRoleAccess"
      EnableSso = "ds:EnableSso"
      GetAuthorizedApplicationDetails = "ds:GetAuthorizedApplicationDetails"
      GetDirectoryLimits = "ds:GetDirectoryLimits"
      GetSnapshotLimits = "ds:GetSnapshotLimits"
      ListAuthorizedApplications = "ds:ListAuthorizedApplications"
      ListCertificates = "ds:ListCertificates"
      ListIpRoutes = "ds:ListIpRoutes"
      ListLogSubscriptions = "ds:ListLogSubscriptions"
      ListSchemaExtensions = "ds:ListSchemaExtensions"
      ListTagsForResource = "ds:ListTagsForResource"
      RegisterCertificate = "ds:RegisterCertificate"
      RegisterEventTopic = "ds:RegisterEventTopic"
      RejectSharedDirectory = "ds:RejectSharedDirectory"
      RemoveIpRoutes = "ds:RemoveIpRoutes"
      RemoveRegion = "ds:RemoveRegion"
      RemoveTagsFromResource = "ds:RemoveTagsFromResource"
      ResetUserPassword = "ds:ResetUserPassword"
      RestoreFromSnapshot = "ds:RestoreFromSnapshot"
      ShareDirectory = "ds:ShareDirectory"
      StartSchemaExtension = "ds:StartSchemaExtension"
      UnauthorizeApplication = "ds:UnauthorizeApplication"
      UnshareDirectory = "ds:UnshareDirectory"
      UpdateAuthorizedApplication = "ds:UpdateAuthorizedApplication"
      UpdateConditionalForwarder = "ds:UpdateConditionalForwarder"
      UpdateDirectory = "ds:UpdateDirectory"
      UpdateDirectorySetup = "ds:UpdateDirectorySetup"
      UpdateNumberOfDomainControllers = "ds:UpdateNumberOfDomainControllers"
      UpdateRadius = "ds:UpdateRadius"
      UpdateSettings = "ds:UpdateSettings"
      UpdateTrust = "ds:UpdateTrust"
      VerifyTrust = "ds:VerifyTrust"
    }
    dynamodb = {
      AllActions = "dynamodb:*"
      BatchGetItem = "dynamodb:BatchGetItem"
      BatchWriteItem = "dynamodb:BatchWriteItem"
      ConditionCheckItem = "dynamodb:ConditionCheckItem"
      CreateBackup = "dynamodb:CreateBackup"
      CreateGlobalTable = "dynamodb:CreateGlobalTable"
      CreateTable = "dynamodb:CreateTable"
      CreateTableReplica = "dynamodb:CreateTableReplica"
      DeleteBackup = "dynamodb:DeleteBackup"
      DeleteItem = "dynamodb:DeleteItem"
      DeleteResourcePolicy = "dynamodb:DeleteResourcePolicy"
      DeleteTable = "dynamodb:DeleteTable"
      DeleteTableReplica = "dynamodb:DeleteTableReplica"
      DescribeBackup = "dynamodb:DescribeBackup"
      DescribeContinuousBackups = "dynamodb:DescribeContinuousBackups"
      DescribeContributorInsights = "dynamodb:DescribeContributorInsights"
      DescribeEndpoints = "dynamodb:DescribeEndpoints"
      DescribeExport = "dynamodb:DescribeExport"
      DescribeGlobalTable = "dynamodb:DescribeGlobalTable"
      DescribeGlobalTableSettings = "dynamodb:DescribeGlobalTableSettings"
      DescribeImport = "dynamodb:DescribeImport"
      DescribeKinesisStreamingDestination = "dynamodb:DescribeKinesisStreamingDestination"
      DescribeLimits = "dynamodb:DescribeLimits"
      DescribeReservedCapacity = "dynamodb:DescribeReservedCapacity"
      DescribeReservedCapacityOfferings = "dynamodb:DescribeReservedCapacityOfferings"
      DescribeStream = "dynamodb:DescribeStream"
      DescribeTable = "dynamodb:DescribeTable"
      DescribeTableReplicaAutoScaling = "dynamodb:DescribeTableReplicaAutoScaling"
      DescribeTimeToLive = "dynamodb:DescribeTimeToLive"
      DisableKinesisStreamingDestination = "dynamodb:DisableKinesisStreamingDestination"
      EnableKinesisStreamingDestination = "dynamodb:EnableKinesisStreamingDestination"
      ExportTableToPointInTime = "dynamodb:ExportTableToPointInTime"
      GetItem = "dynamodb:GetItem"
      GetRecords = "dynamodb:GetRecords"
      GetResourcePolicy = "dynamodb:GetResourcePolicy"
      GetShardIterator = "dynamodb:GetShardIterator"
      ImportTable = "dynamodb:ImportTable"
      ListBackups = "dynamodb:ListBackups"
      ListContributorInsights = "dynamodb:ListContributorInsights"
      ListExports = "dynamodb:ListExports"
      ListGlobalTables = "dynamodb:ListGlobalTables"
      ListImports = "dynamodb:ListImports"
      ListStreams = "dynamodb:ListStreams"
      ListTables = "dynamodb:ListTables"
      ListTagsOfResource = "dynamodb:ListTagsOfResource"
      PartiQLDelete = "dynamodb:PartiQLDelete"
      PartiQLInsert = "dynamodb:PartiQLInsert"
      PartiQLSelect = "dynamodb:PartiQLSelect"
      PartiQLUpdate = "dynamodb:PartiQLUpdate"
      PurchaseReservedCapacityOfferings = "dynamodb:PurchaseReservedCapacityOfferings"
      PutItem = "dynamodb:PutItem"
      PutResourcePolicy = "dynamodb:PutResourcePolicy"
      Query = "dynamodb:Query"
      RestoreTableFromAwsBackup = "dynamodb:RestoreTableFromAwsBackup"
      RestoreTableFromBackup = "dynamodb:RestoreTableFromBackup"
      RestoreTableToPointInTime = "dynamodb:RestoreTableToPointInTime"
      Scan = "dynamodb:Scan"
      StartAwsBackupJob = "dynamodb:StartAwsBackupJob"
      TagResource = "dynamodb:TagResource"
      UntagResource = "dynamodb:UntagResource"
      UpdateContinuousBackups = "dynamodb:UpdateContinuousBackups"
      UpdateContributorInsights = "dynamodb:UpdateContributorInsights"
      UpdateGlobalTable = "dynamodb:UpdateGlobalTable"
      UpdateGlobalTableSettings = "dynamodb:UpdateGlobalTableSettings"
      UpdateGlobalTableVersion = "dynamodb:UpdateGlobalTableVersion"
      UpdateItem = "dynamodb:UpdateItem"
      UpdateKinesisStreamingDestination = "dynamodb:UpdateKinesisStreamingDestination"
      UpdateTable = "dynamodb:UpdateTable"
      UpdateTableReplicaAutoScaling = "dynamodb:UpdateTableReplicaAutoScaling"
      UpdateTimeToLive = "dynamodb:UpdateTimeToLive"
    }
    ebs = {
      AllActions = "ebs:*"
      CompleteSnapshot = "ebs:CompleteSnapshot"
      GetSnapshotBlock = "ebs:GetSnapshotBlock"
      ListChangedBlocks = "ebs:ListChangedBlocks"
      ListSnapshotBlocks = "ebs:ListSnapshotBlocks"
      PutSnapshotBlock = "ebs:PutSnapshotBlock"
      StartSnapshot = "ebs:StartSnapshot"
    }
    ec2-instance-connect = {
      AllActions = "ec2-instance-connect:*"
      OpenTunnel = "ec2-instance-connect:OpenTunnel"
      SendSSHPublicKey = "ec2-instance-connect:SendSSHPublicKey"
      SendSerialConsoleSSHPublicKey = "ec2-instance-connect:SendSerialConsoleSSHPublicKey"
    }
    ec2 = {
      AllActions = "ec2:*"
      AcceptAddressTransfer = "ec2:AcceptAddressTransfer"
      AcceptReservedInstancesExchangeQuote = "ec2:AcceptReservedInstancesExchangeQuote"
      AcceptTransitGatewayMulticastDomainAssociations = "ec2:AcceptTransitGatewayMulticastDomainAssociations"
      AcceptTransitGatewayPeeringAttachment = "ec2:AcceptTransitGatewayPeeringAttachment"
      AcceptTransitGatewayVpcAttachment = "ec2:AcceptTransitGatewayVpcAttachment"
      AcceptVpcEndpointConnections = "ec2:AcceptVpcEndpointConnections"
      AcceptVpcPeeringConnection = "ec2:AcceptVpcPeeringConnection"
      AdvertiseByoipCidr = "ec2:AdvertiseByoipCidr"
      AllocateAddress = "ec2:AllocateAddress"
      AllocateHosts = "ec2:AllocateHosts"
      AllocateIpamPoolCidr = "ec2:AllocateIpamPoolCidr"
      ApplySecurityGroupsToClientVpnTargetNetwork = "ec2:ApplySecurityGroupsToClientVpnTargetNetwork"
      AssignIpv6Addresses = "ec2:AssignIpv6Addresses"
      AssignPrivateIpAddresses = "ec2:AssignPrivateIpAddresses"
      AssignPrivateNatGatewayAddress = "ec2:AssignPrivateNatGatewayAddress"
      AssociateAddress = "ec2:AssociateAddress"
      AssociateClientVpnTargetNetwork = "ec2:AssociateClientVpnTargetNetwork"
      AssociateDhcpOptions = "ec2:AssociateDhcpOptions"
      AssociateEnclaveCertificateIamRole = "ec2:AssociateEnclaveCertificateIamRole"
      AssociateIamInstanceProfile = "ec2:AssociateIamInstanceProfile"
      AssociateInstanceEventWindow = "ec2:AssociateInstanceEventWindow"
      AssociateIpamByoasn = "ec2:AssociateIpamByoasn"
      AssociateIpamResourceDiscovery = "ec2:AssociateIpamResourceDiscovery"
      AssociateNatGatewayAddress = "ec2:AssociateNatGatewayAddress"
      AssociateRouteTable = "ec2:AssociateRouteTable"
      AssociateSubnetCidrBlock = "ec2:AssociateSubnetCidrBlock"
      AssociateTransitGatewayMulticastDomain = "ec2:AssociateTransitGatewayMulticastDomain"
      AssociateTransitGatewayPolicyTable = "ec2:AssociateTransitGatewayPolicyTable"
      AssociateTransitGatewayRouteTable = "ec2:AssociateTransitGatewayRouteTable"
      AssociateTrunkInterface = "ec2:AssociateTrunkInterface"
      AssociateVerifiedAccessInstanceWebAcl = "ec2:AssociateVerifiedAccessInstanceWebAcl"
      AssociateVpcCidrBlock = "ec2:AssociateVpcCidrBlock"
      AttachClassicLinkVpc = "ec2:AttachClassicLinkVpc"
      AttachInternetGateway = "ec2:AttachInternetGateway"
      AttachNetworkInterface = "ec2:AttachNetworkInterface"
      AttachVerifiedAccessTrustProvider = "ec2:AttachVerifiedAccessTrustProvider"
      AttachVolume = "ec2:AttachVolume"
      AttachVpnGateway = "ec2:AttachVpnGateway"
      AuthorizeClientVpnIngress = "ec2:AuthorizeClientVpnIngress"
      AuthorizeSecurityGroupEgress = "ec2:AuthorizeSecurityGroupEgress"
      AuthorizeSecurityGroupIngress = "ec2:AuthorizeSecurityGroupIngress"
      BundleInstance = "ec2:BundleInstance"
      CancelBundleTask = "ec2:CancelBundleTask"
      CancelCapacityReservation = "ec2:CancelCapacityReservation"
      CancelCapacityReservationFleets = "ec2:CancelCapacityReservationFleets"
      CancelConversionTask = "ec2:CancelConversionTask"
      CancelExportTask = "ec2:CancelExportTask"
      CancelImageLaunchPermission = "ec2:CancelImageLaunchPermission"
      CancelImportTask = "ec2:CancelImportTask"
      CancelReservedInstancesListing = "ec2:CancelReservedInstancesListing"
      CancelSpotFleetRequests = "ec2:CancelSpotFleetRequests"
      CancelSpotInstanceRequests = "ec2:CancelSpotInstanceRequests"
      ConfirmProductInstance = "ec2:ConfirmProductInstance"
      CopyFpgaImage = "ec2:CopyFpgaImage"
      CopyImage = "ec2:CopyImage"
      CopySnapshot = "ec2:CopySnapshot"
      CreateCapacityReservation = "ec2:CreateCapacityReservation"
      CreateCapacityReservationFleet = "ec2:CreateCapacityReservationFleet"
      CreateCarrierGateway = "ec2:CreateCarrierGateway"
      CreateClientVpnEndpoint = "ec2:CreateClientVpnEndpoint"
      CreateClientVpnRoute = "ec2:CreateClientVpnRoute"
      CreateCoipCidr = "ec2:CreateCoipCidr"
      CreateCoipPool = "ec2:CreateCoipPool"
      CreateCoipPoolPermission = "ec2:CreateCoipPoolPermission"
      CreateCustomerGateway = "ec2:CreateCustomerGateway"
      CreateDefaultSubnet = "ec2:CreateDefaultSubnet"
      CreateDefaultVpc = "ec2:CreateDefaultVpc"
      CreateDhcpOptions = "ec2:CreateDhcpOptions"
      CreateEgressOnlyInternetGateway = "ec2:CreateEgressOnlyInternetGateway"
      CreateFleet = "ec2:CreateFleet"
      CreateFlowLogs = "ec2:CreateFlowLogs"
      CreateFpgaImage = "ec2:CreateFpgaImage"
      CreateImage = "ec2:CreateImage"
      CreateInstanceConnectEndpoint = "ec2:CreateInstanceConnectEndpoint"
      CreateInstanceEventWindow = "ec2:CreateInstanceEventWindow"
      CreateInstanceExportTask = "ec2:CreateInstanceExportTask"
      CreateInternetGateway = "ec2:CreateInternetGateway"
      CreateIpam = "ec2:CreateIpam"
      CreateIpamPool = "ec2:CreateIpamPool"
      CreateIpamResourceDiscovery = "ec2:CreateIpamResourceDiscovery"
      CreateIpamScope = "ec2:CreateIpamScope"
      CreateKeyPair = "ec2:CreateKeyPair"
      CreateLaunchTemplate = "ec2:CreateLaunchTemplate"
      CreateLaunchTemplateVersion = "ec2:CreateLaunchTemplateVersion"
      CreateLocalGatewayRoute = "ec2:CreateLocalGatewayRoute"
      CreateLocalGatewayRouteTable = "ec2:CreateLocalGatewayRouteTable"
      CreateLocalGatewayRouteTablePermission = "ec2:CreateLocalGatewayRouteTablePermission"
      CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation = "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation"
      CreateLocalGatewayRouteTableVpcAssociation = "ec2:CreateLocalGatewayRouteTableVpcAssociation"
      CreateManagedPrefixList = "ec2:CreateManagedPrefixList"
      CreateNatGateway = "ec2:CreateNatGateway"
      CreateNetworkAcl = "ec2:CreateNetworkAcl"
      CreateNetworkAclEntry = "ec2:CreateNetworkAclEntry"
      CreateNetworkInsightsAccessScope = "ec2:CreateNetworkInsightsAccessScope"
      CreateNetworkInsightsPath = "ec2:CreateNetworkInsightsPath"
      CreateNetworkInterface = "ec2:CreateNetworkInterface"
      CreateNetworkInterfacePermission = "ec2:CreateNetworkInterfacePermission"
      CreatePlacementGroup = "ec2:CreatePlacementGroup"
      CreatePublicIpv4Pool = "ec2:CreatePublicIpv4Pool"
      CreateReplaceRootVolumeTask = "ec2:CreateReplaceRootVolumeTask"
      CreateReservedInstancesListing = "ec2:CreateReservedInstancesListing"
      CreateRestoreImageTask = "ec2:CreateRestoreImageTask"
      CreateRoute = "ec2:CreateRoute"
      CreateRouteTable = "ec2:CreateRouteTable"
      CreateSecurityGroup = "ec2:CreateSecurityGroup"
      CreateSnapshot = "ec2:CreateSnapshot"
      CreateSnapshots = "ec2:CreateSnapshots"
      CreateSpotDatafeedSubscription = "ec2:CreateSpotDatafeedSubscription"
      CreateStoreImageTask = "ec2:CreateStoreImageTask"
      CreateSubnet = "ec2:CreateSubnet"
      CreateSubnetCidrReservation = "ec2:CreateSubnetCidrReservation"
      CreateTags = "ec2:CreateTags"
      CreateTrafficMirrorFilter = "ec2:CreateTrafficMirrorFilter"
      CreateTrafficMirrorFilterRule = "ec2:CreateTrafficMirrorFilterRule"
      CreateTrafficMirrorSession = "ec2:CreateTrafficMirrorSession"
      CreateTrafficMirrorTarget = "ec2:CreateTrafficMirrorTarget"
      CreateTransitGateway = "ec2:CreateTransitGateway"
      CreateTransitGatewayConnect = "ec2:CreateTransitGatewayConnect"
      CreateTransitGatewayConnectPeer = "ec2:CreateTransitGatewayConnectPeer"
      CreateTransitGatewayMulticastDomain = "ec2:CreateTransitGatewayMulticastDomain"
      CreateTransitGatewayPeeringAttachment = "ec2:CreateTransitGatewayPeeringAttachment"
      CreateTransitGatewayPolicyTable = "ec2:CreateTransitGatewayPolicyTable"
      CreateTransitGatewayPrefixListReference = "ec2:CreateTransitGatewayPrefixListReference"
      CreateTransitGatewayRoute = "ec2:CreateTransitGatewayRoute"
      CreateTransitGatewayRouteTable = "ec2:CreateTransitGatewayRouteTable"
      CreateTransitGatewayRouteTableAnnouncement = "ec2:CreateTransitGatewayRouteTableAnnouncement"
      CreateTransitGatewayVpcAttachment = "ec2:CreateTransitGatewayVpcAttachment"
      CreateVerifiedAccessEndpoint = "ec2:CreateVerifiedAccessEndpoint"
      CreateVerifiedAccessGroup = "ec2:CreateVerifiedAccessGroup"
      CreateVerifiedAccessInstance = "ec2:CreateVerifiedAccessInstance"
      CreateVerifiedAccessTrustProvider = "ec2:CreateVerifiedAccessTrustProvider"
      CreateVolume = "ec2:CreateVolume"
      CreateVpc = "ec2:CreateVpc"
      CreateVpcEndpoint = "ec2:CreateVpcEndpoint"
      CreateVpcEndpointConnectionNotification = "ec2:CreateVpcEndpointConnectionNotification"
      CreateVpcEndpointServiceConfiguration = "ec2:CreateVpcEndpointServiceConfiguration"
      CreateVpcPeeringConnection = "ec2:CreateVpcPeeringConnection"
      CreateVpnConnection = "ec2:CreateVpnConnection"
      CreateVpnConnectionRoute = "ec2:CreateVpnConnectionRoute"
      CreateVpnGateway = "ec2:CreateVpnGateway"
      DeleteCarrierGateway = "ec2:DeleteCarrierGateway"
      DeleteClientVpnEndpoint = "ec2:DeleteClientVpnEndpoint"
      DeleteClientVpnRoute = "ec2:DeleteClientVpnRoute"
      DeleteCoipCidr = "ec2:DeleteCoipCidr"
      DeleteCoipPool = "ec2:DeleteCoipPool"
      DeleteCoipPoolPermission = "ec2:DeleteCoipPoolPermission"
      DeleteCustomerGateway = "ec2:DeleteCustomerGateway"
      DeleteDhcpOptions = "ec2:DeleteDhcpOptions"
      DeleteEgressOnlyInternetGateway = "ec2:DeleteEgressOnlyInternetGateway"
      DeleteFleets = "ec2:DeleteFleets"
      DeleteFlowLogs = "ec2:DeleteFlowLogs"
      DeleteFpgaImage = "ec2:DeleteFpgaImage"
      DeleteInstanceConnectEndpoint = "ec2:DeleteInstanceConnectEndpoint"
      DeleteInstanceEventWindow = "ec2:DeleteInstanceEventWindow"
      DeleteInternetGateway = "ec2:DeleteInternetGateway"
      DeleteIpam = "ec2:DeleteIpam"
      DeleteIpamPool = "ec2:DeleteIpamPool"
      DeleteIpamResourceDiscovery = "ec2:DeleteIpamResourceDiscovery"
      DeleteIpamScope = "ec2:DeleteIpamScope"
      DeleteKeyPair = "ec2:DeleteKeyPair"
      DeleteLaunchTemplate = "ec2:DeleteLaunchTemplate"
      DeleteLaunchTemplateVersions = "ec2:DeleteLaunchTemplateVersions"
      DeleteLocalGatewayRoute = "ec2:DeleteLocalGatewayRoute"
      DeleteLocalGatewayRouteTable = "ec2:DeleteLocalGatewayRouteTable"
      DeleteLocalGatewayRouteTablePermission = "ec2:DeleteLocalGatewayRouteTablePermission"
      DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation = "ec2:DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation"
      DeleteLocalGatewayRouteTableVpcAssociation = "ec2:DeleteLocalGatewayRouteTableVpcAssociation"
      DeleteManagedPrefixList = "ec2:DeleteManagedPrefixList"
      DeleteNatGateway = "ec2:DeleteNatGateway"
      DeleteNetworkAcl = "ec2:DeleteNetworkAcl"
      DeleteNetworkAclEntry = "ec2:DeleteNetworkAclEntry"
      DeleteNetworkInsightsAccessScope = "ec2:DeleteNetworkInsightsAccessScope"
      DeleteNetworkInsightsAccessScopeAnalysis = "ec2:DeleteNetworkInsightsAccessScopeAnalysis"
      DeleteNetworkInsightsAnalysis = "ec2:DeleteNetworkInsightsAnalysis"
      DeleteNetworkInsightsPath = "ec2:DeleteNetworkInsightsPath"
      DeleteNetworkInterface = "ec2:DeleteNetworkInterface"
      DeleteNetworkInterfacePermission = "ec2:DeleteNetworkInterfacePermission"
      DeletePlacementGroup = "ec2:DeletePlacementGroup"
      DeletePublicIpv4Pool = "ec2:DeletePublicIpv4Pool"
      DeleteQueuedReservedInstances = "ec2:DeleteQueuedReservedInstances"
      DeleteResourcePolicy = "ec2:DeleteResourcePolicy"
      DeleteRoute = "ec2:DeleteRoute"
      DeleteRouteTable = "ec2:DeleteRouteTable"
      DeleteSecurityGroup = "ec2:DeleteSecurityGroup"
      DeleteSnapshot = "ec2:DeleteSnapshot"
      DeleteSpotDatafeedSubscription = "ec2:DeleteSpotDatafeedSubscription"
      DeleteSubnet = "ec2:DeleteSubnet"
      DeleteSubnetCidrReservation = "ec2:DeleteSubnetCidrReservation"
      DeleteTags = "ec2:DeleteTags"
      DeleteTrafficMirrorFilter = "ec2:DeleteTrafficMirrorFilter"
      DeleteTrafficMirrorFilterRule = "ec2:DeleteTrafficMirrorFilterRule"
      DeleteTrafficMirrorSession = "ec2:DeleteTrafficMirrorSession"
      DeleteTrafficMirrorTarget = "ec2:DeleteTrafficMirrorTarget"
      DeleteTransitGateway = "ec2:DeleteTransitGateway"
      DeleteTransitGatewayConnect = "ec2:DeleteTransitGatewayConnect"
      DeleteTransitGatewayConnectPeer = "ec2:DeleteTransitGatewayConnectPeer"
      DeleteTransitGatewayMulticastDomain = "ec2:DeleteTransitGatewayMulticastDomain"
      DeleteTransitGatewayPeeringAttachment = "ec2:DeleteTransitGatewayPeeringAttachment"
      DeleteTransitGatewayPolicyTable = "ec2:DeleteTransitGatewayPolicyTable"
      DeleteTransitGatewayPrefixListReference = "ec2:DeleteTransitGatewayPrefixListReference"
      DeleteTransitGatewayRoute = "ec2:DeleteTransitGatewayRoute"
      DeleteTransitGatewayRouteTable = "ec2:DeleteTransitGatewayRouteTable"
      DeleteTransitGatewayRouteTableAnnouncement = "ec2:DeleteTransitGatewayRouteTableAnnouncement"
      DeleteTransitGatewayVpcAttachment = "ec2:DeleteTransitGatewayVpcAttachment"
      DeleteVerifiedAccessEndpoint = "ec2:DeleteVerifiedAccessEndpoint"
      DeleteVerifiedAccessGroup = "ec2:DeleteVerifiedAccessGroup"
      DeleteVerifiedAccessInstance = "ec2:DeleteVerifiedAccessInstance"
      DeleteVerifiedAccessTrustProvider = "ec2:DeleteVerifiedAccessTrustProvider"
      DeleteVolume = "ec2:DeleteVolume"
      DeleteVpc = "ec2:DeleteVpc"
      DeleteVpcEndpointConnectionNotifications = "ec2:DeleteVpcEndpointConnectionNotifications"
      DeleteVpcEndpointServiceConfigurations = "ec2:DeleteVpcEndpointServiceConfigurations"
      DeleteVpcEndpoints = "ec2:DeleteVpcEndpoints"
      DeleteVpcPeeringConnection = "ec2:DeleteVpcPeeringConnection"
      DeleteVpnConnection = "ec2:DeleteVpnConnection"
      DeleteVpnConnectionRoute = "ec2:DeleteVpnConnectionRoute"
      DeleteVpnGateway = "ec2:DeleteVpnGateway"
      DeprovisionByoipCidr = "ec2:DeprovisionByoipCidr"
      DeprovisionIpamByoasn = "ec2:DeprovisionIpamByoasn"
      DeprovisionIpamPoolCidr = "ec2:DeprovisionIpamPoolCidr"
      DeprovisionPublicIpv4PoolCidr = "ec2:DeprovisionPublicIpv4PoolCidr"
      DeregisterImage = "ec2:DeregisterImage"
      DeregisterInstanceEventNotificationAttributes = "ec2:DeregisterInstanceEventNotificationAttributes"
      DeregisterTransitGatewayMulticastGroupMembers = "ec2:DeregisterTransitGatewayMulticastGroupMembers"
      DeregisterTransitGatewayMulticastGroupSources = "ec2:DeregisterTransitGatewayMulticastGroupSources"
      DescribeAccountAttributes = "ec2:DescribeAccountAttributes"
      DescribeAddressTransfers = "ec2:DescribeAddressTransfers"
      DescribeAddresses = "ec2:DescribeAddresses"
      DescribeAddressesAttribute = "ec2:DescribeAddressesAttribute"
      DescribeAggregateIdFormat = "ec2:DescribeAggregateIdFormat"
      DescribeAvailabilityZones = "ec2:DescribeAvailabilityZones"
      DescribeAwsNetworkPerformanceMetricSubscriptions = "ec2:DescribeAwsNetworkPerformanceMetricSubscriptions"
      DescribeBundleTasks = "ec2:DescribeBundleTasks"
      DescribeByoipCidrs = "ec2:DescribeByoipCidrs"
      DescribeCapacityBlockOfferings = "ec2:DescribeCapacityBlockOfferings"
      DescribeCapacityReservationFleets = "ec2:DescribeCapacityReservationFleets"
      DescribeCapacityReservations = "ec2:DescribeCapacityReservations"
      DescribeCarrierGateways = "ec2:DescribeCarrierGateways"
      DescribeClassicLinkInstances = "ec2:DescribeClassicLinkInstances"
      DescribeClientVpnAuthorizationRules = "ec2:DescribeClientVpnAuthorizationRules"
      DescribeClientVpnConnections = "ec2:DescribeClientVpnConnections"
      DescribeClientVpnEndpoints = "ec2:DescribeClientVpnEndpoints"
      DescribeClientVpnRoutes = "ec2:DescribeClientVpnRoutes"
      DescribeClientVpnTargetNetworks = "ec2:DescribeClientVpnTargetNetworks"
      DescribeCoipPools = "ec2:DescribeCoipPools"
      DescribeConversionTasks = "ec2:DescribeConversionTasks"
      DescribeCustomerGateways = "ec2:DescribeCustomerGateways"
      DescribeDhcpOptions = "ec2:DescribeDhcpOptions"
      DescribeEgressOnlyInternetGateways = "ec2:DescribeEgressOnlyInternetGateways"
      DescribeElasticGpus = "ec2:DescribeElasticGpus"
      DescribeExportImageTasks = "ec2:DescribeExportImageTasks"
      DescribeExportTasks = "ec2:DescribeExportTasks"
      DescribeFastLaunchImages = "ec2:DescribeFastLaunchImages"
      DescribeFastSnapshotRestores = "ec2:DescribeFastSnapshotRestores"
      DescribeFleetHistory = "ec2:DescribeFleetHistory"
      DescribeFleetInstances = "ec2:DescribeFleetInstances"
      DescribeFleets = "ec2:DescribeFleets"
      DescribeFlowLogs = "ec2:DescribeFlowLogs"
      DescribeFpgaImageAttribute = "ec2:DescribeFpgaImageAttribute"
      DescribeFpgaImages = "ec2:DescribeFpgaImages"
      DescribeHostReservationOfferings = "ec2:DescribeHostReservationOfferings"
      DescribeHostReservations = "ec2:DescribeHostReservations"
      DescribeHosts = "ec2:DescribeHosts"
      DescribeIamInstanceProfileAssociations = "ec2:DescribeIamInstanceProfileAssociations"
      DescribeIdFormat = "ec2:DescribeIdFormat"
      DescribeIdentityIdFormat = "ec2:DescribeIdentityIdFormat"
      DescribeImageAttribute = "ec2:DescribeImageAttribute"
      DescribeImages = "ec2:DescribeImages"
      DescribeImportImageTasks = "ec2:DescribeImportImageTasks"
      DescribeImportSnapshotTasks = "ec2:DescribeImportSnapshotTasks"
      DescribeInstanceAttribute = "ec2:DescribeInstanceAttribute"
      DescribeInstanceConnectEndpoints = "ec2:DescribeInstanceConnectEndpoints"
      DescribeInstanceCreditSpecifications = "ec2:DescribeInstanceCreditSpecifications"
      DescribeInstanceEventNotificationAttributes = "ec2:DescribeInstanceEventNotificationAttributes"
      DescribeInstanceEventWindows = "ec2:DescribeInstanceEventWindows"
      DescribeInstanceStatus = "ec2:DescribeInstanceStatus"
      DescribeInstanceTopology = "ec2:DescribeInstanceTopology"
      DescribeInstanceTypeOfferings = "ec2:DescribeInstanceTypeOfferings"
      DescribeInstanceTypes = "ec2:DescribeInstanceTypes"
      DescribeInstances = "ec2:DescribeInstances"
      DescribeInternetGateways = "ec2:DescribeInternetGateways"
      DescribeIpamByoasn = "ec2:DescribeIpamByoasn"
      DescribeIpamPools = "ec2:DescribeIpamPools"
      DescribeIpamResourceDiscoveries = "ec2:DescribeIpamResourceDiscoveries"
      DescribeIpamResourceDiscoveryAssociations = "ec2:DescribeIpamResourceDiscoveryAssociations"
      DescribeIpamScopes = "ec2:DescribeIpamScopes"
      DescribeIpams = "ec2:DescribeIpams"
      DescribeIpv6Pools = "ec2:DescribeIpv6Pools"
      DescribeKeyPairs = "ec2:DescribeKeyPairs"
      DescribeLaunchTemplateVersions = "ec2:DescribeLaunchTemplateVersions"
      DescribeLaunchTemplates = "ec2:DescribeLaunchTemplates"
      DescribeLocalGatewayRouteTablePermissions = "ec2:DescribeLocalGatewayRouteTablePermissions"
      DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations = "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations"
      DescribeLocalGatewayRouteTableVpcAssociations = "ec2:DescribeLocalGatewayRouteTableVpcAssociations"
      DescribeLocalGatewayRouteTables = "ec2:DescribeLocalGatewayRouteTables"
      DescribeLocalGatewayVirtualInterfaceGroups = "ec2:DescribeLocalGatewayVirtualInterfaceGroups"
      DescribeLocalGatewayVirtualInterfaces = "ec2:DescribeLocalGatewayVirtualInterfaces"
      DescribeLocalGateways = "ec2:DescribeLocalGateways"
      DescribeLockedSnapshots = "ec2:DescribeLockedSnapshots"
      DescribeMacHosts = "ec2:DescribeMacHosts"
      DescribeManagedPrefixLists = "ec2:DescribeManagedPrefixLists"
      DescribeMovingAddresses = "ec2:DescribeMovingAddresses"
      DescribeNatGateways = "ec2:DescribeNatGateways"
      DescribeNetworkAcls = "ec2:DescribeNetworkAcls"
      DescribeNetworkInsightsAccessScopeAnalyses = "ec2:DescribeNetworkInsightsAccessScopeAnalyses"
      DescribeNetworkInsightsAccessScopes = "ec2:DescribeNetworkInsightsAccessScopes"
      DescribeNetworkInsightsAnalyses = "ec2:DescribeNetworkInsightsAnalyses"
      DescribeNetworkInsightsPaths = "ec2:DescribeNetworkInsightsPaths"
      DescribeNetworkInterfaceAttribute = "ec2:DescribeNetworkInterfaceAttribute"
      DescribeNetworkInterfacePermissions = "ec2:DescribeNetworkInterfacePermissions"
      DescribeNetworkInterfaces = "ec2:DescribeNetworkInterfaces"
      DescribePlacementGroups = "ec2:DescribePlacementGroups"
      DescribePrefixLists = "ec2:DescribePrefixLists"
      DescribePrincipalIdFormat = "ec2:DescribePrincipalIdFormat"
      DescribePublicIpv4Pools = "ec2:DescribePublicIpv4Pools"
      DescribeRegions = "ec2:DescribeRegions"
      DescribeReplaceRootVolumeTasks = "ec2:DescribeReplaceRootVolumeTasks"
      DescribeReservedInstances = "ec2:DescribeReservedInstances"
      DescribeReservedInstancesListings = "ec2:DescribeReservedInstancesListings"
      DescribeReservedInstancesModifications = "ec2:DescribeReservedInstancesModifications"
      DescribeReservedInstancesOfferings = "ec2:DescribeReservedInstancesOfferings"
      DescribeRouteTables = "ec2:DescribeRouteTables"
      DescribeScheduledInstanceAvailability = "ec2:DescribeScheduledInstanceAvailability"
      DescribeScheduledInstances = "ec2:DescribeScheduledInstances"
      DescribeSecurityGroupReferences = "ec2:DescribeSecurityGroupReferences"
      DescribeSecurityGroupRules = "ec2:DescribeSecurityGroupRules"
      DescribeSecurityGroups = "ec2:DescribeSecurityGroups"
      DescribeSnapshotAttribute = "ec2:DescribeSnapshotAttribute"
      DescribeSnapshotTierStatus = "ec2:DescribeSnapshotTierStatus"
      DescribeSnapshots = "ec2:DescribeSnapshots"
      DescribeSpotDatafeedSubscription = "ec2:DescribeSpotDatafeedSubscription"
      DescribeSpotFleetInstances = "ec2:DescribeSpotFleetInstances"
      DescribeSpotFleetRequestHistory = "ec2:DescribeSpotFleetRequestHistory"
      DescribeSpotFleetRequests = "ec2:DescribeSpotFleetRequests"
      DescribeSpotInstanceRequests = "ec2:DescribeSpotInstanceRequests"
      DescribeSpotPriceHistory = "ec2:DescribeSpotPriceHistory"
      DescribeStaleSecurityGroups = "ec2:DescribeStaleSecurityGroups"
      DescribeStoreImageTasks = "ec2:DescribeStoreImageTasks"
      DescribeSubnets = "ec2:DescribeSubnets"
      DescribeTags = "ec2:DescribeTags"
      DescribeTrafficMirrorFilters = "ec2:DescribeTrafficMirrorFilters"
      DescribeTrafficMirrorSessions = "ec2:DescribeTrafficMirrorSessions"
      DescribeTrafficMirrorTargets = "ec2:DescribeTrafficMirrorTargets"
      DescribeTransitGatewayAttachments = "ec2:DescribeTransitGatewayAttachments"
      DescribeTransitGatewayConnectPeers = "ec2:DescribeTransitGatewayConnectPeers"
      DescribeTransitGatewayConnects = "ec2:DescribeTransitGatewayConnects"
      DescribeTransitGatewayMulticastDomains = "ec2:DescribeTransitGatewayMulticastDomains"
      DescribeTransitGatewayPeeringAttachments = "ec2:DescribeTransitGatewayPeeringAttachments"
      DescribeTransitGatewayPolicyTables = "ec2:DescribeTransitGatewayPolicyTables"
      DescribeTransitGatewayRouteTableAnnouncements = "ec2:DescribeTransitGatewayRouteTableAnnouncements"
      DescribeTransitGatewayRouteTables = "ec2:DescribeTransitGatewayRouteTables"
      DescribeTransitGatewayVpcAttachments = "ec2:DescribeTransitGatewayVpcAttachments"
      DescribeTransitGateways = "ec2:DescribeTransitGateways"
      DescribeTrunkInterfaceAssociations = "ec2:DescribeTrunkInterfaceAssociations"
      DescribeVerifiedAccessEndpoints = "ec2:DescribeVerifiedAccessEndpoints"
      DescribeVerifiedAccessGroups = "ec2:DescribeVerifiedAccessGroups"
      DescribeVerifiedAccessInstanceLoggingConfigurations = "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations"
      DescribeVerifiedAccessInstanceWebAclAssociations = "ec2:DescribeVerifiedAccessInstanceWebAclAssociations"
      DescribeVerifiedAccessInstances = "ec2:DescribeVerifiedAccessInstances"
      DescribeVerifiedAccessTrustProviders = "ec2:DescribeVerifiedAccessTrustProviders"
      DescribeVolumeAttribute = "ec2:DescribeVolumeAttribute"
      DescribeVolumeStatus = "ec2:DescribeVolumeStatus"
      DescribeVolumes = "ec2:DescribeVolumes"
      DescribeVolumesModifications = "ec2:DescribeVolumesModifications"
      DescribeVpcAttribute = "ec2:DescribeVpcAttribute"
      DescribeVpcClassicLink = "ec2:DescribeVpcClassicLink"
      DescribeVpcClassicLinkDnsSupport = "ec2:DescribeVpcClassicLinkDnsSupport"
      DescribeVpcEndpointConnectionNotifications = "ec2:DescribeVpcEndpointConnectionNotifications"
      DescribeVpcEndpointConnections = "ec2:DescribeVpcEndpointConnections"
      DescribeVpcEndpointServiceConfigurations = "ec2:DescribeVpcEndpointServiceConfigurations"
      DescribeVpcEndpointServicePermissions = "ec2:DescribeVpcEndpointServicePermissions"
      DescribeVpcEndpointServices = "ec2:DescribeVpcEndpointServices"
      DescribeVpcEndpoints = "ec2:DescribeVpcEndpoints"
      DescribeVpcPeeringConnections = "ec2:DescribeVpcPeeringConnections"
      DescribeVpcs = "ec2:DescribeVpcs"
      DescribeVpnConnections = "ec2:DescribeVpnConnections"
      DescribeVpnGateways = "ec2:DescribeVpnGateways"
      DetachClassicLinkVpc = "ec2:DetachClassicLinkVpc"
      DetachInternetGateway = "ec2:DetachInternetGateway"
      DetachNetworkInterface = "ec2:DetachNetworkInterface"
      DetachVerifiedAccessTrustProvider = "ec2:DetachVerifiedAccessTrustProvider"
      DetachVolume = "ec2:DetachVolume"
      DetachVpnGateway = "ec2:DetachVpnGateway"
      DisableAddressTransfer = "ec2:DisableAddressTransfer"
      DisableAwsNetworkPerformanceMetricSubscription = "ec2:DisableAwsNetworkPerformanceMetricSubscription"
      DisableEbsEncryptionByDefault = "ec2:DisableEbsEncryptionByDefault"
      DisableFastLaunch = "ec2:DisableFastLaunch"
      DisableFastSnapshotRestores = "ec2:DisableFastSnapshotRestores"
      DisableImage = "ec2:DisableImage"
      DisableImageBlockPublicAccess = "ec2:DisableImageBlockPublicAccess"
      DisableImageDeprecation = "ec2:DisableImageDeprecation"
      DisableImageDeregistrationProtection = "ec2:DisableImageDeregistrationProtection"
      DisableIpamOrganizationAdminAccount = "ec2:DisableIpamOrganizationAdminAccount"
      DisableSerialConsoleAccess = "ec2:DisableSerialConsoleAccess"
      DisableSnapshotBlockPublicAccess = "ec2:DisableSnapshotBlockPublicAccess"
      DisableTransitGatewayRouteTablePropagation = "ec2:DisableTransitGatewayRouteTablePropagation"
      DisableVgwRoutePropagation = "ec2:DisableVgwRoutePropagation"
      DisableVpcClassicLink = "ec2:DisableVpcClassicLink"
      DisableVpcClassicLinkDnsSupport = "ec2:DisableVpcClassicLinkDnsSupport"
      DisassociateAddress = "ec2:DisassociateAddress"
      DisassociateClientVpnTargetNetwork = "ec2:DisassociateClientVpnTargetNetwork"
      DisassociateEnclaveCertificateIamRole = "ec2:DisassociateEnclaveCertificateIamRole"
      DisassociateIamInstanceProfile = "ec2:DisassociateIamInstanceProfile"
      DisassociateInstanceEventWindow = "ec2:DisassociateInstanceEventWindow"
      DisassociateIpamByoasn = "ec2:DisassociateIpamByoasn"
      DisassociateIpamResourceDiscovery = "ec2:DisassociateIpamResourceDiscovery"
      DisassociateNatGatewayAddress = "ec2:DisassociateNatGatewayAddress"
      DisassociateRouteTable = "ec2:DisassociateRouteTable"
      DisassociateSubnetCidrBlock = "ec2:DisassociateSubnetCidrBlock"
      DisassociateTransitGatewayMulticastDomain = "ec2:DisassociateTransitGatewayMulticastDomain"
      DisassociateTransitGatewayPolicyTable = "ec2:DisassociateTransitGatewayPolicyTable"
      DisassociateTransitGatewayRouteTable = "ec2:DisassociateTransitGatewayRouteTable"
      DisassociateTrunkInterface = "ec2:DisassociateTrunkInterface"
      DisassociateVerifiedAccessInstanceWebAcl = "ec2:DisassociateVerifiedAccessInstanceWebAcl"
      DisassociateVpcCidrBlock = "ec2:DisassociateVpcCidrBlock"
      EnableAddressTransfer = "ec2:EnableAddressTransfer"
      EnableAwsNetworkPerformanceMetricSubscription = "ec2:EnableAwsNetworkPerformanceMetricSubscription"
      EnableEbsEncryptionByDefault = "ec2:EnableEbsEncryptionByDefault"
      EnableFastLaunch = "ec2:EnableFastLaunch"
      EnableFastSnapshotRestores = "ec2:EnableFastSnapshotRestores"
      EnableImage = "ec2:EnableImage"
      EnableImageBlockPublicAccess = "ec2:EnableImageBlockPublicAccess"
      EnableImageDeprecation = "ec2:EnableImageDeprecation"
      EnableImageDeregistrationProtection = "ec2:EnableImageDeregistrationProtection"
      EnableIpamOrganizationAdminAccount = "ec2:EnableIpamOrganizationAdminAccount"
      EnableReachabilityAnalyzerOrganizationSharing = "ec2:EnableReachabilityAnalyzerOrganizationSharing"
      EnableSerialConsoleAccess = "ec2:EnableSerialConsoleAccess"
      EnableSnapshotBlockPublicAccess = "ec2:EnableSnapshotBlockPublicAccess"
      EnableTransitGatewayRouteTablePropagation = "ec2:EnableTransitGatewayRouteTablePropagation"
      EnableVgwRoutePropagation = "ec2:EnableVgwRoutePropagation"
      EnableVolumeIO = "ec2:EnableVolumeIO"
      EnableVpcClassicLink = "ec2:EnableVpcClassicLink"
      EnableVpcClassicLinkDnsSupport = "ec2:EnableVpcClassicLinkDnsSupport"
      ExportClientVpnClientCertificateRevocationList = "ec2:ExportClientVpnClientCertificateRevocationList"
      ExportClientVpnClientConfiguration = "ec2:ExportClientVpnClientConfiguration"
      ExportImage = "ec2:ExportImage"
      ExportTransitGatewayRoutes = "ec2:ExportTransitGatewayRoutes"
      GetAssociatedEnclaveCertificateIamRoles = "ec2:GetAssociatedEnclaveCertificateIamRoles"
      GetAssociatedIpv6PoolCidrs = "ec2:GetAssociatedIpv6PoolCidrs"
      GetAwsNetworkPerformanceData = "ec2:GetAwsNetworkPerformanceData"
      GetCapacityReservationUsage = "ec2:GetCapacityReservationUsage"
      GetCoipPoolUsage = "ec2:GetCoipPoolUsage"
      GetConsoleOutput = "ec2:GetConsoleOutput"
      GetConsoleScreenshot = "ec2:GetConsoleScreenshot"
      GetDefaultCreditSpecification = "ec2:GetDefaultCreditSpecification"
      GetEbsDefaultKmsKeyId = "ec2:GetEbsDefaultKmsKeyId"
      GetEbsEncryptionByDefault = "ec2:GetEbsEncryptionByDefault"
      GetFlowLogsIntegrationTemplate = "ec2:GetFlowLogsIntegrationTemplate"
      GetGroupsForCapacityReservation = "ec2:GetGroupsForCapacityReservation"
      GetHostReservationPurchasePreview = "ec2:GetHostReservationPurchasePreview"
      GetImageBlockPublicAccessState = "ec2:GetImageBlockPublicAccessState"
      GetInstanceMetadataDefaults = "ec2:GetInstanceMetadataDefaults"
      GetInstanceTpmEkPub = "ec2:GetInstanceTpmEkPub"
      GetInstanceTypesFromInstanceRequirements = "ec2:GetInstanceTypesFromInstanceRequirements"
      GetInstanceUefiData = "ec2:GetInstanceUefiData"
      GetIpamAddressHistory = "ec2:GetIpamAddressHistory"
      GetIpamDiscoveredAccounts = "ec2:GetIpamDiscoveredAccounts"
      GetIpamDiscoveredPublicAddresses = "ec2:GetIpamDiscoveredPublicAddresses"
      GetIpamDiscoveredResourceCidrs = "ec2:GetIpamDiscoveredResourceCidrs"
      GetIpamPoolAllocations = "ec2:GetIpamPoolAllocations"
      GetIpamPoolCidrs = "ec2:GetIpamPoolCidrs"
      GetIpamResourceCidrs = "ec2:GetIpamResourceCidrs"
      GetLaunchTemplateData = "ec2:GetLaunchTemplateData"
      GetManagedPrefixListAssociations = "ec2:GetManagedPrefixListAssociations"
      GetManagedPrefixListEntries = "ec2:GetManagedPrefixListEntries"
      GetNetworkInsightsAccessScopeAnalysisFindings = "ec2:GetNetworkInsightsAccessScopeAnalysisFindings"
      GetNetworkInsightsAccessScopeContent = "ec2:GetNetworkInsightsAccessScopeContent"
      GetPasswordData = "ec2:GetPasswordData"
      GetReservedInstancesExchangeQuote = "ec2:GetReservedInstancesExchangeQuote"
      GetResourcePolicy = "ec2:GetResourcePolicy"
      GetSecurityGroupsForVpc = "ec2:GetSecurityGroupsForVpc"
      GetSerialConsoleAccessStatus = "ec2:GetSerialConsoleAccessStatus"
      GetSnapshotBlockPublicAccessState = "ec2:GetSnapshotBlockPublicAccessState"
      GetSpotPlacementScores = "ec2:GetSpotPlacementScores"
      GetSubnetCidrReservations = "ec2:GetSubnetCidrReservations"
      GetTransitGatewayAttachmentPropagations = "ec2:GetTransitGatewayAttachmentPropagations"
      GetTransitGatewayMulticastDomainAssociations = "ec2:GetTransitGatewayMulticastDomainAssociations"
      GetTransitGatewayPolicyTableAssociations = "ec2:GetTransitGatewayPolicyTableAssociations"
      GetTransitGatewayPolicyTableEntries = "ec2:GetTransitGatewayPolicyTableEntries"
      GetTransitGatewayPrefixListReferences = "ec2:GetTransitGatewayPrefixListReferences"
      GetTransitGatewayRouteTableAssociations = "ec2:GetTransitGatewayRouteTableAssociations"
      GetTransitGatewayRouteTablePropagations = "ec2:GetTransitGatewayRouteTablePropagations"
      GetVerifiedAccessEndpointPolicy = "ec2:GetVerifiedAccessEndpointPolicy"
      GetVerifiedAccessGroupPolicy = "ec2:GetVerifiedAccessGroupPolicy"
      GetVerifiedAccessInstanceWebAcl = "ec2:GetVerifiedAccessInstanceWebAcl"
      GetVpnConnectionDeviceSampleConfiguration = "ec2:GetVpnConnectionDeviceSampleConfiguration"
      GetVpnConnectionDeviceTypes = "ec2:GetVpnConnectionDeviceTypes"
      GetVpnTunnelReplacementStatus = "ec2:GetVpnTunnelReplacementStatus"
      ImportByoipCidrToIpam = "ec2:ImportByoipCidrToIpam"
      ImportClientVpnClientCertificateRevocationList = "ec2:ImportClientVpnClientCertificateRevocationList"
      ImportImage = "ec2:ImportImage"
      ImportInstance = "ec2:ImportInstance"
      ImportKeyPair = "ec2:ImportKeyPair"
      ImportSnapshot = "ec2:ImportSnapshot"
      ImportVolume = "ec2:ImportVolume"
      InjectApiError = "ec2:InjectApiError"
      ListImagesInRecycleBin = "ec2:ListImagesInRecycleBin"
      ListSnapshotsInRecycleBin = "ec2:ListSnapshotsInRecycleBin"
      LockSnapshot = "ec2:LockSnapshot"
      ModifyAddressAttribute = "ec2:ModifyAddressAttribute"
      ModifyAvailabilityZoneGroup = "ec2:ModifyAvailabilityZoneGroup"
      ModifyCapacityReservation = "ec2:ModifyCapacityReservation"
      ModifyCapacityReservationFleet = "ec2:ModifyCapacityReservationFleet"
      ModifyClientVpnEndpoint = "ec2:ModifyClientVpnEndpoint"
      ModifyDefaultCreditSpecification = "ec2:ModifyDefaultCreditSpecification"
      ModifyEbsDefaultKmsKeyId = "ec2:ModifyEbsDefaultKmsKeyId"
      ModifyFleet = "ec2:ModifyFleet"
      ModifyFpgaImageAttribute = "ec2:ModifyFpgaImageAttribute"
      ModifyHosts = "ec2:ModifyHosts"
      ModifyIdFormat = "ec2:ModifyIdFormat"
      ModifyIdentityIdFormat = "ec2:ModifyIdentityIdFormat"
      ModifyImageAttribute = "ec2:ModifyImageAttribute"
      ModifyInstanceAttribute = "ec2:ModifyInstanceAttribute"
      ModifyInstanceCapacityReservationAttributes = "ec2:ModifyInstanceCapacityReservationAttributes"
      ModifyInstanceCreditSpecification = "ec2:ModifyInstanceCreditSpecification"
      ModifyInstanceEventStartTime = "ec2:ModifyInstanceEventStartTime"
      ModifyInstanceEventWindow = "ec2:ModifyInstanceEventWindow"
      ModifyInstanceMaintenanceOptions = "ec2:ModifyInstanceMaintenanceOptions"
      ModifyInstanceMetadataDefaults = "ec2:ModifyInstanceMetadataDefaults"
      ModifyInstanceMetadataOptions = "ec2:ModifyInstanceMetadataOptions"
      ModifyInstancePlacement = "ec2:ModifyInstancePlacement"
      ModifyIpam = "ec2:ModifyIpam"
      ModifyIpamPool = "ec2:ModifyIpamPool"
      ModifyIpamResourceCidr = "ec2:ModifyIpamResourceCidr"
      ModifyIpamResourceDiscovery = "ec2:ModifyIpamResourceDiscovery"
      ModifyIpamScope = "ec2:ModifyIpamScope"
      ModifyLaunchTemplate = "ec2:ModifyLaunchTemplate"
      ModifyLocalGatewayRoute = "ec2:ModifyLocalGatewayRoute"
      ModifyManagedPrefixList = "ec2:ModifyManagedPrefixList"
      ModifyNetworkInterfaceAttribute = "ec2:ModifyNetworkInterfaceAttribute"
      ModifyPrivateDnsNameOptions = "ec2:ModifyPrivateDnsNameOptions"
      ModifyReservedInstances = "ec2:ModifyReservedInstances"
      ModifySecurityGroupRules = "ec2:ModifySecurityGroupRules"
      ModifySnapshotAttribute = "ec2:ModifySnapshotAttribute"
      ModifySnapshotTier = "ec2:ModifySnapshotTier"
      ModifySpotFleetRequest = "ec2:ModifySpotFleetRequest"
      ModifySubnetAttribute = "ec2:ModifySubnetAttribute"
      ModifyTrafficMirrorFilterNetworkServices = "ec2:ModifyTrafficMirrorFilterNetworkServices"
      ModifyTrafficMirrorFilterRule = "ec2:ModifyTrafficMirrorFilterRule"
      ModifyTrafficMirrorSession = "ec2:ModifyTrafficMirrorSession"
      ModifyTransitGateway = "ec2:ModifyTransitGateway"
      ModifyTransitGatewayPrefixListReference = "ec2:ModifyTransitGatewayPrefixListReference"
      ModifyTransitGatewayVpcAttachment = "ec2:ModifyTransitGatewayVpcAttachment"
      ModifyVerifiedAccessEndpoint = "ec2:ModifyVerifiedAccessEndpoint"
      ModifyVerifiedAccessEndpointPolicy = "ec2:ModifyVerifiedAccessEndpointPolicy"
      ModifyVerifiedAccessGroup = "ec2:ModifyVerifiedAccessGroup"
      ModifyVerifiedAccessGroupPolicy = "ec2:ModifyVerifiedAccessGroupPolicy"
      ModifyVerifiedAccessInstance = "ec2:ModifyVerifiedAccessInstance"
      ModifyVerifiedAccessInstanceLoggingConfiguration = "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration"
      ModifyVerifiedAccessTrustProvider = "ec2:ModifyVerifiedAccessTrustProvider"
      ModifyVolume = "ec2:ModifyVolume"
      ModifyVolumeAttribute = "ec2:ModifyVolumeAttribute"
      ModifyVpcAttribute = "ec2:ModifyVpcAttribute"
      ModifyVpcEndpoint = "ec2:ModifyVpcEndpoint"
      ModifyVpcEndpointConnectionNotification = "ec2:ModifyVpcEndpointConnectionNotification"
      ModifyVpcEndpointServiceConfiguration = "ec2:ModifyVpcEndpointServiceConfiguration"
      ModifyVpcEndpointServicePayerResponsibility = "ec2:ModifyVpcEndpointServicePayerResponsibility"
      ModifyVpcEndpointServicePermissions = "ec2:ModifyVpcEndpointServicePermissions"
      ModifyVpcPeeringConnectionOptions = "ec2:ModifyVpcPeeringConnectionOptions"
      ModifyVpcTenancy = "ec2:ModifyVpcTenancy"
      ModifyVpnConnection = "ec2:ModifyVpnConnection"
      ModifyVpnConnectionOptions = "ec2:ModifyVpnConnectionOptions"
      ModifyVpnTunnelCertificate = "ec2:ModifyVpnTunnelCertificate"
      ModifyVpnTunnelOptions = "ec2:ModifyVpnTunnelOptions"
      MonitorInstances = "ec2:MonitorInstances"
      MoveAddressToVpc = "ec2:MoveAddressToVpc"
      MoveByoipCidrToIpam = "ec2:MoveByoipCidrToIpam"
      PauseVolumeIO = "ec2:PauseVolumeIO"
      ProvisionByoipCidr = "ec2:ProvisionByoipCidr"
      ProvisionIpamByoasn = "ec2:ProvisionIpamByoasn"
      ProvisionIpamPoolCidr = "ec2:ProvisionIpamPoolCidr"
      ProvisionPublicIpv4PoolCidr = "ec2:ProvisionPublicIpv4PoolCidr"
      PurchaseCapacityBlock = "ec2:PurchaseCapacityBlock"
      PurchaseHostReservation = "ec2:PurchaseHostReservation"
      PurchaseReservedInstancesOffering = "ec2:PurchaseReservedInstancesOffering"
      PurchaseScheduledInstances = "ec2:PurchaseScheduledInstances"
      PutResourcePolicy = "ec2:PutResourcePolicy"
      RebootInstances = "ec2:RebootInstances"
      RegisterImage = "ec2:RegisterImage"
      RegisterInstanceEventNotificationAttributes = "ec2:RegisterInstanceEventNotificationAttributes"
      RegisterTransitGatewayMulticastGroupMembers = "ec2:RegisterTransitGatewayMulticastGroupMembers"
      RegisterTransitGatewayMulticastGroupSources = "ec2:RegisterTransitGatewayMulticastGroupSources"
      RejectTransitGatewayMulticastDomainAssociations = "ec2:RejectTransitGatewayMulticastDomainAssociations"
      RejectTransitGatewayPeeringAttachment = "ec2:RejectTransitGatewayPeeringAttachment"
      RejectTransitGatewayVpcAttachment = "ec2:RejectTransitGatewayVpcAttachment"
      RejectVpcEndpointConnections = "ec2:RejectVpcEndpointConnections"
      RejectVpcPeeringConnection = "ec2:RejectVpcPeeringConnection"
      ReleaseAddress = "ec2:ReleaseAddress"
      ReleaseHosts = "ec2:ReleaseHosts"
      ReleaseIpamPoolAllocation = "ec2:ReleaseIpamPoolAllocation"
      ReplaceIamInstanceProfileAssociation = "ec2:ReplaceIamInstanceProfileAssociation"
      ReplaceNetworkAclAssociation = "ec2:ReplaceNetworkAclAssociation"
      ReplaceNetworkAclEntry = "ec2:ReplaceNetworkAclEntry"
      ReplaceRoute = "ec2:ReplaceRoute"
      ReplaceRouteTableAssociation = "ec2:ReplaceRouteTableAssociation"
      ReplaceTransitGatewayRoute = "ec2:ReplaceTransitGatewayRoute"
      ReplaceVpnTunnel = "ec2:ReplaceVpnTunnel"
      ReportInstanceStatus = "ec2:ReportInstanceStatus"
      RequestSpotFleet = "ec2:RequestSpotFleet"
      RequestSpotInstances = "ec2:RequestSpotInstances"
      ResetAddressAttribute = "ec2:ResetAddressAttribute"
      ResetEbsDefaultKmsKeyId = "ec2:ResetEbsDefaultKmsKeyId"
      ResetFpgaImageAttribute = "ec2:ResetFpgaImageAttribute"
      ResetImageAttribute = "ec2:ResetImageAttribute"
      ResetInstanceAttribute = "ec2:ResetInstanceAttribute"
      ResetNetworkInterfaceAttribute = "ec2:ResetNetworkInterfaceAttribute"
      ResetSnapshotAttribute = "ec2:ResetSnapshotAttribute"
      RestoreAddressToClassic = "ec2:RestoreAddressToClassic"
      RestoreImageFromRecycleBin = "ec2:RestoreImageFromRecycleBin"
      RestoreManagedPrefixListVersion = "ec2:RestoreManagedPrefixListVersion"
      RestoreSnapshotFromRecycleBin = "ec2:RestoreSnapshotFromRecycleBin"
      RestoreSnapshotTier = "ec2:RestoreSnapshotTier"
      RevokeClientVpnIngress = "ec2:RevokeClientVpnIngress"
      RevokeSecurityGroupEgress = "ec2:RevokeSecurityGroupEgress"
      RevokeSecurityGroupIngress = "ec2:RevokeSecurityGroupIngress"
      RunInstances = "ec2:RunInstances"
      RunInstances [EC2-Classic-EBS] = "ec2:RunInstances [EC2-Classic-EBS]"
      RunInstances [EC2-Classic-InstanceStore] = "ec2:RunInstances [EC2-Classic-InstanceStore]"
      RunInstances [EC2-VPC-EBS-Subnet] = "ec2:RunInstances [EC2-VPC-EBS-Subnet]"
      RunInstances [EC2-VPC-EBS] = "ec2:RunInstances [EC2-VPC-EBS]"
      RunInstances [EC2-VPC-InstanceStore-Subnet] = "ec2:RunInstances [EC2-VPC-InstanceStore-Subnet]"
      RunInstances [EC2-VPC-InstanceStore] = "ec2:RunInstances [EC2-VPC-InstanceStore]"
      RunScheduledInstances = "ec2:RunScheduledInstances"
      SearchLocalGatewayRoutes = "ec2:SearchLocalGatewayRoutes"
      SearchTransitGatewayMulticastGroups = "ec2:SearchTransitGatewayMulticastGroups"
      SearchTransitGatewayRoutes = "ec2:SearchTransitGatewayRoutes"
      SendDiagnosticInterrupt = "ec2:SendDiagnosticInterrupt"
      SendSpotInstanceInterruptions = "ec2:SendSpotInstanceInterruptions"
      StartInstances = "ec2:StartInstances"
      StartNetworkInsightsAccessScopeAnalysis = "ec2:StartNetworkInsightsAccessScopeAnalysis"
      StartNetworkInsightsAnalysis = "ec2:StartNetworkInsightsAnalysis"
      StartVpcEndpointServicePrivateDnsVerification = "ec2:StartVpcEndpointServicePrivateDnsVerification"
      StopInstances = "ec2:StopInstances"
      TerminateClientVpnConnections = "ec2:TerminateClientVpnConnections"
      TerminateInstances = "ec2:TerminateInstances"
      UnassignIpv6Addresses = "ec2:UnassignIpv6Addresses"
      UnassignPrivateIpAddresses = "ec2:UnassignPrivateIpAddresses"
      UnassignPrivateNatGatewayAddress = "ec2:UnassignPrivateNatGatewayAddress"
      UnlockSnapshot = "ec2:UnlockSnapshot"
      UnmonitorInstances = "ec2:UnmonitorInstances"
      UpdateSecurityGroupRuleDescriptionsEgress = "ec2:UpdateSecurityGroupRuleDescriptionsEgress"
      UpdateSecurityGroupRuleDescriptionsIngress = "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
      WithdrawByoipCidr = "ec2:WithdrawByoipCidr"
    }
    ec2messages = {
      AllActions = "ec2messages:*"
      AcknowledgeMessage = "ec2messages:AcknowledgeMessage"
      DeleteMessage = "ec2messages:DeleteMessage"
      FailMessage = "ec2messages:FailMessage"
      GetEndpoint = "ec2messages:GetEndpoint"
      GetMessages = "ec2messages:GetMessages"
      SendReply = "ec2messages:SendReply"
    }
    ecr-public = {
      AllActions = "ecr-public:*"
      BatchCheckLayerAvailability = "ecr-public:BatchCheckLayerAvailability"
      BatchDeleteImage = "ecr-public:BatchDeleteImage"
      CompleteLayerUpload = "ecr-public:CompleteLayerUpload"
      CreateRepository = "ecr-public:CreateRepository"
      DeleteRepository = "ecr-public:DeleteRepository"
      DeleteRepositoryPolicy = "ecr-public:DeleteRepositoryPolicy"
      DescribeImageTags = "ecr-public:DescribeImageTags"
      DescribeImages = "ecr-public:DescribeImages"
      DescribeRegistries = "ecr-public:DescribeRegistries"
      DescribeRepositories = "ecr-public:DescribeRepositories"
      GetAuthorizationToken = "ecr-public:GetAuthorizationToken"
      GetRegistryCatalogData = "ecr-public:GetRegistryCatalogData"
      GetRepositoryCatalogData = "ecr-public:GetRepositoryCatalogData"
      GetRepositoryPolicy = "ecr-public:GetRepositoryPolicy"
      InitiateLayerUpload = "ecr-public:InitiateLayerUpload"
      ListTagsForResource = "ecr-public:ListTagsForResource"
      PutImage = "ecr-public:PutImage"
      PutRegistryCatalogData = "ecr-public:PutRegistryCatalogData"
      PutRepositoryCatalogData = "ecr-public:PutRepositoryCatalogData"
      SetRepositoryPolicy = "ecr-public:SetRepositoryPolicy"
      TagResource = "ecr-public:TagResource"
      UntagResource = "ecr-public:UntagResource"
      UploadLayerPart = "ecr-public:UploadLayerPart"
    }
    ecr = {
      AllActions = "ecr:*"
      BatchCheckLayerAvailability = "ecr:BatchCheckLayerAvailability"
      BatchDeleteImage = "ecr:BatchDeleteImage"
      BatchGetImage = "ecr:BatchGetImage"
      BatchGetRepositoryScanningConfiguration = "ecr:BatchGetRepositoryScanningConfiguration"
      BatchImportUpstreamImage = "ecr:BatchImportUpstreamImage"
      CompleteLayerUpload = "ecr:CompleteLayerUpload"
      CreatePullThroughCacheRule = "ecr:CreatePullThroughCacheRule"
      CreateRepository = "ecr:CreateRepository"
      CreateRepositoryCreationTemplate = "ecr:CreateRepositoryCreationTemplate"
      DeleteLifecyclePolicy = "ecr:DeleteLifecyclePolicy"
      DeletePullThroughCacheRule = "ecr:DeletePullThroughCacheRule"
      DeleteRegistryPolicy = "ecr:DeleteRegistryPolicy"
      DeleteRepository = "ecr:DeleteRepository"
      DeleteRepositoryCreationTemplate = "ecr:DeleteRepositoryCreationTemplate"
      DeleteRepositoryPolicy = "ecr:DeleteRepositoryPolicy"
      DescribeImageReplicationStatus = "ecr:DescribeImageReplicationStatus"
      DescribeImageScanFindings = "ecr:DescribeImageScanFindings"
      DescribeImages = "ecr:DescribeImages"
      DescribePullThroughCacheRules = "ecr:DescribePullThroughCacheRules"
      DescribeRegistry = "ecr:DescribeRegistry"
      DescribeRepositories = "ecr:DescribeRepositories"
      DescribeRepositoryCreationTemplate = "ecr:DescribeRepositoryCreationTemplate"
      GetAuthorizationToken = "ecr:GetAuthorizationToken"
      GetDownloadUrlForLayer = "ecr:GetDownloadUrlForLayer"
      GetLifecyclePolicy = "ecr:GetLifecyclePolicy"
      GetLifecyclePolicyPreview = "ecr:GetLifecyclePolicyPreview"
      GetRegistryPolicy = "ecr:GetRegistryPolicy"
      GetRegistryScanningConfiguration = "ecr:GetRegistryScanningConfiguration"
      GetRepositoryPolicy = "ecr:GetRepositoryPolicy"
      InitiateLayerUpload = "ecr:InitiateLayerUpload"
      ListImages = "ecr:ListImages"
      ListTagsForResource = "ecr:ListTagsForResource"
      PutImage = "ecr:PutImage"
      PutImageScanningConfiguration = "ecr:PutImageScanningConfiguration"
      PutImageTagMutability = "ecr:PutImageTagMutability"
      PutLifecyclePolicy = "ecr:PutLifecyclePolicy"
      PutRegistryPolicy = "ecr:PutRegistryPolicy"
      PutRegistryScanningConfiguration = "ecr:PutRegistryScanningConfiguration"
      PutReplicationConfiguration = "ecr:PutReplicationConfiguration"
      ReplicateImage = "ecr:ReplicateImage"
      SetRepositoryPolicy = "ecr:SetRepositoryPolicy"
      StartImageScan = "ecr:StartImageScan"
      StartLifecyclePolicyPreview = "ecr:StartLifecyclePolicyPreview"
      TagResource = "ecr:TagResource"
      UntagResource = "ecr:UntagResource"
      UpdatePullThroughCacheRule = "ecr:UpdatePullThroughCacheRule"
      UploadLayerPart = "ecr:UploadLayerPart"
      ValidatePullThroughCacheRule = "ecr:ValidatePullThroughCacheRule"
    }
    ecs = {
      AllActions = "ecs:*"
      CreateCapacityProvider = "ecs:CreateCapacityProvider"
      CreateCluster = "ecs:CreateCluster"
      CreateService = "ecs:CreateService"
      CreateTaskSet = "ecs:CreateTaskSet"
      DeleteAccountSetting = "ecs:DeleteAccountSetting"
      DeleteAttributes = "ecs:DeleteAttributes"
      DeleteCapacityProvider = "ecs:DeleteCapacityProvider"
      DeleteCluster = "ecs:DeleteCluster"
      DeleteService = "ecs:DeleteService"
      DeleteTaskDefinitions = "ecs:DeleteTaskDefinitions"
      DeleteTaskSet = "ecs:DeleteTaskSet"
      DeregisterContainerInstance = "ecs:DeregisterContainerInstance"
      DeregisterTaskDefinition = "ecs:DeregisterTaskDefinition"
      DescribeCapacityProviders = "ecs:DescribeCapacityProviders"
      DescribeClusters = "ecs:DescribeClusters"
      DescribeContainerInstances = "ecs:DescribeContainerInstances"
      DescribeServices = "ecs:DescribeServices"
      DescribeTaskDefinition = "ecs:DescribeTaskDefinition"
      DescribeTaskSets = "ecs:DescribeTaskSets"
      DescribeTasks = "ecs:DescribeTasks"
      DiscoverPollEndpoint = "ecs:DiscoverPollEndpoint"
      ExecuteCommand = "ecs:ExecuteCommand"
      GetTaskProtection = "ecs:GetTaskProtection"
      ListAccountSettings = "ecs:ListAccountSettings"
      ListAttributes = "ecs:ListAttributes"
      ListClusters = "ecs:ListClusters"
      ListContainerInstances = "ecs:ListContainerInstances"
      ListServices = "ecs:ListServices"
      ListServicesByNamespace = "ecs:ListServicesByNamespace"
      ListTagsForResource = "ecs:ListTagsForResource"
      ListTaskDefinitionFamilies = "ecs:ListTaskDefinitionFamilies"
      ListTaskDefinitions = "ecs:ListTaskDefinitions"
      ListTasks = "ecs:ListTasks"
      Poll = "ecs:Poll"
      PutAccountSetting = "ecs:PutAccountSetting"
      PutAccountSettingDefault = "ecs:PutAccountSettingDefault"
      PutAttributes = "ecs:PutAttributes"
      PutClusterCapacityProviders = "ecs:PutClusterCapacityProviders"
      RegisterContainerInstance = "ecs:RegisterContainerInstance"
      RegisterTaskDefinition = "ecs:RegisterTaskDefinition"
      RunTask = "ecs:RunTask"
      StartTask = "ecs:StartTask"
      StartTelemetrySession = "ecs:StartTelemetrySession"
      StopTask = "ecs:StopTask"
      SubmitAttachmentStateChanges = "ecs:SubmitAttachmentStateChanges"
      SubmitContainerStateChange = "ecs:SubmitContainerStateChange"
      SubmitTaskStateChange = "ecs:SubmitTaskStateChange"
      TagResource = "ecs:TagResource"
      UntagResource = "ecs:UntagResource"
      UpdateCapacityProvider = "ecs:UpdateCapacityProvider"
      UpdateCluster = "ecs:UpdateCluster"
      UpdateClusterSettings = "ecs:UpdateClusterSettings"
      UpdateContainerAgent = "ecs:UpdateContainerAgent"
      UpdateContainerInstancesState = "ecs:UpdateContainerInstancesState"
      UpdateService = "ecs:UpdateService"
      UpdateServicePrimaryTaskSet = "ecs:UpdateServicePrimaryTaskSet"
      UpdateTaskProtection = "ecs:UpdateTaskProtection"
      UpdateTaskSet = "ecs:UpdateTaskSet"
    }
    eks-auth = {
      AllActions = "eks-auth:*"
      AssumeRoleForPodIdentity = "eks-auth:AssumeRoleForPodIdentity"
    }
    eks = {
      AllActions = "eks:*"
      AccessKubernetesApi = "eks:AccessKubernetesApi"
      AssociateAccessPolicy = "eks:AssociateAccessPolicy"
      AssociateEncryptionConfig = "eks:AssociateEncryptionConfig"
      AssociateIdentityProviderConfig = "eks:AssociateIdentityProviderConfig"
      CreateAccessEntry = "eks:CreateAccessEntry"
      CreateAddon = "eks:CreateAddon"
      CreateCluster = "eks:CreateCluster"
      CreateEksAnywhereSubscription = "eks:CreateEksAnywhereSubscription"
      CreateFargateProfile = "eks:CreateFargateProfile"
      CreateNodegroup = "eks:CreateNodegroup"
      CreatePodIdentityAssociation = "eks:CreatePodIdentityAssociation"
      DeleteAccessEntry = "eks:DeleteAccessEntry"
      DeleteAddon = "eks:DeleteAddon"
      DeleteCluster = "eks:DeleteCluster"
      DeleteEksAnywhereSubscription = "eks:DeleteEksAnywhereSubscription"
      DeleteFargateProfile = "eks:DeleteFargateProfile"
      DeleteNodegroup = "eks:DeleteNodegroup"
      DeletePodIdentityAssociation = "eks:DeletePodIdentityAssociation"
      DeregisterCluster = "eks:DeregisterCluster"
      DescribeAccessEntry = "eks:DescribeAccessEntry"
      DescribeAddon = "eks:DescribeAddon"
      DescribeAddonConfiguration = "eks:DescribeAddonConfiguration"
      DescribeAddonVersions = "eks:DescribeAddonVersions"
      DescribeCluster = "eks:DescribeCluster"
      DescribeEksAnywhereSubscription = "eks:DescribeEksAnywhereSubscription"
      DescribeFargateProfile = "eks:DescribeFargateProfile"
      DescribeIdentityProviderConfig = "eks:DescribeIdentityProviderConfig"
      DescribeInsight = "eks:DescribeInsight"
      DescribeNodegroup = "eks:DescribeNodegroup"
      DescribePodIdentityAssociation = "eks:DescribePodIdentityAssociation"
      DescribeUpdate = "eks:DescribeUpdate"
      DisassociateAccessPolicy = "eks:DisassociateAccessPolicy"
      DisassociateIdentityProviderConfig = "eks:DisassociateIdentityProviderConfig"
      ListAccessEntries = "eks:ListAccessEntries"
      ListAccessPolicies = "eks:ListAccessPolicies"
      ListAddons = "eks:ListAddons"
      ListAssociatedAccessPolicies = "eks:ListAssociatedAccessPolicies"
      ListClusters = "eks:ListClusters"
      ListEksAnywhereSubscriptions = "eks:ListEksAnywhereSubscriptions"
      ListFargateProfiles = "eks:ListFargateProfiles"
      ListIdentityProviderConfigs = "eks:ListIdentityProviderConfigs"
      ListInsights = "eks:ListInsights"
      ListNodegroups = "eks:ListNodegroups"
      ListPodIdentityAssociations = "eks:ListPodIdentityAssociations"
      ListTagsForResource = "eks:ListTagsForResource"
      ListUpdates = "eks:ListUpdates"
      RegisterCluster = "eks:RegisterCluster"
      TagResource = "eks:TagResource"
      UntagResource = "eks:UntagResource"
      UpdateAccessEntry = "eks:UpdateAccessEntry"
      UpdateAddon = "eks:UpdateAddon"
      UpdateClusterConfig = "eks:UpdateClusterConfig"
      UpdateClusterVersion = "eks:UpdateClusterVersion"
      UpdateEksAnywhereSubscription = "eks:UpdateEksAnywhereSubscription"
      UpdateNodegroupConfig = "eks:UpdateNodegroupConfig"
      UpdateNodegroupVersion = "eks:UpdateNodegroupVersion"
      UpdatePodIdentityAssociation = "eks:UpdatePodIdentityAssociation"
    }
    elastic-inference = {
      AllActions = "elastic-inference:*"
      Connect = "elastic-inference:Connect"
      DescribeAcceleratorOfferings = "elastic-inference:DescribeAcceleratorOfferings"
      DescribeAcceleratorTypes = "elastic-inference:DescribeAcceleratorTypes"
      DescribeAccelerators = "elastic-inference:DescribeAccelerators"
      ListTagsForResource = "elastic-inference:ListTagsForResource"
      TagResource = "elastic-inference:TagResource"
      UntagResource = "elastic-inference:UntagResource"
    }
    elasticache = {
      AllActions = "elasticache:*"
      AddTagsToResource = "elasticache:AddTagsToResource"
      AuthorizeCacheSecurityGroupIngress = "elasticache:AuthorizeCacheSecurityGroupIngress"
      BatchApplyUpdateAction = "elasticache:BatchApplyUpdateAction"
      BatchStopUpdateAction = "elasticache:BatchStopUpdateAction"
      CompleteMigration = "elasticache:CompleteMigration"
      Connect = "elasticache:Connect"
      CopyServerlessCacheSnapshot = "elasticache:CopyServerlessCacheSnapshot"
      CopySnapshot = "elasticache:CopySnapshot"
      CreateCacheCluster = "elasticache:CreateCacheCluster"
      CreateCacheParameterGroup = "elasticache:CreateCacheParameterGroup"
      CreateCacheSecurityGroup = "elasticache:CreateCacheSecurityGroup"
      CreateCacheSubnetGroup = "elasticache:CreateCacheSubnetGroup"
      CreateGlobalReplicationGroup = "elasticache:CreateGlobalReplicationGroup"
      CreateReplicationGroup = "elasticache:CreateReplicationGroup"
      CreateServerlessCache = "elasticache:CreateServerlessCache"
      CreateServerlessCacheSnapshot = "elasticache:CreateServerlessCacheSnapshot"
      CreateSnapshot = "elasticache:CreateSnapshot"
      CreateUser = "elasticache:CreateUser"
      CreateUserGroup = "elasticache:CreateUserGroup"
      DecreaseNodeGroupsInGlobalReplicationGroup = "elasticache:DecreaseNodeGroupsInGlobalReplicationGroup"
      DecreaseReplicaCount = "elasticache:DecreaseReplicaCount"
      DeleteCacheCluster = "elasticache:DeleteCacheCluster"
      DeleteCacheParameterGroup = "elasticache:DeleteCacheParameterGroup"
      DeleteCacheSecurityGroup = "elasticache:DeleteCacheSecurityGroup"
      DeleteCacheSubnetGroup = "elasticache:DeleteCacheSubnetGroup"
      DeleteGlobalReplicationGroup = "elasticache:DeleteGlobalReplicationGroup"
      DeleteReplicationGroup = "elasticache:DeleteReplicationGroup"
      DeleteServerlessCache = "elasticache:DeleteServerlessCache"
      DeleteServerlessCacheSnapshot = "elasticache:DeleteServerlessCacheSnapshot"
      DeleteSnapshot = "elasticache:DeleteSnapshot"
      DeleteUser = "elasticache:DeleteUser"
      DeleteUserGroup = "elasticache:DeleteUserGroup"
      DescribeCacheClusters = "elasticache:DescribeCacheClusters"
      DescribeCacheEngineVersions = "elasticache:DescribeCacheEngineVersions"
      DescribeCacheParameterGroups = "elasticache:DescribeCacheParameterGroups"
      DescribeCacheParameters = "elasticache:DescribeCacheParameters"
      DescribeCacheSecurityGroups = "elasticache:DescribeCacheSecurityGroups"
      DescribeCacheSubnetGroups = "elasticache:DescribeCacheSubnetGroups"
      DescribeEngineDefaultParameters = "elasticache:DescribeEngineDefaultParameters"
      DescribeEvents = "elasticache:DescribeEvents"
      DescribeGlobalReplicationGroups = "elasticache:DescribeGlobalReplicationGroups"
      DescribeReplicationGroups = "elasticache:DescribeReplicationGroups"
      DescribeReservedCacheNodes = "elasticache:DescribeReservedCacheNodes"
      DescribeReservedCacheNodesOfferings = "elasticache:DescribeReservedCacheNodesOfferings"
      DescribeServerlessCacheSnapshots = "elasticache:DescribeServerlessCacheSnapshots"
      DescribeServerlessCaches = "elasticache:DescribeServerlessCaches"
      DescribeServiceUpdates = "elasticache:DescribeServiceUpdates"
      DescribeSnapshots = "elasticache:DescribeSnapshots"
      DescribeUpdateActions = "elasticache:DescribeUpdateActions"
      DescribeUserGroups = "elasticache:DescribeUserGroups"
      DescribeUsers = "elasticache:DescribeUsers"
      DisassociateGlobalReplicationGroup = "elasticache:DisassociateGlobalReplicationGroup"
      ExportServerlessCacheSnapshot = "elasticache:ExportServerlessCacheSnapshot"
      FailoverGlobalReplicationGroup = "elasticache:FailoverGlobalReplicationGroup"
      IncreaseNodeGroupsInGlobalReplicationGroup = "elasticache:IncreaseNodeGroupsInGlobalReplicationGroup"
      IncreaseReplicaCount = "elasticache:IncreaseReplicaCount"
      InterruptClusterAzPower = "elasticache:InterruptClusterAzPower"
      ListAllowedNodeTypeModifications = "elasticache:ListAllowedNodeTypeModifications"
      ListTagsForResource = "elasticache:ListTagsForResource"
      ModifyCacheCluster = "elasticache:ModifyCacheCluster"
      ModifyCacheParameterGroup = "elasticache:ModifyCacheParameterGroup"
      ModifyCacheSubnetGroup = "elasticache:ModifyCacheSubnetGroup"
      ModifyGlobalReplicationGroup = "elasticache:ModifyGlobalReplicationGroup"
      ModifyReplicationGroup = "elasticache:ModifyReplicationGroup"
      ModifyReplicationGroupShardConfiguration = "elasticache:ModifyReplicationGroupShardConfiguration"
      ModifyServerlessCache = "elasticache:ModifyServerlessCache"
      ModifyUser = "elasticache:ModifyUser"
      ModifyUserGroup = "elasticache:ModifyUserGroup"
      PurchaseReservedCacheNodesOffering = "elasticache:PurchaseReservedCacheNodesOffering"
      RebalanceSlotsInGlobalReplicationGroup = "elasticache:RebalanceSlotsInGlobalReplicationGroup"
      RebootCacheCluster = "elasticache:RebootCacheCluster"
      RemoveTagsFromResource = "elasticache:RemoveTagsFromResource"
      ResetCacheParameterGroup = "elasticache:ResetCacheParameterGroup"
      RevokeCacheSecurityGroupIngress = "elasticache:RevokeCacheSecurityGroupIngress"
      StartMigration = "elasticache:StartMigration"
      TestFailover = "elasticache:TestFailover"
      TestMigration = "elasticache:TestMigration"
    }
    elasticbeanstalk = {
      AllActions = "elasticbeanstalk:*"
      AbortEnvironmentUpdate = "elasticbeanstalk:AbortEnvironmentUpdate"
      AddTags = "elasticbeanstalk:AddTags"
      ApplyEnvironmentManagedAction = "elasticbeanstalk:ApplyEnvironmentManagedAction"
      AssociateEnvironmentOperationsRole = "elasticbeanstalk:AssociateEnvironmentOperationsRole"
      CheckDNSAvailability = "elasticbeanstalk:CheckDNSAvailability"
      ComposeEnvironments = "elasticbeanstalk:ComposeEnvironments"
      CreateApplication = "elasticbeanstalk:CreateApplication"
      CreateApplicationVersion = "elasticbeanstalk:CreateApplicationVersion"
      CreateConfigurationTemplate = "elasticbeanstalk:CreateConfigurationTemplate"
      CreateEnvironment = "elasticbeanstalk:CreateEnvironment"
      CreatePlatformVersion = "elasticbeanstalk:CreatePlatformVersion"
      CreateStorageLocation = "elasticbeanstalk:CreateStorageLocation"
      DeleteApplication = "elasticbeanstalk:DeleteApplication"
      DeleteApplicationVersion = "elasticbeanstalk:DeleteApplicationVersion"
      DeleteConfigurationTemplate = "elasticbeanstalk:DeleteConfigurationTemplate"
      DeleteEnvironmentConfiguration = "elasticbeanstalk:DeleteEnvironmentConfiguration"
      DeletePlatformVersion = "elasticbeanstalk:DeletePlatformVersion"
      DescribeAccountAttributes = "elasticbeanstalk:DescribeAccountAttributes"
      DescribeApplicationVersions = "elasticbeanstalk:DescribeApplicationVersions"
      DescribeApplications = "elasticbeanstalk:DescribeApplications"
      DescribeConfigurationOptions = "elasticbeanstalk:DescribeConfigurationOptions"
      DescribeConfigurationSettings = "elasticbeanstalk:DescribeConfigurationSettings"
      DescribeEnvironmentHealth = "elasticbeanstalk:DescribeEnvironmentHealth"
      DescribeEnvironmentManagedActionHistory = "elasticbeanstalk:DescribeEnvironmentManagedActionHistory"
      DescribeEnvironmentManagedActions = "elasticbeanstalk:DescribeEnvironmentManagedActions"
      DescribeEnvironmentResources = "elasticbeanstalk:DescribeEnvironmentResources"
      DescribeEnvironments = "elasticbeanstalk:DescribeEnvironments"
      DescribeEvents = "elasticbeanstalk:DescribeEvents"
      DescribeInstancesHealth = "elasticbeanstalk:DescribeInstancesHealth"
      DescribePlatformVersion = "elasticbeanstalk:DescribePlatformVersion"
      DisassociateEnvironmentOperationsRole = "elasticbeanstalk:DisassociateEnvironmentOperationsRole"
      ListAvailableSolutionStacks = "elasticbeanstalk:ListAvailableSolutionStacks"
      ListPlatformBranches = "elasticbeanstalk:ListPlatformBranches"
      ListPlatformVersions = "elasticbeanstalk:ListPlatformVersions"
      ListTagsForResource = "elasticbeanstalk:ListTagsForResource"
      PutInstanceStatistics = "elasticbeanstalk:PutInstanceStatistics"
      RebuildEnvironment = "elasticbeanstalk:RebuildEnvironment"
      RemoveTags = "elasticbeanstalk:RemoveTags"
      RequestEnvironmentInfo = "elasticbeanstalk:RequestEnvironmentInfo"
      RestartAppServer = "elasticbeanstalk:RestartAppServer"
      RetrieveEnvironmentInfo = "elasticbeanstalk:RetrieveEnvironmentInfo"
      SwapEnvironmentCNAMEs = "elasticbeanstalk:SwapEnvironmentCNAMEs"
      TerminateEnvironment = "elasticbeanstalk:TerminateEnvironment"
      UpdateApplication = "elasticbeanstalk:UpdateApplication"
      UpdateApplicationResourceLifecycle = "elasticbeanstalk:UpdateApplicationResourceLifecycle"
      UpdateApplicationVersion = "elasticbeanstalk:UpdateApplicationVersion"
      UpdateConfigurationTemplate = "elasticbeanstalk:UpdateConfigurationTemplate"
      UpdateEnvironment = "elasticbeanstalk:UpdateEnvironment"
      UpdateTagsForResource = "elasticbeanstalk:UpdateTagsForResource"
      ValidateConfigurationSettings = "elasticbeanstalk:ValidateConfigurationSettings"
    }
    elasticfilesystem = {
      AllActions = "elasticfilesystem:*"
      Backup = "elasticfilesystem:Backup"
      ClientMount = "elasticfilesystem:ClientMount"
      ClientRootAccess = "elasticfilesystem:ClientRootAccess"
      ClientWrite = "elasticfilesystem:ClientWrite"
      CreateAccessPoint = "elasticfilesystem:CreateAccessPoint"
      CreateFileSystem = "elasticfilesystem:CreateFileSystem"
      CreateMountTarget = "elasticfilesystem:CreateMountTarget"
      CreateReplicationConfiguration = "elasticfilesystem:CreateReplicationConfiguration"
      CreateTags = "elasticfilesystem:CreateTags"
      DeleteAccessPoint = "elasticfilesystem:DeleteAccessPoint"
      DeleteFileSystem = "elasticfilesystem:DeleteFileSystem"
      DeleteFileSystemPolicy = "elasticfilesystem:DeleteFileSystemPolicy"
      DeleteMountTarget = "elasticfilesystem:DeleteMountTarget"
      DeleteReplicationConfiguration = "elasticfilesystem:DeleteReplicationConfiguration"
      DeleteTags = "elasticfilesystem:DeleteTags"
      DescribeAccessPoints = "elasticfilesystem:DescribeAccessPoints"
      DescribeAccountPreferences = "elasticfilesystem:DescribeAccountPreferences"
      DescribeBackupPolicy = "elasticfilesystem:DescribeBackupPolicy"
      DescribeFileSystemPolicy = "elasticfilesystem:DescribeFileSystemPolicy"
      DescribeFileSystems = "elasticfilesystem:DescribeFileSystems"
      DescribeLifecycleConfiguration = "elasticfilesystem:DescribeLifecycleConfiguration"
      DescribeMountTargetSecurityGroups = "elasticfilesystem:DescribeMountTargetSecurityGroups"
      DescribeMountTargets = "elasticfilesystem:DescribeMountTargets"
      DescribeReplicationConfigurations = "elasticfilesystem:DescribeReplicationConfigurations"
      DescribeTags = "elasticfilesystem:DescribeTags"
      ListTagsForResource = "elasticfilesystem:ListTagsForResource"
      ModifyMountTargetSecurityGroups = "elasticfilesystem:ModifyMountTargetSecurityGroups"
      PutAccountPreferences = "elasticfilesystem:PutAccountPreferences"
      PutBackupPolicy = "elasticfilesystem:PutBackupPolicy"
      PutFileSystemPolicy = "elasticfilesystem:PutFileSystemPolicy"
      PutLifecycleConfiguration = "elasticfilesystem:PutLifecycleConfiguration"
      Restore = "elasticfilesystem:Restore"
      TagResource = "elasticfilesystem:TagResource"
      UntagResource = "elasticfilesystem:UntagResource"
      UpdateFileSystem = "elasticfilesystem:UpdateFileSystem"
      UpdateFileSystemProtection = "elasticfilesystem:UpdateFileSystemProtection"
    }
    elasticloadbalancing = {
      AllActions = "elasticloadbalancing:*"
      AddListenerCertificates = "elasticloadbalancing:AddListenerCertificates"
      AddTags = "elasticloadbalancing:AddTags"
      AddTrustStoreRevocations = "elasticloadbalancing:AddTrustStoreRevocations"
      ApplySecurityGroupsToLoadBalancer = "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"
      AttachLoadBalancerToSubnets = "elasticloadbalancing:AttachLoadBalancerToSubnets"
      ConfigureHealthCheck = "elasticloadbalancing:ConfigureHealthCheck"
      CreateAppCookieStickinessPolicy = "elasticloadbalancing:CreateAppCookieStickinessPolicy"
      CreateLBCookieStickinessPolicy = "elasticloadbalancing:CreateLBCookieStickinessPolicy"
      CreateListener = "elasticloadbalancing:CreateListener"
      CreateLoadBalancer = "elasticloadbalancing:CreateLoadBalancer"
      CreateLoadBalancerListeners = "elasticloadbalancing:CreateLoadBalancerListeners"
      CreateLoadBalancerPolicy = "elasticloadbalancing:CreateLoadBalancerPolicy"
      CreateRule = "elasticloadbalancing:CreateRule"
      CreateTargetGroup = "elasticloadbalancing:CreateTargetGroup"
      CreateTrustStore = "elasticloadbalancing:CreateTrustStore"
      DeleteListener = "elasticloadbalancing:DeleteListener"
      DeleteLoadBalancer = "elasticloadbalancing:DeleteLoadBalancer"
      DeleteLoadBalancerListeners = "elasticloadbalancing:DeleteLoadBalancerListeners"
      DeleteLoadBalancerPolicy = "elasticloadbalancing:DeleteLoadBalancerPolicy"
      DeleteRule = "elasticloadbalancing:DeleteRule"
      DeleteTargetGroup = "elasticloadbalancing:DeleteTargetGroup"
      DeleteTrustStore = "elasticloadbalancing:DeleteTrustStore"
      DeregisterInstancesFromLoadBalancer = "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
      DeregisterTargets = "elasticloadbalancing:DeregisterTargets"
      DescribeAccountLimits = "elasticloadbalancing:DescribeAccountLimits"
      DescribeInstanceHealth = "elasticloadbalancing:DescribeInstanceHealth"
      DescribeListenerCertificates = "elasticloadbalancing:DescribeListenerCertificates"
      DescribeListeners = "elasticloadbalancing:DescribeListeners"
      DescribeLoadBalancerAttributes = "elasticloadbalancing:DescribeLoadBalancerAttributes"
      DescribeLoadBalancerPolicies = "elasticloadbalancing:DescribeLoadBalancerPolicies"
      DescribeLoadBalancerPolicyTypes = "elasticloadbalancing:DescribeLoadBalancerPolicyTypes"
      DescribeLoadBalancers = "elasticloadbalancing:DescribeLoadBalancers"
      DescribeRules = "elasticloadbalancing:DescribeRules"
      DescribeSSLPolicies = "elasticloadbalancing:DescribeSSLPolicies"
      DescribeTags = "elasticloadbalancing:DescribeTags"
      DescribeTargetGroupAttributes = "elasticloadbalancing:DescribeTargetGroupAttributes"
      DescribeTargetGroups = "elasticloadbalancing:DescribeTargetGroups"
      DescribeTargetHealth = "elasticloadbalancing:DescribeTargetHealth"
      DescribeTrustStoreAssociations = "elasticloadbalancing:DescribeTrustStoreAssociations"
      DescribeTrustStoreRevocations = "elasticloadbalancing:DescribeTrustStoreRevocations"
      DescribeTrustStores = "elasticloadbalancing:DescribeTrustStores"
      DetachLoadBalancerFromSubnets = "elasticloadbalancing:DetachLoadBalancerFromSubnets"
      DisableAvailabilityZonesForLoadBalancer = "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer"
      EnableAvailabilityZonesForLoadBalancer = "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer"
      GetTrustStoreCaCertificatesBundle = "elasticloadbalancing:GetTrustStoreCaCertificatesBundle"
      GetTrustStoreRevocationContent = "elasticloadbalancing:GetTrustStoreRevocationContent"
      ModifyListener = "elasticloadbalancing:ModifyListener"
      ModifyLoadBalancerAttributes = "elasticloadbalancing:ModifyLoadBalancerAttributes"
      ModifyRule = "elasticloadbalancing:ModifyRule"
      ModifyTargetGroup = "elasticloadbalancing:ModifyTargetGroup"
      ModifyTargetGroupAttributes = "elasticloadbalancing:ModifyTargetGroupAttributes"
      ModifyTrustStore = "elasticloadbalancing:ModifyTrustStore"
      RegisterInstancesWithLoadBalancer = "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
      RegisterTargets = "elasticloadbalancing:RegisterTargets"
      RemoveListenerCertificates = "elasticloadbalancing:RemoveListenerCertificates"
      RemoveTags = "elasticloadbalancing:RemoveTags"
      RemoveTrustStoreRevocations = "elasticloadbalancing:RemoveTrustStoreRevocations"
      SetIpAddressType = "elasticloadbalancing:SetIpAddressType"
      SetLoadBalancerListenerSSLCertificate = "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate"
      SetLoadBalancerPoliciesForBackendServer = "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
      SetLoadBalancerPoliciesOfListener = "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
      SetRulePriorities = "elasticloadbalancing:SetRulePriorities"
      SetSecurityGroups = "elasticloadbalancing:SetSecurityGroups"
      SetSubnets = "elasticloadbalancing:SetSubnets"
      SetWebAcl = "elasticloadbalancing:SetWebAcl"
    }
    elasticmapreduce = {
      AllActions = "elasticmapreduce:*"
      AddInstanceFleet = "elasticmapreduce:AddInstanceFleet"
      AddInstanceGroups = "elasticmapreduce:AddInstanceGroups"
      AddJobFlowSteps = "elasticmapreduce:AddJobFlowSteps"
      AddTags = "elasticmapreduce:AddTags"
      AttachEditor = "elasticmapreduce:AttachEditor"
      CancelSteps = "elasticmapreduce:CancelSteps"
      CreateEditor = "elasticmapreduce:CreateEditor"
      CreatePersistentAppUI = "elasticmapreduce:CreatePersistentAppUI"
      CreateRepository = "elasticmapreduce:CreateRepository"
      CreateSecurityConfiguration = "elasticmapreduce:CreateSecurityConfiguration"
      CreateStudio = "elasticmapreduce:CreateStudio"
      CreateStudioPresignedUrl = "elasticmapreduce:CreateStudioPresignedUrl"
      CreateStudioSessionMapping = "elasticmapreduce:CreateStudioSessionMapping"
      DeleteEditor = "elasticmapreduce:DeleteEditor"
      DeleteRepository = "elasticmapreduce:DeleteRepository"
      DeleteSecurityConfiguration = "elasticmapreduce:DeleteSecurityConfiguration"
      DeleteStudio = "elasticmapreduce:DeleteStudio"
      DeleteStudioSessionMapping = "elasticmapreduce:DeleteStudioSessionMapping"
      DeleteWorkspaceAccess = "elasticmapreduce:DeleteWorkspaceAccess"
      DescribeCluster = "elasticmapreduce:DescribeCluster"
      DescribeEditor = "elasticmapreduce:DescribeEditor"
      DescribeJobFlows = "elasticmapreduce:DescribeJobFlows"
      DescribeNotebookExecution = "elasticmapreduce:DescribeNotebookExecution"
      DescribePersistentAppUI = "elasticmapreduce:DescribePersistentAppUI"
      DescribeReleaseLabel = "elasticmapreduce:DescribeReleaseLabel"
      DescribeRepository = "elasticmapreduce:DescribeRepository"
      DescribeSecurityConfiguration = "elasticmapreduce:DescribeSecurityConfiguration"
      DescribeStep = "elasticmapreduce:DescribeStep"
      DescribeStudio = "elasticmapreduce:DescribeStudio"
      DetachEditor = "elasticmapreduce:DetachEditor"
      GetAutoTerminationPolicy = "elasticmapreduce:GetAutoTerminationPolicy"
      GetBlockPublicAccessConfiguration = "elasticmapreduce:GetBlockPublicAccessConfiguration"
      GetClusterSessionCredentials = "elasticmapreduce:GetClusterSessionCredentials"
      GetManagedScalingPolicy = "elasticmapreduce:GetManagedScalingPolicy"
      GetOnClusterAppUIPresignedURL = "elasticmapreduce:GetOnClusterAppUIPresignedURL"
      GetPersistentAppUIPresignedURL = "elasticmapreduce:GetPersistentAppUIPresignedURL"
      GetStudioSessionMapping = "elasticmapreduce:GetStudioSessionMapping"
      LinkRepository = "elasticmapreduce:LinkRepository"
      ListBootstrapActions = "elasticmapreduce:ListBootstrapActions"
      ListClusters = "elasticmapreduce:ListClusters"
      ListEditors = "elasticmapreduce:ListEditors"
      ListInstanceFleets = "elasticmapreduce:ListInstanceFleets"
      ListInstanceGroups = "elasticmapreduce:ListInstanceGroups"
      ListInstances = "elasticmapreduce:ListInstances"
      ListNotebookExecutions = "elasticmapreduce:ListNotebookExecutions"
      ListReleaseLabels = "elasticmapreduce:ListReleaseLabels"
      ListRepositories = "elasticmapreduce:ListRepositories"
      ListSecurityConfigurations = "elasticmapreduce:ListSecurityConfigurations"
      ListSteps = "elasticmapreduce:ListSteps"
      ListStudioSessionMappings = "elasticmapreduce:ListStudioSessionMappings"
      ListStudios = "elasticmapreduce:ListStudios"
      ListSupportedInstanceTypes = "elasticmapreduce:ListSupportedInstanceTypes"
      ListWorkspaceAccessIdentities = "elasticmapreduce:ListWorkspaceAccessIdentities"
      ModifyCluster = "elasticmapreduce:ModifyCluster"
      ModifyInstanceFleet = "elasticmapreduce:ModifyInstanceFleet"
      ModifyInstanceGroups = "elasticmapreduce:ModifyInstanceGroups"
      OpenEditorInConsole = "elasticmapreduce:OpenEditorInConsole"
      PutAutoScalingPolicy = "elasticmapreduce:PutAutoScalingPolicy"
      PutAutoTerminationPolicy = "elasticmapreduce:PutAutoTerminationPolicy"
      PutBlockPublicAccessConfiguration = "elasticmapreduce:PutBlockPublicAccessConfiguration"
      PutManagedScalingPolicy = "elasticmapreduce:PutManagedScalingPolicy"
      PutWorkspaceAccess = "elasticmapreduce:PutWorkspaceAccess"
      RemoveAutoScalingPolicy = "elasticmapreduce:RemoveAutoScalingPolicy"
      RemoveAutoTerminationPolicy = "elasticmapreduce:RemoveAutoTerminationPolicy"
      RemoveManagedScalingPolicy = "elasticmapreduce:RemoveManagedScalingPolicy"
      RemoveTags = "elasticmapreduce:RemoveTags"
      RunJobFlow = "elasticmapreduce:RunJobFlow"
      SetKeepJobFlowAliveWhenNoSteps = "elasticmapreduce:SetKeepJobFlowAliveWhenNoSteps"
      SetTerminationProtection = "elasticmapreduce:SetTerminationProtection"
      SetUnhealthyNodeReplacement = "elasticmapreduce:SetUnhealthyNodeReplacement"
      SetVisibleToAllUsers = "elasticmapreduce:SetVisibleToAllUsers"
      StartEditor = "elasticmapreduce:StartEditor"
      StartNotebookExecution = "elasticmapreduce:StartNotebookExecution"
      StopEditor = "elasticmapreduce:StopEditor"
      StopNotebookExecution = "elasticmapreduce:StopNotebookExecution"
      TerminateJobFlows = "elasticmapreduce:TerminateJobFlows"
      UnlinkRepository = "elasticmapreduce:UnlinkRepository"
      UpdateEditor = "elasticmapreduce:UpdateEditor"
      UpdateRepository = "elasticmapreduce:UpdateRepository"
      UpdateStudio = "elasticmapreduce:UpdateStudio"
      UpdateStudioSessionMapping = "elasticmapreduce:UpdateStudioSessionMapping"
      ViewEventsFromAllClustersInConsole = "elasticmapreduce:ViewEventsFromAllClustersInConsole"
    }
    elastictranscoder = {
      AllActions = "elastictranscoder:*"
      CancelJob = "elastictranscoder:CancelJob"
      CreateJob = "elastictranscoder:CreateJob"
      CreatePipeline = "elastictranscoder:CreatePipeline"
      CreatePreset = "elastictranscoder:CreatePreset"
      DeletePipeline = "elastictranscoder:DeletePipeline"
      DeletePreset = "elastictranscoder:DeletePreset"
      ListJobsByPipeline = "elastictranscoder:ListJobsByPipeline"
      ListJobsByStatus = "elastictranscoder:ListJobsByStatus"
      ListPipelines = "elastictranscoder:ListPipelines"
      ListPresets = "elastictranscoder:ListPresets"
      ReadJob = "elastictranscoder:ReadJob"
      ReadPipeline = "elastictranscoder:ReadPipeline"
      ReadPreset = "elastictranscoder:ReadPreset"
      TestRole = "elastictranscoder:TestRole"
      UpdatePipeline = "elastictranscoder:UpdatePipeline"
      UpdatePipelineNotifications = "elastictranscoder:UpdatePipelineNotifications"
      UpdatePipelineStatus = "elastictranscoder:UpdatePipelineStatus"
    }
    elemental-activations = {
      AllActions = "elemental-activations:*"
      CompleteAccountRegistration = "elemental-activations:CompleteAccountRegistration"
      CompleteFileUpload = "elemental-activations:CompleteFileUpload"
      DownloadSoftware = "elemental-activations:DownloadSoftware"
      GenerateLicenses = "elemental-activations:GenerateLicenses"
      GetActivation = "elemental-activations:GetActivation"
      ListTagsForResource = "elemental-activations:ListTagsForResource"
      StartAccountRegistration = "elemental-activations:StartAccountRegistration"
      StartFileUpload = "elemental-activations:StartFileUpload"
      TagResource = "elemental-activations:TagResource"
      UntagResource = "elemental-activations:UntagResource"
    }
    elemental-appliances-software = {
      AllActions = "elemental-appliances-software:*"
      CompleteUpload = "elemental-appliances-software:CompleteUpload"
      CreateOrderV1 = "elemental-appliances-software:CreateOrderV1"
      CreateQuote = "elemental-appliances-software:CreateQuote"
      GetAvsCorrectAddress = "elemental-appliances-software:GetAvsCorrectAddress"
      GetBillingAddresses = "elemental-appliances-software:GetBillingAddresses"
      GetDeliveryAddressesV2 = "elemental-appliances-software:GetDeliveryAddressesV2"
      GetOrder = "elemental-appliances-software:GetOrder"
      GetOrdersV2 = "elemental-appliances-software:GetOrdersV2"
      GetQuote = "elemental-appliances-software:GetQuote"
      GetTaxes = "elemental-appliances-software:GetTaxes"
      ListQuotes = "elemental-appliances-software:ListQuotes"
      ListTagsForResource = "elemental-appliances-software:ListTagsForResource"
      StartUpload = "elemental-appliances-software:StartUpload"
      SubmitOrderV1 = "elemental-appliances-software:SubmitOrderV1"
      TagResource = "elemental-appliances-software:TagResource"
      UntagResource = "elemental-appliances-software:UntagResource"
      UpdateQuote = "elemental-appliances-software:UpdateQuote"
    }
    elemental-support-cases = {
      AllActions = "elemental-support-cases:*"
      CheckCasePermission = "elemental-support-cases:CheckCasePermission"
      CreateCase = "elemental-support-cases:CreateCase"
      GetCase = "elemental-support-cases:GetCase"
      GetCases = "elemental-support-cases:GetCases"
      UpdateCase = "elemental-support-cases:UpdateCase"
    }
    elemental-support-content = {
      AllActions = "elemental-support-content:*"
      Query = "elemental-support-content:Query"
    }
    emr-containers = {
      AllActions = "emr-containers:*"
      CancelJobRun = "emr-containers:CancelJobRun"
      CreateJobTemplate = "emr-containers:CreateJobTemplate"
      CreateManagedEndpoint = "emr-containers:CreateManagedEndpoint"
      CreateSecurityConfiguration = "emr-containers:CreateSecurityConfiguration"
      CreateVirtualCluster = "emr-containers:CreateVirtualCluster"
      DeleteJobTemplate = "emr-containers:DeleteJobTemplate"
      DeleteManagedEndpoint = "emr-containers:DeleteManagedEndpoint"
      DeleteVirtualCluster = "emr-containers:DeleteVirtualCluster"
      DescribeJobRun = "emr-containers:DescribeJobRun"
      DescribeJobTemplate = "emr-containers:DescribeJobTemplate"
      DescribeManagedEndpoint = "emr-containers:DescribeManagedEndpoint"
      DescribeSecurityConfiguration = "emr-containers:DescribeSecurityConfiguration"
      DescribeVirtualCluster = "emr-containers:DescribeVirtualCluster"
      GetManagedEndpointSessionCredentials = "emr-containers:GetManagedEndpointSessionCredentials"
      ListJobRuns = "emr-containers:ListJobRuns"
      ListJobTemplates = "emr-containers:ListJobTemplates"
      ListManagedEndpoints = "emr-containers:ListManagedEndpoints"
      ListSecurityConfigurations = "emr-containers:ListSecurityConfigurations"
      ListTagsForResource = "emr-containers:ListTagsForResource"
      ListVirtualClusters = "emr-containers:ListVirtualClusters"
      StartJobRun = "emr-containers:StartJobRun"
      TagResource = "emr-containers:TagResource"
      UntagResource = "emr-containers:UntagResource"
    }
    emr-serverless = {
      AllActions = "emr-serverless:*"
      AccessInteractiveEndpoints = "emr-serverless:AccessInteractiveEndpoints"
      AccessLivyEndpoints = "emr-serverless:AccessLivyEndpoints"
      CancelJobRun = "emr-serverless:CancelJobRun"
      CreateApplication = "emr-serverless:CreateApplication"
      DeleteApplication = "emr-serverless:DeleteApplication"
      GetApplication = "emr-serverless:GetApplication"
      GetDashboardForJobRun = "emr-serverless:GetDashboardForJobRun"
      GetJobRun = "emr-serverless:GetJobRun"
      ListApplications = "emr-serverless:ListApplications"
      ListJobRunAttempts = "emr-serverless:ListJobRunAttempts"
      ListJobRuns = "emr-serverless:ListJobRuns"
      ListTagsForResource = "emr-serverless:ListTagsForResource"
      StartApplication = "emr-serverless:StartApplication"
      StartJobRun = "emr-serverless:StartJobRun"
      StopApplication = "emr-serverless:StopApplication"
      TagResource = "emr-serverless:TagResource"
      UntagResource = "emr-serverless:UntagResource"
      UpdateApplication = "emr-serverless:UpdateApplication"
    }
    entityresolution = {
      AllActions = "entityresolution:*"
      AddPolicyStatement = "entityresolution:AddPolicyStatement"
      BatchDeleteUniqueId = "entityresolution:BatchDeleteUniqueId"
      CreateIdMappingWorkflow = "entityresolution:CreateIdMappingWorkflow"
      CreateIdNamespace = "entityresolution:CreateIdNamespace"
      CreateMatchingWorkflow = "entityresolution:CreateMatchingWorkflow"
      CreateSchemaMapping = "entityresolution:CreateSchemaMapping"
      DeleteIdMappingWorkflow = "entityresolution:DeleteIdMappingWorkflow"
      DeleteIdNamespace = "entityresolution:DeleteIdNamespace"
      DeleteMatchingWorkflow = "entityresolution:DeleteMatchingWorkflow"
      DeletePolicyStatement = "entityresolution:DeletePolicyStatement"
      DeleteSchemaMapping = "entityresolution:DeleteSchemaMapping"
      GetIdMappingJob = "entityresolution:GetIdMappingJob"
      GetIdMappingWorkflow = "entityresolution:GetIdMappingWorkflow"
      GetIdNamespace = "entityresolution:GetIdNamespace"
      GetMatchId = "entityresolution:GetMatchId"
      GetMatchingJob = "entityresolution:GetMatchingJob"
      GetMatchingWorkflow = "entityresolution:GetMatchingWorkflow"
      GetPolicy = "entityresolution:GetPolicy"
      GetProviderService = "entityresolution:GetProviderService"
      GetSchemaMapping = "entityresolution:GetSchemaMapping"
      ListIdMappingJobs = "entityresolution:ListIdMappingJobs"
      ListIdMappingWorkflows = "entityresolution:ListIdMappingWorkflows"
      ListIdNamespaces = "entityresolution:ListIdNamespaces"
      ListMatchingJobs = "entityresolution:ListMatchingJobs"
      ListMatchingWorkflows = "entityresolution:ListMatchingWorkflows"
      ListProviderServices = "entityresolution:ListProviderServices"
      ListSchemaMappings = "entityresolution:ListSchemaMappings"
      ListTagsForResource = "entityresolution:ListTagsForResource"
      PutPolicy = "entityresolution:PutPolicy"
      StartIdMappingJob = "entityresolution:StartIdMappingJob"
      StartMatchingJob = "entityresolution:StartMatchingJob"
      TagResource = "entityresolution:TagResource"
      UntagResource = "entityresolution:UntagResource"
      UpdateIdMappingWorkflow = "entityresolution:UpdateIdMappingWorkflow"
      UpdateIdNamespace = "entityresolution:UpdateIdNamespace"
      UpdateMatchingWorkflow = "entityresolution:UpdateMatchingWorkflow"
      UpdateSchemaMapping = "entityresolution:UpdateSchemaMapping"
      UseIdNamespace = "entityresolution:UseIdNamespace"
    }
    es = {
      AllActions = "es:*"
      AcceptInboundConnection = "es:AcceptInboundConnection"
      AcceptInboundCrossClusterSearchConnection = "es:AcceptInboundCrossClusterSearchConnection"
      AddDataSource = "es:AddDataSource"
      AddTags = "es:AddTags"
      AssociatePackage = "es:AssociatePackage"
      AuthorizeVpcEndpointAccess = "es:AuthorizeVpcEndpointAccess"
      CancelDomainConfigChange = "es:CancelDomainConfigChange"
      CancelElasticsearchServiceSoftwareUpdate = "es:CancelElasticsearchServiceSoftwareUpdate"
      CancelServiceSoftwareUpdate = "es:CancelServiceSoftwareUpdate"
      CreateDomain = "es:CreateDomain"
      CreateElasticsearchDomain = "es:CreateElasticsearchDomain"
      CreateElasticsearchServiceRole = "es:CreateElasticsearchServiceRole"
      CreateOutboundConnection = "es:CreateOutboundConnection"
      CreateOutboundCrossClusterSearchConnection = "es:CreateOutboundCrossClusterSearchConnection"
      CreatePackage = "es:CreatePackage"
      CreateServiceRole = "es:CreateServiceRole"
      CreateVpcEndpoint = "es:CreateVpcEndpoint"
      DeleteDataSource = "es:DeleteDataSource"
      DeleteDomain = "es:DeleteDomain"
      DeleteElasticsearchDomain = "es:DeleteElasticsearchDomain"
      DeleteElasticsearchServiceRole = "es:DeleteElasticsearchServiceRole"
      DeleteInboundConnection = "es:DeleteInboundConnection"
      DeleteInboundCrossClusterSearchConnection = "es:DeleteInboundCrossClusterSearchConnection"
      DeleteOutboundConnection = "es:DeleteOutboundConnection"
      DeleteOutboundCrossClusterSearchConnection = "es:DeleteOutboundCrossClusterSearchConnection"
      DeletePackage = "es:DeletePackage"
      DeleteVpcEndpoint = "es:DeleteVpcEndpoint"
      DescribeDomain = "es:DescribeDomain"
      DescribeDomainAutoTunes = "es:DescribeDomainAutoTunes"
      DescribeDomainChangeProgress = "es:DescribeDomainChangeProgress"
      DescribeDomainConfig = "es:DescribeDomainConfig"
      DescribeDomainHealth = "es:DescribeDomainHealth"
      DescribeDomainNodes = "es:DescribeDomainNodes"
      DescribeDomains = "es:DescribeDomains"
      DescribeDryRunProgress = "es:DescribeDryRunProgress"
      DescribeElasticsearchDomain = "es:DescribeElasticsearchDomain"
      DescribeElasticsearchDomainConfig = "es:DescribeElasticsearchDomainConfig"
      DescribeElasticsearchDomains = "es:DescribeElasticsearchDomains"
      DescribeElasticsearchInstanceTypeLimits = "es:DescribeElasticsearchInstanceTypeLimits"
      DescribeInboundConnections = "es:DescribeInboundConnections"
      DescribeInboundCrossClusterSearchConnections = "es:DescribeInboundCrossClusterSearchConnections"
      DescribeInstanceTypeLimits = "es:DescribeInstanceTypeLimits"
      DescribeOutboundConnections = "es:DescribeOutboundConnections"
      DescribeOutboundCrossClusterSearchConnections = "es:DescribeOutboundCrossClusterSearchConnections"
      DescribePackages = "es:DescribePackages"
      DescribeReservedElasticsearchInstanceOfferings = "es:DescribeReservedElasticsearchInstanceOfferings"
      DescribeReservedElasticsearchInstances = "es:DescribeReservedElasticsearchInstances"
      DescribeReservedInstanceOfferings = "es:DescribeReservedInstanceOfferings"
      DescribeReservedInstances = "es:DescribeReservedInstances"
      DescribeVpcEndpoints = "es:DescribeVpcEndpoints"
      DissociatePackage = "es:DissociatePackage"
      ESCrossClusterGet = "es:ESCrossClusterGet"
      ESHttpDelete = "es:ESHttpDelete"
      ESHttpGet = "es:ESHttpGet"
      ESHttpHead = "es:ESHttpHead"
      ESHttpPatch = "es:ESHttpPatch"
      ESHttpPost = "es:ESHttpPost"
      ESHttpPut = "es:ESHttpPut"
      GetCompatibleElasticsearchVersions = "es:GetCompatibleElasticsearchVersions"
      GetCompatibleVersions = "es:GetCompatibleVersions"
      GetDataSource = "es:GetDataSource"
      GetDomainMaintenanceStatus = "es:GetDomainMaintenanceStatus"
      GetPackageVersionHistory = "es:GetPackageVersionHistory"
      GetUpgradeHistory = "es:GetUpgradeHistory"
      GetUpgradeStatus = "es:GetUpgradeStatus"
      ListDataSources = "es:ListDataSources"
      ListDomainMaintenances = "es:ListDomainMaintenances"
      ListDomainNames = "es:ListDomainNames"
      ListDomainsForPackage = "es:ListDomainsForPackage"
      ListElasticsearchInstanceTypeDetails = "es:ListElasticsearchInstanceTypeDetails"
      ListElasticsearchInstanceTypes = "es:ListElasticsearchInstanceTypes"
      ListElasticsearchVersions = "es:ListElasticsearchVersions"
      ListInstanceTypeDetails = "es:ListInstanceTypeDetails"
      ListPackagesForDomain = "es:ListPackagesForDomain"
      ListScheduledActions = "es:ListScheduledActions"
      ListTags = "es:ListTags"
      ListVersions = "es:ListVersions"
      ListVpcEndpointAccess = "es:ListVpcEndpointAccess"
      ListVpcEndpoints = "es:ListVpcEndpoints"
      ListVpcEndpointsForDomain = "es:ListVpcEndpointsForDomain"
      PurchaseReservedElasticsearchInstanceOffering = "es:PurchaseReservedElasticsearchInstanceOffering"
      PurchaseReservedInstanceOffering = "es:PurchaseReservedInstanceOffering"
      RejectInboundConnection = "es:RejectInboundConnection"
      RejectInboundCrossClusterSearchConnection = "es:RejectInboundCrossClusterSearchConnection"
      RemoveTags = "es:RemoveTags"
      RevokeVpcEndpointAccess = "es:RevokeVpcEndpointAccess"
      StartDomainMaintenance = "es:StartDomainMaintenance"
      StartElasticsearchServiceSoftwareUpdate = "es:StartElasticsearchServiceSoftwareUpdate"
      StartServiceSoftwareUpdate = "es:StartServiceSoftwareUpdate"
      UpdateDataSource = "es:UpdateDataSource"
      UpdateDomainConfig = "es:UpdateDomainConfig"
      UpdateElasticsearchDomainConfig = "es:UpdateElasticsearchDomainConfig"
      UpdatePackage = "es:UpdatePackage"
      UpdateScheduledAction = "es:UpdateScheduledAction"
      UpdateVpcEndpoint = "es:UpdateVpcEndpoint"
      UpgradeDomain = "es:UpgradeDomain"
      UpgradeElasticsearchDomain = "es:UpgradeElasticsearchDomain"
    }
    events = {
      AllActions = "events:*"
      ActivateEventSource = "events:ActivateEventSource"
      CancelReplay = "events:CancelReplay"
      CreateApiDestination = "events:CreateApiDestination"
      CreateArchive = "events:CreateArchive"
      CreateConnection = "events:CreateConnection"
      CreateEndpoint = "events:CreateEndpoint"
      CreateEventBus = "events:CreateEventBus"
      CreatePartnerEventSource = "events:CreatePartnerEventSource"
      DeactivateEventSource = "events:DeactivateEventSource"
      DeauthorizeConnection = "events:DeauthorizeConnection"
      DeleteApiDestination = "events:DeleteApiDestination"
      DeleteArchive = "events:DeleteArchive"
      DeleteConnection = "events:DeleteConnection"
      DeleteEndpoint = "events:DeleteEndpoint"
      DeleteEventBus = "events:DeleteEventBus"
      DeletePartnerEventSource = "events:DeletePartnerEventSource"
      DeleteRule = "events:DeleteRule"
      DescribeApiDestination = "events:DescribeApiDestination"
      DescribeArchive = "events:DescribeArchive"
      DescribeConnection = "events:DescribeConnection"
      DescribeEndpoint = "events:DescribeEndpoint"
      DescribeEventBus = "events:DescribeEventBus"
      DescribeEventSource = "events:DescribeEventSource"
      DescribePartnerEventSource = "events:DescribePartnerEventSource"
      DescribeReplay = "events:DescribeReplay"
      DescribeRule = "events:DescribeRule"
      DisableRule = "events:DisableRule"
      EnableRule = "events:EnableRule"
      InvokeApiDestination = "events:InvokeApiDestination"
      ListApiDestinations = "events:ListApiDestinations"
      ListArchives = "events:ListArchives"
      ListConnections = "events:ListConnections"
      ListEndpoints = "events:ListEndpoints"
      ListEventBuses = "events:ListEventBuses"
      ListEventSources = "events:ListEventSources"
      ListPartnerEventSourceAccounts = "events:ListPartnerEventSourceAccounts"
      ListPartnerEventSources = "events:ListPartnerEventSources"
      ListReplays = "events:ListReplays"
      ListRuleNamesByTarget = "events:ListRuleNamesByTarget"
      ListRules = "events:ListRules"
      ListTagsForResource = "events:ListTagsForResource"
      ListTargetsByRule = "events:ListTargetsByRule"
      PutEvents = "events:PutEvents"
      PutPartnerEvents = "events:PutPartnerEvents"
      PutPermission = "events:PutPermission"
      PutRule = "events:PutRule"
      PutTargets = "events:PutTargets"
      RemovePermission = "events:RemovePermission"
      RemoveTargets = "events:RemoveTargets"
      RetrieveConnectionCredentials = "events:RetrieveConnectionCredentials"
      StartReplay = "events:StartReplay"
      TagResource = "events:TagResource"
      TestEventPattern = "events:TestEventPattern"
      UntagResource = "events:UntagResource"
      UpdateApiDestination = "events:UpdateApiDestination"
      UpdateArchive = "events:UpdateArchive"
      UpdateConnection = "events:UpdateConnection"
      UpdateEndpoint = "events:UpdateEndpoint"
      UpdateEventBus = "events:UpdateEventBus"
    }
    evidently = {
      AllActions = "evidently:*"
      BatchEvaluateFeature = "evidently:BatchEvaluateFeature"
      CreateExperiment = "evidently:CreateExperiment"
      CreateFeature = "evidently:CreateFeature"
      CreateLaunch = "evidently:CreateLaunch"
      CreateProject = "evidently:CreateProject"
      CreateSegment = "evidently:CreateSegment"
      DeleteExperiment = "evidently:DeleteExperiment"
      DeleteFeature = "evidently:DeleteFeature"
      DeleteLaunch = "evidently:DeleteLaunch"
      DeleteProject = "evidently:DeleteProject"
      DeleteSegment = "evidently:DeleteSegment"
      EvaluateFeature = "evidently:EvaluateFeature"
      GetExperiment = "evidently:GetExperiment"
      GetExperimentResults = "evidently:GetExperimentResults"
      GetFeature = "evidently:GetFeature"
      GetLaunch = "evidently:GetLaunch"
      GetProject = "evidently:GetProject"
      GetSegment = "evidently:GetSegment"
      ListExperiments = "evidently:ListExperiments"
      ListFeatures = "evidently:ListFeatures"
      ListLaunches = "evidently:ListLaunches"
      ListProjects = "evidently:ListProjects"
      ListSegmentReferences = "evidently:ListSegmentReferences"
      ListSegments = "evidently:ListSegments"
      ListTagsForResource = "evidently:ListTagsForResource"
      PutProjectEvents = "evidently:PutProjectEvents"
      StartExperiment = "evidently:StartExperiment"
      StartLaunch = "evidently:StartLaunch"
      StopExperiment = "evidently:StopExperiment"
      StopLaunch = "evidently:StopLaunch"
      TagResource = "evidently:TagResource"
      TestSegmentPattern = "evidently:TestSegmentPattern"
      UntagResource = "evidently:UntagResource"
      UpdateExperiment = "evidently:UpdateExperiment"
      UpdateFeature = "evidently:UpdateFeature"
      UpdateLaunch = "evidently:UpdateLaunch"
      UpdateProject = "evidently:UpdateProject"
      UpdateProjectDataDelivery = "evidently:UpdateProjectDataDelivery"
    }
    execute-api = {
      AllActions = "execute-api:*"
      InvalidateCache = "execute-api:InvalidateCache"
      Invoke = "execute-api:Invoke"
      ManageConnections = "execute-api:ManageConnections"
    }
    finspace-api = {
      AllActions = "finspace-api:*"
      GetProgrammaticAccessCredentials = "finspace-api:GetProgrammaticAccessCredentials"
    }
    finspace = {
      AllActions = "finspace:*"
      ConnectKxCluster = "finspace:ConnectKxCluster"
      CreateEnvironment = "finspace:CreateEnvironment"
      CreateKxChangeset = "finspace:CreateKxChangeset"
      CreateKxCluster = "finspace:CreateKxCluster"
      CreateKxDatabase = "finspace:CreateKxDatabase"
      CreateKxDataview = "finspace:CreateKxDataview"
      CreateKxEnvironment = "finspace:CreateKxEnvironment"
      CreateKxScalingGroup = "finspace:CreateKxScalingGroup"
      CreateKxUser = "finspace:CreateKxUser"
      CreateKxVolume = "finspace:CreateKxVolume"
      CreateUser = "finspace:CreateUser"
      DeleteEnvironment = "finspace:DeleteEnvironment"
      DeleteKxCluster = "finspace:DeleteKxCluster"
      DeleteKxClusterNode = "finspace:DeleteKxClusterNode"
      DeleteKxDatabase = "finspace:DeleteKxDatabase"
      DeleteKxDataview = "finspace:DeleteKxDataview"
      DeleteKxEnvironment = "finspace:DeleteKxEnvironment"
      DeleteKxScalingGroup = "finspace:DeleteKxScalingGroup"
      DeleteKxUser = "finspace:DeleteKxUser"
      DeleteKxVolume = "finspace:DeleteKxVolume"
      GetEnvironment = "finspace:GetEnvironment"
      GetKxChangeset = "finspace:GetKxChangeset"
      GetKxCluster = "finspace:GetKxCluster"
      GetKxConnectionString = "finspace:GetKxConnectionString"
      GetKxDatabase = "finspace:GetKxDatabase"
      GetKxDataview = "finspace:GetKxDataview"
      GetKxEnvironment = "finspace:GetKxEnvironment"
      GetKxScalingGroup = "finspace:GetKxScalingGroup"
      GetKxUser = "finspace:GetKxUser"
      GetKxVolume = "finspace:GetKxVolume"
      GetLoadSampleDataSetGroupIntoEnvironmentStatus = "finspace:GetLoadSampleDataSetGroupIntoEnvironmentStatus"
      GetUser = "finspace:GetUser"
      ListEnvironments = "finspace:ListEnvironments"
      ListKxChangesets = "finspace:ListKxChangesets"
      ListKxClusterNodes = "finspace:ListKxClusterNodes"
      ListKxClusters = "finspace:ListKxClusters"
      ListKxDatabases = "finspace:ListKxDatabases"
      ListKxDataviews = "finspace:ListKxDataviews"
      ListKxEnvironments = "finspace:ListKxEnvironments"
      ListKxScalingGroups = "finspace:ListKxScalingGroups"
      ListKxUsers = "finspace:ListKxUsers"
      ListKxVolumes = "finspace:ListKxVolumes"
      ListTagsForResource = "finspace:ListTagsForResource"
      ListUsers = "finspace:ListUsers"
      LoadSampleDataSetGroupIntoEnvironment = "finspace:LoadSampleDataSetGroupIntoEnvironment"
      MountKxDatabase = "finspace:MountKxDatabase"
      ResetUserPassword = "finspace:ResetUserPassword"
      TagResource = "finspace:TagResource"
      UntagResource = "finspace:UntagResource"
      UpdateEnvironment = "finspace:UpdateEnvironment"
      UpdateKxClusterCodeConfiguration = "finspace:UpdateKxClusterCodeConfiguration"
      UpdateKxClusterDatabases = "finspace:UpdateKxClusterDatabases"
      UpdateKxDatabase = "finspace:UpdateKxDatabase"
      UpdateKxDataview = "finspace:UpdateKxDataview"
      UpdateKxEnvironment = "finspace:UpdateKxEnvironment"
      UpdateKxEnvironmentNetwork = "finspace:UpdateKxEnvironmentNetwork"
      UpdateKxUser = "finspace:UpdateKxUser"
      UpdateKxVolume = "finspace:UpdateKxVolume"
      UpdateUser = "finspace:UpdateUser"
    }
    firehose = {
      AllActions = "firehose:*"
      CreateDeliveryStream = "firehose:CreateDeliveryStream"
      DeleteDeliveryStream = "firehose:DeleteDeliveryStream"
      DescribeDeliveryStream = "firehose:DescribeDeliveryStream"
      ListDeliveryStreams = "firehose:ListDeliveryStreams"
      ListTagsForDeliveryStream = "firehose:ListTagsForDeliveryStream"
      PutRecord = "firehose:PutRecord"
      PutRecordBatch = "firehose:PutRecordBatch"
      StartDeliveryStreamEncryption = "firehose:StartDeliveryStreamEncryption"
      StopDeliveryStreamEncryption = "firehose:StopDeliveryStreamEncryption"
      TagDeliveryStream = "firehose:TagDeliveryStream"
      UntagDeliveryStream = "firehose:UntagDeliveryStream"
      UpdateDestination = "firehose:UpdateDestination"
    }
    fis = {
      AllActions = "fis:*"
      CreateExperimentTemplate = "fis:CreateExperimentTemplate"
      CreateTargetAccountConfiguration = "fis:CreateTargetAccountConfiguration"
      DeleteExperimentTemplate = "fis:DeleteExperimentTemplate"
      DeleteTargetAccountConfiguration = "fis:DeleteTargetAccountConfiguration"
      GetAction = "fis:GetAction"
      GetExperiment = "fis:GetExperiment"
      GetExperimentTargetAccountConfiguration = "fis:GetExperimentTargetAccountConfiguration"
      GetExperimentTemplate = "fis:GetExperimentTemplate"
      GetTargetAccountConfiguration = "fis:GetTargetAccountConfiguration"
      GetTargetResourceType = "fis:GetTargetResourceType"
      InjectApiInternalError = "fis:InjectApiInternalError"
      InjectApiThrottleError = "fis:InjectApiThrottleError"
      InjectApiUnavailableError = "fis:InjectApiUnavailableError"
      ListActions = "fis:ListActions"
      ListExperimentResolvedTargets = "fis:ListExperimentResolvedTargets"
      ListExperimentTargetAccountConfigurations = "fis:ListExperimentTargetAccountConfigurations"
      ListExperimentTemplates = "fis:ListExperimentTemplates"
      ListExperiments = "fis:ListExperiments"
      ListTagsForResource = "fis:ListTagsForResource"
      ListTargetAccountConfigurations = "fis:ListTargetAccountConfigurations"
      ListTargetResourceTypes = "fis:ListTargetResourceTypes"
      StartExperiment = "fis:StartExperiment"
      StopExperiment = "fis:StopExperiment"
      TagResource = "fis:TagResource"
      UntagResource = "fis:UntagResource"
      UpdateExperimentTemplate = "fis:UpdateExperimentTemplate"
      UpdateTargetAccountConfiguration = "fis:UpdateTargetAccountConfiguration"
    }
    fms = {
      AllActions = "fms:*"
      AssociateAdminAccount = "fms:AssociateAdminAccount"
      AssociateThirdPartyFirewall = "fms:AssociateThirdPartyFirewall"
      BatchAssociateResource = "fms:BatchAssociateResource"
      BatchDisassociateResource = "fms:BatchDisassociateResource"
      DeleteAppsList = "fms:DeleteAppsList"
      DeleteNotificationChannel = "fms:DeleteNotificationChannel"
      DeletePolicy = "fms:DeletePolicy"
      DeleteProtocolsList = "fms:DeleteProtocolsList"
      DeleteResourceSet = "fms:DeleteResourceSet"
      DisassociateAdminAccount = "fms:DisassociateAdminAccount"
      DisassociateThirdPartyFirewall = "fms:DisassociateThirdPartyFirewall"
      GetAdminAccount = "fms:GetAdminAccount"
      GetAdminScope = "fms:GetAdminScope"
      GetAppsList = "fms:GetAppsList"
      GetComplianceDetail = "fms:GetComplianceDetail"
      GetNotificationChannel = "fms:GetNotificationChannel"
      GetPolicy = "fms:GetPolicy"
      GetProtectionStatus = "fms:GetProtectionStatus"
      GetProtocolsList = "fms:GetProtocolsList"
      GetResourceSet = "fms:GetResourceSet"
      GetThirdPartyFirewallAssociationStatus = "fms:GetThirdPartyFirewallAssociationStatus"
      GetViolationDetails = "fms:GetViolationDetails"
      ListAdminAccountsForOrganization = "fms:ListAdminAccountsForOrganization"
      ListAdminsManagingAccount = "fms:ListAdminsManagingAccount"
      ListAppsLists = "fms:ListAppsLists"
      ListComplianceStatus = "fms:ListComplianceStatus"
      ListDiscoveredResources = "fms:ListDiscoveredResources"
      ListMemberAccounts = "fms:ListMemberAccounts"
      ListPolicies = "fms:ListPolicies"
      ListProtocolsLists = "fms:ListProtocolsLists"
      ListResourceSetResources = "fms:ListResourceSetResources"
      ListResourceSets = "fms:ListResourceSets"
      ListTagsForResource = "fms:ListTagsForResource"
      ListThirdPartyFirewallFirewallPolicies = "fms:ListThirdPartyFirewallFirewallPolicies"
      PutAdminAccount = "fms:PutAdminAccount"
      PutAppsList = "fms:PutAppsList"
      PutNotificationChannel = "fms:PutNotificationChannel"
      PutPolicy = "fms:PutPolicy"
      PutProtocolsList = "fms:PutProtocolsList"
      PutResourceSet = "fms:PutResourceSet"
      TagResource = "fms:TagResource"
      UntagResource = "fms:UntagResource"
    }
    forecast = {
      AllActions = "forecast:*"
      CreateAutoPredictor = "forecast:CreateAutoPredictor"
      CreateDataset = "forecast:CreateDataset"
      CreateDatasetGroup = "forecast:CreateDatasetGroup"
      CreateDatasetImportJob = "forecast:CreateDatasetImportJob"
      CreateExplainability = "forecast:CreateExplainability"
      CreateExplainabilityExport = "forecast:CreateExplainabilityExport"
      CreateForecast = "forecast:CreateForecast"
      CreateForecastEndpoint = "forecast:CreateForecastEndpoint"
      CreateForecastExportJob = "forecast:CreateForecastExportJob"
      CreateMonitor = "forecast:CreateMonitor"
      CreatePredictor = "forecast:CreatePredictor"
      CreatePredictorBacktestExportJob = "forecast:CreatePredictorBacktestExportJob"
      CreateWhatIfAnalysis = "forecast:CreateWhatIfAnalysis"
      CreateWhatIfForecast = "forecast:CreateWhatIfForecast"
      CreateWhatIfForecastExport = "forecast:CreateWhatIfForecastExport"
      DeleteDataset = "forecast:DeleteDataset"
      DeleteDatasetGroup = "forecast:DeleteDatasetGroup"
      DeleteDatasetImportJob = "forecast:DeleteDatasetImportJob"
      DeleteExplainability = "forecast:DeleteExplainability"
      DeleteExplainabilityExport = "forecast:DeleteExplainabilityExport"
      DeleteForecast = "forecast:DeleteForecast"
      DeleteForecastEndpoint = "forecast:DeleteForecastEndpoint"
      DeleteForecastExportJob = "forecast:DeleteForecastExportJob"
      DeleteMonitor = "forecast:DeleteMonitor"
      DeletePredictor = "forecast:DeletePredictor"
      DeletePredictorBacktestExportJob = "forecast:DeletePredictorBacktestExportJob"
      DeleteResourceTree = "forecast:DeleteResourceTree"
      DeleteWhatIfAnalysis = "forecast:DeleteWhatIfAnalysis"
      DeleteWhatIfForecast = "forecast:DeleteWhatIfForecast"
      DeleteWhatIfForecastExport = "forecast:DeleteWhatIfForecastExport"
      DescribeAutoPredictor = "forecast:DescribeAutoPredictor"
      DescribeDataset = "forecast:DescribeDataset"
      DescribeDatasetGroup = "forecast:DescribeDatasetGroup"
      DescribeDatasetImportJob = "forecast:DescribeDatasetImportJob"
      DescribeExplainability = "forecast:DescribeExplainability"
      DescribeExplainabilityExport = "forecast:DescribeExplainabilityExport"
      DescribeForecast = "forecast:DescribeForecast"
      DescribeForecastEndpoint = "forecast:DescribeForecastEndpoint"
      DescribeForecastExportJob = "forecast:DescribeForecastExportJob"
      DescribeMonitor = "forecast:DescribeMonitor"
      DescribePredictor = "forecast:DescribePredictor"
      DescribePredictorBacktestExportJob = "forecast:DescribePredictorBacktestExportJob"
      DescribeWhatIfAnalysis = "forecast:DescribeWhatIfAnalysis"
      DescribeWhatIfForecast = "forecast:DescribeWhatIfForecast"
      DescribeWhatIfForecastExport = "forecast:DescribeWhatIfForecastExport"
      GetAccuracyMetrics = "forecast:GetAccuracyMetrics"
      GetRecentForecastContext = "forecast:GetRecentForecastContext"
      InvokeForecastEndpoint = "forecast:InvokeForecastEndpoint"
      ListDatasetGroups = "forecast:ListDatasetGroups"
      ListDatasetImportJobs = "forecast:ListDatasetImportJobs"
      ListDatasets = "forecast:ListDatasets"
      ListExplainabilities = "forecast:ListExplainabilities"
      ListExplainabilityExports = "forecast:ListExplainabilityExports"
      ListForecastExportJobs = "forecast:ListForecastExportJobs"
      ListForecasts = "forecast:ListForecasts"
      ListMonitorEvaluations = "forecast:ListMonitorEvaluations"
      ListMonitors = "forecast:ListMonitors"
      ListPredictorBacktestExportJobs = "forecast:ListPredictorBacktestExportJobs"
      ListPredictors = "forecast:ListPredictors"
      ListTagsForResource = "forecast:ListTagsForResource"
      ListWhatIfAnalyses = "forecast:ListWhatIfAnalyses"
      ListWhatIfForecastExports = "forecast:ListWhatIfForecastExports"
      ListWhatIfForecasts = "forecast:ListWhatIfForecasts"
      QueryForecast = "forecast:QueryForecast"
      QueryWhatIfForecast = "forecast:QueryWhatIfForecast"
      ResumeResource = "forecast:ResumeResource"
      StopResource = "forecast:StopResource"
      TagResource = "forecast:TagResource"
      UntagResource = "forecast:UntagResource"
      UpdateDatasetGroup = "forecast:UpdateDatasetGroup"
    }
    frauddetector = {
      AllActions = "frauddetector:*"
      BatchCreateVariable = "frauddetector:BatchCreateVariable"
      BatchGetVariable = "frauddetector:BatchGetVariable"
      CancelBatchImportJob = "frauddetector:CancelBatchImportJob"
      CancelBatchPredictionJob = "frauddetector:CancelBatchPredictionJob"
      CreateBatchImportJob = "frauddetector:CreateBatchImportJob"
      CreateBatchPredictionJob = "frauddetector:CreateBatchPredictionJob"
      CreateDetectorVersion = "frauddetector:CreateDetectorVersion"
      CreateList = "frauddetector:CreateList"
      CreateModel = "frauddetector:CreateModel"
      CreateModelVersion = "frauddetector:CreateModelVersion"
      CreateRule = "frauddetector:CreateRule"
      CreateVariable = "frauddetector:CreateVariable"
      DeleteBatchImportJob = "frauddetector:DeleteBatchImportJob"
      DeleteBatchPredictionJob = "frauddetector:DeleteBatchPredictionJob"
      DeleteDetector = "frauddetector:DeleteDetector"
      DeleteDetectorVersion = "frauddetector:DeleteDetectorVersion"
      DeleteEntityType = "frauddetector:DeleteEntityType"
      DeleteEvent = "frauddetector:DeleteEvent"
      DeleteEventType = "frauddetector:DeleteEventType"
      DeleteEventsByEventType = "frauddetector:DeleteEventsByEventType"
      DeleteExternalModel = "frauddetector:DeleteExternalModel"
      DeleteLabel = "frauddetector:DeleteLabel"
      DeleteList = "frauddetector:DeleteList"
      DeleteModel = "frauddetector:DeleteModel"
      DeleteModelVersion = "frauddetector:DeleteModelVersion"
      DeleteOutcome = "frauddetector:DeleteOutcome"
      DeleteRule = "frauddetector:DeleteRule"
      DeleteVariable = "frauddetector:DeleteVariable"
      DescribeDetector = "frauddetector:DescribeDetector"
      DescribeModelVersions = "frauddetector:DescribeModelVersions"
      GetBatchImportJobValidationReport = "frauddetector:GetBatchImportJobValidationReport"
      GetBatchImportJobs = "frauddetector:GetBatchImportJobs"
      GetBatchPredictionJobs = "frauddetector:GetBatchPredictionJobs"
      GetDeleteEventsByEventTypeStatus = "frauddetector:GetDeleteEventsByEventTypeStatus"
      GetDetectorVersion = "frauddetector:GetDetectorVersion"
      GetDetectors = "frauddetector:GetDetectors"
      GetEntityTypes = "frauddetector:GetEntityTypes"
      GetEvent = "frauddetector:GetEvent"
      GetEventPrediction = "frauddetector:GetEventPrediction"
      GetEventPredictionMetadata = "frauddetector:GetEventPredictionMetadata"
      GetEventTypes = "frauddetector:GetEventTypes"
      GetExternalModels = "frauddetector:GetExternalModels"
      GetKMSEncryptionKey = "frauddetector:GetKMSEncryptionKey"
      GetLabels = "frauddetector:GetLabels"
      GetListElements = "frauddetector:GetListElements"
      GetListsMetadata = "frauddetector:GetListsMetadata"
      GetModelVersion = "frauddetector:GetModelVersion"
      GetModels = "frauddetector:GetModels"
      GetOutcomes = "frauddetector:GetOutcomes"
      GetRules = "frauddetector:GetRules"
      GetVariables = "frauddetector:GetVariables"
      ListEventPredictions = "frauddetector:ListEventPredictions"
      ListTagsForResource = "frauddetector:ListTagsForResource"
      PutDetector = "frauddetector:PutDetector"
      PutEntityType = "frauddetector:PutEntityType"
      PutEventType = "frauddetector:PutEventType"
      PutExternalModel = "frauddetector:PutExternalModel"
      PutKMSEncryptionKey = "frauddetector:PutKMSEncryptionKey"
      PutLabel = "frauddetector:PutLabel"
      PutOutcome = "frauddetector:PutOutcome"
      SendEvent = "frauddetector:SendEvent"
      TagResource = "frauddetector:TagResource"
      UntagResource = "frauddetector:UntagResource"
      UpdateDetectorVersion = "frauddetector:UpdateDetectorVersion"
      UpdateDetectorVersionMetadata = "frauddetector:UpdateDetectorVersionMetadata"
      UpdateDetectorVersionStatus = "frauddetector:UpdateDetectorVersionStatus"
      UpdateEventLabel = "frauddetector:UpdateEventLabel"
      UpdateList = "frauddetector:UpdateList"
      UpdateModel = "frauddetector:UpdateModel"
      UpdateModelVersion = "frauddetector:UpdateModelVersion"
      UpdateModelVersionStatus = "frauddetector:UpdateModelVersionStatus"
      UpdateRuleMetadata = "frauddetector:UpdateRuleMetadata"
      UpdateRuleVersion = "frauddetector:UpdateRuleVersion"
      UpdateVariable = "frauddetector:UpdateVariable"
    }
    freertos = {
      AllActions = "freertos:*"
      CreateSoftwareConfiguration = "freertos:CreateSoftwareConfiguration"
      CreateSubscription = "freertos:CreateSubscription"
      DeleteSoftwareConfiguration = "freertos:DeleteSoftwareConfiguration"
      DescribeHardwarePlatform = "freertos:DescribeHardwarePlatform"
      DescribeSoftwareConfiguration = "freertos:DescribeSoftwareConfiguration"
      DescribeSubscription = "freertos:DescribeSubscription"
      GetEmpPatchUrl = "freertos:GetEmpPatchUrl"
      GetSoftwareURL = "freertos:GetSoftwareURL"
      GetSoftwareURLForConfiguration = "freertos:GetSoftwareURLForConfiguration"
      GetSubscriptionBillingAmount = "freertos:GetSubscriptionBillingAmount"
      ListFreeRTOSVersions = "freertos:ListFreeRTOSVersions"
      ListHardwarePlatforms = "freertos:ListHardwarePlatforms"
      ListHardwareVendors = "freertos:ListHardwareVendors"
      ListSoftwareConfigurations = "freertos:ListSoftwareConfigurations"
      ListSoftwarePatches = "freertos:ListSoftwarePatches"
      ListSubscriptionEmails = "freertos:ListSubscriptionEmails"
      ListSubscriptions = "freertos:ListSubscriptions"
      UpdateEmailRecipients = "freertos:UpdateEmailRecipients"
      UpdateSoftwareConfiguration = "freertos:UpdateSoftwareConfiguration"
      VerifyEmail = "freertos:VerifyEmail"
    }
    freetier = {
      AllActions = "freetier:*"
      GetFreeTierAlertPreference = "freetier:GetFreeTierAlertPreference"
      GetFreeTierUsage = "freetier:GetFreeTierUsage"
      PutFreeTierAlertPreference = "freetier:PutFreeTierAlertPreference"
    }
    fsx = {
      AllActions = "fsx:*"
      AssociateFileGateway = "fsx:AssociateFileGateway"
      AssociateFileSystemAliases = "fsx:AssociateFileSystemAliases"
      BypassSnaplockEnterpriseRetention = "fsx:BypassSnaplockEnterpriseRetention"
      CancelDataRepositoryTask = "fsx:CancelDataRepositoryTask"
      CopyBackup = "fsx:CopyBackup"
      CopySnapshotAndUpdateVolume = "fsx:CopySnapshotAndUpdateVolume"
      CreateBackup = "fsx:CreateBackup"
      CreateDataRepositoryAssociation = "fsx:CreateDataRepositoryAssociation"
      CreateDataRepositoryTask = "fsx:CreateDataRepositoryTask"
      CreateFileCache = "fsx:CreateFileCache"
      CreateFileSystem = "fsx:CreateFileSystem"
      CreateFileSystemFromBackup = "fsx:CreateFileSystemFromBackup"
      CreateSnapshot = "fsx:CreateSnapshot"
      CreateStorageVirtualMachine = "fsx:CreateStorageVirtualMachine"
      CreateVolume = "fsx:CreateVolume"
      CreateVolumeFromBackup = "fsx:CreateVolumeFromBackup"
      DeleteBackup = "fsx:DeleteBackup"
      DeleteDataRepositoryAssociation = "fsx:DeleteDataRepositoryAssociation"
      DeleteFileCache = "fsx:DeleteFileCache"
      DeleteFileSystem = "fsx:DeleteFileSystem"
      DeleteResourcePolicy = "fsx:DeleteResourcePolicy"
      DeleteSnapshot = "fsx:DeleteSnapshot"
      DeleteStorageVirtualMachine = "fsx:DeleteStorageVirtualMachine"
      DeleteVolume = "fsx:DeleteVolume"
      DescribeAssociatedFileGateways = "fsx:DescribeAssociatedFileGateways"
      DescribeBackups = "fsx:DescribeBackups"
      DescribeDataRepositoryAssociations = "fsx:DescribeDataRepositoryAssociations"
      DescribeDataRepositoryTasks = "fsx:DescribeDataRepositoryTasks"
      DescribeFileCaches = "fsx:DescribeFileCaches"
      DescribeFileSystemAliases = "fsx:DescribeFileSystemAliases"
      DescribeFileSystems = "fsx:DescribeFileSystems"
      DescribeSharedVpcConfiguration = "fsx:DescribeSharedVpcConfiguration"
      DescribeSnapshots = "fsx:DescribeSnapshots"
      DescribeStorageVirtualMachines = "fsx:DescribeStorageVirtualMachines"
      DescribeVolumes = "fsx:DescribeVolumes"
      DisassociateFileGateway = "fsx:DisassociateFileGateway"
      DisassociateFileSystemAliases = "fsx:DisassociateFileSystemAliases"
      GetResourcePolicy = "fsx:GetResourcePolicy"
      ListTagsForResource = "fsx:ListTagsForResource"
      ManageBackupPrincipalAssociations = "fsx:ManageBackupPrincipalAssociations"
      PutResourcePolicy = "fsx:PutResourcePolicy"
      ReleaseFileSystemNfsV3Locks = "fsx:ReleaseFileSystemNfsV3Locks"
      RestoreVolumeFromSnapshot = "fsx:RestoreVolumeFromSnapshot"
      StartMisconfiguredStateRecovery = "fsx:StartMisconfiguredStateRecovery"
      TagResource = "fsx:TagResource"
      UntagResource = "fsx:UntagResource"
      UpdateDataRepositoryAssociation = "fsx:UpdateDataRepositoryAssociation"
      UpdateFileCache = "fsx:UpdateFileCache"
      UpdateFileSystem = "fsx:UpdateFileSystem"
      UpdateSharedVpcConfiguration = "fsx:UpdateSharedVpcConfiguration"
      UpdateSnapshot = "fsx:UpdateSnapshot"
      UpdateStorageVirtualMachine = "fsx:UpdateStorageVirtualMachine"
      UpdateVolume = "fsx:UpdateVolume"
    }
    gamelift = {
      AllActions = "gamelift:*"
      AcceptMatch = "gamelift:AcceptMatch"
      ClaimGameServer = "gamelift:ClaimGameServer"
      CreateAlias = "gamelift:CreateAlias"
      CreateBuild = "gamelift:CreateBuild"
      CreateContainerGroupDefinition = "gamelift:CreateContainerGroupDefinition"
      CreateFleet = "gamelift:CreateFleet"
      CreateFleetLocations = "gamelift:CreateFleetLocations"
      CreateGameServerGroup = "gamelift:CreateGameServerGroup"
      CreateGameSession = "gamelift:CreateGameSession"
      CreateGameSessionQueue = "gamelift:CreateGameSessionQueue"
      CreateLocation = "gamelift:CreateLocation"
      CreateMatchmakingConfiguration = "gamelift:CreateMatchmakingConfiguration"
      CreateMatchmakingRuleSet = "gamelift:CreateMatchmakingRuleSet"
      CreatePlayerSession = "gamelift:CreatePlayerSession"
      CreatePlayerSessions = "gamelift:CreatePlayerSessions"
      CreateScript = "gamelift:CreateScript"
      CreateVpcPeeringAuthorization = "gamelift:CreateVpcPeeringAuthorization"
      CreateVpcPeeringConnection = "gamelift:CreateVpcPeeringConnection"
      DeleteAlias = "gamelift:DeleteAlias"
      DeleteBuild = "gamelift:DeleteBuild"
      DeleteContainerGroupDefinition = "gamelift:DeleteContainerGroupDefinition"
      DeleteFleet = "gamelift:DeleteFleet"
      DeleteFleetLocations = "gamelift:DeleteFleetLocations"
      DeleteGameServerGroup = "gamelift:DeleteGameServerGroup"
      DeleteGameSessionQueue = "gamelift:DeleteGameSessionQueue"
      DeleteLocation = "gamelift:DeleteLocation"
      DeleteMatchmakingConfiguration = "gamelift:DeleteMatchmakingConfiguration"
      DeleteMatchmakingRuleSet = "gamelift:DeleteMatchmakingRuleSet"
      DeleteScalingPolicy = "gamelift:DeleteScalingPolicy"
      DeleteScript = "gamelift:DeleteScript"
      DeleteVpcPeeringAuthorization = "gamelift:DeleteVpcPeeringAuthorization"
      DeleteVpcPeeringConnection = "gamelift:DeleteVpcPeeringConnection"
      DeregisterCompute = "gamelift:DeregisterCompute"
      DeregisterGameServer = "gamelift:DeregisterGameServer"
      DescribeAlias = "gamelift:DescribeAlias"
      DescribeBuild = "gamelift:DescribeBuild"
      DescribeCompute = "gamelift:DescribeCompute"
      DescribeContainerGroupDefinition = "gamelift:DescribeContainerGroupDefinition"
      DescribeEC2InstanceLimits = "gamelift:DescribeEC2InstanceLimits"
      DescribeFleetAttributes = "gamelift:DescribeFleetAttributes"
      DescribeFleetCapacity = "gamelift:DescribeFleetCapacity"
      DescribeFleetEvents = "gamelift:DescribeFleetEvents"
      DescribeFleetLocationAttributes = "gamelift:DescribeFleetLocationAttributes"
      DescribeFleetLocationCapacity = "gamelift:DescribeFleetLocationCapacity"
      DescribeFleetLocationUtilization = "gamelift:DescribeFleetLocationUtilization"
      DescribeFleetPortSettings = "gamelift:DescribeFleetPortSettings"
      DescribeFleetUtilization = "gamelift:DescribeFleetUtilization"
      DescribeGameServer = "gamelift:DescribeGameServer"
      DescribeGameServerGroup = "gamelift:DescribeGameServerGroup"
      DescribeGameServerInstances = "gamelift:DescribeGameServerInstances"
      DescribeGameSessionDetails = "gamelift:DescribeGameSessionDetails"
      DescribeGameSessionPlacement = "gamelift:DescribeGameSessionPlacement"
      DescribeGameSessionQueues = "gamelift:DescribeGameSessionQueues"
      DescribeGameSessions = "gamelift:DescribeGameSessions"
      DescribeInstances = "gamelift:DescribeInstances"
      DescribeMatchmaking = "gamelift:DescribeMatchmaking"
      DescribeMatchmakingConfigurations = "gamelift:DescribeMatchmakingConfigurations"
      DescribeMatchmakingRuleSets = "gamelift:DescribeMatchmakingRuleSets"
      DescribePlayerSessions = "gamelift:DescribePlayerSessions"
      DescribeRuntimeConfiguration = "gamelift:DescribeRuntimeConfiguration"
      DescribeScalingPolicies = "gamelift:DescribeScalingPolicies"
      DescribeScript = "gamelift:DescribeScript"
      DescribeVpcPeeringAuthorizations = "gamelift:DescribeVpcPeeringAuthorizations"
      DescribeVpcPeeringConnections = "gamelift:DescribeVpcPeeringConnections"
      GetComputeAccess = "gamelift:GetComputeAccess"
      GetComputeAuthToken = "gamelift:GetComputeAuthToken"
      GetGameSessionLogUrl = "gamelift:GetGameSessionLogUrl"
      GetInstanceAccess = "gamelift:GetInstanceAccess"
      ListAliases = "gamelift:ListAliases"
      ListBuilds = "gamelift:ListBuilds"
      ListCompute = "gamelift:ListCompute"
      ListContainerGroupDefinitions = "gamelift:ListContainerGroupDefinitions"
      ListFleets = "gamelift:ListFleets"
      ListGameServerGroups = "gamelift:ListGameServerGroups"
      ListGameServers = "gamelift:ListGameServers"
      ListLocations = "gamelift:ListLocations"
      ListScripts = "gamelift:ListScripts"
      ListTagsForResource = "gamelift:ListTagsForResource"
      PutScalingPolicy = "gamelift:PutScalingPolicy"
      RegisterCompute = "gamelift:RegisterCompute"
      RegisterGameServer = "gamelift:RegisterGameServer"
      RequestUploadCredentials = "gamelift:RequestUploadCredentials"
      ResolveAlias = "gamelift:ResolveAlias"
      ResumeGameServerGroup = "gamelift:ResumeGameServerGroup"
      SearchGameSessions = "gamelift:SearchGameSessions"
      StartFleetActions = "gamelift:StartFleetActions"
      StartGameSessionPlacement = "gamelift:StartGameSessionPlacement"
      StartMatchBackfill = "gamelift:StartMatchBackfill"
      StartMatchmaking = "gamelift:StartMatchmaking"
      StopFleetActions = "gamelift:StopFleetActions"
      StopGameSessionPlacement = "gamelift:StopGameSessionPlacement"
      StopMatchmaking = "gamelift:StopMatchmaking"
      SuspendGameServerGroup = "gamelift:SuspendGameServerGroup"
      TagResource = "gamelift:TagResource"
      UntagResource = "gamelift:UntagResource"
      UpdateAlias = "gamelift:UpdateAlias"
      UpdateBuild = "gamelift:UpdateBuild"
      UpdateFleetAttributes = "gamelift:UpdateFleetAttributes"
      UpdateFleetCapacity = "gamelift:UpdateFleetCapacity"
      UpdateFleetPortSettings = "gamelift:UpdateFleetPortSettings"
      UpdateGameServer = "gamelift:UpdateGameServer"
      UpdateGameServerGroup = "gamelift:UpdateGameServerGroup"
      UpdateGameSession = "gamelift:UpdateGameSession"
      UpdateGameSessionQueue = "gamelift:UpdateGameSessionQueue"
      UpdateMatchmakingConfiguration = "gamelift:UpdateMatchmakingConfiguration"
      UpdateRuntimeConfiguration = "gamelift:UpdateRuntimeConfiguration"
      UpdateScript = "gamelift:UpdateScript"
      ValidateMatchmakingRuleSet = "gamelift:ValidateMatchmakingRuleSet"
    }
    geo = {
      AllActions = "geo:*"
      AssociateTrackerConsumer = "geo:AssociateTrackerConsumer"
      BatchDeleteDevicePositionHistory = "geo:BatchDeleteDevicePositionHistory"
      BatchDeleteGeofence = "geo:BatchDeleteGeofence"
      BatchEvaluateGeofences = "geo:BatchEvaluateGeofences"
      BatchGetDevicePosition = "geo:BatchGetDevicePosition"
      BatchPutGeofence = "geo:BatchPutGeofence"
      BatchUpdateDevicePosition = "geo:BatchUpdateDevicePosition"
      CalculateRoute = "geo:CalculateRoute"
      CalculateRouteMatrix = "geo:CalculateRouteMatrix"
      CreateGeofenceCollection = "geo:CreateGeofenceCollection"
      CreateKey = "geo:CreateKey"
      CreateMap = "geo:CreateMap"
      CreatePlaceIndex = "geo:CreatePlaceIndex"
      CreateRouteCalculator = "geo:CreateRouteCalculator"
      CreateTracker = "geo:CreateTracker"
      DeleteGeofenceCollection = "geo:DeleteGeofenceCollection"
      DeleteKey = "geo:DeleteKey"
      DeleteMap = "geo:DeleteMap"
      DeletePlaceIndex = "geo:DeletePlaceIndex"
      DeleteRouteCalculator = "geo:DeleteRouteCalculator"
      DeleteTracker = "geo:DeleteTracker"
      DescribeGeofenceCollection = "geo:DescribeGeofenceCollection"
      DescribeKey = "geo:DescribeKey"
      DescribeMap = "geo:DescribeMap"
      DescribePlaceIndex = "geo:DescribePlaceIndex"
      DescribeRouteCalculator = "geo:DescribeRouteCalculator"
      DescribeTracker = "geo:DescribeTracker"
      DisassociateTrackerConsumer = "geo:DisassociateTrackerConsumer"
      ForecastGeofenceEvents = "geo:ForecastGeofenceEvents"
      GetDevicePosition = "geo:GetDevicePosition"
      GetDevicePositionHistory = "geo:GetDevicePositionHistory"
      GetGeofence = "geo:GetGeofence"
      GetMapGlyphs = "geo:GetMapGlyphs"
      GetMapSprites = "geo:GetMapSprites"
      GetMapStyleDescriptor = "geo:GetMapStyleDescriptor"
      GetMapTile = "geo:GetMapTile"
      GetPlace = "geo:GetPlace"
      ListDevicePositions = "geo:ListDevicePositions"
      ListGeofenceCollections = "geo:ListGeofenceCollections"
      ListGeofences = "geo:ListGeofences"
      ListKeys = "geo:ListKeys"
      ListMaps = "geo:ListMaps"
      ListPlaceIndexes = "geo:ListPlaceIndexes"
      ListRouteCalculators = "geo:ListRouteCalculators"
      ListTagsForResource = "geo:ListTagsForResource"
      ListTrackerConsumers = "geo:ListTrackerConsumers"
      ListTrackers = "geo:ListTrackers"
      PutGeofence = "geo:PutGeofence"
      SearchPlaceIndexForPosition = "geo:SearchPlaceIndexForPosition"
      SearchPlaceIndexForSuggestions = "geo:SearchPlaceIndexForSuggestions"
      SearchPlaceIndexForText = "geo:SearchPlaceIndexForText"
      TagResource = "geo:TagResource"
      UntagResource = "geo:UntagResource"
      UpdateGeofenceCollection = "geo:UpdateGeofenceCollection"
      UpdateKey = "geo:UpdateKey"
      UpdateMap = "geo:UpdateMap"
      UpdatePlaceIndex = "geo:UpdatePlaceIndex"
      UpdateRouteCalculator = "geo:UpdateRouteCalculator"
      UpdateTracker = "geo:UpdateTracker"
      VerifyDevicePosition = "geo:VerifyDevicePosition"
    }
    glacier = {
      AllActions = "glacier:*"
      AbortMultipartUpload = "glacier:AbortMultipartUpload"
      AbortVaultLock = "glacier:AbortVaultLock"
      AddTagsToVault = "glacier:AddTagsToVault"
      CompleteMultipartUpload = "glacier:CompleteMultipartUpload"
      CompleteVaultLock = "glacier:CompleteVaultLock"
      CreateVault = "glacier:CreateVault"
      DeleteArchive = "glacier:DeleteArchive"
      DeleteVault = "glacier:DeleteVault"
      DeleteVaultAccessPolicy = "glacier:DeleteVaultAccessPolicy"
      DeleteVaultNotifications = "glacier:DeleteVaultNotifications"
      DescribeJob = "glacier:DescribeJob"
      DescribeVault = "glacier:DescribeVault"
      GetDataRetrievalPolicy = "glacier:GetDataRetrievalPolicy"
      GetJobOutput = "glacier:GetJobOutput"
      GetVaultAccessPolicy = "glacier:GetVaultAccessPolicy"
      GetVaultLock = "glacier:GetVaultLock"
      GetVaultNotifications = "glacier:GetVaultNotifications"
      InitiateJob = "glacier:InitiateJob"
      InitiateMultipartUpload = "glacier:InitiateMultipartUpload"
      InitiateVaultLock = "glacier:InitiateVaultLock"
      ListJobs = "glacier:ListJobs"
      ListMultipartUploads = "glacier:ListMultipartUploads"
      ListParts = "glacier:ListParts"
      ListProvisionedCapacity = "glacier:ListProvisionedCapacity"
      ListTagsForVault = "glacier:ListTagsForVault"
      ListVaults = "glacier:ListVaults"
      PurchaseProvisionedCapacity = "glacier:PurchaseProvisionedCapacity"
      RemoveTagsFromVault = "glacier:RemoveTagsFromVault"
      SetDataRetrievalPolicy = "glacier:SetDataRetrievalPolicy"
      SetVaultAccessPolicy = "glacier:SetVaultAccessPolicy"
      SetVaultNotifications = "glacier:SetVaultNotifications"
      UploadArchive = "glacier:UploadArchive"
      UploadMultipartPart = "glacier:UploadMultipartPart"
    }
    globalaccelerator = {
      AllActions = "globalaccelerator:*"
      AddCustomRoutingEndpoints = "globalaccelerator:AddCustomRoutingEndpoints"
      AddEndpoints = "globalaccelerator:AddEndpoints"
      AdvertiseByoipCidr = "globalaccelerator:AdvertiseByoipCidr"
      AllowCustomRoutingTraffic = "globalaccelerator:AllowCustomRoutingTraffic"
      CreateAccelerator = "globalaccelerator:CreateAccelerator"
      CreateCrossAccountAttachment = "globalaccelerator:CreateCrossAccountAttachment"
      CreateCustomRoutingAccelerator = "globalaccelerator:CreateCustomRoutingAccelerator"
      CreateCustomRoutingEndpointGroup = "globalaccelerator:CreateCustomRoutingEndpointGroup"
      CreateCustomRoutingListener = "globalaccelerator:CreateCustomRoutingListener"
      CreateEndpointGroup = "globalaccelerator:CreateEndpointGroup"
      CreateListener = "globalaccelerator:CreateListener"
      DeleteAccelerator = "globalaccelerator:DeleteAccelerator"
      DeleteCrossAccountAttachment = "globalaccelerator:DeleteCrossAccountAttachment"
      DeleteCustomRoutingAccelerator = "globalaccelerator:DeleteCustomRoutingAccelerator"
      DeleteCustomRoutingEndpointGroup = "globalaccelerator:DeleteCustomRoutingEndpointGroup"
      DeleteCustomRoutingListener = "globalaccelerator:DeleteCustomRoutingListener"
      DeleteEndpointGroup = "globalaccelerator:DeleteEndpointGroup"
      DeleteListener = "globalaccelerator:DeleteListener"
      DenyCustomRoutingTraffic = "globalaccelerator:DenyCustomRoutingTraffic"
      DeprovisionByoipCidr = "globalaccelerator:DeprovisionByoipCidr"
      DescribeAccelerator = "globalaccelerator:DescribeAccelerator"
      DescribeAcceleratorAttributes = "globalaccelerator:DescribeAcceleratorAttributes"
      DescribeCrossAccountAttachment = "globalaccelerator:DescribeCrossAccountAttachment"
      DescribeCustomRoutingAccelerator = "globalaccelerator:DescribeCustomRoutingAccelerator"
      DescribeCustomRoutingAcceleratorAttributes = "globalaccelerator:DescribeCustomRoutingAcceleratorAttributes"
      DescribeCustomRoutingEndpointGroup = "globalaccelerator:DescribeCustomRoutingEndpointGroup"
      DescribeCustomRoutingListener = "globalaccelerator:DescribeCustomRoutingListener"
      DescribeEndpointGroup = "globalaccelerator:DescribeEndpointGroup"
      DescribeListener = "globalaccelerator:DescribeListener"
      ListAccelerators = "globalaccelerator:ListAccelerators"
      ListByoipCidrs = "globalaccelerator:ListByoipCidrs"
      ListCrossAccountAttachments = "globalaccelerator:ListCrossAccountAttachments"
      ListCrossAccountResourceAccounts = "globalaccelerator:ListCrossAccountResourceAccounts"
      ListCrossAccountResources = "globalaccelerator:ListCrossAccountResources"
      ListCustomRoutingAccelerators = "globalaccelerator:ListCustomRoutingAccelerators"
      ListCustomRoutingEndpointGroups = "globalaccelerator:ListCustomRoutingEndpointGroups"
      ListCustomRoutingListeners = "globalaccelerator:ListCustomRoutingListeners"
      ListCustomRoutingPortMappings = "globalaccelerator:ListCustomRoutingPortMappings"
      ListCustomRoutingPortMappingsByDestination = "globalaccelerator:ListCustomRoutingPortMappingsByDestination"
      ListEndpointGroups = "globalaccelerator:ListEndpointGroups"
      ListListeners = "globalaccelerator:ListListeners"
      ListTagsForResource = "globalaccelerator:ListTagsForResource"
      ProvisionByoipCidr = "globalaccelerator:ProvisionByoipCidr"
      RemoveCustomRoutingEndpoints = "globalaccelerator:RemoveCustomRoutingEndpoints"
      RemoveEndpoints = "globalaccelerator:RemoveEndpoints"
      TagResource = "globalaccelerator:TagResource"
      UntagResource = "globalaccelerator:UntagResource"
      UpdateAccelerator = "globalaccelerator:UpdateAccelerator"
      UpdateAcceleratorAttributes = "globalaccelerator:UpdateAcceleratorAttributes"
      UpdateCrossAccountAttachment = "globalaccelerator:UpdateCrossAccountAttachment"
      UpdateCustomRoutingAccelerator = "globalaccelerator:UpdateCustomRoutingAccelerator"
      UpdateCustomRoutingAcceleratorAttributes = "globalaccelerator:UpdateCustomRoutingAcceleratorAttributes"
      UpdateCustomRoutingListener = "globalaccelerator:UpdateCustomRoutingListener"
      UpdateEndpointGroup = "globalaccelerator:UpdateEndpointGroup"
      UpdateListener = "globalaccelerator:UpdateListener"
      WithdrawByoipCidr = "globalaccelerator:WithdrawByoipCidr"
    }
    glue = {
      AllActions = "glue:*"
      BatchCreatePartition = "glue:BatchCreatePartition"
      BatchDeleteConnection = "glue:BatchDeleteConnection"
      BatchDeletePartition = "glue:BatchDeletePartition"
      BatchDeleteTable = "glue:BatchDeleteTable"
      BatchDeleteTableVersion = "glue:BatchDeleteTableVersion"
      BatchGetBlueprints = "glue:BatchGetBlueprints"
      BatchGetCrawlers = "glue:BatchGetCrawlers"
      BatchGetCustomEntityTypes = "glue:BatchGetCustomEntityTypes"
      BatchGetDevEndpoints = "glue:BatchGetDevEndpoints"
      BatchGetJobs = "glue:BatchGetJobs"
      BatchGetPartition = "glue:BatchGetPartition"
      BatchGetStageFiles = "glue:BatchGetStageFiles"
      BatchGetTableOptimizer = "glue:BatchGetTableOptimizer"
      BatchGetTriggers = "glue:BatchGetTriggers"
      BatchGetWorkflows = "glue:BatchGetWorkflows"
      BatchPutDataQualityStatisticAnnotation = "glue:BatchPutDataQualityStatisticAnnotation"
      BatchStopJobRun = "glue:BatchStopJobRun"
      BatchUpdatePartition = "glue:BatchUpdatePartition"
      CancelDataQualityRuleRecommendationRun = "glue:CancelDataQualityRuleRecommendationRun"
      CancelDataQualityRulesetEvaluationRun = "glue:CancelDataQualityRulesetEvaluationRun"
      CancelMLTaskRun = "glue:CancelMLTaskRun"
      CancelStatement = "glue:CancelStatement"
      CheckSchemaVersionValidity = "glue:CheckSchemaVersionValidity"
      CreateBlueprint = "glue:CreateBlueprint"
      CreateClassifier = "glue:CreateClassifier"
      CreateConnection = "glue:CreateConnection"
      CreateCrawler = "glue:CreateCrawler"
      CreateCustomEntityType = "glue:CreateCustomEntityType"
      CreateDataQualityRuleset = "glue:CreateDataQualityRuleset"
      CreateDatabase = "glue:CreateDatabase"
      CreateDevEndpoint = "glue:CreateDevEndpoint"
      CreateJob = "glue:CreateJob"
      CreateMLTransform = "glue:CreateMLTransform"
      CreatePartition = "glue:CreatePartition"
      CreatePartitionIndex = "glue:CreatePartitionIndex"
      CreateRegistry = "glue:CreateRegistry"
      CreateSchema = "glue:CreateSchema"
      CreateScript = "glue:CreateScript"
      CreateSecurityConfiguration = "glue:CreateSecurityConfiguration"
      CreateSession = "glue:CreateSession"
      CreateTable = "glue:CreateTable"
      CreateTableOptimizer = "glue:CreateTableOptimizer"
      CreateTrigger = "glue:CreateTrigger"
      CreateUserDefinedFunction = "glue:CreateUserDefinedFunction"
      CreateWorkflow = "glue:CreateWorkflow"
      DeleteBlueprint = "glue:DeleteBlueprint"
      DeleteClassifier = "glue:DeleteClassifier"
      DeleteColumnStatisticsForPartition = "glue:DeleteColumnStatisticsForPartition"
      DeleteColumnStatisticsForTable = "glue:DeleteColumnStatisticsForTable"
      DeleteConnection = "glue:DeleteConnection"
      DeleteCrawler = "glue:DeleteCrawler"
      DeleteCustomEntityType = "glue:DeleteCustomEntityType"
      DeleteDataQualityRuleset = "glue:DeleteDataQualityRuleset"
      DeleteDatabase = "glue:DeleteDatabase"
      DeleteDevEndpoint = "glue:DeleteDevEndpoint"
      DeleteJob = "glue:DeleteJob"
      DeleteMLTransform = "glue:DeleteMLTransform"
      DeletePartition = "glue:DeletePartition"
      DeletePartitionIndex = "glue:DeletePartitionIndex"
      DeleteRegistry = "glue:DeleteRegistry"
      DeleteResourcePolicy = "glue:DeleteResourcePolicy"
      DeleteSchema = "glue:DeleteSchema"
      DeleteSchemaVersions = "glue:DeleteSchemaVersions"
      DeleteSecurityConfiguration = "glue:DeleteSecurityConfiguration"
      DeleteSession = "glue:DeleteSession"
      DeleteTable = "glue:DeleteTable"
      DeleteTableOptimizer = "glue:DeleteTableOptimizer"
      DeleteTableVersion = "glue:DeleteTableVersion"
      DeleteTrigger = "glue:DeleteTrigger"
      DeleteUserDefinedFunction = "glue:DeleteUserDefinedFunction"
      DeleteWorkflow = "glue:DeleteWorkflow"
      DeregisterDataPreview = "glue:DeregisterDataPreview"
      DescribeConnectionType = "glue:DescribeConnectionType"
      DescribeEntity = "glue:DescribeEntity"
      GetBlueprint = "glue:GetBlueprint"
      GetBlueprintRun = "glue:GetBlueprintRun"
      GetBlueprintRuns = "glue:GetBlueprintRuns"
      GetCatalogImportStatus = "glue:GetCatalogImportStatus"
      GetClassifier = "glue:GetClassifier"
      GetClassifiers = "glue:GetClassifiers"
      GetColumnStatisticsForPartition = "glue:GetColumnStatisticsForPartition"
      GetColumnStatisticsForTable = "glue:GetColumnStatisticsForTable"
      GetColumnStatisticsTaskRun = "glue:GetColumnStatisticsTaskRun"
      GetColumnStatisticsTaskRuns = "glue:GetColumnStatisticsTaskRuns"
      GetCompletion = "glue:GetCompletion"
      GetConnection = "glue:GetConnection"
      GetConnections = "glue:GetConnections"
      GetCrawler = "glue:GetCrawler"
      GetCrawlerMetrics = "glue:GetCrawlerMetrics"
      GetCrawlers = "glue:GetCrawlers"
      GetCustomEntityType = "glue:GetCustomEntityType"
      GetDataCatalogEncryptionSettings = "glue:GetDataCatalogEncryptionSettings"
      GetDataPreviewStatement = "glue:GetDataPreviewStatement"
      GetDataQualityModel = "glue:GetDataQualityModel"
      GetDataQualityModelResult = "glue:GetDataQualityModelResult"
      GetDataQualityResult = "glue:GetDataQualityResult"
      GetDataQualityRuleRecommendationRun = "glue:GetDataQualityRuleRecommendationRun"
      GetDataQualityRuleset = "glue:GetDataQualityRuleset"
      GetDataQualityRulesetEvaluationRun = "glue:GetDataQualityRulesetEvaluationRun"
      GetDatabase = "glue:GetDatabase"
      GetDatabases = "glue:GetDatabases"
      GetDataflowGraph = "glue:GetDataflowGraph"
      GetDevEndpoint = "glue:GetDevEndpoint"
      GetDevEndpoints = "glue:GetDevEndpoints"
      GetEnvironment = "glue:GetEnvironment"
      GetExecutors = "glue:GetExecutors"
      GetExecutorsThreads = "glue:GetExecutorsThreads"
      GetJob = "glue:GetJob"
      GetJobBookmark = "glue:GetJobBookmark"
      GetJobRun = "glue:GetJobRun"
      GetJobRuns = "glue:GetJobRuns"
      GetJobs = "glue:GetJobs"
      GetLogParsingStatus = "glue:GetLogParsingStatus"
      GetMLTaskRun = "glue:GetMLTaskRun"
      GetMLTaskRuns = "glue:GetMLTaskRuns"
      GetMLTransform = "glue:GetMLTransform"
      GetMLTransforms = "glue:GetMLTransforms"
      GetMapping = "glue:GetMapping"
      GetNotebookInstanceStatus = "glue:GetNotebookInstanceStatus"
      GetPartition = "glue:GetPartition"
      GetPartitionIndexes = "glue:GetPartitionIndexes"
      GetPartitions = "glue:GetPartitions"
      GetPlan = "glue:GetPlan"
      GetQueries = "glue:GetQueries"
      GetQuery = "glue:GetQuery"
      GetRegistry = "glue:GetRegistry"
      GetResourcePolicies = "glue:GetResourcePolicies"
      GetResourcePolicy = "glue:GetResourcePolicy"
      GetSchema = "glue:GetSchema"
      GetSchemaByDefinition = "glue:GetSchemaByDefinition"
      GetSchemaVersion = "glue:GetSchemaVersion"
      GetSchemaVersionsDiff = "glue:GetSchemaVersionsDiff"
      GetSecurityConfiguration = "glue:GetSecurityConfiguration"
      GetSecurityConfigurations = "glue:GetSecurityConfigurations"
      GetSession = "glue:GetSession"
      GetStage = "glue:GetStage"
      GetStageAttempt = "glue:GetStageAttempt"
      GetStageAttemptTaskList = "glue:GetStageAttemptTaskList"
      GetStageAttemptTaskSummary = "glue:GetStageAttemptTaskSummary"
      GetStageFiles = "glue:GetStageFiles"
      GetStages = "glue:GetStages"
      GetStatement = "glue:GetStatement"
      GetStorage = "glue:GetStorage"
      GetStorageUnit = "glue:GetStorageUnit"
      GetTable = "glue:GetTable"
      GetTableOptimizer = "glue:GetTableOptimizer"
      GetTableVersion = "glue:GetTableVersion"
      GetTableVersions = "glue:GetTableVersions"
      GetTables = "glue:GetTables"
      GetTags = "glue:GetTags"
      GetTrigger = "glue:GetTrigger"
      GetTriggers = "glue:GetTriggers"
      GetUserDefinedFunction = "glue:GetUserDefinedFunction"
      GetUserDefinedFunctions = "glue:GetUserDefinedFunctions"
      GetWorkflow = "glue:GetWorkflow"
      GetWorkflowRun = "glue:GetWorkflowRun"
      GetWorkflowRunProperties = "glue:GetWorkflowRunProperties"
      GetWorkflowRuns = "glue:GetWorkflowRuns"
      GlueNotebookAuthorize = "glue:GlueNotebookAuthorize"
      GlueNotebookRefreshCredentials = "glue:GlueNotebookRefreshCredentials"
      ImportCatalogToGlue = "glue:ImportCatalogToGlue"
      ListBlueprints = "glue:ListBlueprints"
      ListColumnStatisticsTaskRuns = "glue:ListColumnStatisticsTaskRuns"
      ListConnectionTypes = "glue:ListConnectionTypes"
      ListCrawlers = "glue:ListCrawlers"
      ListCrawls = "glue:ListCrawls"
      ListCustomEntityTypes = "glue:ListCustomEntityTypes"
      ListDataQualityResults = "glue:ListDataQualityResults"
      ListDataQualityRuleRecommendationRuns = "glue:ListDataQualityRuleRecommendationRuns"
      ListDataQualityRulesetEvaluationRuns = "glue:ListDataQualityRulesetEvaluationRuns"
      ListDataQualityRulesets = "glue:ListDataQualityRulesets"
      ListDataQualityStatisticAnnotations = "glue:ListDataQualityStatisticAnnotations"
      ListDataQualityStatistics = "glue:ListDataQualityStatistics"
      ListDevEndpoints = "glue:ListDevEndpoints"
      ListEntities = "glue:ListEntities"
      ListJobs = "glue:ListJobs"
      ListMLTransforms = "glue:ListMLTransforms"
      ListRegistries = "glue:ListRegistries"
      ListSchemaVersions = "glue:ListSchemaVersions"
      ListSchemas = "glue:ListSchemas"
      ListSessions = "glue:ListSessions"
      ListStatements = "glue:ListStatements"
      ListTableOptimizerRuns = "glue:ListTableOptimizerRuns"
      ListTriggers = "glue:ListTriggers"
      ListWorkflows = "glue:ListWorkflows"
      NotifyEvent = "glue:NotifyEvent"
      PassConnection = "glue:PassConnection"
      PublishDataQuality = "glue:PublishDataQuality"
      PutDataCatalogEncryptionSettings = "glue:PutDataCatalogEncryptionSettings"
      PutDataQualityProfileAnnotation = "glue:PutDataQualityProfileAnnotation"
      PutResourcePolicy = "glue:PutResourcePolicy"
      PutSchemaVersionMetadata = "glue:PutSchemaVersionMetadata"
      PutWorkflowRunProperties = "glue:PutWorkflowRunProperties"
      QuerySchemaVersionMetadata = "glue:QuerySchemaVersionMetadata"
      RefreshOAuth2Tokens = "glue:RefreshOAuth2Tokens"
      RegisterSchemaVersion = "glue:RegisterSchemaVersion"
      RemoveSchemaVersionMetadata = "glue:RemoveSchemaVersionMetadata"
      RequestLogParsing = "glue:RequestLogParsing"
      ResetJobBookmark = "glue:ResetJobBookmark"
      ResumeWorkflowRun = "glue:ResumeWorkflowRun"
      RunDataPreviewStatement = "glue:RunDataPreviewStatement"
      RunStatement = "glue:RunStatement"
      SearchTables = "glue:SearchTables"
      SendFeedback = "glue:SendFeedback"
      StartBlueprintRun = "glue:StartBlueprintRun"
      StartColumnStatisticsTaskRun = "glue:StartColumnStatisticsTaskRun"
      StartCompletion = "glue:StartCompletion"
      StartCrawler = "glue:StartCrawler"
      StartCrawlerSchedule = "glue:StartCrawlerSchedule"
      StartDataQualityRuleRecommendationRun = "glue:StartDataQualityRuleRecommendationRun"
      StartDataQualityRulesetEvaluationRun = "glue:StartDataQualityRulesetEvaluationRun"
      StartExportLabelsTaskRun = "glue:StartExportLabelsTaskRun"
      StartImportLabelsTaskRun = "glue:StartImportLabelsTaskRun"
      StartJobRun = "glue:StartJobRun"
      StartMLEvaluationTaskRun = "glue:StartMLEvaluationTaskRun"
      StartMLLabelingSetGenerationTaskRun = "glue:StartMLLabelingSetGenerationTaskRun"
      StartNotebook = "glue:StartNotebook"
      StartTrigger = "glue:StartTrigger"
      StartWorkflowRun = "glue:StartWorkflowRun"
      StopColumnStatisticsTaskRun = "glue:StopColumnStatisticsTaskRun"
      StopCrawler = "glue:StopCrawler"
      StopCrawlerSchedule = "glue:StopCrawlerSchedule"
      StopSession = "glue:StopSession"
      StopTrigger = "glue:StopTrigger"
      StopWorkflowRun = "glue:StopWorkflowRun"
      TagResource = "glue:TagResource"
      TerminateNotebook = "glue:TerminateNotebook"
      TestConnection = "glue:TestConnection"
      UntagResource = "glue:UntagResource"
      UpdateBlueprint = "glue:UpdateBlueprint"
      UpdateClassifier = "glue:UpdateClassifier"
      UpdateColumnStatisticsForPartition = "glue:UpdateColumnStatisticsForPartition"
      UpdateColumnStatisticsForTable = "glue:UpdateColumnStatisticsForTable"
      UpdateConnection = "glue:UpdateConnection"
      UpdateCrawler = "glue:UpdateCrawler"
      UpdateCrawlerSchedule = "glue:UpdateCrawlerSchedule"
      UpdateDataQualityRuleset = "glue:UpdateDataQualityRuleset"
      UpdateDatabase = "glue:UpdateDatabase"
      UpdateDevEndpoint = "glue:UpdateDevEndpoint"
      UpdateJob = "glue:UpdateJob"
      UpdateJobFromSourceControl = "glue:UpdateJobFromSourceControl"
      UpdateMLTransform = "glue:UpdateMLTransform"
      UpdatePartition = "glue:UpdatePartition"
      UpdateRegistry = "glue:UpdateRegistry"
      UpdateSchema = "glue:UpdateSchema"
      UpdateSourceControlFromJob = "glue:UpdateSourceControlFromJob"
      UpdateTable = "glue:UpdateTable"
      UpdateTableOptimizer = "glue:UpdateTableOptimizer"
      UpdateTrigger = "glue:UpdateTrigger"
      UpdateUserDefinedFunction = "glue:UpdateUserDefinedFunction"
      UpdateWorkflow = "glue:UpdateWorkflow"
      UseGlueStudio = "glue:UseGlueStudio"
      UseMLTransforms = "glue:UseMLTransforms"
    }
    grafana = {
      AllActions = "grafana:*"
      AssociateLicense = "grafana:AssociateLicense"
      CreateWorkspace = "grafana:CreateWorkspace"
      CreateWorkspaceApiKey = "grafana:CreateWorkspaceApiKey"
      CreateWorkspaceServiceAccount = "grafana:CreateWorkspaceServiceAccount"
      CreateWorkspaceServiceAccountToken = "grafana:CreateWorkspaceServiceAccountToken"
      DeleteWorkspace = "grafana:DeleteWorkspace"
      DeleteWorkspaceApiKey = "grafana:DeleteWorkspaceApiKey"
      DeleteWorkspaceServiceAccount = "grafana:DeleteWorkspaceServiceAccount"
      DeleteWorkspaceServiceAccountToken = "grafana:DeleteWorkspaceServiceAccountToken"
      DescribeWorkspace = "grafana:DescribeWorkspace"
      DescribeWorkspaceAuthentication = "grafana:DescribeWorkspaceAuthentication"
      DescribeWorkspaceConfiguration = "grafana:DescribeWorkspaceConfiguration"
      DisassociateLicense = "grafana:DisassociateLicense"
      ListPermissions = "grafana:ListPermissions"
      ListTagsForResource = "grafana:ListTagsForResource"
      ListVersions = "grafana:ListVersions"
      ListWorkspaceServiceAccountTokens = "grafana:ListWorkspaceServiceAccountTokens"
      ListWorkspaceServiceAccounts = "grafana:ListWorkspaceServiceAccounts"
      ListWorkspaces = "grafana:ListWorkspaces"
      TagResource = "grafana:TagResource"
      UntagResource = "grafana:UntagResource"
      UpdatePermissions = "grafana:UpdatePermissions"
      UpdateWorkspace = "grafana:UpdateWorkspace"
      UpdateWorkspaceAuthentication = "grafana:UpdateWorkspaceAuthentication"
      UpdateWorkspaceConfiguration = "grafana:UpdateWorkspaceConfiguration"
    }
    greengrass = {
      AllActions = "greengrass:*"
      AssociateRoleToGroup = "greengrass:AssociateRoleToGroup"
      AssociateServiceRoleToAccount = "greengrass:AssociateServiceRoleToAccount"
      BatchAssociateClientDeviceWithCoreDevice = "greengrass:BatchAssociateClientDeviceWithCoreDevice"
      BatchDisassociateClientDeviceFromCoreDevice = "greengrass:BatchDisassociateClientDeviceFromCoreDevice"
      CancelDeployment = "greengrass:CancelDeployment"
      CreateComponentVersion = "greengrass:CreateComponentVersion"
      CreateConnectorDefinition = "greengrass:CreateConnectorDefinition"
      CreateConnectorDefinitionVersion = "greengrass:CreateConnectorDefinitionVersion"
      CreateCoreDefinition = "greengrass:CreateCoreDefinition"
      CreateCoreDefinitionVersion = "greengrass:CreateCoreDefinitionVersion"
      CreateDeployment = "greengrass:CreateDeployment"
      CreateDeviceDefinition = "greengrass:CreateDeviceDefinition"
      CreateDeviceDefinitionVersion = "greengrass:CreateDeviceDefinitionVersion"
      CreateFunctionDefinition = "greengrass:CreateFunctionDefinition"
      CreateFunctionDefinitionVersion = "greengrass:CreateFunctionDefinitionVersion"
      CreateGroup = "greengrass:CreateGroup"
      CreateGroupCertificateAuthority = "greengrass:CreateGroupCertificateAuthority"
      CreateGroupVersion = "greengrass:CreateGroupVersion"
      CreateLoggerDefinition = "greengrass:CreateLoggerDefinition"
      CreateLoggerDefinitionVersion = "greengrass:CreateLoggerDefinitionVersion"
      CreateResourceDefinition = "greengrass:CreateResourceDefinition"
      CreateResourceDefinitionVersion = "greengrass:CreateResourceDefinitionVersion"
      CreateSoftwareUpdateJob = "greengrass:CreateSoftwareUpdateJob"
      CreateSubscriptionDefinition = "greengrass:CreateSubscriptionDefinition"
      CreateSubscriptionDefinitionVersion = "greengrass:CreateSubscriptionDefinitionVersion"
      DeleteComponent = "greengrass:DeleteComponent"
      DeleteConnectorDefinition = "greengrass:DeleteConnectorDefinition"
      DeleteCoreDefinition = "greengrass:DeleteCoreDefinition"
      DeleteCoreDevice = "greengrass:DeleteCoreDevice"
      DeleteDeployment = "greengrass:DeleteDeployment"
      DeleteDeviceDefinition = "greengrass:DeleteDeviceDefinition"
      DeleteFunctionDefinition = "greengrass:DeleteFunctionDefinition"
      DeleteGroup = "greengrass:DeleteGroup"
      DeleteLoggerDefinition = "greengrass:DeleteLoggerDefinition"
      DeleteResourceDefinition = "greengrass:DeleteResourceDefinition"
      DeleteSubscriptionDefinition = "greengrass:DeleteSubscriptionDefinition"
      DescribeComponent = "greengrass:DescribeComponent"
      DisassociateRoleFromGroup = "greengrass:DisassociateRoleFromGroup"
      DisassociateServiceRoleFromAccount = "greengrass:DisassociateServiceRoleFromAccount"
      Discover = "greengrass:Discover"
      GetAssociatedRole = "greengrass:GetAssociatedRole"
      GetBulkDeploymentStatus = "greengrass:GetBulkDeploymentStatus"
      GetComponent = "greengrass:GetComponent"
      GetComponentVersionArtifact = "greengrass:GetComponentVersionArtifact"
      GetConnectivityInfo = "greengrass:GetConnectivityInfo"
      GetConnectorDefinition = "greengrass:GetConnectorDefinition"
      GetConnectorDefinitionVersion = "greengrass:GetConnectorDefinitionVersion"
      GetCoreDefinition = "greengrass:GetCoreDefinition"
      GetCoreDefinitionVersion = "greengrass:GetCoreDefinitionVersion"
      GetCoreDevice = "greengrass:GetCoreDevice"
      GetDeployment = "greengrass:GetDeployment"
      GetDeploymentStatus = "greengrass:GetDeploymentStatus"
      GetDeviceDefinition = "greengrass:GetDeviceDefinition"
      GetDeviceDefinitionVersion = "greengrass:GetDeviceDefinitionVersion"
      GetFunctionDefinition = "greengrass:GetFunctionDefinition"
      GetFunctionDefinitionVersion = "greengrass:GetFunctionDefinitionVersion"
      GetGroup = "greengrass:GetGroup"
      GetGroupCertificateAuthority = "greengrass:GetGroupCertificateAuthority"
      GetGroupCertificateConfiguration = "greengrass:GetGroupCertificateConfiguration"
      GetGroupVersion = "greengrass:GetGroupVersion"
      GetLoggerDefinition = "greengrass:GetLoggerDefinition"
      GetLoggerDefinitionVersion = "greengrass:GetLoggerDefinitionVersion"
      GetResourceDefinition = "greengrass:GetResourceDefinition"
      GetResourceDefinitionVersion = "greengrass:GetResourceDefinitionVersion"
      GetServiceRoleForAccount = "greengrass:GetServiceRoleForAccount"
      GetSubscriptionDefinition = "greengrass:GetSubscriptionDefinition"
      GetSubscriptionDefinitionVersion = "greengrass:GetSubscriptionDefinitionVersion"
      GetThingRuntimeConfiguration = "greengrass:GetThingRuntimeConfiguration"
      ListBulkDeploymentDetailedReports = "greengrass:ListBulkDeploymentDetailedReports"
      ListBulkDeployments = "greengrass:ListBulkDeployments"
      ListClientDevicesAssociatedWithCoreDevice = "greengrass:ListClientDevicesAssociatedWithCoreDevice"
      ListComponentVersions = "greengrass:ListComponentVersions"
      ListComponents = "greengrass:ListComponents"
      ListConnectorDefinitionVersions = "greengrass:ListConnectorDefinitionVersions"
      ListConnectorDefinitions = "greengrass:ListConnectorDefinitions"
      ListCoreDefinitionVersions = "greengrass:ListCoreDefinitionVersions"
      ListCoreDefinitions = "greengrass:ListCoreDefinitions"
      ListCoreDevices = "greengrass:ListCoreDevices"
      ListDeployments = "greengrass:ListDeployments"
      ListDeviceDefinitionVersions = "greengrass:ListDeviceDefinitionVersions"
      ListDeviceDefinitions = "greengrass:ListDeviceDefinitions"
      ListEffectiveDeployments = "greengrass:ListEffectiveDeployments"
      ListFunctionDefinitionVersions = "greengrass:ListFunctionDefinitionVersions"
      ListFunctionDefinitions = "greengrass:ListFunctionDefinitions"
      ListGroupCertificateAuthorities = "greengrass:ListGroupCertificateAuthorities"
      ListGroupVersions = "greengrass:ListGroupVersions"
      ListGroups = "greengrass:ListGroups"
      ListInstalledComponents = "greengrass:ListInstalledComponents"
      ListLoggerDefinitionVersions = "greengrass:ListLoggerDefinitionVersions"
      ListLoggerDefinitions = "greengrass:ListLoggerDefinitions"
      ListResourceDefinitionVersions = "greengrass:ListResourceDefinitionVersions"
      ListResourceDefinitions = "greengrass:ListResourceDefinitions"
      ListSubscriptionDefinitionVersions = "greengrass:ListSubscriptionDefinitionVersions"
      ListSubscriptionDefinitions = "greengrass:ListSubscriptionDefinitions"
      ListTagsForResource = "greengrass:ListTagsForResource"
      ResetDeployments = "greengrass:ResetDeployments"
      ResolveComponentCandidates = "greengrass:ResolveComponentCandidates"
      StartBulkDeployment = "greengrass:StartBulkDeployment"
      StopBulkDeployment = "greengrass:StopBulkDeployment"
      TagResource = "greengrass:TagResource"
      UntagResource = "greengrass:UntagResource"
      UpdateConnectivityInfo = "greengrass:UpdateConnectivityInfo"
      UpdateConnectorDefinition = "greengrass:UpdateConnectorDefinition"
      UpdateCoreDefinition = "greengrass:UpdateCoreDefinition"
      UpdateDeviceDefinition = "greengrass:UpdateDeviceDefinition"
      UpdateFunctionDefinition = "greengrass:UpdateFunctionDefinition"
      UpdateGroup = "greengrass:UpdateGroup"
      UpdateGroupCertificateConfiguration = "greengrass:UpdateGroupCertificateConfiguration"
      UpdateLoggerDefinition = "greengrass:UpdateLoggerDefinition"
      UpdateResourceDefinition = "greengrass:UpdateResourceDefinition"
      UpdateSubscriptionDefinition = "greengrass:UpdateSubscriptionDefinition"
      UpdateThingRuntimeConfiguration = "greengrass:UpdateThingRuntimeConfiguration"
    }
    groundstation = {
      AllActions = "groundstation:*"
      CancelContact = "groundstation:CancelContact"
      CreateConfig = "groundstation:CreateConfig"
      CreateDataflowEndpointGroup = "groundstation:CreateDataflowEndpointGroup"
      CreateEphemeris = "groundstation:CreateEphemeris"
      CreateMissionProfile = "groundstation:CreateMissionProfile"
      DeleteConfig = "groundstation:DeleteConfig"
      DeleteDataflowEndpointGroup = "groundstation:DeleteDataflowEndpointGroup"
      DeleteEphemeris = "groundstation:DeleteEphemeris"
      DeleteMissionProfile = "groundstation:DeleteMissionProfile"
      DescribeContact = "groundstation:DescribeContact"
      DescribeEphemeris = "groundstation:DescribeEphemeris"
      GetAgentConfiguration = "groundstation:GetAgentConfiguration"
      GetConfig = "groundstation:GetConfig"
      GetDataflowEndpointGroup = "groundstation:GetDataflowEndpointGroup"
      GetMinuteUsage = "groundstation:GetMinuteUsage"
      GetMissionProfile = "groundstation:GetMissionProfile"
      GetSatellite = "groundstation:GetSatellite"
      ListConfigs = "groundstation:ListConfigs"
      ListContacts = "groundstation:ListContacts"
      ListDataflowEndpointGroups = "groundstation:ListDataflowEndpointGroups"
      ListEphemerides = "groundstation:ListEphemerides"
      ListGroundStations = "groundstation:ListGroundStations"
      ListMissionProfiles = "groundstation:ListMissionProfiles"
      ListSatellites = "groundstation:ListSatellites"
      ListTagsForResource = "groundstation:ListTagsForResource"
      RegisterAgent = "groundstation:RegisterAgent"
      ReserveContact = "groundstation:ReserveContact"
      TagResource = "groundstation:TagResource"
      UntagResource = "groundstation:UntagResource"
      UpdateAgentStatus = "groundstation:UpdateAgentStatus"
      UpdateConfig = "groundstation:UpdateConfig"
      UpdateEphemeris = "groundstation:UpdateEphemeris"
      UpdateMissionProfile = "groundstation:UpdateMissionProfile"
    }
    groundtruthlabeling = {
      AllActions = "groundtruthlabeling:*"
      AssociatePatchToManifestJob = "groundtruthlabeling:AssociatePatchToManifestJob"
      CreateBatch = "groundtruthlabeling:CreateBatch"
      CreateIntakeForm = "groundtruthlabeling:CreateIntakeForm"
      CreateProject = "groundtruthlabeling:CreateProject"
      CreateWorkflowDefinition = "groundtruthlabeling:CreateWorkflowDefinition"
      DescribeConsoleJob = "groundtruthlabeling:DescribeConsoleJob"
      GenerateLIDARPreviewTaskConfigJob = "groundtruthlabeling:GenerateLIDARPreviewTaskConfigJob"
      GetBatch = "groundtruthlabeling:GetBatch"
      GetIntakeFormStatus = "groundtruthlabeling:GetIntakeFormStatus"
      ListBatches = "groundtruthlabeling:ListBatches"
      ListDatasetObjects = "groundtruthlabeling:ListDatasetObjects"
      ListProjects = "groundtruthlabeling:ListProjects"
      RunFilterOrSampleDatasetJob = "groundtruthlabeling:RunFilterOrSampleDatasetJob"
      RunGenerateManifestByCrawlingJob = "groundtruthlabeling:RunGenerateManifestByCrawlingJob"
      RunGenerateManifestMetricsJob = "groundtruthlabeling:RunGenerateManifestMetricsJob"
      UpdateBatch = "groundtruthlabeling:UpdateBatch"
    }
    guardduty = {
      AllActions = "guardduty:*"
      AcceptAdministratorInvitation = "guardduty:AcceptAdministratorInvitation"
      AcceptInvitation = "guardduty:AcceptInvitation"
      ArchiveFindings = "guardduty:ArchiveFindings"
      CreateDetector = "guardduty:CreateDetector"
      CreateFilter = "guardduty:CreateFilter"
      CreateIPSet = "guardduty:CreateIPSet"
      CreateMalwareProtectionPlan = "guardduty:CreateMalwareProtectionPlan"
      CreateMembers = "guardduty:CreateMembers"
      CreatePublishingDestination = "guardduty:CreatePublishingDestination"
      CreateSampleFindings = "guardduty:CreateSampleFindings"
      CreateThreatIntelSet = "guardduty:CreateThreatIntelSet"
      DeclineInvitations = "guardduty:DeclineInvitations"
      DeleteDetector = "guardduty:DeleteDetector"
      DeleteFilter = "guardduty:DeleteFilter"
      DeleteIPSet = "guardduty:DeleteIPSet"
      DeleteInvitations = "guardduty:DeleteInvitations"
      DeleteMalwareProtectionPlan = "guardduty:DeleteMalwareProtectionPlan"
      DeleteMembers = "guardduty:DeleteMembers"
      DeletePublishingDestination = "guardduty:DeletePublishingDestination"
      DeleteThreatIntelSet = "guardduty:DeleteThreatIntelSet"
      DescribeMalwareScans = "guardduty:DescribeMalwareScans"
      DescribeOrganizationConfiguration = "guardduty:DescribeOrganizationConfiguration"
      DescribePublishingDestination = "guardduty:DescribePublishingDestination"
      DisableOrganizationAdminAccount = "guardduty:DisableOrganizationAdminAccount"
      DisassociateFromAdministratorAccount = "guardduty:DisassociateFromAdministratorAccount"
      DisassociateFromMasterAccount = "guardduty:DisassociateFromMasterAccount"
      DisassociateMembers = "guardduty:DisassociateMembers"
      EnableOrganizationAdminAccount = "guardduty:EnableOrganizationAdminAccount"
      GetAdministratorAccount = "guardduty:GetAdministratorAccount"
      GetCoverageStatistics = "guardduty:GetCoverageStatistics"
      GetDetector = "guardduty:GetDetector"
      GetFilter = "guardduty:GetFilter"
      GetFindings = "guardduty:GetFindings"
      GetFindingsStatistics = "guardduty:GetFindingsStatistics"
      GetIPSet = "guardduty:GetIPSet"
      GetInvitationsCount = "guardduty:GetInvitationsCount"
      GetMalwareProtectionPlan = "guardduty:GetMalwareProtectionPlan"
      GetMalwareScanSettings = "guardduty:GetMalwareScanSettings"
      GetMasterAccount = "guardduty:GetMasterAccount"
      GetMemberDetectors = "guardduty:GetMemberDetectors"
      GetMembers = "guardduty:GetMembers"
      GetOrganizationStatistics = "guardduty:GetOrganizationStatistics"
      GetRemainingFreeTrialDays = "guardduty:GetRemainingFreeTrialDays"
      GetThreatIntelSet = "guardduty:GetThreatIntelSet"
      GetUsageStatistics = "guardduty:GetUsageStatistics"
      InviteMembers = "guardduty:InviteMembers"
      ListCoverage = "guardduty:ListCoverage"
      ListDetectors = "guardduty:ListDetectors"
      ListFilters = "guardduty:ListFilters"
      ListFindings = "guardduty:ListFindings"
      ListIPSets = "guardduty:ListIPSets"
      ListInvitations = "guardduty:ListInvitations"
      ListMalwareProtectionPlans = "guardduty:ListMalwareProtectionPlans"
      ListMembers = "guardduty:ListMembers"
      ListOrganizationAdminAccounts = "guardduty:ListOrganizationAdminAccounts"
      ListPublishingDestinations = "guardduty:ListPublishingDestinations"
      ListTagsForResource = "guardduty:ListTagsForResource"
      ListThreatIntelSets = "guardduty:ListThreatIntelSets"
      SendSecurityTelemetry = "guardduty:SendSecurityTelemetry"
      StartMalwareScan = "guardduty:StartMalwareScan"
      StartMonitoringMembers = "guardduty:StartMonitoringMembers"
      StopMonitoringMembers = "guardduty:StopMonitoringMembers"
      TagResource = "guardduty:TagResource"
      UnarchiveFindings = "guardduty:UnarchiveFindings"
      UntagResource = "guardduty:UntagResource"
      UpdateDetector = "guardduty:UpdateDetector"
      UpdateFilter = "guardduty:UpdateFilter"
      UpdateFindingsFeedback = "guardduty:UpdateFindingsFeedback"
      UpdateIPSet = "guardduty:UpdateIPSet"
      UpdateMalwareProtectionPlan = "guardduty:UpdateMalwareProtectionPlan"
      UpdateMalwareScanSettings = "guardduty:UpdateMalwareScanSettings"
      UpdateMemberDetectors = "guardduty:UpdateMemberDetectors"
      UpdateOrganizationConfiguration = "guardduty:UpdateOrganizationConfiguration"
      UpdatePublishingDestination = "guardduty:UpdatePublishingDestination"
      UpdateThreatIntelSet = "guardduty:UpdateThreatIntelSet"
    }
    health = {
      AllActions = "health:*"
      DescribeAffectedAccountsForOrganization = "health:DescribeAffectedAccountsForOrganization"
      DescribeAffectedEntities = "health:DescribeAffectedEntities"
      DescribeAffectedEntitiesForOrganization = "health:DescribeAffectedEntitiesForOrganization"
      DescribeEntityAggregates = "health:DescribeEntityAggregates"
      DescribeEntityAggregatesForOrganization = "health:DescribeEntityAggregatesForOrganization"
      DescribeEventAggregates = "health:DescribeEventAggregates"
      DescribeEventDetails = "health:DescribeEventDetails"
      DescribeEventDetailsForOrganization = "health:DescribeEventDetailsForOrganization"
      DescribeEventTypes = "health:DescribeEventTypes"
      DescribeEvents = "health:DescribeEvents"
      DescribeEventsForOrganization = "health:DescribeEventsForOrganization"
      DescribeHealthServiceStatusForOrganization = "health:DescribeHealthServiceStatusForOrganization"
      DisableHealthServiceAccessForOrganization = "health:DisableHealthServiceAccessForOrganization"
      EnableHealthServiceAccessForOrganization = "health:EnableHealthServiceAccessForOrganization"
    }
    healthlake = {
      AllActions = "healthlake:*"
      CreateFHIRDatastore = "healthlake:CreateFHIRDatastore"
      CreateResource = "healthlake:CreateResource"
      DeleteFHIRDatastore = "healthlake:DeleteFHIRDatastore"
      DeleteResource = "healthlake:DeleteResource"
      DescribeFHIRDatastore = "healthlake:DescribeFHIRDatastore"
      DescribeFHIRExportJob = "healthlake:DescribeFHIRExportJob"
      DescribeFHIRImportJob = "healthlake:DescribeFHIRImportJob"
      GetCapabilities = "healthlake:GetCapabilities"
      ListFHIRDatastores = "healthlake:ListFHIRDatastores"
      ListFHIRExportJobs = "healthlake:ListFHIRExportJobs"
      ListFHIRImportJobs = "healthlake:ListFHIRImportJobs"
      ListTagsForResource = "healthlake:ListTagsForResource"
      ReadResource = "healthlake:ReadResource"
      SearchEverything = "healthlake:SearchEverything"
      SearchWithGet = "healthlake:SearchWithGet"
      SearchWithPost = "healthlake:SearchWithPost"
      StartFHIRExportJob = "healthlake:StartFHIRExportJob"
      StartFHIRImportJob = "healthlake:StartFHIRImportJob"
      TagResource = "healthlake:TagResource"
      UntagResource = "healthlake:UntagResource"
      UpdateResource = "healthlake:UpdateResource"
    }
    honeycode = {
      AllActions = "honeycode:*"
      ApproveTeamAssociation = "honeycode:ApproveTeamAssociation"
      BatchCreateTableRows = "honeycode:BatchCreateTableRows"
      BatchDeleteTableRows = "honeycode:BatchDeleteTableRows"
      BatchUpdateTableRows = "honeycode:BatchUpdateTableRows"
      BatchUpsertTableRows = "honeycode:BatchUpsertTableRows"
      CreateTeam = "honeycode:CreateTeam"
      CreateTenant = "honeycode:CreateTenant"
      DeleteDomains = "honeycode:DeleteDomains"
      DeregisterGroups = "honeycode:DeregisterGroups"
      DescribeTableDataImportJob = "honeycode:DescribeTableDataImportJob"
      DescribeTeam = "honeycode:DescribeTeam"
      GetScreenData = "honeycode:GetScreenData"
      InvokeScreenAutomation = "honeycode:InvokeScreenAutomation"
      ListDomains = "honeycode:ListDomains"
      ListGroups = "honeycode:ListGroups"
      ListTableColumns = "honeycode:ListTableColumns"
      ListTableRows = "honeycode:ListTableRows"
      ListTables = "honeycode:ListTables"
      ListTagsForResource = "honeycode:ListTagsForResource"
      ListTeamAssociations = "honeycode:ListTeamAssociations"
      ListTenants = "honeycode:ListTenants"
      QueryTableRows = "honeycode:QueryTableRows"
      RegisterDomainForVerification = "honeycode:RegisterDomainForVerification"
      RegisterGroups = "honeycode:RegisterGroups"
      RejectTeamAssociation = "honeycode:RejectTeamAssociation"
      RestartDomainVerification = "honeycode:RestartDomainVerification"
      StartTableDataImportJob = "honeycode:StartTableDataImportJob"
      TagResource = "honeycode:TagResource"
      UntagResource = "honeycode:UntagResource"
      UpdateTeam = "honeycode:UpdateTeam"
    }
    iam = {
      AllActions = "iam:*"
      AddClientIDToOpenIDConnectProvider = "iam:AddClientIDToOpenIDConnectProvider"
      AddRoleToInstanceProfile = "iam:AddRoleToInstanceProfile"
      AddUserToGroup = "iam:AddUserToGroup"
      AttachGroupPolicy = "iam:AttachGroupPolicy"
      AttachRolePolicy = "iam:AttachRolePolicy"
      AttachUserPolicy = "iam:AttachUserPolicy"
      ChangePassword = "iam:ChangePassword"
      CreateAccessKey = "iam:CreateAccessKey"
      CreateAccountAlias = "iam:CreateAccountAlias"
      CreateGroup = "iam:CreateGroup"
      CreateInstanceProfile = "iam:CreateInstanceProfile"
      CreateLoginProfile = "iam:CreateLoginProfile"
      CreateOpenIDConnectProvider = "iam:CreateOpenIDConnectProvider"
      CreatePolicy = "iam:CreatePolicy"
      CreatePolicyVersion = "iam:CreatePolicyVersion"
      CreateRole = "iam:CreateRole"
      CreateSAMLProvider = "iam:CreateSAMLProvider"
      CreateServiceLinkedRole = "iam:CreateServiceLinkedRole"
      CreateServiceSpecificCredential = "iam:CreateServiceSpecificCredential"
      CreateUser = "iam:CreateUser"
      CreateVirtualMFADevice = "iam:CreateVirtualMFADevice"
      DeactivateMFADevice = "iam:DeactivateMFADevice"
      DeleteAccessKey = "iam:DeleteAccessKey"
      DeleteAccountAlias = "iam:DeleteAccountAlias"
      DeleteAccountPasswordPolicy = "iam:DeleteAccountPasswordPolicy"
      DeleteCloudFrontPublicKey = "iam:DeleteCloudFrontPublicKey"
      DeleteGroup = "iam:DeleteGroup"
      DeleteGroupPolicy = "iam:DeleteGroupPolicy"
      DeleteInstanceProfile = "iam:DeleteInstanceProfile"
      DeleteLoginProfile = "iam:DeleteLoginProfile"
      DeleteOpenIDConnectProvider = "iam:DeleteOpenIDConnectProvider"
      DeletePolicy = "iam:DeletePolicy"
      DeletePolicyVersion = "iam:DeletePolicyVersion"
      DeleteRole = "iam:DeleteRole"
      DeleteRolePermissionsBoundary = "iam:DeleteRolePermissionsBoundary"
      DeleteRolePolicy = "iam:DeleteRolePolicy"
      DeleteSAMLProvider = "iam:DeleteSAMLProvider"
      DeleteSSHPublicKey = "iam:DeleteSSHPublicKey"
      DeleteServerCertificate = "iam:DeleteServerCertificate"
      DeleteServiceLinkedRole = "iam:DeleteServiceLinkedRole"
      DeleteServiceSpecificCredential = "iam:DeleteServiceSpecificCredential"
      DeleteSigningCertificate = "iam:DeleteSigningCertificate"
      DeleteUser = "iam:DeleteUser"
      DeleteUserPermissionsBoundary = "iam:DeleteUserPermissionsBoundary"
      DeleteUserPolicy = "iam:DeleteUserPolicy"
      DeleteVirtualMFADevice = "iam:DeleteVirtualMFADevice"
      DetachGroupPolicy = "iam:DetachGroupPolicy"
      DetachRolePolicy = "iam:DetachRolePolicy"
      DetachUserPolicy = "iam:DetachUserPolicy"
      EnableMFADevice = "iam:EnableMFADevice"
      GenerateCredentialReport = "iam:GenerateCredentialReport"
      GenerateOrganizationsAccessReport = "iam:GenerateOrganizationsAccessReport"
      GenerateServiceLastAccessedDetails = "iam:GenerateServiceLastAccessedDetails"
      GetAccessKeyLastUsed = "iam:GetAccessKeyLastUsed"
      GetAccountAuthorizationDetails = "iam:GetAccountAuthorizationDetails"
      GetAccountEmailAddress = "iam:GetAccountEmailAddress"
      GetAccountName = "iam:GetAccountName"
      GetAccountPasswordPolicy = "iam:GetAccountPasswordPolicy"
      GetAccountSummary = "iam:GetAccountSummary"
      GetCloudFrontPublicKey = "iam:GetCloudFrontPublicKey"
      GetContextKeysForCustomPolicy = "iam:GetContextKeysForCustomPolicy"
      GetContextKeysForPrincipalPolicy = "iam:GetContextKeysForPrincipalPolicy"
      GetCredentialReport = "iam:GetCredentialReport"
      GetGroup = "iam:GetGroup"
      GetGroupPolicy = "iam:GetGroupPolicy"
      GetInstanceProfile = "iam:GetInstanceProfile"
      GetLoginProfile = "iam:GetLoginProfile"
      GetMFADevice = "iam:GetMFADevice"
      GetOpenIDConnectProvider = "iam:GetOpenIDConnectProvider"
      GetOrganizationsAccessReport = "iam:GetOrganizationsAccessReport"
      GetPolicy = "iam:GetPolicy"
      GetPolicyVersion = "iam:GetPolicyVersion"
      GetRole = "iam:GetRole"
      GetRolePolicy = "iam:GetRolePolicy"
      GetSAMLProvider = "iam:GetSAMLProvider"
      GetSSHPublicKey = "iam:GetSSHPublicKey"
      GetServerCertificate = "iam:GetServerCertificate"
      GetServiceLastAccessedDetails = "iam:GetServiceLastAccessedDetails"
      GetServiceLastAccessedDetailsWithEntities = "iam:GetServiceLastAccessedDetailsWithEntities"
      GetServiceLinkedRoleDeletionStatus = "iam:GetServiceLinkedRoleDeletionStatus"
      GetUser = "iam:GetUser"
      GetUserPolicy = "iam:GetUserPolicy"
      ListAccessKeys = "iam:ListAccessKeys"
      ListAccountAliases = "iam:ListAccountAliases"
      ListAttachedGroupPolicies = "iam:ListAttachedGroupPolicies"
      ListAttachedRolePolicies = "iam:ListAttachedRolePolicies"
      ListAttachedUserPolicies = "iam:ListAttachedUserPolicies"
      ListCloudFrontPublicKeys = "iam:ListCloudFrontPublicKeys"
      ListEntitiesForPolicy = "iam:ListEntitiesForPolicy"
      ListGroupPolicies = "iam:ListGroupPolicies"
      ListGroups = "iam:ListGroups"
      ListGroupsForUser = "iam:ListGroupsForUser"
      ListInstanceProfileTags = "iam:ListInstanceProfileTags"
      ListInstanceProfiles = "iam:ListInstanceProfiles"
      ListInstanceProfilesForRole = "iam:ListInstanceProfilesForRole"
      ListMFADeviceTags = "iam:ListMFADeviceTags"
      ListMFADevices = "iam:ListMFADevices"
      ListOpenIDConnectProviderTags = "iam:ListOpenIDConnectProviderTags"
      ListOpenIDConnectProviders = "iam:ListOpenIDConnectProviders"
      ListPolicies = "iam:ListPolicies"
      ListPoliciesGrantingServiceAccess = "iam:ListPoliciesGrantingServiceAccess"
      ListPolicyTags = "iam:ListPolicyTags"
      ListPolicyVersions = "iam:ListPolicyVersions"
      ListRolePolicies = "iam:ListRolePolicies"
      ListRoleTags = "iam:ListRoleTags"
      ListRoles = "iam:ListRoles"
      ListSAMLProviderTags = "iam:ListSAMLProviderTags"
      ListSAMLProviders = "iam:ListSAMLProviders"
      ListSSHPublicKeys = "iam:ListSSHPublicKeys"
      ListSTSRegionalEndpointsStatus = "iam:ListSTSRegionalEndpointsStatus"
      ListServerCertificateTags = "iam:ListServerCertificateTags"
      ListServerCertificates = "iam:ListServerCertificates"
      ListServiceSpecificCredentials = "iam:ListServiceSpecificCredentials"
      ListSigningCertificates = "iam:ListSigningCertificates"
      ListUserPolicies = "iam:ListUserPolicies"
      ListUserTags = "iam:ListUserTags"
      ListUsers = "iam:ListUsers"
      ListVirtualMFADevices = "iam:ListVirtualMFADevices"
      PassRole = "iam:PassRole"
      PutGroupPolicy = "iam:PutGroupPolicy"
      PutRolePermissionsBoundary = "iam:PutRolePermissionsBoundary"
      PutRolePolicy = "iam:PutRolePolicy"
      PutUserPermissionsBoundary = "iam:PutUserPermissionsBoundary"
      PutUserPolicy = "iam:PutUserPolicy"
      RemoveClientIDFromOpenIDConnectProvider = "iam:RemoveClientIDFromOpenIDConnectProvider"
      RemoveRoleFromInstanceProfile = "iam:RemoveRoleFromInstanceProfile"
      RemoveUserFromGroup = "iam:RemoveUserFromGroup"
      ResetServiceSpecificCredential = "iam:ResetServiceSpecificCredential"
      ResyncMFADevice = "iam:ResyncMFADevice"
      SetDefaultPolicyVersion = "iam:SetDefaultPolicyVersion"
      SetSTSRegionalEndpointStatus = "iam:SetSTSRegionalEndpointStatus"
      SetSecurityTokenServicePreferences = "iam:SetSecurityTokenServicePreferences"
      SimulateCustomPolicy = "iam:SimulateCustomPolicy"
      SimulatePrincipalPolicy = "iam:SimulatePrincipalPolicy"
      TagInstanceProfile = "iam:TagInstanceProfile"
      TagMFADevice = "iam:TagMFADevice"
      TagOpenIDConnectProvider = "iam:TagOpenIDConnectProvider"
      TagPolicy = "iam:TagPolicy"
      TagRole = "iam:TagRole"
      TagSAMLProvider = "iam:TagSAMLProvider"
      TagServerCertificate = "iam:TagServerCertificate"
      TagUser = "iam:TagUser"
      UntagInstanceProfile = "iam:UntagInstanceProfile"
      UntagMFADevice = "iam:UntagMFADevice"
      UntagOpenIDConnectProvider = "iam:UntagOpenIDConnectProvider"
      UntagPolicy = "iam:UntagPolicy"
      UntagRole = "iam:UntagRole"
      UntagSAMLProvider = "iam:UntagSAMLProvider"
      UntagServerCertificate = "iam:UntagServerCertificate"
      UntagUser = "iam:UntagUser"
      UpdateAccessKey = "iam:UpdateAccessKey"
      UpdateAccountEmailAddress = "iam:UpdateAccountEmailAddress"
      UpdateAccountName = "iam:UpdateAccountName"
      UpdateAccountPasswordPolicy = "iam:UpdateAccountPasswordPolicy"
      UpdateAssumeRolePolicy = "iam:UpdateAssumeRolePolicy"
      UpdateCloudFrontPublicKey = "iam:UpdateCloudFrontPublicKey"
      UpdateGroup = "iam:UpdateGroup"
      UpdateLoginProfile = "iam:UpdateLoginProfile"
      UpdateOpenIDConnectProviderThumbprint = "iam:UpdateOpenIDConnectProviderThumbprint"
      UpdateRole = "iam:UpdateRole"
      UpdateRoleDescription = "iam:UpdateRoleDescription"
      UpdateSAMLProvider = "iam:UpdateSAMLProvider"
      UpdateSSHPublicKey = "iam:UpdateSSHPublicKey"
      UpdateServerCertificate = "iam:UpdateServerCertificate"
      UpdateServiceSpecificCredential = "iam:UpdateServiceSpecificCredential"
      UpdateSigningCertificate = "iam:UpdateSigningCertificate"
      UpdateUser = "iam:UpdateUser"
      UploadCloudFrontPublicKey = "iam:UploadCloudFrontPublicKey"
      UploadSSHPublicKey = "iam:UploadSSHPublicKey"
      UploadServerCertificate = "iam:UploadServerCertificate"
      UploadSigningCertificate = "iam:UploadSigningCertificate"
    }
    identity-sync = {
      AllActions = "identity-sync:*"
      AllowVendedLogDeliveryForResource = "identity-sync:AllowVendedLogDeliveryForResource"
      CreateSyncFilter = "identity-sync:CreateSyncFilter"
      CreateSyncProfile = "identity-sync:CreateSyncProfile"
      CreateSyncTarget = "identity-sync:CreateSyncTarget"
      DeleteSyncFilter = "identity-sync:DeleteSyncFilter"
      DeleteSyncProfile = "identity-sync:DeleteSyncProfile"
      DeleteSyncTarget = "identity-sync:DeleteSyncTarget"
      GetSyncProfile = "identity-sync:GetSyncProfile"
      GetSyncTarget = "identity-sync:GetSyncTarget"
      ListSyncFilters = "identity-sync:ListSyncFilters"
      StartSync = "identity-sync:StartSync"
      StopSync = "identity-sync:StopSync"
      UpdateSyncTarget = "identity-sync:UpdateSyncTarget"
    }
    identitystore-auth = {
      AllActions = "identitystore-auth:*"
      BatchDeleteSession = "identitystore-auth:BatchDeleteSession"
      BatchGetSession = "identitystore-auth:BatchGetSession"
      ListSessions = "identitystore-auth:ListSessions"
    }
    identitystore = {
      AllActions = "identitystore:*"
      CreateGroup = "identitystore:CreateGroup"
      CreateGroupMembership = "identitystore:CreateGroupMembership"
      CreateUser = "identitystore:CreateUser"
      DeleteGroup = "identitystore:DeleteGroup"
      DeleteGroupMembership = "identitystore:DeleteGroupMembership"
      DeleteUser = "identitystore:DeleteUser"
      DescribeGroup = "identitystore:DescribeGroup"
      DescribeGroupMembership = "identitystore:DescribeGroupMembership"
      DescribeUser = "identitystore:DescribeUser"
      GetGroupId = "identitystore:GetGroupId"
      GetGroupMembershipId = "identitystore:GetGroupMembershipId"
      GetUserId = "identitystore:GetUserId"
      IsMemberInGroups = "identitystore:IsMemberInGroups"
      ListGroupMemberships = "identitystore:ListGroupMemberships"
      ListGroupMembershipsForMember = "identitystore:ListGroupMembershipsForMember"
      ListGroups = "identitystore:ListGroups"
      ListUsers = "identitystore:ListUsers"
      UpdateGroup = "identitystore:UpdateGroup"
      UpdateUser = "identitystore:UpdateUser"
    }
    imagebuilder = {
      AllActions = "imagebuilder:*"
      CancelImageCreation = "imagebuilder:CancelImageCreation"
      CancelLifecycleExecution = "imagebuilder:CancelLifecycleExecution"
      CreateComponent = "imagebuilder:CreateComponent"
      CreateContainerRecipe = "imagebuilder:CreateContainerRecipe"
      CreateDistributionConfiguration = "imagebuilder:CreateDistributionConfiguration"
      CreateImage = "imagebuilder:CreateImage"
      CreateImagePipeline = "imagebuilder:CreateImagePipeline"
      CreateImageRecipe = "imagebuilder:CreateImageRecipe"
      CreateInfrastructureConfiguration = "imagebuilder:CreateInfrastructureConfiguration"
      CreateLifecyclePolicy = "imagebuilder:CreateLifecyclePolicy"
      CreateWorkflow = "imagebuilder:CreateWorkflow"
      DeleteComponent = "imagebuilder:DeleteComponent"
      DeleteContainerRecipe = "imagebuilder:DeleteContainerRecipe"
      DeleteDistributionConfiguration = "imagebuilder:DeleteDistributionConfiguration"
      DeleteImage = "imagebuilder:DeleteImage"
      DeleteImagePipeline = "imagebuilder:DeleteImagePipeline"
      DeleteImageRecipe = "imagebuilder:DeleteImageRecipe"
      DeleteInfrastructureConfiguration = "imagebuilder:DeleteInfrastructureConfiguration"
      DeleteLifecyclePolicy = "imagebuilder:DeleteLifecyclePolicy"
      DeleteWorkflow = "imagebuilder:DeleteWorkflow"
      GetComponent = "imagebuilder:GetComponent"
      GetComponentPolicy = "imagebuilder:GetComponentPolicy"
      GetContainerRecipe = "imagebuilder:GetContainerRecipe"
      GetContainerRecipePolicy = "imagebuilder:GetContainerRecipePolicy"
      GetDistributionConfiguration = "imagebuilder:GetDistributionConfiguration"
      GetImage = "imagebuilder:GetImage"
      GetImagePipeline = "imagebuilder:GetImagePipeline"
      GetImagePolicy = "imagebuilder:GetImagePolicy"
      GetImageRecipe = "imagebuilder:GetImageRecipe"
      GetImageRecipePolicy = "imagebuilder:GetImageRecipePolicy"
      GetInfrastructureConfiguration = "imagebuilder:GetInfrastructureConfiguration"
      GetLifecycleExecution = "imagebuilder:GetLifecycleExecution"
      GetLifecyclePolicy = "imagebuilder:GetLifecyclePolicy"
      GetWorkflow = "imagebuilder:GetWorkflow"
      GetWorkflowExecution = "imagebuilder:GetWorkflowExecution"
      GetWorkflowStepExecution = "imagebuilder:GetWorkflowStepExecution"
      ImportComponent = "imagebuilder:ImportComponent"
      ImportVmImage = "imagebuilder:ImportVmImage"
      ListComponentBuildVersions = "imagebuilder:ListComponentBuildVersions"
      ListComponents = "imagebuilder:ListComponents"
      ListContainerRecipes = "imagebuilder:ListContainerRecipes"
      ListDistributionConfigurations = "imagebuilder:ListDistributionConfigurations"
      ListImageBuildVersions = "imagebuilder:ListImageBuildVersions"
      ListImagePackages = "imagebuilder:ListImagePackages"
      ListImagePipelineImages = "imagebuilder:ListImagePipelineImages"
      ListImagePipelines = "imagebuilder:ListImagePipelines"
      ListImageRecipes = "imagebuilder:ListImageRecipes"
      ListImageScanFindingAggregations = "imagebuilder:ListImageScanFindingAggregations"
      ListImageScanFindings = "imagebuilder:ListImageScanFindings"
      ListImages = "imagebuilder:ListImages"
      ListInfrastructureConfigurations = "imagebuilder:ListInfrastructureConfigurations"
      ListLifecycleExecutionResources = "imagebuilder:ListLifecycleExecutionResources"
      ListLifecycleExecutions = "imagebuilder:ListLifecycleExecutions"
      ListLifecyclePolicies = "imagebuilder:ListLifecyclePolicies"
      ListTagsForResource = "imagebuilder:ListTagsForResource"
      ListWaitingWorkflowSteps = "imagebuilder:ListWaitingWorkflowSteps"
      ListWorkflowBuildVersions = "imagebuilder:ListWorkflowBuildVersions"
      ListWorkflowExecutions = "imagebuilder:ListWorkflowExecutions"
      ListWorkflowStepExecutions = "imagebuilder:ListWorkflowStepExecutions"
      ListWorkflows = "imagebuilder:ListWorkflows"
      PutComponentPolicy = "imagebuilder:PutComponentPolicy"
      PutContainerRecipePolicy = "imagebuilder:PutContainerRecipePolicy"
      PutImagePolicy = "imagebuilder:PutImagePolicy"
      PutImageRecipePolicy = "imagebuilder:PutImageRecipePolicy"
      SendWorkflowStepAction = "imagebuilder:SendWorkflowStepAction"
      StartImagePipelineExecution = "imagebuilder:StartImagePipelineExecution"
      StartResourceStateUpdate = "imagebuilder:StartResourceStateUpdate"
      TagResource = "imagebuilder:TagResource"
      UntagResource = "imagebuilder:UntagResource"
      UpdateDistributionConfiguration = "imagebuilder:UpdateDistributionConfiguration"
      UpdateImagePipeline = "imagebuilder:UpdateImagePipeline"
      UpdateInfrastructureConfiguration = "imagebuilder:UpdateInfrastructureConfiguration"
      UpdateLifecyclePolicy = "imagebuilder:UpdateLifecyclePolicy"
    }
    importexport = {
      AllActions = "importexport:*"
      CancelJob = "importexport:CancelJob"
      CreateJob = "importexport:CreateJob"
      GetShippingLabel = "importexport:GetShippingLabel"
      GetStatus = "importexport:GetStatus"
      ListJobs = "importexport:ListJobs"
      UpdateJob = "importexport:UpdateJob"
    }
    inspector-scan = {
      AllActions = "inspector-scan:*"
      ScanSbom = "inspector-scan:ScanSbom"
    }
    inspector2 = {
      AllActions = "inspector2:*"
      AssociateMember = "inspector2:AssociateMember"
      BatchGetAccountStatus = "inspector2:BatchGetAccountStatus"
      BatchGetCodeSnippet = "inspector2:BatchGetCodeSnippet"
      BatchGetFindingDetails = "inspector2:BatchGetFindingDetails"
      BatchGetFreeTrialInfo = "inspector2:BatchGetFreeTrialInfo"
      BatchGetMemberEc2DeepInspectionStatus = "inspector2:BatchGetMemberEc2DeepInspectionStatus"
      BatchUpdateMemberEc2DeepInspectionStatus = "inspector2:BatchUpdateMemberEc2DeepInspectionStatus"
      CancelFindingsReport = "inspector2:CancelFindingsReport"
      CancelSbomExport = "inspector2:CancelSbomExport"
      CreateCisScanConfiguration = "inspector2:CreateCisScanConfiguration"
      CreateFilter = "inspector2:CreateFilter"
      CreateFindingsReport = "inspector2:CreateFindingsReport"
      CreateSbomExport = "inspector2:CreateSbomExport"
      DeleteCisScanConfiguration = "inspector2:DeleteCisScanConfiguration"
      DeleteFilter = "inspector2:DeleteFilter"
      DescribeOrganizationConfiguration = "inspector2:DescribeOrganizationConfiguration"
      Disable = "inspector2:Disable"
      DisableDelegatedAdminAccount = "inspector2:DisableDelegatedAdminAccount"
      DisassociateMember = "inspector2:DisassociateMember"
      Enable = "inspector2:Enable"
      EnableDelegatedAdminAccount = "inspector2:EnableDelegatedAdminAccount"
      GetCisScanReport = "inspector2:GetCisScanReport"
      GetCisScanResultDetails = "inspector2:GetCisScanResultDetails"
      GetConfiguration = "inspector2:GetConfiguration"
      GetDelegatedAdminAccount = "inspector2:GetDelegatedAdminAccount"
      GetEc2DeepInspectionConfiguration = "inspector2:GetEc2DeepInspectionConfiguration"
      GetEncryptionKey = "inspector2:GetEncryptionKey"
      GetFindingsReportStatus = "inspector2:GetFindingsReportStatus"
      GetMember = "inspector2:GetMember"
      GetSbomExport = "inspector2:GetSbomExport"
      ListAccountPermissions = "inspector2:ListAccountPermissions"
      ListCisScanConfigurations = "inspector2:ListCisScanConfigurations"
      ListCisScanResultsAggregatedByChecks = "inspector2:ListCisScanResultsAggregatedByChecks"
      ListCisScanResultsAggregatedByTargetResource = "inspector2:ListCisScanResultsAggregatedByTargetResource"
      ListCisScans = "inspector2:ListCisScans"
      ListCoverage = "inspector2:ListCoverage"
      ListCoverageStatistics = "inspector2:ListCoverageStatistics"
      ListDelegatedAdminAccounts = "inspector2:ListDelegatedAdminAccounts"
      ListFilters = "inspector2:ListFilters"
      ListFindingAggregations = "inspector2:ListFindingAggregations"
      ListFindings = "inspector2:ListFindings"
      ListMembers = "inspector2:ListMembers"
      ListTagsForResource = "inspector2:ListTagsForResource"
      ListUsageTotals = "inspector2:ListUsageTotals"
      ResetEncryptionKey = "inspector2:ResetEncryptionKey"
      SearchVulnerabilities = "inspector2:SearchVulnerabilities"
      SendCisSessionHealth = "inspector2:SendCisSessionHealth"
      SendCisSessionTelemetry = "inspector2:SendCisSessionTelemetry"
      StartCisSession = "inspector2:StartCisSession"
      StopCisSession = "inspector2:StopCisSession"
      TagResource = "inspector2:TagResource"
      UntagResource = "inspector2:UntagResource"
      UpdateCisScanConfiguration = "inspector2:UpdateCisScanConfiguration"
      UpdateConfiguration = "inspector2:UpdateConfiguration"
      UpdateEc2DeepInspectionConfiguration = "inspector2:UpdateEc2DeepInspectionConfiguration"
      UpdateEncryptionKey = "inspector2:UpdateEncryptionKey"
      UpdateFilter = "inspector2:UpdateFilter"
      UpdateOrgEc2DeepInspectionConfiguration = "inspector2:UpdateOrgEc2DeepInspectionConfiguration"
      UpdateOrganizationConfiguration = "inspector2:UpdateOrganizationConfiguration"
    }
    inspector = {
      AllActions = "inspector:*"
      AddAttributesToFindings = "inspector:AddAttributesToFindings"
      CreateAssessmentTarget = "inspector:CreateAssessmentTarget"
      CreateAssessmentTemplate = "inspector:CreateAssessmentTemplate"
      CreateExclusionsPreview = "inspector:CreateExclusionsPreview"
      CreateResourceGroup = "inspector:CreateResourceGroup"
      DeleteAssessmentRun = "inspector:DeleteAssessmentRun"
      DeleteAssessmentTarget = "inspector:DeleteAssessmentTarget"
      DeleteAssessmentTemplate = "inspector:DeleteAssessmentTemplate"
      DescribeAssessmentRuns = "inspector:DescribeAssessmentRuns"
      DescribeAssessmentTargets = "inspector:DescribeAssessmentTargets"
      DescribeAssessmentTemplates = "inspector:DescribeAssessmentTemplates"
      DescribeCrossAccountAccessRole = "inspector:DescribeCrossAccountAccessRole"
      DescribeExclusions = "inspector:DescribeExclusions"
      DescribeFindings = "inspector:DescribeFindings"
      DescribeResourceGroups = "inspector:DescribeResourceGroups"
      DescribeRulesPackages = "inspector:DescribeRulesPackages"
      GetAssessmentReport = "inspector:GetAssessmentReport"
      GetExclusionsPreview = "inspector:GetExclusionsPreview"
      GetTelemetryMetadata = "inspector:GetTelemetryMetadata"
      ListAssessmentRunAgents = "inspector:ListAssessmentRunAgents"
      ListAssessmentRuns = "inspector:ListAssessmentRuns"
      ListAssessmentTargets = "inspector:ListAssessmentTargets"
      ListAssessmentTemplates = "inspector:ListAssessmentTemplates"
      ListEventSubscriptions = "inspector:ListEventSubscriptions"
      ListExclusions = "inspector:ListExclusions"
      ListFindings = "inspector:ListFindings"
      ListRulesPackages = "inspector:ListRulesPackages"
      ListTagsForResource = "inspector:ListTagsForResource"
      PreviewAgents = "inspector:PreviewAgents"
      RegisterCrossAccountAccessRole = "inspector:RegisterCrossAccountAccessRole"
      RemoveAttributesFromFindings = "inspector:RemoveAttributesFromFindings"
      SetTagsForResource = "inspector:SetTagsForResource"
      StartAssessmentRun = "inspector:StartAssessmentRun"
      StopAssessmentRun = "inspector:StopAssessmentRun"
      SubscribeToEvent = "inspector:SubscribeToEvent"
      UnsubscribeFromEvent = "inspector:UnsubscribeFromEvent"
      UpdateAssessmentTarget = "inspector:UpdateAssessmentTarget"
    }
    internetmonitor = {
      AllActions = "internetmonitor:*"
      CreateMonitor = "internetmonitor:CreateMonitor"
      DeleteMonitor = "internetmonitor:DeleteMonitor"
      GetHealthEvent = "internetmonitor:GetHealthEvent"
      GetInternetEvent = "internetmonitor:GetInternetEvent"
      GetMonitor = "internetmonitor:GetMonitor"
      GetQueryResults = "internetmonitor:GetQueryResults"
      GetQueryStatus = "internetmonitor:GetQueryStatus"
      Link = "internetmonitor:Link"
      ListHealthEvents = "internetmonitor:ListHealthEvents"
      ListInternetEvents = "internetmonitor:ListInternetEvents"
      ListMonitors = "internetmonitor:ListMonitors"
      ListTagsForResource = "internetmonitor:ListTagsForResource"
      StartQuery = "internetmonitor:StartQuery"
      StopQuery = "internetmonitor:StopQuery"
      TagResource = "internetmonitor:TagResource"
      UntagResource = "internetmonitor:UntagResource"
      UpdateMonitor = "internetmonitor:UpdateMonitor"
    }
    invoicing = {
      AllActions = "invoicing:*"
      GetInvoiceEmailDeliveryPreferences = "invoicing:GetInvoiceEmailDeliveryPreferences"
      GetInvoicePDF = "invoicing:GetInvoicePDF"
      ListInvoiceSummaries = "invoicing:ListInvoiceSummaries"
      PutInvoiceEmailDeliveryPreferences = "invoicing:PutInvoiceEmailDeliveryPreferences"
    }
    iot-device-tester = {
      AllActions = "iot-device-tester:*"
      CheckVersion = "iot-device-tester:CheckVersion"
      DownloadTestSuite = "iot-device-tester:DownloadTestSuite"
      LatestIdt = "iot-device-tester:LatestIdt"
      SendMetrics = "iot-device-tester:SendMetrics"
      SupportedVersion = "iot-device-tester:SupportedVersion"
    }
    iot1click = {
      AllActions = "iot1click:*"
      AssociateDeviceWithPlacement = "iot1click:AssociateDeviceWithPlacement"
      ClaimDevicesByClaimCode = "iot1click:ClaimDevicesByClaimCode"
      CreatePlacement = "iot1click:CreatePlacement"
      CreateProject = "iot1click:CreateProject"
      DeletePlacement = "iot1click:DeletePlacement"
      DeleteProject = "iot1click:DeleteProject"
      DescribeDevice = "iot1click:DescribeDevice"
      DescribePlacement = "iot1click:DescribePlacement"
      DescribeProject = "iot1click:DescribeProject"
      DisassociateDeviceFromPlacement = "iot1click:DisassociateDeviceFromPlacement"
      FinalizeDeviceClaim = "iot1click:FinalizeDeviceClaim"
      GetDeviceMethods = "iot1click:GetDeviceMethods"
      GetDevicesInPlacement = "iot1click:GetDevicesInPlacement"
      InitiateDeviceClaim = "iot1click:InitiateDeviceClaim"
      InvokeDeviceMethod = "iot1click:InvokeDeviceMethod"
      ListDeviceEvents = "iot1click:ListDeviceEvents"
      ListDevices = "iot1click:ListDevices"
      ListPlacements = "iot1click:ListPlacements"
      ListProjects = "iot1click:ListProjects"
      ListTagsForResource = "iot1click:ListTagsForResource"
      TagResource = "iot1click:TagResource"
      UnclaimDevice = "iot1click:UnclaimDevice"
      UntagResource = "iot1click:UntagResource"
      UpdateDeviceState = "iot1click:UpdateDeviceState"
      UpdatePlacement = "iot1click:UpdatePlacement"
      UpdateProject = "iot1click:UpdateProject"
    }
    iot = {
      AllActions = "iot:*"
      AcceptCertificateTransfer = "iot:AcceptCertificateTransfer"
      AddThingToBillingGroup = "iot:AddThingToBillingGroup"
      AddThingToThingGroup = "iot:AddThingToThingGroup"
      AssociateTargetsWithJob = "iot:AssociateTargetsWithJob"
      AttachPolicy = "iot:AttachPolicy"
      AttachPrincipalPolicy = "iot:AttachPrincipalPolicy"
      AttachSecurityProfile = "iot:AttachSecurityProfile"
      AttachThingPrincipal = "iot:AttachThingPrincipal"
      CancelAuditMitigationActionsTask = "iot:CancelAuditMitigationActionsTask"
      CancelAuditTask = "iot:CancelAuditTask"
      CancelCertificateTransfer = "iot:CancelCertificateTransfer"
      CancelDetectMitigationActionsTask = "iot:CancelDetectMitigationActionsTask"
      CancelJob = "iot:CancelJob"
      CancelJobExecution = "iot:CancelJobExecution"
      ClearDefaultAuthorizer = "iot:ClearDefaultAuthorizer"
      CloseTunnel = "iot:CloseTunnel"
      ConfirmTopicRuleDestination = "iot:ConfirmTopicRuleDestination"
      Connect = "iot:Connect"
      CreateAuditSuppression = "iot:CreateAuditSuppression"
      CreateAuthorizer = "iot:CreateAuthorizer"
      CreateBillingGroup = "iot:CreateBillingGroup"
      CreateCertificateFromCsr = "iot:CreateCertificateFromCsr"
      CreateCertificateProvider = "iot:CreateCertificateProvider"
      CreateCustomMetric = "iot:CreateCustomMetric"
      CreateDimension = "iot:CreateDimension"
      CreateDomainConfiguration = "iot:CreateDomainConfiguration"
      CreateDynamicThingGroup = "iot:CreateDynamicThingGroup"
      CreateFleetMetric = "iot:CreateFleetMetric"
      CreateJob = "iot:CreateJob"
      CreateJobTemplate = "iot:CreateJobTemplate"
      CreateKeysAndCertificate = "iot:CreateKeysAndCertificate"
      CreateMitigationAction = "iot:CreateMitigationAction"
      CreateOTAUpdate = "iot:CreateOTAUpdate"
      CreatePackage = "iot:CreatePackage"
      CreatePackageVersion = "iot:CreatePackageVersion"
      CreatePolicy = "iot:CreatePolicy"
      CreatePolicyVersion = "iot:CreatePolicyVersion"
      CreateProvisioningClaim = "iot:CreateProvisioningClaim"
      CreateProvisioningTemplate = "iot:CreateProvisioningTemplate"
      CreateProvisioningTemplateVersion = "iot:CreateProvisioningTemplateVersion"
      CreateRoleAlias = "iot:CreateRoleAlias"
      CreateScheduledAudit = "iot:CreateScheduledAudit"
      CreateSecurityProfile = "iot:CreateSecurityProfile"
      CreateStream = "iot:CreateStream"
      CreateThing = "iot:CreateThing"
      CreateThingGroup = "iot:CreateThingGroup"
      CreateThingType = "iot:CreateThingType"
      CreateTopicRule = "iot:CreateTopicRule"
      CreateTopicRuleDestination = "iot:CreateTopicRuleDestination"
      DeleteAccountAuditConfiguration = "iot:DeleteAccountAuditConfiguration"
      DeleteAuditSuppression = "iot:DeleteAuditSuppression"
      DeleteAuthorizer = "iot:DeleteAuthorizer"
      DeleteBillingGroup = "iot:DeleteBillingGroup"
      DeleteCACertificate = "iot:DeleteCACertificate"
      DeleteCertificate = "iot:DeleteCertificate"
      DeleteCertificateProvider = "iot:DeleteCertificateProvider"
      DeleteCustomMetric = "iot:DeleteCustomMetric"
      DeleteDimension = "iot:DeleteDimension"
      DeleteDomainConfiguration = "iot:DeleteDomainConfiguration"
      DeleteDynamicThingGroup = "iot:DeleteDynamicThingGroup"
      DeleteFleetMetric = "iot:DeleteFleetMetric"
      DeleteJob = "iot:DeleteJob"
      DeleteJobExecution = "iot:DeleteJobExecution"
      DeleteJobTemplate = "iot:DeleteJobTemplate"
      DeleteMitigationAction = "iot:DeleteMitigationAction"
      DeleteOTAUpdate = "iot:DeleteOTAUpdate"
      DeletePackage = "iot:DeletePackage"
      DeletePackageVersion = "iot:DeletePackageVersion"
      DeletePolicy = "iot:DeletePolicy"
      DeletePolicyVersion = "iot:DeletePolicyVersion"
      DeleteProvisioningTemplate = "iot:DeleteProvisioningTemplate"
      DeleteProvisioningTemplateVersion = "iot:DeleteProvisioningTemplateVersion"
      DeleteRegistrationCode = "iot:DeleteRegistrationCode"
      DeleteRoleAlias = "iot:DeleteRoleAlias"
      DeleteScheduledAudit = "iot:DeleteScheduledAudit"
      DeleteSecurityProfile = "iot:DeleteSecurityProfile"
      DeleteStream = "iot:DeleteStream"
      DeleteThing = "iot:DeleteThing"
      DeleteThingGroup = "iot:DeleteThingGroup"
      DeleteThingShadow = "iot:DeleteThingShadow"
      DeleteThingType = "iot:DeleteThingType"
      DeleteTopicRule = "iot:DeleteTopicRule"
      DeleteTopicRuleDestination = "iot:DeleteTopicRuleDestination"
      DeleteV2LoggingLevel = "iot:DeleteV2LoggingLevel"
      DeprecateThingType = "iot:DeprecateThingType"
      DescribeAccountAuditConfiguration = "iot:DescribeAccountAuditConfiguration"
      DescribeAuditFinding = "iot:DescribeAuditFinding"
      DescribeAuditMitigationActionsTask = "iot:DescribeAuditMitigationActionsTask"
      DescribeAuditSuppression = "iot:DescribeAuditSuppression"
      DescribeAuditTask = "iot:DescribeAuditTask"
      DescribeAuthorizer = "iot:DescribeAuthorizer"
      DescribeBillingGroup = "iot:DescribeBillingGroup"
      DescribeCACertificate = "iot:DescribeCACertificate"
      DescribeCertificate = "iot:DescribeCertificate"
      DescribeCertificateProvider = "iot:DescribeCertificateProvider"
      DescribeCustomMetric = "iot:DescribeCustomMetric"
      DescribeDefaultAuthorizer = "iot:DescribeDefaultAuthorizer"
      DescribeDetectMitigationActionsTask = "iot:DescribeDetectMitigationActionsTask"
      DescribeDimension = "iot:DescribeDimension"
      DescribeDomainConfiguration = "iot:DescribeDomainConfiguration"
      DescribeEndpoint = "iot:DescribeEndpoint"
      DescribeEventConfigurations = "iot:DescribeEventConfigurations"
      DescribeFleetMetric = "iot:DescribeFleetMetric"
      DescribeIndex = "iot:DescribeIndex"
      DescribeJob = "iot:DescribeJob"
      DescribeJobExecution = "iot:DescribeJobExecution"
      DescribeJobTemplate = "iot:DescribeJobTemplate"
      DescribeManagedJobTemplate = "iot:DescribeManagedJobTemplate"
      DescribeMitigationAction = "iot:DescribeMitigationAction"
      DescribeProvisioningTemplate = "iot:DescribeProvisioningTemplate"
      DescribeProvisioningTemplateVersion = "iot:DescribeProvisioningTemplateVersion"
      DescribeRoleAlias = "iot:DescribeRoleAlias"
      DescribeScheduledAudit = "iot:DescribeScheduledAudit"
      DescribeSecurityProfile = "iot:DescribeSecurityProfile"
      DescribeStream = "iot:DescribeStream"
      DescribeThing = "iot:DescribeThing"
      DescribeThingGroup = "iot:DescribeThingGroup"
      DescribeThingRegistrationTask = "iot:DescribeThingRegistrationTask"
      DescribeThingType = "iot:DescribeThingType"
      DescribeTunnel = "iot:DescribeTunnel"
      DetachPolicy = "iot:DetachPolicy"
      DetachPrincipalPolicy = "iot:DetachPrincipalPolicy"
      DetachSecurityProfile = "iot:DetachSecurityProfile"
      DetachThingPrincipal = "iot:DetachThingPrincipal"
      DisableTopicRule = "iot:DisableTopicRule"
      EnableTopicRule = "iot:EnableTopicRule"
      GetBehaviorModelTrainingSummaries = "iot:GetBehaviorModelTrainingSummaries"
      GetBucketsAggregation = "iot:GetBucketsAggregation"
      GetCardinality = "iot:GetCardinality"
      GetEffectivePolicies = "iot:GetEffectivePolicies"
      GetIndexingConfiguration = "iot:GetIndexingConfiguration"
      GetJobDocument = "iot:GetJobDocument"
      GetLoggingOptions = "iot:GetLoggingOptions"
      GetOTAUpdate = "iot:GetOTAUpdate"
      GetPackage = "iot:GetPackage"
      GetPackageConfiguration = "iot:GetPackageConfiguration"
      GetPackageVersion = "iot:GetPackageVersion"
      GetPercentiles = "iot:GetPercentiles"
      GetPolicy = "iot:GetPolicy"
      GetPolicyVersion = "iot:GetPolicyVersion"
      GetRegistrationCode = "iot:GetRegistrationCode"
      GetRetainedMessage = "iot:GetRetainedMessage"
      GetStatistics = "iot:GetStatistics"
      GetThingShadow = "iot:GetThingShadow"
      GetTopicRule = "iot:GetTopicRule"
      GetTopicRuleDestination = "iot:GetTopicRuleDestination"
      GetV2LoggingOptions = "iot:GetV2LoggingOptions"
      ListActiveViolations = "iot:ListActiveViolations"
      ListAttachedPolicies = "iot:ListAttachedPolicies"
      ListAuditFindings = "iot:ListAuditFindings"
      ListAuditMitigationActionsExecutions = "iot:ListAuditMitigationActionsExecutions"
      ListAuditMitigationActionsTasks = "iot:ListAuditMitigationActionsTasks"
      ListAuditSuppressions = "iot:ListAuditSuppressions"
      ListAuditTasks = "iot:ListAuditTasks"
      ListAuthorizers = "iot:ListAuthorizers"
      ListBillingGroups = "iot:ListBillingGroups"
      ListCACertificates = "iot:ListCACertificates"
      ListCertificateProviders = "iot:ListCertificateProviders"
      ListCertificates = "iot:ListCertificates"
      ListCertificatesByCA = "iot:ListCertificatesByCA"
      ListCustomMetrics = "iot:ListCustomMetrics"
      ListDetectMitigationActionsExecutions = "iot:ListDetectMitigationActionsExecutions"
      ListDetectMitigationActionsTasks = "iot:ListDetectMitigationActionsTasks"
      ListDimensions = "iot:ListDimensions"
      ListDomainConfigurations = "iot:ListDomainConfigurations"
      ListFleetMetrics = "iot:ListFleetMetrics"
      ListIndices = "iot:ListIndices"
      ListJobExecutionsForJob = "iot:ListJobExecutionsForJob"
      ListJobExecutionsForThing = "iot:ListJobExecutionsForThing"
      ListJobTemplates = "iot:ListJobTemplates"
      ListJobs = "iot:ListJobs"
      ListManagedJobTemplates = "iot:ListManagedJobTemplates"
      ListMetricValues = "iot:ListMetricValues"
      ListMitigationActions = "iot:ListMitigationActions"
      ListNamedShadowsForThing = "iot:ListNamedShadowsForThing"
      ListOTAUpdates = "iot:ListOTAUpdates"
      ListOutgoingCertificates = "iot:ListOutgoingCertificates"
      ListPackageVersions = "iot:ListPackageVersions"
      ListPackages = "iot:ListPackages"
      ListPolicies = "iot:ListPolicies"
      ListPolicyPrincipals = "iot:ListPolicyPrincipals"
      ListPolicyVersions = "iot:ListPolicyVersions"
      ListPrincipalPolicies = "iot:ListPrincipalPolicies"
      ListPrincipalThings = "iot:ListPrincipalThings"
      ListProvisioningTemplateVersions = "iot:ListProvisioningTemplateVersions"
      ListProvisioningTemplates = "iot:ListProvisioningTemplates"
      ListRelatedResourcesForAuditFinding = "iot:ListRelatedResourcesForAuditFinding"
      ListRetainedMessages = "iot:ListRetainedMessages"
      ListRoleAliases = "iot:ListRoleAliases"
      ListScheduledAudits = "iot:ListScheduledAudits"
      ListSecurityProfiles = "iot:ListSecurityProfiles"
      ListSecurityProfilesForTarget = "iot:ListSecurityProfilesForTarget"
      ListStreams = "iot:ListStreams"
      ListTagsForResource = "iot:ListTagsForResource"
      ListTargetsForPolicy = "iot:ListTargetsForPolicy"
      ListTargetsForSecurityProfile = "iot:ListTargetsForSecurityProfile"
      ListThingGroups = "iot:ListThingGroups"
      ListThingGroupsForThing = "iot:ListThingGroupsForThing"
      ListThingPrincipals = "iot:ListThingPrincipals"
      ListThingRegistrationTaskReports = "iot:ListThingRegistrationTaskReports"
      ListThingRegistrationTasks = "iot:ListThingRegistrationTasks"
      ListThingTypes = "iot:ListThingTypes"
      ListThings = "iot:ListThings"
      ListThingsInBillingGroup = "iot:ListThingsInBillingGroup"
      ListThingsInThingGroup = "iot:ListThingsInThingGroup"
      ListTopicRuleDestinations = "iot:ListTopicRuleDestinations"
      ListTopicRules = "iot:ListTopicRules"
      ListTunnels = "iot:ListTunnels"
      ListV2LoggingLevels = "iot:ListV2LoggingLevels"
      ListViolationEvents = "iot:ListViolationEvents"
      OpenTunnel = "iot:OpenTunnel"
      Publish = "iot:Publish"
      PutVerificationStateOnViolation = "iot:PutVerificationStateOnViolation"
      Receive = "iot:Receive"
      RegisterCACertificate = "iot:RegisterCACertificate"
      RegisterCertificate = "iot:RegisterCertificate"
      RegisterCertificateWithoutCA = "iot:RegisterCertificateWithoutCA"
      RegisterThing = "iot:RegisterThing"
      RejectCertificateTransfer = "iot:RejectCertificateTransfer"
      RemoveThingFromBillingGroup = "iot:RemoveThingFromBillingGroup"
      RemoveThingFromThingGroup = "iot:RemoveThingFromThingGroup"
      ReplaceTopicRule = "iot:ReplaceTopicRule"
      RetainPublish = "iot:RetainPublish"
      RotateTunnelAccessToken = "iot:RotateTunnelAccessToken"
      SearchIndex = "iot:SearchIndex"
      SetDefaultAuthorizer = "iot:SetDefaultAuthorizer"
      SetDefaultPolicyVersion = "iot:SetDefaultPolicyVersion"
      SetLoggingOptions = "iot:SetLoggingOptions"
      SetV2LoggingLevel = "iot:SetV2LoggingLevel"
      SetV2LoggingOptions = "iot:SetV2LoggingOptions"
      StartAuditMitigationActionsTask = "iot:StartAuditMitigationActionsTask"
      StartDetectMitigationActionsTask = "iot:StartDetectMitigationActionsTask"
      StartOnDemandAuditTask = "iot:StartOnDemandAuditTask"
      StartThingRegistrationTask = "iot:StartThingRegistrationTask"
      StopThingRegistrationTask = "iot:StopThingRegistrationTask"
      Subscribe = "iot:Subscribe"
      TagResource = "iot:TagResource"
      TestAuthorization = "iot:TestAuthorization"
      TestInvokeAuthorizer = "iot:TestInvokeAuthorizer"
      TransferCertificate = "iot:TransferCertificate"
      UntagResource = "iot:UntagResource"
      UpdateAccountAuditConfiguration = "iot:UpdateAccountAuditConfiguration"
      UpdateAuditSuppression = "iot:UpdateAuditSuppression"
      UpdateAuthorizer = "iot:UpdateAuthorizer"
      UpdateBillingGroup = "iot:UpdateBillingGroup"
      UpdateCACertificate = "iot:UpdateCACertificate"
      UpdateCertificate = "iot:UpdateCertificate"
      UpdateCertificateProvider = "iot:UpdateCertificateProvider"
      UpdateCustomMetric = "iot:UpdateCustomMetric"
      UpdateDimension = "iot:UpdateDimension"
      UpdateDomainConfiguration = "iot:UpdateDomainConfiguration"
      UpdateDynamicThingGroup = "iot:UpdateDynamicThingGroup"
      UpdateEventConfigurations = "iot:UpdateEventConfigurations"
      UpdateFleetMetric = "iot:UpdateFleetMetric"
      UpdateIndexingConfiguration = "iot:UpdateIndexingConfiguration"
      UpdateJob = "iot:UpdateJob"
      UpdateMitigationAction = "iot:UpdateMitigationAction"
      UpdatePackage = "iot:UpdatePackage"
      UpdatePackageConfiguration = "iot:UpdatePackageConfiguration"
      UpdatePackageVersion = "iot:UpdatePackageVersion"
      UpdateProvisioningTemplate = "iot:UpdateProvisioningTemplate"
      UpdateRoleAlias = "iot:UpdateRoleAlias"
      UpdateScheduledAudit = "iot:UpdateScheduledAudit"
      UpdateSecurityProfile = "iot:UpdateSecurityProfile"
      UpdateStream = "iot:UpdateStream"
      UpdateThing = "iot:UpdateThing"
      UpdateThingGroup = "iot:UpdateThingGroup"
      UpdateThingGroupsForThing = "iot:UpdateThingGroupsForThing"
      UpdateThingShadow = "iot:UpdateThingShadow"
      UpdateTopicRuleDestination = "iot:UpdateTopicRuleDestination"
      ValidateSecurityProfileBehaviors = "iot:ValidateSecurityProfileBehaviors"
    }
    iotanalytics = {
      AllActions = "iotanalytics:*"
      BatchPutMessage = "iotanalytics:BatchPutMessage"
      CancelPipelineReprocessing = "iotanalytics:CancelPipelineReprocessing"
      CreateChannel = "iotanalytics:CreateChannel"
      CreateDataset = "iotanalytics:CreateDataset"
      CreateDatasetContent = "iotanalytics:CreateDatasetContent"
      CreateDatastore = "iotanalytics:CreateDatastore"
      CreatePipeline = "iotanalytics:CreatePipeline"
      DeleteChannel = "iotanalytics:DeleteChannel"
      DeleteDataset = "iotanalytics:DeleteDataset"
      DeleteDatasetContent = "iotanalytics:DeleteDatasetContent"
      DeleteDatastore = "iotanalytics:DeleteDatastore"
      DeletePipeline = "iotanalytics:DeletePipeline"
      DescribeChannel = "iotanalytics:DescribeChannel"
      DescribeDataset = "iotanalytics:DescribeDataset"
      DescribeDatastore = "iotanalytics:DescribeDatastore"
      DescribeLoggingOptions = "iotanalytics:DescribeLoggingOptions"
      DescribePipeline = "iotanalytics:DescribePipeline"
      GetDatasetContent = "iotanalytics:GetDatasetContent"
      ListChannels = "iotanalytics:ListChannels"
      ListDatasetContents = "iotanalytics:ListDatasetContents"
      ListDatasets = "iotanalytics:ListDatasets"
      ListDatastores = "iotanalytics:ListDatastores"
      ListPipelines = "iotanalytics:ListPipelines"
      ListTagsForResource = "iotanalytics:ListTagsForResource"
      PutLoggingOptions = "iotanalytics:PutLoggingOptions"
      RunPipelineActivity = "iotanalytics:RunPipelineActivity"
      SampleChannelData = "iotanalytics:SampleChannelData"
      StartPipelineReprocessing = "iotanalytics:StartPipelineReprocessing"
      TagResource = "iotanalytics:TagResource"
      UntagResource = "iotanalytics:UntagResource"
      UpdateChannel = "iotanalytics:UpdateChannel"
      UpdateDataset = "iotanalytics:UpdateDataset"
      UpdateDatastore = "iotanalytics:UpdateDatastore"
      UpdatePipeline = "iotanalytics:UpdatePipeline"
    }
    iotdeviceadvisor = {
      AllActions = "iotdeviceadvisor:*"
      CreateSuiteDefinition = "iotdeviceadvisor:CreateSuiteDefinition"
      DeleteSuiteDefinition = "iotdeviceadvisor:DeleteSuiteDefinition"
      GetEndpoint = "iotdeviceadvisor:GetEndpoint"
      GetSuiteDefinition = "iotdeviceadvisor:GetSuiteDefinition"
      GetSuiteRun = "iotdeviceadvisor:GetSuiteRun"
      GetSuiteRunReport = "iotdeviceadvisor:GetSuiteRunReport"
      ListSuiteDefinitions = "iotdeviceadvisor:ListSuiteDefinitions"
      ListSuiteRuns = "iotdeviceadvisor:ListSuiteRuns"
      ListTagsForResource = "iotdeviceadvisor:ListTagsForResource"
      StartSuiteRun = "iotdeviceadvisor:StartSuiteRun"
      StopSuiteRun = "iotdeviceadvisor:StopSuiteRun"
      TagResource = "iotdeviceadvisor:TagResource"
      UntagResource = "iotdeviceadvisor:UntagResource"
      UpdateSuiteDefinition = "iotdeviceadvisor:UpdateSuiteDefinition"
    }
    iotevents = {
      AllActions = "iotevents:*"
      BatchAcknowledgeAlarm = "iotevents:BatchAcknowledgeAlarm"
      BatchDeleteDetector = "iotevents:BatchDeleteDetector"
      BatchDisableAlarm = "iotevents:BatchDisableAlarm"
      BatchEnableAlarm = "iotevents:BatchEnableAlarm"
      BatchPutMessage = "iotevents:BatchPutMessage"
      BatchResetAlarm = "iotevents:BatchResetAlarm"
      BatchSnoozeAlarm = "iotevents:BatchSnoozeAlarm"
      BatchUpdateDetector = "iotevents:BatchUpdateDetector"
      CreateAlarmModel = "iotevents:CreateAlarmModel"
      CreateDetectorModel = "iotevents:CreateDetectorModel"
      CreateInput = "iotevents:CreateInput"
      DeleteAlarmModel = "iotevents:DeleteAlarmModel"
      DeleteDetectorModel = "iotevents:DeleteDetectorModel"
      DeleteInput = "iotevents:DeleteInput"
      DescribeAlarm = "iotevents:DescribeAlarm"
      DescribeAlarmModel = "iotevents:DescribeAlarmModel"
      DescribeDetector = "iotevents:DescribeDetector"
      DescribeDetectorModel = "iotevents:DescribeDetectorModel"
      DescribeDetectorModelAnalysis = "iotevents:DescribeDetectorModelAnalysis"
      DescribeInput = "iotevents:DescribeInput"
      DescribeLoggingOptions = "iotevents:DescribeLoggingOptions"
      GetDetectorModelAnalysisResults = "iotevents:GetDetectorModelAnalysisResults"
      ListAlarmModelVersions = "iotevents:ListAlarmModelVersions"
      ListAlarmModels = "iotevents:ListAlarmModels"
      ListAlarms = "iotevents:ListAlarms"
      ListDetectorModelVersions = "iotevents:ListDetectorModelVersions"
      ListDetectorModels = "iotevents:ListDetectorModels"
      ListDetectors = "iotevents:ListDetectors"
      ListInputRoutings = "iotevents:ListInputRoutings"
      ListInputs = "iotevents:ListInputs"
      ListTagsForResource = "iotevents:ListTagsForResource"
      PutLoggingOptions = "iotevents:PutLoggingOptions"
      StartDetectorModelAnalysis = "iotevents:StartDetectorModelAnalysis"
      TagResource = "iotevents:TagResource"
      UntagResource = "iotevents:UntagResource"
      UpdateAlarmModel = "iotevents:UpdateAlarmModel"
      UpdateDetectorModel = "iotevents:UpdateDetectorModel"
      UpdateInput = "iotevents:UpdateInput"
      UpdateInputRouting = "iotevents:UpdateInputRouting"
    }
    iotfleethub = {
      AllActions = "iotfleethub:*"
      CreateApplication = "iotfleethub:CreateApplication"
      DeleteApplication = "iotfleethub:DeleteApplication"
      DescribeApplication = "iotfleethub:DescribeApplication"
      ListApplications = "iotfleethub:ListApplications"
      ListTagsForResource = "iotfleethub:ListTagsForResource"
      TagResource = "iotfleethub:TagResource"
      UntagResource = "iotfleethub:UntagResource"
      UpdateApplication = "iotfleethub:UpdateApplication"
    }
    iotfleetwise = {
      AllActions = "iotfleetwise:*"
      AssociateVehicleFleet = "iotfleetwise:AssociateVehicleFleet"
      BatchCreateVehicle = "iotfleetwise:BatchCreateVehicle"
      BatchUpdateVehicle = "iotfleetwise:BatchUpdateVehicle"
      CreateCampaign = "iotfleetwise:CreateCampaign"
      CreateDecoderManifest = "iotfleetwise:CreateDecoderManifest"
      CreateFleet = "iotfleetwise:CreateFleet"
      CreateModelManifest = "iotfleetwise:CreateModelManifest"
      CreateSignalCatalog = "iotfleetwise:CreateSignalCatalog"
      CreateVehicle = "iotfleetwise:CreateVehicle"
      DeleteCampaign = "iotfleetwise:DeleteCampaign"
      DeleteDecoderManifest = "iotfleetwise:DeleteDecoderManifest"
      DeleteFleet = "iotfleetwise:DeleteFleet"
      DeleteModelManifest = "iotfleetwise:DeleteModelManifest"
      DeleteSignalCatalog = "iotfleetwise:DeleteSignalCatalog"
      DeleteVehicle = "iotfleetwise:DeleteVehicle"
      DisassociateVehicleFleet = "iotfleetwise:DisassociateVehicleFleet"
      GetCampaign = "iotfleetwise:GetCampaign"
      GetDecoderManifest = "iotfleetwise:GetDecoderManifest"
      GetEncryptionConfiguration = "iotfleetwise:GetEncryptionConfiguration"
      GetFleet = "iotfleetwise:GetFleet"
      GetLoggingOptions = "iotfleetwise:GetLoggingOptions"
      GetModelManifest = "iotfleetwise:GetModelManifest"
      GetRegisterAccountStatus = "iotfleetwise:GetRegisterAccountStatus"
      GetSignalCatalog = "iotfleetwise:GetSignalCatalog"
      GetVehicle = "iotfleetwise:GetVehicle"
      GetVehicleStatus = "iotfleetwise:GetVehicleStatus"
      ImportDecoderManifest = "iotfleetwise:ImportDecoderManifest"
      ImportSignalCatalog = "iotfleetwise:ImportSignalCatalog"
      ListCampaigns = "iotfleetwise:ListCampaigns"
      ListDecoderManifestNetworkInterfaces = "iotfleetwise:ListDecoderManifestNetworkInterfaces"
      ListDecoderManifestSignals = "iotfleetwise:ListDecoderManifestSignals"
      ListDecoderManifests = "iotfleetwise:ListDecoderManifests"
      ListFleets = "iotfleetwise:ListFleets"
      ListFleetsForVehicle = "iotfleetwise:ListFleetsForVehicle"
      ListModelManifestNodes = "iotfleetwise:ListModelManifestNodes"
      ListModelManifests = "iotfleetwise:ListModelManifests"
      ListSignalCatalogNodes = "iotfleetwise:ListSignalCatalogNodes"
      ListSignalCatalogs = "iotfleetwise:ListSignalCatalogs"
      ListTagsForResource = "iotfleetwise:ListTagsForResource"
      ListVehicles = "iotfleetwise:ListVehicles"
      ListVehiclesInFleet = "iotfleetwise:ListVehiclesInFleet"
      PutEncryptionConfiguration = "iotfleetwise:PutEncryptionConfiguration"
      PutLoggingOptions = "iotfleetwise:PutLoggingOptions"
      RegisterAccount = "iotfleetwise:RegisterAccount"
      TagResource = "iotfleetwise:TagResource"
      UntagResource = "iotfleetwise:UntagResource"
      UpdateCampaign = "iotfleetwise:UpdateCampaign"
      UpdateDecoderManifest = "iotfleetwise:UpdateDecoderManifest"
      UpdateFleet = "iotfleetwise:UpdateFleet"
      UpdateModelManifest = "iotfleetwise:UpdateModelManifest"
      UpdateSignalCatalog = "iotfleetwise:UpdateSignalCatalog"
      UpdateVehicle = "iotfleetwise:UpdateVehicle"
    }
    iotjobsdata = {
      AllActions = "iotjobsdata:*"
      DescribeJobExecution = "iotjobsdata:DescribeJobExecution"
      GetPendingJobExecutions = "iotjobsdata:GetPendingJobExecutions"
      StartNextPendingJobExecution = "iotjobsdata:StartNextPendingJobExecution"
      UpdateJobExecution = "iotjobsdata:UpdateJobExecution"
    }
    iotroborunner = {
      AllActions = "iotroborunner:*"
      CreateDestination = "iotroborunner:CreateDestination"
      CreateSite = "iotroborunner:CreateSite"
      CreateWorker = "iotroborunner:CreateWorker"
      CreateWorkerFleet = "iotroborunner:CreateWorkerFleet"
      DeleteDestination = "iotroborunner:DeleteDestination"
      DeleteSite = "iotroborunner:DeleteSite"
      DeleteWorker = "iotroborunner:DeleteWorker"
      DeleteWorkerFleet = "iotroborunner:DeleteWorkerFleet"
      GetDestination = "iotroborunner:GetDestination"
      GetSite = "iotroborunner:GetSite"
      GetWorker = "iotroborunner:GetWorker"
      GetWorkerFleet = "iotroborunner:GetWorkerFleet"
      ListDestinations = "iotroborunner:ListDestinations"
      ListSites = "iotroborunner:ListSites"
      ListWorkerFleets = "iotroborunner:ListWorkerFleets"
      ListWorkers = "iotroborunner:ListWorkers"
      UpdateDestination = "iotroborunner:UpdateDestination"
      UpdateSite = "iotroborunner:UpdateSite"
      UpdateWorker = "iotroborunner:UpdateWorker"
      UpdateWorkerFleet = "iotroborunner:UpdateWorkerFleet"
    }
    iotsitewise = {
      AllActions = "iotsitewise:*"
      AssociateAssets = "iotsitewise:AssociateAssets"
      AssociateTimeSeriesToAssetProperty = "iotsitewise:AssociateTimeSeriesToAssetProperty"
      BatchAssociateProjectAssets = "iotsitewise:BatchAssociateProjectAssets"
      BatchDisassociateProjectAssets = "iotsitewise:BatchDisassociateProjectAssets"
      BatchGetAssetPropertyAggregates = "iotsitewise:BatchGetAssetPropertyAggregates"
      BatchGetAssetPropertyValue = "iotsitewise:BatchGetAssetPropertyValue"
      BatchGetAssetPropertyValueHistory = "iotsitewise:BatchGetAssetPropertyValueHistory"
      BatchPutAssetPropertyValue = "iotsitewise:BatchPutAssetPropertyValue"
      CreateAccessPolicy = "iotsitewise:CreateAccessPolicy"
      CreateAsset = "iotsitewise:CreateAsset"
      CreateAssetModel = "iotsitewise:CreateAssetModel"
      CreateAssetModelCompositeModel = "iotsitewise:CreateAssetModelCompositeModel"
      CreateBulkImportJob = "iotsitewise:CreateBulkImportJob"
      CreateDashboard = "iotsitewise:CreateDashboard"
      CreateGateway = "iotsitewise:CreateGateway"
      CreatePortal = "iotsitewise:CreatePortal"
      CreateProject = "iotsitewise:CreateProject"
      DeleteAccessPolicy = "iotsitewise:DeleteAccessPolicy"
      DeleteAsset = "iotsitewise:DeleteAsset"
      DeleteAssetModel = "iotsitewise:DeleteAssetModel"
      DeleteAssetModelCompositeModel = "iotsitewise:DeleteAssetModelCompositeModel"
      DeleteDashboard = "iotsitewise:DeleteDashboard"
      DeleteGateway = "iotsitewise:DeleteGateway"
      DeletePortal = "iotsitewise:DeletePortal"
      DeleteProject = "iotsitewise:DeleteProject"
      DeleteTimeSeries = "iotsitewise:DeleteTimeSeries"
      DescribeAccessPolicy = "iotsitewise:DescribeAccessPolicy"
      DescribeAction = "iotsitewise:DescribeAction"
      DescribeAsset = "iotsitewise:DescribeAsset"
      DescribeAssetCompositeModel = "iotsitewise:DescribeAssetCompositeModel"
      DescribeAssetModel = "iotsitewise:DescribeAssetModel"
      DescribeAssetModelCompositeModel = "iotsitewise:DescribeAssetModelCompositeModel"
      DescribeAssetProperty = "iotsitewise:DescribeAssetProperty"
      DescribeBulkImportJob = "iotsitewise:DescribeBulkImportJob"
      DescribeDashboard = "iotsitewise:DescribeDashboard"
      DescribeDefaultEncryptionConfiguration = "iotsitewise:DescribeDefaultEncryptionConfiguration"
      DescribeGateway = "iotsitewise:DescribeGateway"
      DescribeGatewayCapabilityConfiguration = "iotsitewise:DescribeGatewayCapabilityConfiguration"
      DescribeLoggingOptions = "iotsitewise:DescribeLoggingOptions"
      DescribePortal = "iotsitewise:DescribePortal"
      DescribeProject = "iotsitewise:DescribeProject"
      DescribeStorageConfiguration = "iotsitewise:DescribeStorageConfiguration"
      DescribeTimeSeries = "iotsitewise:DescribeTimeSeries"
      DisassociateAssets = "iotsitewise:DisassociateAssets"
      DisassociateTimeSeriesFromAssetProperty = "iotsitewise:DisassociateTimeSeriesFromAssetProperty"
      EnableSiteWiseIntegration = "iotsitewise:EnableSiteWiseIntegration"
      ExecuteAction = "iotsitewise:ExecuteAction"
      ExecuteQuery = "iotsitewise:ExecuteQuery"
      GetAssetPropertyAggregates = "iotsitewise:GetAssetPropertyAggregates"
      GetAssetPropertyValue = "iotsitewise:GetAssetPropertyValue"
      GetAssetPropertyValueHistory = "iotsitewise:GetAssetPropertyValueHistory"
      GetInterpolatedAssetPropertyValues = "iotsitewise:GetInterpolatedAssetPropertyValues"
      ListAccessPolicies = "iotsitewise:ListAccessPolicies"
      ListActions = "iotsitewise:ListActions"
      ListAssetModelCompositeModels = "iotsitewise:ListAssetModelCompositeModels"
      ListAssetModelProperties = "iotsitewise:ListAssetModelProperties"
      ListAssetModels = "iotsitewise:ListAssetModels"
      ListAssetProperties = "iotsitewise:ListAssetProperties"
      ListAssetRelationships = "iotsitewise:ListAssetRelationships"
      ListAssets = "iotsitewise:ListAssets"
      ListAssociatedAssets = "iotsitewise:ListAssociatedAssets"
      ListBulkImportJobs = "iotsitewise:ListBulkImportJobs"
      ListCompositionRelationships = "iotsitewise:ListCompositionRelationships"
      ListDashboards = "iotsitewise:ListDashboards"
      ListGateways = "iotsitewise:ListGateways"
      ListPortals = "iotsitewise:ListPortals"
      ListProjectAssets = "iotsitewise:ListProjectAssets"
      ListProjects = "iotsitewise:ListProjects"
      ListTagsForResource = "iotsitewise:ListTagsForResource"
      ListTimeSeries = "iotsitewise:ListTimeSeries"
      PutDefaultEncryptionConfiguration = "iotsitewise:PutDefaultEncryptionConfiguration"
      PutLoggingOptions = "iotsitewise:PutLoggingOptions"
      PutStorageConfiguration = "iotsitewise:PutStorageConfiguration"
      TagResource = "iotsitewise:TagResource"
      UntagResource = "iotsitewise:UntagResource"
      UpdateAccessPolicy = "iotsitewise:UpdateAccessPolicy"
      UpdateAsset = "iotsitewise:UpdateAsset"
      UpdateAssetModel = "iotsitewise:UpdateAssetModel"
      UpdateAssetModelCompositeModel = "iotsitewise:UpdateAssetModelCompositeModel"
      UpdateAssetModelPropertyRouting = "iotsitewise:UpdateAssetModelPropertyRouting"
      UpdateAssetProperty = "iotsitewise:UpdateAssetProperty"
      UpdateDashboard = "iotsitewise:UpdateDashboard"
      UpdateGateway = "iotsitewise:UpdateGateway"
      UpdateGatewayCapabilityConfiguration = "iotsitewise:UpdateGatewayCapabilityConfiguration"
      UpdatePortal = "iotsitewise:UpdatePortal"
      UpdateProject = "iotsitewise:UpdateProject"
    }
    iottwinmaker = {
      AllActions = "iottwinmaker:*"
      BatchPutPropertyValues = "iottwinmaker:BatchPutPropertyValues"
      CancelMetadataTransferJob = "iottwinmaker:CancelMetadataTransferJob"
      CreateComponentType = "iottwinmaker:CreateComponentType"
      CreateEntity = "iottwinmaker:CreateEntity"
      CreateMetadataTransferJob = "iottwinmaker:CreateMetadataTransferJob"
      CreateScene = "iottwinmaker:CreateScene"
      CreateSyncJob = "iottwinmaker:CreateSyncJob"
      CreateWorkspace = "iottwinmaker:CreateWorkspace"
      DeleteComponentType = "iottwinmaker:DeleteComponentType"
      DeleteEntity = "iottwinmaker:DeleteEntity"
      DeleteScene = "iottwinmaker:DeleteScene"
      DeleteSyncJob = "iottwinmaker:DeleteSyncJob"
      DeleteWorkspace = "iottwinmaker:DeleteWorkspace"
      ExecuteQuery = "iottwinmaker:ExecuteQuery"
      GetComponentType = "iottwinmaker:GetComponentType"
      GetEntity = "iottwinmaker:GetEntity"
      GetMetadataTransferJob = "iottwinmaker:GetMetadataTransferJob"
      GetPricingPlan = "iottwinmaker:GetPricingPlan"
      GetPropertyValue = "iottwinmaker:GetPropertyValue"
      GetPropertyValueHistory = "iottwinmaker:GetPropertyValueHistory"
      GetScene = "iottwinmaker:GetScene"
      GetSyncJob = "iottwinmaker:GetSyncJob"
      GetWorkspace = "iottwinmaker:GetWorkspace"
      ListComponentTypes = "iottwinmaker:ListComponentTypes"
      ListComponents = "iottwinmaker:ListComponents"
      ListEntities = "iottwinmaker:ListEntities"
      ListMetadataTransferJobs = "iottwinmaker:ListMetadataTransferJobs"
      ListProperties = "iottwinmaker:ListProperties"
      ListScenes = "iottwinmaker:ListScenes"
      ListSyncJobs = "iottwinmaker:ListSyncJobs"
      ListSyncResources = "iottwinmaker:ListSyncResources"
      ListTagsForResource = "iottwinmaker:ListTagsForResource"
      ListWorkspaces = "iottwinmaker:ListWorkspaces"
      TagResource = "iottwinmaker:TagResource"
      UntagResource = "iottwinmaker:UntagResource"
      UpdateComponentType = "iottwinmaker:UpdateComponentType"
      UpdateEntity = "iottwinmaker:UpdateEntity"
      UpdatePricingPlan = "iottwinmaker:UpdatePricingPlan"
      UpdateScene = "iottwinmaker:UpdateScene"
      UpdateWorkspace = "iottwinmaker:UpdateWorkspace"
    }
    iotwireless = {
      AllActions = "iotwireless:*"
      AssociateAwsAccountWithPartnerAccount = "iotwireless:AssociateAwsAccountWithPartnerAccount"
      AssociateMulticastGroupWithFuotaTask = "iotwireless:AssociateMulticastGroupWithFuotaTask"
      AssociateWirelessDeviceWithFuotaTask = "iotwireless:AssociateWirelessDeviceWithFuotaTask"
      AssociateWirelessDeviceWithMulticastGroup = "iotwireless:AssociateWirelessDeviceWithMulticastGroup"
      AssociateWirelessDeviceWithThing = "iotwireless:AssociateWirelessDeviceWithThing"
      AssociateWirelessGatewayWithCertificate = "iotwireless:AssociateWirelessGatewayWithCertificate"
      AssociateWirelessGatewayWithThing = "iotwireless:AssociateWirelessGatewayWithThing"
      CancelMulticastGroupSession = "iotwireless:CancelMulticastGroupSession"
      CreateDestination = "iotwireless:CreateDestination"
      CreateDeviceProfile = "iotwireless:CreateDeviceProfile"
      CreateFuotaTask = "iotwireless:CreateFuotaTask"
      CreateMulticastGroup = "iotwireless:CreateMulticastGroup"
      CreateNetworkAnalyzerConfiguration = "iotwireless:CreateNetworkAnalyzerConfiguration"
      CreateServiceProfile = "iotwireless:CreateServiceProfile"
      CreateWirelessDevice = "iotwireless:CreateWirelessDevice"
      CreateWirelessGateway = "iotwireless:CreateWirelessGateway"
      CreateWirelessGatewayTask = "iotwireless:CreateWirelessGatewayTask"
      CreateWirelessGatewayTaskDefinition = "iotwireless:CreateWirelessGatewayTaskDefinition"
      DeleteDestination = "iotwireless:DeleteDestination"
      DeleteDeviceProfile = "iotwireless:DeleteDeviceProfile"
      DeleteFuotaTask = "iotwireless:DeleteFuotaTask"
      DeleteMulticastGroup = "iotwireless:DeleteMulticastGroup"
      DeleteNetworkAnalyzerConfiguration = "iotwireless:DeleteNetworkAnalyzerConfiguration"
      DeleteQueuedMessages = "iotwireless:DeleteQueuedMessages"
      DeleteServiceProfile = "iotwireless:DeleteServiceProfile"
      DeleteWirelessDevice = "iotwireless:DeleteWirelessDevice"
      DeleteWirelessDeviceImportTask = "iotwireless:DeleteWirelessDeviceImportTask"
      DeleteWirelessGateway = "iotwireless:DeleteWirelessGateway"
      DeleteWirelessGatewayTask = "iotwireless:DeleteWirelessGatewayTask"
      DeleteWirelessGatewayTaskDefinition = "iotwireless:DeleteWirelessGatewayTaskDefinition"
      DeregisterWirelessDevice = "iotwireless:DeregisterWirelessDevice"
      DisassociateAwsAccountFromPartnerAccount = "iotwireless:DisassociateAwsAccountFromPartnerAccount"
      DisassociateMulticastGroupFromFuotaTask = "iotwireless:DisassociateMulticastGroupFromFuotaTask"
      DisassociateWirelessDeviceFromFuotaTask = "iotwireless:DisassociateWirelessDeviceFromFuotaTask"
      DisassociateWirelessDeviceFromMulticastGroup = "iotwireless:DisassociateWirelessDeviceFromMulticastGroup"
      DisassociateWirelessDeviceFromThing = "iotwireless:DisassociateWirelessDeviceFromThing"
      DisassociateWirelessGatewayFromCertificate = "iotwireless:DisassociateWirelessGatewayFromCertificate"
      DisassociateWirelessGatewayFromThing = "iotwireless:DisassociateWirelessGatewayFromThing"
      GetDestination = "iotwireless:GetDestination"
      GetDeviceProfile = "iotwireless:GetDeviceProfile"
      GetEventConfigurationByResourceTypes = "iotwireless:GetEventConfigurationByResourceTypes"
      GetFuotaTask = "iotwireless:GetFuotaTask"
      GetLogLevelsByResourceTypes = "iotwireless:GetLogLevelsByResourceTypes"
      GetMetricConfiguration = "iotwireless:GetMetricConfiguration"
      GetMetrics = "iotwireless:GetMetrics"
      GetMulticastGroup = "iotwireless:GetMulticastGroup"
      GetMulticastGroupSession = "iotwireless:GetMulticastGroupSession"
      GetNetworkAnalyzerConfiguration = "iotwireless:GetNetworkAnalyzerConfiguration"
      GetPartnerAccount = "iotwireless:GetPartnerAccount"
      GetPosition = "iotwireless:GetPosition"
      GetPositionConfiguration = "iotwireless:GetPositionConfiguration"
      GetPositionEstimate = "iotwireless:GetPositionEstimate"
      GetResourceEventConfiguration = "iotwireless:GetResourceEventConfiguration"
      GetResourceLogLevel = "iotwireless:GetResourceLogLevel"
      GetResourcePosition = "iotwireless:GetResourcePosition"
      GetServiceEndpoint = "iotwireless:GetServiceEndpoint"
      GetServiceProfile = "iotwireless:GetServiceProfile"
      GetWirelessDevice = "iotwireless:GetWirelessDevice"
      GetWirelessDeviceImportTask = "iotwireless:GetWirelessDeviceImportTask"
      GetWirelessDeviceStatistics = "iotwireless:GetWirelessDeviceStatistics"
      GetWirelessGateway = "iotwireless:GetWirelessGateway"
      GetWirelessGatewayCertificate = "iotwireless:GetWirelessGatewayCertificate"
      GetWirelessGatewayFirmwareInformation = "iotwireless:GetWirelessGatewayFirmwareInformation"
      GetWirelessGatewayStatistics = "iotwireless:GetWirelessGatewayStatistics"
      GetWirelessGatewayTask = "iotwireless:GetWirelessGatewayTask"
      GetWirelessGatewayTaskDefinition = "iotwireless:GetWirelessGatewayTaskDefinition"
      ListDestinations = "iotwireless:ListDestinations"
      ListDeviceProfiles = "iotwireless:ListDeviceProfiles"
      ListDevicesForWirelessDeviceImportTask = "iotwireless:ListDevicesForWirelessDeviceImportTask"
      ListEventConfigurations = "iotwireless:ListEventConfigurations"
      ListFuotaTasks = "iotwireless:ListFuotaTasks"
      ListMulticastGroups = "iotwireless:ListMulticastGroups"
      ListMulticastGroupsByFuotaTask = "iotwireless:ListMulticastGroupsByFuotaTask"
      ListNetworkAnalyzerConfigurations = "iotwireless:ListNetworkAnalyzerConfigurations"
      ListPartnerAccounts = "iotwireless:ListPartnerAccounts"
      ListPositionConfigurations = "iotwireless:ListPositionConfigurations"
      ListQueuedMessages = "iotwireless:ListQueuedMessages"
      ListServiceProfiles = "iotwireless:ListServiceProfiles"
      ListTagsForResource = "iotwireless:ListTagsForResource"
      ListWirelessDeviceImportTasks = "iotwireless:ListWirelessDeviceImportTasks"
      ListWirelessDevices = "iotwireless:ListWirelessDevices"
      ListWirelessGatewayTaskDefinitions = "iotwireless:ListWirelessGatewayTaskDefinitions"
      ListWirelessGateways = "iotwireless:ListWirelessGateways"
      PutPositionConfiguration = "iotwireless:PutPositionConfiguration"
      PutResourceLogLevel = "iotwireless:PutResourceLogLevel"
      ResetAllResourceLogLevels = "iotwireless:ResetAllResourceLogLevels"
      ResetResourceLogLevel = "iotwireless:ResetResourceLogLevel"
      SendDataToMulticastGroup = "iotwireless:SendDataToMulticastGroup"
      SendDataToWirelessDevice = "iotwireless:SendDataToWirelessDevice"
      StartBulkAssociateWirelessDeviceWithMulticastGroup = "iotwireless:StartBulkAssociateWirelessDeviceWithMulticastGroup"
      StartBulkDisassociateWirelessDeviceFromMulticastGroup = "iotwireless:StartBulkDisassociateWirelessDeviceFromMulticastGroup"
      StartFuotaTask = "iotwireless:StartFuotaTask"
      StartMulticastGroupSession = "iotwireless:StartMulticastGroupSession"
      StartNetworkAnalyzerStream = "iotwireless:StartNetworkAnalyzerStream"
      StartSingleWirelessDeviceImportTask = "iotwireless:StartSingleWirelessDeviceImportTask"
      StartWirelessDeviceImportTask = "iotwireless:StartWirelessDeviceImportTask"
      TagResource = "iotwireless:TagResource"
      TestWirelessDevice = "iotwireless:TestWirelessDevice"
      UntagResource = "iotwireless:UntagResource"
      UpdateDestination = "iotwireless:UpdateDestination"
      UpdateEventConfigurationByResourceTypes = "iotwireless:UpdateEventConfigurationByResourceTypes"
      UpdateFuotaTask = "iotwireless:UpdateFuotaTask"
      UpdateLogLevelsByResourceTypes = "iotwireless:UpdateLogLevelsByResourceTypes"
      UpdateMetricConfiguration = "iotwireless:UpdateMetricConfiguration"
      UpdateMulticastGroup = "iotwireless:UpdateMulticastGroup"
      UpdateNetworkAnalyzerConfiguration = "iotwireless:UpdateNetworkAnalyzerConfiguration"
      UpdatePartnerAccount = "iotwireless:UpdatePartnerAccount"
      UpdatePosition = "iotwireless:UpdatePosition"
      UpdateResourceEventConfiguration = "iotwireless:UpdateResourceEventConfiguration"
      UpdateResourcePosition = "iotwireless:UpdateResourcePosition"
      UpdateWirelessDevice = "iotwireless:UpdateWirelessDevice"
      UpdateWirelessDeviceImportTask = "iotwireless:UpdateWirelessDeviceImportTask"
      UpdateWirelessGateway = "iotwireless:UpdateWirelessGateway"
    }
    iq-permission = {
      AllActions = "iq-permission:*"
      ApproveAccessGrant = "iq-permission:ApproveAccessGrant"
      ApprovePermissionRequest = "iq-permission:ApprovePermissionRequest"
      AssumePermissionRole = "iq-permission:AssumePermissionRole"
      CreatePermissionRequest = "iq-permission:CreatePermissionRequest"
      GetPermissionRequest = "iq-permission:GetPermissionRequest"
      ListPermissionRequests = "iq-permission:ListPermissionRequests"
      RejectPermissionRequest = "iq-permission:RejectPermissionRequest"
      RevokePermissionRequest = "iq-permission:RevokePermissionRequest"
      WithdrawPermissionRequest = "iq-permission:WithdrawPermissionRequest"
    }
    iq = {
      AllActions = "iq:*"
      AcceptCall = "iq:AcceptCall"
      ApprovePaymentRequest = "iq:ApprovePaymentRequest"
      ApproveProposal = "iq:ApproveProposal"
      ArchiveConversation = "iq:ArchiveConversation"
      CompleteProposal = "iq:CompleteProposal"
      CreateConversation = "iq:CreateConversation"
      CreateExpert = "iq:CreateExpert"
      CreateListing = "iq:CreateListing"
      CreateMilestoneProposal = "iq:CreateMilestoneProposal"
      CreatePaymentRequest = "iq:CreatePaymentRequest"
      CreateProject = "iq:CreateProject"
      CreateRequest = "iq:CreateRequest"
      CreateScheduledProposal = "iq:CreateScheduledProposal"
      CreateSeller = "iq:CreateSeller"
      CreateUpfrontProposal = "iq:CreateUpfrontProposal"
      DeclineCall = "iq:DeclineCall"
      DeleteAttachment = "iq:DeleteAttachment"
      DisableIndividualPublicProfile = "iq:DisableIndividualPublicProfile"
      DownloadAttachment = "iq:DownloadAttachment"
      EnableIndividualPublicProfile = "iq:EnableIndividualPublicProfile"
      EndCall = "iq:EndCall"
      GetBuyer = "iq:GetBuyer"
      GetCall = "iq:GetCall"
      GetChatInfo = "iq:GetChatInfo"
      GetChatMessages = "iq:GetChatMessages"
      GetChatToken = "iq:GetChatToken"
      GetCompanyChatMessages = "iq:GetCompanyChatMessages"
      GetCompanyProfile = "iq:GetCompanyProfile"
      GetConversation = "iq:GetConversation"
      GetExpert = "iq:GetExpert"
      GetListing = "iq:GetListing"
      GetMarketplaceSeller = "iq:GetMarketplaceSeller"
      GetPaymentRequest = "iq:GetPaymentRequest"
      GetProposal = "iq:GetProposal"
      GetRequest = "iq:GetRequest"
      GetReview = "iq:GetReview"
      HideRequest = "iq:HideRequest"
      InitiateCall = "iq:InitiateCall"
      LinkAwsCertification = "iq:LinkAwsCertification"
      ListAttachments = "iq:ListAttachments"
      ListConversations = "iq:ListConversations"
      ListExpertAccessLogs = "iq:ListExpertAccessLogs"
      ListListings = "iq:ListListings"
      ListPaymentRequests = "iq:ListPaymentRequests"
      ListProposals = "iq:ListProposals"
      ListRequests = "iq:ListRequests"
      ListReviews = "iq:ListReviews"
      MarkChatMessageRead = "iq:MarkChatMessageRead"
      RejectPaymentRequest = "iq:RejectPaymentRequest"
      RejectProposal = "iq:RejectProposal"
      SendCompanyChatMessage = "iq:SendCompanyChatMessage"
      SendIndividualChatMessage = "iq:SendIndividualChatMessage"
      UnarchiveConversation = "iq:UnarchiveConversation"
      UnlinkAwsCertification = "iq:UnlinkAwsCertification"
      UpdateCompanyProfile = "iq:UpdateCompanyProfile"
      UpdateConversationMembers = "iq:UpdateConversationMembers"
      UpdateExpert = "iq:UpdateExpert"
      UpdateListing = "iq:UpdateListing"
      UpdateRequest = "iq:UpdateRequest"
      UploadAttachment = "iq:UploadAttachment"
      WithdrawPaymentRequest = "iq:WithdrawPaymentRequest"
      WithdrawProposal = "iq:WithdrawProposal"
      WriteReview = "iq:WriteReview"
    }
    ivs = {
      AllActions = "ivs:*"
      BatchGetChannel = "ivs:BatchGetChannel"
      BatchGetStreamKey = "ivs:BatchGetStreamKey"
      BatchStartViewerSessionRevocation = "ivs:BatchStartViewerSessionRevocation"
      CreateChannel = "ivs:CreateChannel"
      CreateEncoderConfiguration = "ivs:CreateEncoderConfiguration"
      CreateParticipantToken = "ivs:CreateParticipantToken"
      CreatePlaybackRestrictionPolicy = "ivs:CreatePlaybackRestrictionPolicy"
      CreateRecordingConfiguration = "ivs:CreateRecordingConfiguration"
      CreateStage = "ivs:CreateStage"
      CreateStorageConfiguration = "ivs:CreateStorageConfiguration"
      CreateStreamKey = "ivs:CreateStreamKey"
      DeleteChannel = "ivs:DeleteChannel"
      DeleteEncoderConfiguration = "ivs:DeleteEncoderConfiguration"
      DeletePlaybackKeyPair = "ivs:DeletePlaybackKeyPair"
      DeletePlaybackRestrictionPolicy = "ivs:DeletePlaybackRestrictionPolicy"
      DeleteRecordingConfiguration = "ivs:DeleteRecordingConfiguration"
      DeleteStage = "ivs:DeleteStage"
      DeleteStorageConfiguration = "ivs:DeleteStorageConfiguration"
      DeleteStreamKey = "ivs:DeleteStreamKey"
      DisconnectParticipant = "ivs:DisconnectParticipant"
      GetChannel = "ivs:GetChannel"
      GetComposition = "ivs:GetComposition"
      GetEncoderConfiguration = "ivs:GetEncoderConfiguration"
      GetParticipant = "ivs:GetParticipant"
      GetPlaybackKeyPair = "ivs:GetPlaybackKeyPair"
      GetPlaybackRestrictionPolicy = "ivs:GetPlaybackRestrictionPolicy"
      GetRecordingConfiguration = "ivs:GetRecordingConfiguration"
      GetStage = "ivs:GetStage"
      GetStageSession = "ivs:GetStageSession"
      GetStorageConfiguration = "ivs:GetStorageConfiguration"
      GetStream = "ivs:GetStream"
      GetStreamKey = "ivs:GetStreamKey"
      GetStreamSession = "ivs:GetStreamSession"
      ImportPlaybackKeyPair = "ivs:ImportPlaybackKeyPair"
      ListChannels = "ivs:ListChannels"
      ListCompositions = "ivs:ListCompositions"
      ListEncoderConfigurations = "ivs:ListEncoderConfigurations"
      ListParticipantEvents = "ivs:ListParticipantEvents"
      ListParticipants = "ivs:ListParticipants"
      ListPlaybackKeyPairs = "ivs:ListPlaybackKeyPairs"
      ListPlaybackRestrictionPolicies = "ivs:ListPlaybackRestrictionPolicies"
      ListRecordingConfigurations = "ivs:ListRecordingConfigurations"
      ListStageSessions = "ivs:ListStageSessions"
      ListStages = "ivs:ListStages"
      ListStorageConfigurations = "ivs:ListStorageConfigurations"
      ListStreamKeys = "ivs:ListStreamKeys"
      ListStreamSessions = "ivs:ListStreamSessions"
      ListStreams = "ivs:ListStreams"
      ListTagsForResource = "ivs:ListTagsForResource"
      PutMetadata = "ivs:PutMetadata"
      StartComposition = "ivs:StartComposition"
      StartViewerSessionRevocation = "ivs:StartViewerSessionRevocation"
      StopComposition = "ivs:StopComposition"
      StopStream = "ivs:StopStream"
      TagResource = "ivs:TagResource"
      UntagResource = "ivs:UntagResource"
      UpdateChannel = "ivs:UpdateChannel"
      UpdatePlaybackRestrictionPolicy = "ivs:UpdatePlaybackRestrictionPolicy"
      UpdateStage = "ivs:UpdateStage"
    }
    ivschat = {
      AllActions = "ivschat:*"
      CreateChatToken = "ivschat:CreateChatToken"
      CreateLoggingConfiguration = "ivschat:CreateLoggingConfiguration"
      CreateRoom = "ivschat:CreateRoom"
      DeleteLoggingConfiguration = "ivschat:DeleteLoggingConfiguration"
      DeleteMessage = "ivschat:DeleteMessage"
      DeleteRoom = "ivschat:DeleteRoom"
      DisconnectUser = "ivschat:DisconnectUser"
      GetLoggingConfiguration = "ivschat:GetLoggingConfiguration"
      GetRoom = "ivschat:GetRoom"
      ListLoggingConfigurations = "ivschat:ListLoggingConfigurations"
      ListRooms = "ivschat:ListRooms"
      ListTagsForResource = "ivschat:ListTagsForResource"
      SendEvent = "ivschat:SendEvent"
      TagResource = "ivschat:TagResource"
      UntagResource = "ivschat:UntagResource"
      UpdateLoggingConfiguration = "ivschat:UpdateLoggingConfiguration"
      UpdateRoom = "ivschat:UpdateRoom"
    }
    kafka-cluster = {
      AllActions = "kafka-cluster:*"
      AlterCluster = "kafka-cluster:AlterCluster"
      AlterClusterDynamicConfiguration = "kafka-cluster:AlterClusterDynamicConfiguration"
      AlterGroup = "kafka-cluster:AlterGroup"
      AlterTopic = "kafka-cluster:AlterTopic"
      AlterTopicDynamicConfiguration = "kafka-cluster:AlterTopicDynamicConfiguration"
      AlterTransactionalId = "kafka-cluster:AlterTransactionalId"
      Connect = "kafka-cluster:Connect"
      CreateTopic = "kafka-cluster:CreateTopic"
      DeleteGroup = "kafka-cluster:DeleteGroup"
      DeleteTopic = "kafka-cluster:DeleteTopic"
      DescribeCluster = "kafka-cluster:DescribeCluster"
      DescribeClusterDynamicConfiguration = "kafka-cluster:DescribeClusterDynamicConfiguration"
      DescribeGroup = "kafka-cluster:DescribeGroup"
      DescribeTopic = "kafka-cluster:DescribeTopic"
      DescribeTopicDynamicConfiguration = "kafka-cluster:DescribeTopicDynamicConfiguration"
      DescribeTransactionalId = "kafka-cluster:DescribeTransactionalId"
      ReadData = "kafka-cluster:ReadData"
      WriteData = "kafka-cluster:WriteData"
      WriteDataIdempotently = "kafka-cluster:WriteDataIdempotently"
    }
    kafka = {
      AllActions = "kafka:*"
      BatchAssociateScramSecret = "kafka:BatchAssociateScramSecret"
      BatchDisassociateScramSecret = "kafka:BatchDisassociateScramSecret"
      CreateCluster = "kafka:CreateCluster"
      CreateClusterV2 = "kafka:CreateClusterV2"
      CreateConfiguration = "kafka:CreateConfiguration"
      CreateReplicator = "kafka:CreateReplicator"
      CreateVpcConnection = "kafka:CreateVpcConnection"
      DeleteCluster = "kafka:DeleteCluster"
      DeleteClusterPolicy = "kafka:DeleteClusterPolicy"
      DeleteConfiguration = "kafka:DeleteConfiguration"
      DeleteReplicator = "kafka:DeleteReplicator"
      DeleteVpcConnection = "kafka:DeleteVpcConnection"
      DescribeCluster = "kafka:DescribeCluster"
      DescribeClusterOperation = "kafka:DescribeClusterOperation"
      DescribeClusterOperationV2 = "kafka:DescribeClusterOperationV2"
      DescribeClusterV2 = "kafka:DescribeClusterV2"
      DescribeConfiguration = "kafka:DescribeConfiguration"
      DescribeConfigurationRevision = "kafka:DescribeConfigurationRevision"
      DescribeReplicator = "kafka:DescribeReplicator"
      DescribeVpcConnection = "kafka:DescribeVpcConnection"
      GetBootstrapBrokers = "kafka:GetBootstrapBrokers"
      GetClusterPolicy = "kafka:GetClusterPolicy"
      GetCompatibleKafkaVersions = "kafka:GetCompatibleKafkaVersions"
      ListClientVpcConnections = "kafka:ListClientVpcConnections"
      ListClusterOperations = "kafka:ListClusterOperations"
      ListClusterOperationsV2 = "kafka:ListClusterOperationsV2"
      ListClusters = "kafka:ListClusters"
      ListClustersV2 = "kafka:ListClustersV2"
      ListConfigurationRevisions = "kafka:ListConfigurationRevisions"
      ListConfigurations = "kafka:ListConfigurations"
      ListKafkaVersions = "kafka:ListKafkaVersions"
      ListNodes = "kafka:ListNodes"
      ListReplicators = "kafka:ListReplicators"
      ListScramSecrets = "kafka:ListScramSecrets"
      ListTagsForResource = "kafka:ListTagsForResource"
      ListVpcConnections = "kafka:ListVpcConnections"
      PutClusterPolicy = "kafka:PutClusterPolicy"
      RebootBroker = "kafka:RebootBroker"
      RejectClientVpcConnection = "kafka:RejectClientVpcConnection"
      TagResource = "kafka:TagResource"
      UntagResource = "kafka:UntagResource"
      UpdateBrokerCount = "kafka:UpdateBrokerCount"
      UpdateBrokerStorage = "kafka:UpdateBrokerStorage"
      UpdateBrokerType = "kafka:UpdateBrokerType"
      UpdateClusterConfiguration = "kafka:UpdateClusterConfiguration"
      UpdateClusterKafkaVersion = "kafka:UpdateClusterKafkaVersion"
      UpdateConfiguration = "kafka:UpdateConfiguration"
      UpdateConnectivity = "kafka:UpdateConnectivity"
      UpdateMonitoring = "kafka:UpdateMonitoring"
      UpdateReplicationInfo = "kafka:UpdateReplicationInfo"
      UpdateSecurity = "kafka:UpdateSecurity"
      UpdateStorage = "kafka:UpdateStorage"
    }
    kafkaconnect = {
      AllActions = "kafkaconnect:*"
      CreateConnector = "kafkaconnect:CreateConnector"
      CreateCustomPlugin = "kafkaconnect:CreateCustomPlugin"
      CreateWorkerConfiguration = "kafkaconnect:CreateWorkerConfiguration"
      DeleteConnector = "kafkaconnect:DeleteConnector"
      DeleteCustomPlugin = "kafkaconnect:DeleteCustomPlugin"
      DeleteWorkerConfiguration = "kafkaconnect:DeleteWorkerConfiguration"
      DescribeConnector = "kafkaconnect:DescribeConnector"
      DescribeCustomPlugin = "kafkaconnect:DescribeCustomPlugin"
      DescribeWorkerConfiguration = "kafkaconnect:DescribeWorkerConfiguration"
      ListConnectors = "kafkaconnect:ListConnectors"
      ListCustomPlugins = "kafkaconnect:ListCustomPlugins"
      ListTagsForResource = "kafkaconnect:ListTagsForResource"
      ListWorkerConfigurations = "kafkaconnect:ListWorkerConfigurations"
      TagResource = "kafkaconnect:TagResource"
      UntagResource = "kafkaconnect:UntagResource"
      UpdateConnector = "kafkaconnect:UpdateConnector"
    }
    kendra-ranking = {
      AllActions = "kendra-ranking:*"
      CreateRescoreExecutionPlan = "kendra-ranking:CreateRescoreExecutionPlan"
      DeleteRescoreExecutionPlan = "kendra-ranking:DeleteRescoreExecutionPlan"
      DescribeRescoreExecutionPlan = "kendra-ranking:DescribeRescoreExecutionPlan"
      ListRescoreExecutionPlans = "kendra-ranking:ListRescoreExecutionPlans"
      ListTagsForResource = "kendra-ranking:ListTagsForResource"
      Rescore = "kendra-ranking:Rescore"
      TagResource = "kendra-ranking:TagResource"
      UntagResource = "kendra-ranking:UntagResource"
      UpdateRescoreExecutionPlan = "kendra-ranking:UpdateRescoreExecutionPlan"
    }
    kendra = {
      AllActions = "kendra:*"
      AssociateEntitiesToExperience = "kendra:AssociateEntitiesToExperience"
      AssociatePersonasToEntities = "kendra:AssociatePersonasToEntities"
      BatchDeleteDocument = "kendra:BatchDeleteDocument"
      BatchDeleteFeaturedResultsSet = "kendra:BatchDeleteFeaturedResultsSet"
      BatchGetDocumentStatus = "kendra:BatchGetDocumentStatus"
      BatchPutDocument = "kendra:BatchPutDocument"
      ClearQuerySuggestions = "kendra:ClearQuerySuggestions"
      CreateAccessControlConfiguration = "kendra:CreateAccessControlConfiguration"
      CreateDataSource = "kendra:CreateDataSource"
      CreateExperience = "kendra:CreateExperience"
      CreateFaq = "kendra:CreateFaq"
      CreateFeaturedResultsSet = "kendra:CreateFeaturedResultsSet"
      CreateIndex = "kendra:CreateIndex"
      CreateQuerySuggestionsBlockList = "kendra:CreateQuerySuggestionsBlockList"
      CreateThesaurus = "kendra:CreateThesaurus"
      DeleteAccessControlConfiguration = "kendra:DeleteAccessControlConfiguration"
      DeleteDataSource = "kendra:DeleteDataSource"
      DeleteExperience = "kendra:DeleteExperience"
      DeleteFaq = "kendra:DeleteFaq"
      DeleteIndex = "kendra:DeleteIndex"
      DeletePrincipalMapping = "kendra:DeletePrincipalMapping"
      DeleteQuerySuggestionsBlockList = "kendra:DeleteQuerySuggestionsBlockList"
      DeleteThesaurus = "kendra:DeleteThesaurus"
      DescribeAccessControlConfiguration = "kendra:DescribeAccessControlConfiguration"
      DescribeDataSource = "kendra:DescribeDataSource"
      DescribeExperience = "kendra:DescribeExperience"
      DescribeFaq = "kendra:DescribeFaq"
      DescribeFeaturedResultsSet = "kendra:DescribeFeaturedResultsSet"
      DescribeIndex = "kendra:DescribeIndex"
      DescribePrincipalMapping = "kendra:DescribePrincipalMapping"
      DescribeQuerySuggestionsBlockList = "kendra:DescribeQuerySuggestionsBlockList"
      DescribeQuerySuggestionsConfig = "kendra:DescribeQuerySuggestionsConfig"
      DescribeThesaurus = "kendra:DescribeThesaurus"
      DisassociateEntitiesFromExperience = "kendra:DisassociateEntitiesFromExperience"
      DisassociatePersonasFromEntities = "kendra:DisassociatePersonasFromEntities"
      GetQuerySuggestions = "kendra:GetQuerySuggestions"
      GetSnapshots = "kendra:GetSnapshots"
      ListAccessControlConfigurations = "kendra:ListAccessControlConfigurations"
      ListDataSourceSyncJobs = "kendra:ListDataSourceSyncJobs"
      ListDataSources = "kendra:ListDataSources"
      ListEntityPersonas = "kendra:ListEntityPersonas"
      ListExperienceEntities = "kendra:ListExperienceEntities"
      ListExperiences = "kendra:ListExperiences"
      ListFaqs = "kendra:ListFaqs"
      ListFeaturedResultsSets = "kendra:ListFeaturedResultsSets"
      ListGroupsOlderThanOrderingId = "kendra:ListGroupsOlderThanOrderingId"
      ListIndices = "kendra:ListIndices"
      ListQuerySuggestionsBlockLists = "kendra:ListQuerySuggestionsBlockLists"
      ListTagsForResource = "kendra:ListTagsForResource"
      ListThesauri = "kendra:ListThesauri"
      PutPrincipalMapping = "kendra:PutPrincipalMapping"
      Query = "kendra:Query"
      Retrieve = "kendra:Retrieve"
      StartDataSourceSyncJob = "kendra:StartDataSourceSyncJob"
      StopDataSourceSyncJob = "kendra:StopDataSourceSyncJob"
      SubmitFeedback = "kendra:SubmitFeedback"
      TagResource = "kendra:TagResource"
      UntagResource = "kendra:UntagResource"
      UpdateAccessControlConfiguration = "kendra:UpdateAccessControlConfiguration"
      UpdateDataSource = "kendra:UpdateDataSource"
      UpdateExperience = "kendra:UpdateExperience"
      UpdateFeaturedResultsSet = "kendra:UpdateFeaturedResultsSet"
      UpdateIndex = "kendra:UpdateIndex"
      UpdateQuerySuggestionsBlockList = "kendra:UpdateQuerySuggestionsBlockList"
      UpdateQuerySuggestionsConfig = "kendra:UpdateQuerySuggestionsConfig"
      UpdateThesaurus = "kendra:UpdateThesaurus"
    }
    kinesis = {
      AllActions = "kinesis:*"
      AddTagsToStream = "kinesis:AddTagsToStream"
      CreateStream = "kinesis:CreateStream"
      DecreaseStreamRetentionPeriod = "kinesis:DecreaseStreamRetentionPeriod"
      DeleteResourcePolicy = "kinesis:DeleteResourcePolicy"
      DeleteStream = "kinesis:DeleteStream"
      DeregisterStreamConsumer = "kinesis:DeregisterStreamConsumer"
      DescribeLimits = "kinesis:DescribeLimits"
      DescribeStream = "kinesis:DescribeStream"
      DescribeStreamConsumer = "kinesis:DescribeStreamConsumer"
      DescribeStreamSummary = "kinesis:DescribeStreamSummary"
      DisableEnhancedMonitoring = "kinesis:DisableEnhancedMonitoring"
      EnableEnhancedMonitoring = "kinesis:EnableEnhancedMonitoring"
      GetRecords = "kinesis:GetRecords"
      GetResourcePolicy = "kinesis:GetResourcePolicy"
      GetShardIterator = "kinesis:GetShardIterator"
      IncreaseStreamRetentionPeriod = "kinesis:IncreaseStreamRetentionPeriod"
      ListShards = "kinesis:ListShards"
      ListStreamConsumers = "kinesis:ListStreamConsumers"
      ListStreams = "kinesis:ListStreams"
      ListTagsForStream = "kinesis:ListTagsForStream"
      MergeShards = "kinesis:MergeShards"
      PutRecord = "kinesis:PutRecord"
      PutRecords = "kinesis:PutRecords"
      PutResourcePolicy = "kinesis:PutResourcePolicy"
      RegisterStreamConsumer = "kinesis:RegisterStreamConsumer"
      RemoveTagsFromStream = "kinesis:RemoveTagsFromStream"
      SplitShard = "kinesis:SplitShard"
      StartStreamEncryption = "kinesis:StartStreamEncryption"
      StopStreamEncryption = "kinesis:StopStreamEncryption"
      SubscribeToShard = "kinesis:SubscribeToShard"
      UpdateShardCount = "kinesis:UpdateShardCount"
      UpdateStreamMode = "kinesis:UpdateStreamMode"
    }
    kinesisanalytics = {
      AllActions = "kinesisanalytics:*"
      AddApplicationCloudWatchLoggingOption = "kinesisanalytics:AddApplicationCloudWatchLoggingOption"
      AddApplicationInput = "kinesisanalytics:AddApplicationInput"
      AddApplicationInputProcessingConfiguration = "kinesisanalytics:AddApplicationInputProcessingConfiguration"
      AddApplicationOutput = "kinesisanalytics:AddApplicationOutput"
      AddApplicationReferenceDataSource = "kinesisanalytics:AddApplicationReferenceDataSource"
      AddApplicationVpcConfiguration = "kinesisanalytics:AddApplicationVpcConfiguration"
      CreateApplication = "kinesisanalytics:CreateApplication"
      CreateApplicationPresignedUrl = "kinesisanalytics:CreateApplicationPresignedUrl"
      CreateApplicationSnapshot = "kinesisanalytics:CreateApplicationSnapshot"
      DeleteApplication = "kinesisanalytics:DeleteApplication"
      DeleteApplicationCloudWatchLoggingOption = "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption"
      DeleteApplicationInputProcessingConfiguration = "kinesisanalytics:DeleteApplicationInputProcessingConfiguration"
      DeleteApplicationOutput = "kinesisanalytics:DeleteApplicationOutput"
      DeleteApplicationReferenceDataSource = "kinesisanalytics:DeleteApplicationReferenceDataSource"
      DeleteApplicationSnapshot = "kinesisanalytics:DeleteApplicationSnapshot"
      DeleteApplicationVpcConfiguration = "kinesisanalytics:DeleteApplicationVpcConfiguration"
      DescribeApplication = "kinesisanalytics:DescribeApplication"
      DescribeApplicationSnapshot = "kinesisanalytics:DescribeApplicationSnapshot"
      DescribeApplicationVersion = "kinesisanalytics:DescribeApplicationVersion"
      DiscoverInputSchema = "kinesisanalytics:DiscoverInputSchema"
      GetApplicationState = "kinesisanalytics:GetApplicationState"
      ListApplicationSnapshots = "kinesisanalytics:ListApplicationSnapshots"
      ListApplicationVersions = "kinesisanalytics:ListApplicationVersions"
      ListApplications = "kinesisanalytics:ListApplications"
      ListTagsForResource = "kinesisanalytics:ListTagsForResource"
      RollbackApplication = "kinesisanalytics:RollbackApplication"
      StartApplication = "kinesisanalytics:StartApplication"
      StopApplication = "kinesisanalytics:StopApplication"
      TagResource = "kinesisanalytics:TagResource"
      UntagResource = "kinesisanalytics:UntagResource"
      UpdateApplication = "kinesisanalytics:UpdateApplication"
      UpdateApplicationMaintenanceConfiguration = "kinesisanalytics:UpdateApplicationMaintenanceConfiguration"
    }
    kinesisvideo = {
      AllActions = "kinesisvideo:*"
      ConnectAsMaster = "kinesisvideo:ConnectAsMaster"
      ConnectAsViewer = "kinesisvideo:ConnectAsViewer"
      CreateSignalingChannel = "kinesisvideo:CreateSignalingChannel"
      CreateStream = "kinesisvideo:CreateStream"
      DeleteEdgeConfiguration = "kinesisvideo:DeleteEdgeConfiguration"
      DeleteSignalingChannel = "kinesisvideo:DeleteSignalingChannel"
      DeleteStream = "kinesisvideo:DeleteStream"
      DescribeEdgeConfiguration = "kinesisvideo:DescribeEdgeConfiguration"
      DescribeImageGenerationConfiguration = "kinesisvideo:DescribeImageGenerationConfiguration"
      DescribeMappedResourceConfiguration = "kinesisvideo:DescribeMappedResourceConfiguration"
      DescribeMediaStorageConfiguration = "kinesisvideo:DescribeMediaStorageConfiguration"
      DescribeNotificationConfiguration = "kinesisvideo:DescribeNotificationConfiguration"
      DescribeSignalingChannel = "kinesisvideo:DescribeSignalingChannel"
      DescribeStream = "kinesisvideo:DescribeStream"
      GetClip = "kinesisvideo:GetClip"
      GetDASHStreamingSessionURL = "kinesisvideo:GetDASHStreamingSessionURL"
      GetDataEndpoint = "kinesisvideo:GetDataEndpoint"
      GetHLSStreamingSessionURL = "kinesisvideo:GetHLSStreamingSessionURL"
      GetIceServerConfig = "kinesisvideo:GetIceServerConfig"
      GetImages = "kinesisvideo:GetImages"
      GetMedia = "kinesisvideo:GetMedia"
      GetMediaForFragmentList = "kinesisvideo:GetMediaForFragmentList"
      GetSignalingChannelEndpoint = "kinesisvideo:GetSignalingChannelEndpoint"
      JoinStorageSession = "kinesisvideo:JoinStorageSession"
      ListEdgeAgentConfigurations = "kinesisvideo:ListEdgeAgentConfigurations"
      ListFragments = "kinesisvideo:ListFragments"
      ListSignalingChannels = "kinesisvideo:ListSignalingChannels"
      ListStreams = "kinesisvideo:ListStreams"
      ListTagsForResource = "kinesisvideo:ListTagsForResource"
      ListTagsForStream = "kinesisvideo:ListTagsForStream"
      PutMedia = "kinesisvideo:PutMedia"
      SendAlexaOfferToMaster = "kinesisvideo:SendAlexaOfferToMaster"
      StartEdgeConfigurationUpdate = "kinesisvideo:StartEdgeConfigurationUpdate"
      TagResource = "kinesisvideo:TagResource"
      TagStream = "kinesisvideo:TagStream"
      UntagResource = "kinesisvideo:UntagResource"
      UntagStream = "kinesisvideo:UntagStream"
      UpdateDataRetention = "kinesisvideo:UpdateDataRetention"
      UpdateImageGenerationConfiguration = "kinesisvideo:UpdateImageGenerationConfiguration"
      UpdateMediaStorageConfiguration = "kinesisvideo:UpdateMediaStorageConfiguration"
      UpdateNotificationConfiguration = "kinesisvideo:UpdateNotificationConfiguration"
      UpdateSignalingChannel = "kinesisvideo:UpdateSignalingChannel"
      UpdateStream = "kinesisvideo:UpdateStream"
    }
    kms = {
      AllActions = "kms:*"
      CancelKeyDeletion = "kms:CancelKeyDeletion"
      ConnectCustomKeyStore = "kms:ConnectCustomKeyStore"
      CreateAlias = "kms:CreateAlias"
      CreateCustomKeyStore = "kms:CreateCustomKeyStore"
      CreateGrant = "kms:CreateGrant"
      CreateKey = "kms:CreateKey"
      Decrypt = "kms:Decrypt"
      DeleteAlias = "kms:DeleteAlias"
      DeleteCustomKeyStore = "kms:DeleteCustomKeyStore"
      DeleteImportedKeyMaterial = "kms:DeleteImportedKeyMaterial"
      DescribeCustomKeyStores = "kms:DescribeCustomKeyStores"
      DescribeKey = "kms:DescribeKey"
      DisableKey = "kms:DisableKey"
      DisableKeyRotation = "kms:DisableKeyRotation"
      DisconnectCustomKeyStore = "kms:DisconnectCustomKeyStore"
      EnableKey = "kms:EnableKey"
      EnableKeyRotation = "kms:EnableKeyRotation"
      Encrypt = "kms:Encrypt"
      GenerateDataKey = "kms:GenerateDataKey"
      GenerateDataKeyPair = "kms:GenerateDataKeyPair"
      GenerateDataKeyPairWithoutPlaintext = "kms:GenerateDataKeyPairWithoutPlaintext"
      GenerateDataKeyWithoutPlaintext = "kms:GenerateDataKeyWithoutPlaintext"
      GenerateMac = "kms:GenerateMac"
      GenerateRandom = "kms:GenerateRandom"
      GetKeyPolicy = "kms:GetKeyPolicy"
      GetKeyRotationStatus = "kms:GetKeyRotationStatus"
      GetParametersForImport = "kms:GetParametersForImport"
      GetPublicKey = "kms:GetPublicKey"
      ImportKeyMaterial = "kms:ImportKeyMaterial"
      ListAliases = "kms:ListAliases"
      ListGrants = "kms:ListGrants"
      ListKeyPolicies = "kms:ListKeyPolicies"
      ListKeyRotations = "kms:ListKeyRotations"
      ListKeys = "kms:ListKeys"
      ListResourceTags = "kms:ListResourceTags"
      ListRetirableGrants = "kms:ListRetirableGrants"
      PutKeyPolicy = "kms:PutKeyPolicy"
      ReEncryptFrom = "kms:ReEncryptFrom"
      ReEncryptTo = "kms:ReEncryptTo"
      ReplicateKey = "kms:ReplicateKey"
      RetireGrant = "kms:RetireGrant"
      RevokeGrant = "kms:RevokeGrant"
      RotateKeyOnDemand = "kms:RotateKeyOnDemand"
      ScheduleKeyDeletion = "kms:ScheduleKeyDeletion"
      Sign = "kms:Sign"
      SynchronizeMultiRegionKey = "kms:SynchronizeMultiRegionKey"
      TagResource = "kms:TagResource"
      UntagResource = "kms:UntagResource"
      UpdateAlias = "kms:UpdateAlias"
      UpdateCustomKeyStore = "kms:UpdateCustomKeyStore"
      UpdateKeyDescription = "kms:UpdateKeyDescription"
      UpdatePrimaryRegion = "kms:UpdatePrimaryRegion"
      Verify = "kms:Verify"
      VerifyMac = "kms:VerifyMac"
    }
    lakeformation = {
      AllActions = "lakeformation:*"
      AddLFTagsToResource = "lakeformation:AddLFTagsToResource"
      BatchGrantPermissions = "lakeformation:BatchGrantPermissions"
      BatchRevokePermissions = "lakeformation:BatchRevokePermissions"
      CancelTransaction = "lakeformation:CancelTransaction"
      CommitTransaction = "lakeformation:CommitTransaction"
      CreateDataCellsFilter = "lakeformation:CreateDataCellsFilter"
      CreateLFTag = "lakeformation:CreateLFTag"
      CreateLakeFormationIdentityCenterConfiguration = "lakeformation:CreateLakeFormationIdentityCenterConfiguration"
      CreateLakeFormationOptIn = "lakeformation:CreateLakeFormationOptIn"
      DeleteDataCellsFilter = "lakeformation:DeleteDataCellsFilter"
      DeleteLFTag = "lakeformation:DeleteLFTag"
      DeleteLakeFormationIdentityCenterConfiguration = "lakeformation:DeleteLakeFormationIdentityCenterConfiguration"
      DeleteLakeFormationOptIn = "lakeformation:DeleteLakeFormationOptIn"
      DeleteObjectsOnCancel = "lakeformation:DeleteObjectsOnCancel"
      DeregisterResource = "lakeformation:DeregisterResource"
      DescribeLakeFormationIdentityCenterConfiguration = "lakeformation:DescribeLakeFormationIdentityCenterConfiguration"
      DescribeResource = "lakeformation:DescribeResource"
      DescribeTransaction = "lakeformation:DescribeTransaction"
      ExtendTransaction = "lakeformation:ExtendTransaction"
      GetDataAccess = "lakeformation:GetDataAccess"
      GetDataCellsFilter = "lakeformation:GetDataCellsFilter"
      GetDataLakePrincipal = "lakeformation:GetDataLakePrincipal"
      GetDataLakeSettings = "lakeformation:GetDataLakeSettings"
      GetEffectivePermissionsForPath = "lakeformation:GetEffectivePermissionsForPath"
      GetLFTag = "lakeformation:GetLFTag"
      GetQueryState = "lakeformation:GetQueryState"
      GetQueryStatistics = "lakeformation:GetQueryStatistics"
      GetResourceLFTags = "lakeformation:GetResourceLFTags"
      GetTableObjects = "lakeformation:GetTableObjects"
      GetWorkUnitResults = "lakeformation:GetWorkUnitResults"
      GetWorkUnits = "lakeformation:GetWorkUnits"
      GrantPermissions = "lakeformation:GrantPermissions"
      ListDataCellsFilter = "lakeformation:ListDataCellsFilter"
      ListLFTags = "lakeformation:ListLFTags"
      ListLakeFormationOptIns = "lakeformation:ListLakeFormationOptIns"
      ListPermissions = "lakeformation:ListPermissions"
      ListResources = "lakeformation:ListResources"
      ListTableStorageOptimizers = "lakeformation:ListTableStorageOptimizers"
      ListTransactions = "lakeformation:ListTransactions"
      PutDataLakeSettings = "lakeformation:PutDataLakeSettings"
      RegisterResource = "lakeformation:RegisterResource"
      RemoveLFTagsFromResource = "lakeformation:RemoveLFTagsFromResource"
      RevokePermissions = "lakeformation:RevokePermissions"
      SearchDatabasesByLFTags = "lakeformation:SearchDatabasesByLFTags"
      SearchTablesByLFTags = "lakeformation:SearchTablesByLFTags"
      StartQueryPlanning = "lakeformation:StartQueryPlanning"
      StartTransaction = "lakeformation:StartTransaction"
      UpdateDataCellsFilter = "lakeformation:UpdateDataCellsFilter"
      UpdateLFTag = "lakeformation:UpdateLFTag"
      UpdateLakeFormationIdentityCenterConfiguration = "lakeformation:UpdateLakeFormationIdentityCenterConfiguration"
      UpdateResource = "lakeformation:UpdateResource"
      UpdateTableObjects = "lakeformation:UpdateTableObjects"
      UpdateTableStorageOptimizer = "lakeformation:UpdateTableStorageOptimizer"
    }
    lambda = {
      AllActions = "lambda:*"
      AddLayerVersionPermission = "lambda:AddLayerVersionPermission"
      AddPermission = "lambda:AddPermission"
      CreateAlias = "lambda:CreateAlias"
      CreateCodeSigningConfig = "lambda:CreateCodeSigningConfig"
      CreateEventSourceMapping = "lambda:CreateEventSourceMapping"
      CreateFunction = "lambda:CreateFunction"
      CreateFunctionUrlConfig = "lambda:CreateFunctionUrlConfig"
      DeleteAlias = "lambda:DeleteAlias"
      DeleteCodeSigningConfig = "lambda:DeleteCodeSigningConfig"
      DeleteEventSourceMapping = "lambda:DeleteEventSourceMapping"
      DeleteFunction = "lambda:DeleteFunction"
      DeleteFunctionCodeSigningConfig = "lambda:DeleteFunctionCodeSigningConfig"
      DeleteFunctionConcurrency = "lambda:DeleteFunctionConcurrency"
      DeleteFunctionEventInvokeConfig = "lambda:DeleteFunctionEventInvokeConfig"
      DeleteFunctionUrlConfig = "lambda:DeleteFunctionUrlConfig"
      DeleteLayerVersion = "lambda:DeleteLayerVersion"
      DeleteProvisionedConcurrencyConfig = "lambda:DeleteProvisionedConcurrencyConfig"
      DisableReplication = "lambda:DisableReplication"
      EnableReplication = "lambda:EnableReplication"
      GetAccountSettings = "lambda:GetAccountSettings"
      GetAlias = "lambda:GetAlias"
      GetCodeSigningConfig = "lambda:GetCodeSigningConfig"
      GetEventSourceMapping = "lambda:GetEventSourceMapping"
      GetFunction = "lambda:GetFunction"
      GetFunctionCodeSigningConfig = "lambda:GetFunctionCodeSigningConfig"
      GetFunctionConcurrency = "lambda:GetFunctionConcurrency"
      GetFunctionConfiguration = "lambda:GetFunctionConfiguration"
      GetFunctionEventInvokeConfig = "lambda:GetFunctionEventInvokeConfig"
      GetFunctionUrlConfig = "lambda:GetFunctionUrlConfig"
      GetLayerVersion = "lambda:GetLayerVersion"
      GetLayerVersionPolicy = "lambda:GetLayerVersionPolicy"
      GetPolicy = "lambda:GetPolicy"
      GetProvisionedConcurrencyConfig = "lambda:GetProvisionedConcurrencyConfig"
      GetRuntimeManagementConfig = "lambda:GetRuntimeManagementConfig"
      InvokeAsync = "lambda:InvokeAsync"
      InvokeFunction = "lambda:InvokeFunction"
      InvokeFunctionUrl = "lambda:InvokeFunctionUrl"
      ListAliases = "lambda:ListAliases"
      ListCodeSigningConfigs = "lambda:ListCodeSigningConfigs"
      ListEventSourceMappings = "lambda:ListEventSourceMappings"
      ListFunctionEventInvokeConfigs = "lambda:ListFunctionEventInvokeConfigs"
      ListFunctionUrlConfigs = "lambda:ListFunctionUrlConfigs"
      ListFunctions = "lambda:ListFunctions"
      ListFunctionsByCodeSigningConfig = "lambda:ListFunctionsByCodeSigningConfig"
      ListLayerVersions = "lambda:ListLayerVersions"
      ListLayers = "lambda:ListLayers"
      ListProvisionedConcurrencyConfigs = "lambda:ListProvisionedConcurrencyConfigs"
      ListTags = "lambda:ListTags"
      ListVersionsByFunction = "lambda:ListVersionsByFunction"
      PublishLayerVersion = "lambda:PublishLayerVersion"
      PublishVersion = "lambda:PublishVersion"
      PutFunctionCodeSigningConfig = "lambda:PutFunctionCodeSigningConfig"
      PutFunctionConcurrency = "lambda:PutFunctionConcurrency"
      PutFunctionEventInvokeConfig = "lambda:PutFunctionEventInvokeConfig"
      PutProvisionedConcurrencyConfig = "lambda:PutProvisionedConcurrencyConfig"
      PutRuntimeManagementConfig = "lambda:PutRuntimeManagementConfig"
      RemoveLayerVersionPermission = "lambda:RemoveLayerVersionPermission"
      RemovePermission = "lambda:RemovePermission"
      TagResource = "lambda:TagResource"
      UntagResource = "lambda:UntagResource"
      UpdateAlias = "lambda:UpdateAlias"
      UpdateCodeSigningConfig = "lambda:UpdateCodeSigningConfig"
      UpdateEventSourceMapping = "lambda:UpdateEventSourceMapping"
      UpdateFunctionCode = "lambda:UpdateFunctionCode"
      UpdateFunctionCodeSigningConfig = "lambda:UpdateFunctionCodeSigningConfig"
      UpdateFunctionConfiguration = "lambda:UpdateFunctionConfiguration"
      UpdateFunctionEventInvokeConfig = "lambda:UpdateFunctionEventInvokeConfig"
      UpdateFunctionUrlConfig = "lambda:UpdateFunctionUrlConfig"
    }
    launchwizard = {
      AllActions = "launchwizard:*"
      CreateAdditionalNode = "launchwizard:CreateAdditionalNode"
      CreateDeployment = "launchwizard:CreateDeployment"
      CreateSettingsSet = "launchwizard:CreateSettingsSet"
      DeleteAdditionalNode = "launchwizard:DeleteAdditionalNode"
      DeleteApp = "launchwizard:DeleteApp"
      DeleteDeployment = "launchwizard:DeleteDeployment"
      DeleteSettingsSet = "launchwizard:DeleteSettingsSet"
      DescribeAdditionalNode = "launchwizard:DescribeAdditionalNode"
      DescribeProvisionedApp = "launchwizard:DescribeProvisionedApp"
      DescribeProvisioningEvents = "launchwizard:DescribeProvisioningEvents"
      DescribeSettingsSet = "launchwizard:DescribeSettingsSet"
      GetDeployment = "launchwizard:GetDeployment"
      GetInfrastructureSuggestion = "launchwizard:GetInfrastructureSuggestion"
      GetIpAddress = "launchwizard:GetIpAddress"
      GetResourceCostEstimate = "launchwizard:GetResourceCostEstimate"
      GetResourceRecommendation = "launchwizard:GetResourceRecommendation"
      GetSettingsSet = "launchwizard:GetSettingsSet"
      GetWorkload = "launchwizard:GetWorkload"
      GetWorkloadAsset = "launchwizard:GetWorkloadAsset"
      GetWorkloadAssets = "launchwizard:GetWorkloadAssets"
      GetWorkloadDeploymentPattern = "launchwizard:GetWorkloadDeploymentPattern"
      ListAdditionalNodes = "launchwizard:ListAdditionalNodes"
      ListAllowedResources = "launchwizard:ListAllowedResources"
      ListDeploymentEvents = "launchwizard:ListDeploymentEvents"
      ListDeployments = "launchwizard:ListDeployments"
      ListProvisionedApps = "launchwizard:ListProvisionedApps"
      ListResourceCostEstimates = "launchwizard:ListResourceCostEstimates"
      ListSettingsSets = "launchwizard:ListSettingsSets"
      ListTagsForResource = "launchwizard:ListTagsForResource"
      ListWorkloadDeploymentOptions = "launchwizard:ListWorkloadDeploymentOptions"
      ListWorkloadDeploymentPatterns = "launchwizard:ListWorkloadDeploymentPatterns"
      ListWorkloads = "launchwizard:ListWorkloads"
      PutSettingsSet = "launchwizard:PutSettingsSet"
      StartProvisioning = "launchwizard:StartProvisioning"
      TagResource = "launchwizard:TagResource"
      UntagResource = "launchwizard:UntagResource"
      UpdateSettingsSet = "launchwizard:UpdateSettingsSet"
    }
    lex = {
      AllActions = "lex:*"
      BatchCreateCustomVocabularyItem = "lex:BatchCreateCustomVocabularyItem"
      BatchDeleteCustomVocabularyItem = "lex:BatchDeleteCustomVocabularyItem"
      BatchUpdateCustomVocabularyItem = "lex:BatchUpdateCustomVocabularyItem"
      BuildBotLocale = "lex:BuildBotLocale"
      CreateBot = "lex:CreateBot"
      CreateBotAlias = "lex:CreateBotAlias"
      CreateBotChannel = "lex:CreateBotChannel"
      CreateBotLocale = "lex:CreateBotLocale"
      CreateBotReplica = "lex:CreateBotReplica"
      CreateBotVersion = "lex:CreateBotVersion"
      CreateCustomVocabulary = "lex:CreateCustomVocabulary"
      CreateExport = "lex:CreateExport"
      CreateIntent = "lex:CreateIntent"
      CreateIntentVersion = "lex:CreateIntentVersion"
      CreateResourcePolicy = "lex:CreateResourcePolicy"
      CreateSlot = "lex:CreateSlot"
      CreateSlotType = "lex:CreateSlotType"
      CreateSlotTypeVersion = "lex:CreateSlotTypeVersion"
      CreateTestSet = "lex:CreateTestSet"
      CreateTestSetDiscrepancyReport = "lex:CreateTestSetDiscrepancyReport"
      CreateUploadUrl = "lex:CreateUploadUrl"
      DeleteBot = "lex:DeleteBot"
      DeleteBotAlias = "lex:DeleteBotAlias"
      DeleteBotChannel = "lex:DeleteBotChannel"
      DeleteBotChannelAssociation = "lex:DeleteBotChannelAssociation"
      DeleteBotLocale = "lex:DeleteBotLocale"
      DeleteBotReplica = "lex:DeleteBotReplica"
      DeleteBotVersion = "lex:DeleteBotVersion"
      DeleteCustomVocabulary = "lex:DeleteCustomVocabulary"
      DeleteExport = "lex:DeleteExport"
      DeleteImport = "lex:DeleteImport"
      DeleteIntent = "lex:DeleteIntent"
      DeleteIntentVersion = "lex:DeleteIntentVersion"
      DeleteResourcePolicy = "lex:DeleteResourcePolicy"
      DeleteSession = "lex:DeleteSession"
      DeleteSlot = "lex:DeleteSlot"
      DeleteSlotType = "lex:DeleteSlotType"
      DeleteSlotTypeVersion = "lex:DeleteSlotTypeVersion"
      DeleteTestSet = "lex:DeleteTestSet"
      DeleteUtterances = "lex:DeleteUtterances"
      DescribeBot = "lex:DescribeBot"
      DescribeBotAlias = "lex:DescribeBotAlias"
      DescribeBotChannel = "lex:DescribeBotChannel"
      DescribeBotLocale = "lex:DescribeBotLocale"
      DescribeBotRecommendation = "lex:DescribeBotRecommendation"
      DescribeBotReplica = "lex:DescribeBotReplica"
      DescribeBotResourceGeneration = "lex:DescribeBotResourceGeneration"
      DescribeBotVersion = "lex:DescribeBotVersion"
      DescribeCustomVocabulary = "lex:DescribeCustomVocabulary"
      DescribeCustomVocabularyMetadata = "lex:DescribeCustomVocabularyMetadata"
      DescribeExport = "lex:DescribeExport"
      DescribeImport = "lex:DescribeImport"
      DescribeIntent = "lex:DescribeIntent"
      DescribeResourcePolicy = "lex:DescribeResourcePolicy"
      DescribeSlot = "lex:DescribeSlot"
      DescribeSlotType = "lex:DescribeSlotType"
      DescribeTestExecution = "lex:DescribeTestExecution"
      DescribeTestSet = "lex:DescribeTestSet"
      DescribeTestSetDiscrepancyReport = "lex:DescribeTestSetDiscrepancyReport"
      DescribeTestSetGeneration = "lex:DescribeTestSetGeneration"
      GenerateBotElement = "lex:GenerateBotElement"
      GetBot = "lex:GetBot"
      GetBotAlias = "lex:GetBotAlias"
      GetBotAliases = "lex:GetBotAliases"
      GetBotChannelAssociation = "lex:GetBotChannelAssociation"
      GetBotChannelAssociations = "lex:GetBotChannelAssociations"
      GetBotVersions = "lex:GetBotVersions"
      GetBots = "lex:GetBots"
      GetBuiltinIntent = "lex:GetBuiltinIntent"
      GetBuiltinIntents = "lex:GetBuiltinIntents"
      GetBuiltinSlotTypes = "lex:GetBuiltinSlotTypes"
      GetExport = "lex:GetExport"
      GetImport = "lex:GetImport"
      GetIntent = "lex:GetIntent"
      GetIntentVersions = "lex:GetIntentVersions"
      GetIntents = "lex:GetIntents"
      GetMigration = "lex:GetMigration"
      GetMigrations = "lex:GetMigrations"
      GetSession = "lex:GetSession"
      GetSlotType = "lex:GetSlotType"
      GetSlotTypeVersions = "lex:GetSlotTypeVersions"
      GetSlotTypes = "lex:GetSlotTypes"
      GetTestExecutionArtifactsUrl = "lex:GetTestExecutionArtifactsUrl"
      GetUtterancesView = "lex:GetUtterancesView"
      ListAggregatedUtterances = "lex:ListAggregatedUtterances"
      ListBotAliasReplicas = "lex:ListBotAliasReplicas"
      ListBotAliases = "lex:ListBotAliases"
      ListBotChannels = "lex:ListBotChannels"
      ListBotLocales = "lex:ListBotLocales"
      ListBotRecommendations = "lex:ListBotRecommendations"
      ListBotReplicas = "lex:ListBotReplicas"
      ListBotResourceGenerations = "lex:ListBotResourceGenerations"
      ListBotVersionReplicas = "lex:ListBotVersionReplicas"
      ListBotVersions = "lex:ListBotVersions"
      ListBots = "lex:ListBots"
      ListBuiltInIntents = "lex:ListBuiltInIntents"
      ListBuiltInSlotTypes = "lex:ListBuiltInSlotTypes"
      ListCustomVocabularyItems = "lex:ListCustomVocabularyItems"
      ListExports = "lex:ListExports"
      ListImports = "lex:ListImports"
      ListIntentMetrics = "lex:ListIntentMetrics"
      ListIntentPaths = "lex:ListIntentPaths"
      ListIntentStageMetrics = "lex:ListIntentStageMetrics"
      ListIntents = "lex:ListIntents"
      ListRecommendedIntents = "lex:ListRecommendedIntents"
      ListSessionAnalyticsData = "lex:ListSessionAnalyticsData"
      ListSessionMetrics = "lex:ListSessionMetrics"
      ListSlotTypes = "lex:ListSlotTypes"
      ListSlots = "lex:ListSlots"
      ListTagsForResource = "lex:ListTagsForResource"
      ListTestExecutionResultItems = "lex:ListTestExecutionResultItems"
      ListTestExecutions = "lex:ListTestExecutions"
      ListTestSetRecords = "lex:ListTestSetRecords"
      ListTestSets = "lex:ListTestSets"
      PostContent = "lex:PostContent"
      PostText = "lex:PostText"
      PutBot = "lex:PutBot"
      PutBotAlias = "lex:PutBotAlias"
      PutIntent = "lex:PutIntent"
      PutSession = "lex:PutSession"
      PutSlotType = "lex:PutSlotType"
      RecognizeText = "lex:RecognizeText"
      RecognizeUtterance = "lex:RecognizeUtterance"
      SearchAssociatedTranscripts = "lex:SearchAssociatedTranscripts"
      StartBotRecommendation = "lex:StartBotRecommendation"
      StartBotResourceGeneration = "lex:StartBotResourceGeneration"
      StartConversation = "lex:StartConversation"
      StartImport = "lex:StartImport"
      StartMigration = "lex:StartMigration"
      StartTestExecution = "lex:StartTestExecution"
      StartTestSetGeneration = "lex:StartTestSetGeneration"
      StopBotRecommendation = "lex:StopBotRecommendation"
      TagResource = "lex:TagResource"
      UntagResource = "lex:UntagResource"
      UpdateBot = "lex:UpdateBot"
      UpdateBotAlias = "lex:UpdateBotAlias"
      UpdateBotLocale = "lex:UpdateBotLocale"
      UpdateBotRecommendation = "lex:UpdateBotRecommendation"
      UpdateCustomVocabulary = "lex:UpdateCustomVocabulary"
      UpdateExport = "lex:UpdateExport"
      UpdateIntent = "lex:UpdateIntent"
      UpdateResourcePolicy = "lex:UpdateResourcePolicy"
      UpdateSlot = "lex:UpdateSlot"
      UpdateSlotType = "lex:UpdateSlotType"
      UpdateTestSet = "lex:UpdateTestSet"
    }
    license-manager-linux-subscriptions = {
      AllActions = "license-manager-linux-subscriptions:*"
      GetServiceSettings = "license-manager-linux-subscriptions:GetServiceSettings"
      ListLinuxSubscriptionInstances = "license-manager-linux-subscriptions:ListLinuxSubscriptionInstances"
      ListLinuxSubscriptions = "license-manager-linux-subscriptions:ListLinuxSubscriptions"
      UpdateServiceSettings = "license-manager-linux-subscriptions:UpdateServiceSettings"
    }
    license-manager-user-subscriptions = {
      AllActions = "license-manager-user-subscriptions:*"
      AssociateUser = "license-manager-user-subscriptions:AssociateUser"
      DeregisterIdentityProvider = "license-manager-user-subscriptions:DeregisterIdentityProvider"
      DisassociateUser = "license-manager-user-subscriptions:DisassociateUser"
      ListIdentityProviders = "license-manager-user-subscriptions:ListIdentityProviders"
      ListInstances = "license-manager-user-subscriptions:ListInstances"
      ListProductSubscriptions = "license-manager-user-subscriptions:ListProductSubscriptions"
      ListUserAssociations = "license-manager-user-subscriptions:ListUserAssociations"
      RegisterIdentityProvider = "license-manager-user-subscriptions:RegisterIdentityProvider"
      StartProductSubscription = "license-manager-user-subscriptions:StartProductSubscription"
      StopProductSubscription = "license-manager-user-subscriptions:StopProductSubscription"
      UpdateIdentityProviderSettings = "license-manager-user-subscriptions:UpdateIdentityProviderSettings"
    }
    license-manager = {
      AllActions = "license-manager:*"
      AcceptGrant = "license-manager:AcceptGrant"
      CheckInLicense = "license-manager:CheckInLicense"
      CheckoutBorrowLicense = "license-manager:CheckoutBorrowLicense"
      CheckoutLicense = "license-manager:CheckoutLicense"
      CreateGrant = "license-manager:CreateGrant"
      CreateGrantVersion = "license-manager:CreateGrantVersion"
      CreateLicense = "license-manager:CreateLicense"
      CreateLicenseConfiguration = "license-manager:CreateLicenseConfiguration"
      CreateLicenseConversionTaskForResource = "license-manager:CreateLicenseConversionTaskForResource"
      CreateLicenseManagerReportGenerator = "license-manager:CreateLicenseManagerReportGenerator"
      CreateLicenseVersion = "license-manager:CreateLicenseVersion"
      CreateToken = "license-manager:CreateToken"
      DeleteGrant = "license-manager:DeleteGrant"
      DeleteLicense = "license-manager:DeleteLicense"
      DeleteLicenseConfiguration = "license-manager:DeleteLicenseConfiguration"
      DeleteLicenseManagerReportGenerator = "license-manager:DeleteLicenseManagerReportGenerator"
      DeleteToken = "license-manager:DeleteToken"
      ExtendLicenseConsumption = "license-manager:ExtendLicenseConsumption"
      GetAccessToken = "license-manager:GetAccessToken"
      GetGrant = "license-manager:GetGrant"
      GetLicense = "license-manager:GetLicense"
      GetLicenseConfiguration = "license-manager:GetLicenseConfiguration"
      GetLicenseConversionTask = "license-manager:GetLicenseConversionTask"
      GetLicenseManagerReportGenerator = "license-manager:GetLicenseManagerReportGenerator"
      GetLicenseUsage = "license-manager:GetLicenseUsage"
      GetServiceSettings = "license-manager:GetServiceSettings"
      ListAssociationsForLicenseConfiguration = "license-manager:ListAssociationsForLicenseConfiguration"
      ListDistributedGrants = "license-manager:ListDistributedGrants"
      ListFailuresForLicenseConfigurationOperations = "license-manager:ListFailuresForLicenseConfigurationOperations"
      ListLicenseConfigurations = "license-manager:ListLicenseConfigurations"
      ListLicenseConversionTasks = "license-manager:ListLicenseConversionTasks"
      ListLicenseManagerReportGenerators = "license-manager:ListLicenseManagerReportGenerators"
      ListLicenseSpecificationsForResource = "license-manager:ListLicenseSpecificationsForResource"
      ListLicenseVersions = "license-manager:ListLicenseVersions"
      ListLicenses = "license-manager:ListLicenses"
      ListReceivedGrants = "license-manager:ListReceivedGrants"
      ListReceivedGrantsForOrganization = "license-manager:ListReceivedGrantsForOrganization"
      ListReceivedLicenses = "license-manager:ListReceivedLicenses"
      ListReceivedLicensesForOrganization = "license-manager:ListReceivedLicensesForOrganization"
      ListResourceInventory = "license-manager:ListResourceInventory"
      ListTagsForResource = "license-manager:ListTagsForResource"
      ListTokens = "license-manager:ListTokens"
      ListUsageForLicenseConfiguration = "license-manager:ListUsageForLicenseConfiguration"
      RejectGrant = "license-manager:RejectGrant"
      TagResource = "license-manager:TagResource"
      UntagResource = "license-manager:UntagResource"
      UpdateLicenseConfiguration = "license-manager:UpdateLicenseConfiguration"
      UpdateLicenseManagerReportGenerator = "license-manager:UpdateLicenseManagerReportGenerator"
      UpdateLicenseSpecificationsForResource = "license-manager:UpdateLicenseSpecificationsForResource"
      UpdateServiceSettings = "license-manager:UpdateServiceSettings"
    }
    lightsail = {
      AllActions = "lightsail:*"
      AllocateStaticIp = "lightsail:AllocateStaticIp"
      AttachCertificateToDistribution = "lightsail:AttachCertificateToDistribution"
      AttachDisk = "lightsail:AttachDisk"
      AttachInstancesToLoadBalancer = "lightsail:AttachInstancesToLoadBalancer"
      AttachLoadBalancerTlsCertificate = "lightsail:AttachLoadBalancerTlsCertificate"
      AttachStaticIp = "lightsail:AttachStaticIp"
      CloseInstancePublicPorts = "lightsail:CloseInstancePublicPorts"
      CopySnapshot = "lightsail:CopySnapshot"
      CreateBucket = "lightsail:CreateBucket"
      CreateBucketAccessKey = "lightsail:CreateBucketAccessKey"
      CreateCertificate = "lightsail:CreateCertificate"
      CreateCloudFormationStack = "lightsail:CreateCloudFormationStack"
      CreateContactMethod = "lightsail:CreateContactMethod"
      CreateContainerService = "lightsail:CreateContainerService"
      CreateContainerServiceDeployment = "lightsail:CreateContainerServiceDeployment"
      CreateContainerServiceRegistryLogin = "lightsail:CreateContainerServiceRegistryLogin"
      CreateDisk = "lightsail:CreateDisk"
      CreateDiskFromSnapshot = "lightsail:CreateDiskFromSnapshot"
      CreateDiskSnapshot = "lightsail:CreateDiskSnapshot"
      CreateDistribution = "lightsail:CreateDistribution"
      CreateDomain = "lightsail:CreateDomain"
      CreateDomainEntry = "lightsail:CreateDomainEntry"
      CreateGUISessionAccessDetails = "lightsail:CreateGUISessionAccessDetails"
      CreateInstanceSnapshot = "lightsail:CreateInstanceSnapshot"
      CreateInstances = "lightsail:CreateInstances"
      CreateInstancesFromSnapshot = "lightsail:CreateInstancesFromSnapshot"
      CreateKeyPair = "lightsail:CreateKeyPair"
      CreateLoadBalancer = "lightsail:CreateLoadBalancer"
      CreateLoadBalancerTlsCertificate = "lightsail:CreateLoadBalancerTlsCertificate"
      CreateRelationalDatabase = "lightsail:CreateRelationalDatabase"
      CreateRelationalDatabaseFromSnapshot = "lightsail:CreateRelationalDatabaseFromSnapshot"
      CreateRelationalDatabaseSnapshot = "lightsail:CreateRelationalDatabaseSnapshot"
      DeleteAlarm = "lightsail:DeleteAlarm"
      DeleteAutoSnapshot = "lightsail:DeleteAutoSnapshot"
      DeleteBucket = "lightsail:DeleteBucket"
      DeleteBucketAccessKey = "lightsail:DeleteBucketAccessKey"
      DeleteCertificate = "lightsail:DeleteCertificate"
      DeleteContactMethod = "lightsail:DeleteContactMethod"
      DeleteContainerImage = "lightsail:DeleteContainerImage"
      DeleteContainerService = "lightsail:DeleteContainerService"
      DeleteDisk = "lightsail:DeleteDisk"
      DeleteDiskSnapshot = "lightsail:DeleteDiskSnapshot"
      DeleteDistribution = "lightsail:DeleteDistribution"
      DeleteDomain = "lightsail:DeleteDomain"
      DeleteDomainEntry = "lightsail:DeleteDomainEntry"
      DeleteInstance = "lightsail:DeleteInstance"
      DeleteInstanceSnapshot = "lightsail:DeleteInstanceSnapshot"
      DeleteKeyPair = "lightsail:DeleteKeyPair"
      DeleteKnownHostKeys = "lightsail:DeleteKnownHostKeys"
      DeleteLoadBalancer = "lightsail:DeleteLoadBalancer"
      DeleteLoadBalancerTlsCertificate = "lightsail:DeleteLoadBalancerTlsCertificate"
      DeleteRelationalDatabase = "lightsail:DeleteRelationalDatabase"
      DeleteRelationalDatabaseSnapshot = "lightsail:DeleteRelationalDatabaseSnapshot"
      DetachCertificateFromDistribution = "lightsail:DetachCertificateFromDistribution"
      DetachDisk = "lightsail:DetachDisk"
      DetachInstancesFromLoadBalancer = "lightsail:DetachInstancesFromLoadBalancer"
      DetachStaticIp = "lightsail:DetachStaticIp"
      DisableAddOn = "lightsail:DisableAddOn"
      DownloadDefaultKeyPair = "lightsail:DownloadDefaultKeyPair"
      EnableAddOn = "lightsail:EnableAddOn"
      ExportSnapshot = "lightsail:ExportSnapshot"
      GetActiveNames = "lightsail:GetActiveNames"
      GetAlarms = "lightsail:GetAlarms"
      GetAutoSnapshots = "lightsail:GetAutoSnapshots"
      GetBlueprints = "lightsail:GetBlueprints"
      GetBucketAccessKeys = "lightsail:GetBucketAccessKeys"
      GetBucketBundles = "lightsail:GetBucketBundles"
      GetBucketMetricData = "lightsail:GetBucketMetricData"
      GetBuckets = "lightsail:GetBuckets"
      GetBundles = "lightsail:GetBundles"
      GetCertificates = "lightsail:GetCertificates"
      GetCloudFormationStackRecords = "lightsail:GetCloudFormationStackRecords"
      GetContactMethods = "lightsail:GetContactMethods"
      GetContainerAPIMetadata = "lightsail:GetContainerAPIMetadata"
      GetContainerImages = "lightsail:GetContainerImages"
      GetContainerLog = "lightsail:GetContainerLog"
      GetContainerServiceDeployments = "lightsail:GetContainerServiceDeployments"
      GetContainerServiceMetricData = "lightsail:GetContainerServiceMetricData"
      GetContainerServicePowers = "lightsail:GetContainerServicePowers"
      GetContainerServices = "lightsail:GetContainerServices"
      GetCostEstimate = "lightsail:GetCostEstimate"
      GetDisk = "lightsail:GetDisk"
      GetDiskSnapshot = "lightsail:GetDiskSnapshot"
      GetDiskSnapshots = "lightsail:GetDiskSnapshots"
      GetDisks = "lightsail:GetDisks"
      GetDistributionBundles = "lightsail:GetDistributionBundles"
      GetDistributionLatestCacheReset = "lightsail:GetDistributionLatestCacheReset"
      GetDistributionMetricData = "lightsail:GetDistributionMetricData"
      GetDistributions = "lightsail:GetDistributions"
      GetDomain = "lightsail:GetDomain"
      GetDomains = "lightsail:GetDomains"
      GetExportSnapshotRecords = "lightsail:GetExportSnapshotRecords"
      GetInstance = "lightsail:GetInstance"
      GetInstanceAccessDetails = "lightsail:GetInstanceAccessDetails"
      GetInstanceMetricData = "lightsail:GetInstanceMetricData"
      GetInstancePortStates = "lightsail:GetInstancePortStates"
      GetInstanceSnapshot = "lightsail:GetInstanceSnapshot"
      GetInstanceSnapshots = "lightsail:GetInstanceSnapshots"
      GetInstanceState = "lightsail:GetInstanceState"
      GetInstances = "lightsail:GetInstances"
      GetKeyPair = "lightsail:GetKeyPair"
      GetKeyPairs = "lightsail:GetKeyPairs"
      GetLoadBalancer = "lightsail:GetLoadBalancer"
      GetLoadBalancerMetricData = "lightsail:GetLoadBalancerMetricData"
      GetLoadBalancerTlsCertificates = "lightsail:GetLoadBalancerTlsCertificates"
      GetLoadBalancerTlsPolicies = "lightsail:GetLoadBalancerTlsPolicies"
      GetLoadBalancers = "lightsail:GetLoadBalancers"
      GetOperation = "lightsail:GetOperation"
      GetOperations = "lightsail:GetOperations"
      GetOperationsForResource = "lightsail:GetOperationsForResource"
      GetRegions = "lightsail:GetRegions"
      GetRelationalDatabase = "lightsail:GetRelationalDatabase"
      GetRelationalDatabaseBlueprints = "lightsail:GetRelationalDatabaseBlueprints"
      GetRelationalDatabaseBundles = "lightsail:GetRelationalDatabaseBundles"
      GetRelationalDatabaseEvents = "lightsail:GetRelationalDatabaseEvents"
      GetRelationalDatabaseLogEvents = "lightsail:GetRelationalDatabaseLogEvents"
      GetRelationalDatabaseLogStreams = "lightsail:GetRelationalDatabaseLogStreams"
      GetRelationalDatabaseMasterUserPassword = "lightsail:GetRelationalDatabaseMasterUserPassword"
      GetRelationalDatabaseMetricData = "lightsail:GetRelationalDatabaseMetricData"
      GetRelationalDatabaseParameters = "lightsail:GetRelationalDatabaseParameters"
      GetRelationalDatabaseSnapshot = "lightsail:GetRelationalDatabaseSnapshot"
      GetRelationalDatabaseSnapshots = "lightsail:GetRelationalDatabaseSnapshots"
      GetRelationalDatabases = "lightsail:GetRelationalDatabases"
      GetSetupHistory = "lightsail:GetSetupHistory"
      GetStaticIp = "lightsail:GetStaticIp"
      GetStaticIps = "lightsail:GetStaticIps"
      ImportKeyPair = "lightsail:ImportKeyPair"
      IsVpcPeered = "lightsail:IsVpcPeered"
      OpenInstancePublicPorts = "lightsail:OpenInstancePublicPorts"
      PeerVpc = "lightsail:PeerVpc"
      PutAlarm = "lightsail:PutAlarm"
      PutInstancePublicPorts = "lightsail:PutInstancePublicPorts"
      RebootInstance = "lightsail:RebootInstance"
      RebootRelationalDatabase = "lightsail:RebootRelationalDatabase"
      RegisterContainerImage = "lightsail:RegisterContainerImage"
      ReleaseStaticIp = "lightsail:ReleaseStaticIp"
      ResetDistributionCache = "lightsail:ResetDistributionCache"
      SendContactMethodVerification = "lightsail:SendContactMethodVerification"
      SetIpAddressType = "lightsail:SetIpAddressType"
      SetResourceAccessForBucket = "lightsail:SetResourceAccessForBucket"
      SetupInstanceHttps = "lightsail:SetupInstanceHttps"
      StartGUISession = "lightsail:StartGUISession"
      StartInstance = "lightsail:StartInstance"
      StartRelationalDatabase = "lightsail:StartRelationalDatabase"
      StopGUISession = "lightsail:StopGUISession"
      StopInstance = "lightsail:StopInstance"
      StopRelationalDatabase = "lightsail:StopRelationalDatabase"
      TagResource = "lightsail:TagResource"
      TestAlarm = "lightsail:TestAlarm"
      UnpeerVpc = "lightsail:UnpeerVpc"
      UntagResource = "lightsail:UntagResource"
      UpdateBucket = "lightsail:UpdateBucket"
      UpdateBucketBundle = "lightsail:UpdateBucketBundle"
      UpdateContainerService = "lightsail:UpdateContainerService"
      UpdateDistribution = "lightsail:UpdateDistribution"
      UpdateDistributionBundle = "lightsail:UpdateDistributionBundle"
      UpdateDomainEntry = "lightsail:UpdateDomainEntry"
      UpdateInstanceMetadataOptions = "lightsail:UpdateInstanceMetadataOptions"
      UpdateLoadBalancerAttribute = "lightsail:UpdateLoadBalancerAttribute"
      UpdateRelationalDatabase = "lightsail:UpdateRelationalDatabase"
      UpdateRelationalDatabaseParameters = "lightsail:UpdateRelationalDatabaseParameters"
    }
    logs = {
      AllActions = "logs:*"
      AssociateKmsKey = "logs:AssociateKmsKey"
      CancelExportTask = "logs:CancelExportTask"
      CreateDelivery = "logs:CreateDelivery"
      CreateExportTask = "logs:CreateExportTask"
      CreateLogAnomalyDetector = "logs:CreateLogAnomalyDetector"
      CreateLogDelivery = "logs:CreateLogDelivery"
      CreateLogGroup = "logs:CreateLogGroup"
      CreateLogStream = "logs:CreateLogStream"
      DeleteAccountPolicy = "logs:DeleteAccountPolicy"
      DeleteDataProtectionPolicy = "logs:DeleteDataProtectionPolicy"
      DeleteDelivery = "logs:DeleteDelivery"
      DeleteDeliveryDestination = "logs:DeleteDeliveryDestination"
      DeleteDeliveryDestinationPolicy = "logs:DeleteDeliveryDestinationPolicy"
      DeleteDeliverySource = "logs:DeleteDeliverySource"
      DeleteDestination = "logs:DeleteDestination"
      DeleteLogAnomalyDetector = "logs:DeleteLogAnomalyDetector"
      DeleteLogDelivery = "logs:DeleteLogDelivery"
      DeleteLogGroup = "logs:DeleteLogGroup"
      DeleteLogStream = "logs:DeleteLogStream"
      DeleteMetricFilter = "logs:DeleteMetricFilter"
      DeleteQueryDefinition = "logs:DeleteQueryDefinition"
      DeleteResourcePolicy = "logs:DeleteResourcePolicy"
      DeleteRetentionPolicy = "logs:DeleteRetentionPolicy"
      DeleteSubscriptionFilter = "logs:DeleteSubscriptionFilter"
      DescribeAccountPolicies = "logs:DescribeAccountPolicies"
      DescribeDeliveries = "logs:DescribeDeliveries"
      DescribeDeliveryDestinations = "logs:DescribeDeliveryDestinations"
      DescribeDeliverySources = "logs:DescribeDeliverySources"
      DescribeDestinations = "logs:DescribeDestinations"
      DescribeExportTasks = "logs:DescribeExportTasks"
      DescribeLogGroups = "logs:DescribeLogGroups"
      DescribeLogStreams = "logs:DescribeLogStreams"
      DescribeMetricFilters = "logs:DescribeMetricFilters"
      DescribeQueries = "logs:DescribeQueries"
      DescribeQueryDefinitions = "logs:DescribeQueryDefinitions"
      DescribeResourcePolicies = "logs:DescribeResourcePolicies"
      DescribeSubscriptionFilters = "logs:DescribeSubscriptionFilters"
      DisassociateKmsKey = "logs:DisassociateKmsKey"
      FilterLogEvents = "logs:FilterLogEvents"
      GetDataProtectionPolicy = "logs:GetDataProtectionPolicy"
      GetDelivery = "logs:GetDelivery"
      GetDeliveryDestination = "logs:GetDeliveryDestination"
      GetDeliveryDestinationPolicy = "logs:GetDeliveryDestinationPolicy"
      GetDeliverySource = "logs:GetDeliverySource"
      GetLogAnomalyDetector = "logs:GetLogAnomalyDetector"
      GetLogDelivery = "logs:GetLogDelivery"
      GetLogEvents = "logs:GetLogEvents"
      GetLogGroupFields = "logs:GetLogGroupFields"
      GetLogRecord = "logs:GetLogRecord"
      GetQueryResults = "logs:GetQueryResults"
      Link = "logs:Link"
      ListAnomalies = "logs:ListAnomalies"
      ListLogAnomalyDetectors = "logs:ListLogAnomalyDetectors"
      ListLogDeliveries = "logs:ListLogDeliveries"
      ListTagsForResource = "logs:ListTagsForResource"
      ListTagsLogGroup = "logs:ListTagsLogGroup"
      PutAccountPolicy = "logs:PutAccountPolicy"
      PutDataProtectionPolicy = "logs:PutDataProtectionPolicy"
      PutDeliveryDestination = "logs:PutDeliveryDestination"
      PutDeliveryDestinationPolicy = "logs:PutDeliveryDestinationPolicy"
      PutDeliverySource = "logs:PutDeliverySource"
      PutDestination = "logs:PutDestination"
      PutDestinationPolicy = "logs:PutDestinationPolicy"
      PutLogEvents = "logs:PutLogEvents"
      PutMetricFilter = "logs:PutMetricFilter"
      PutQueryDefinition = "logs:PutQueryDefinition"
      PutResourcePolicy = "logs:PutResourcePolicy"
      PutRetentionPolicy = "logs:PutRetentionPolicy"
      PutSubscriptionFilter = "logs:PutSubscriptionFilter"
      StartLiveTail = "logs:StartLiveTail"
      StartQuery = "logs:StartQuery"
      StopLiveTail = "logs:StopLiveTail"
      StopQuery = "logs:StopQuery"
      TagLogGroup = "logs:TagLogGroup"
      TagResource = "logs:TagResource"
      TestMetricFilter = "logs:TestMetricFilter"
      Unmask = "logs:Unmask"
      UntagLogGroup = "logs:UntagLogGroup"
      UntagResource = "logs:UntagResource"
      UpdateAnomaly = "logs:UpdateAnomaly"
      UpdateLogAnomalyDetector = "logs:UpdateLogAnomalyDetector"
      UpdateLogDelivery = "logs:UpdateLogDelivery"
    }
    lookoutequipment = {
      AllActions = "lookoutequipment:*"
      CreateDataset = "lookoutequipment:CreateDataset"
      CreateInferenceScheduler = "lookoutequipment:CreateInferenceScheduler"
      CreateLabel = "lookoutequipment:CreateLabel"
      CreateLabelGroup = "lookoutequipment:CreateLabelGroup"
      CreateModel = "lookoutequipment:CreateModel"
      CreateRetrainingScheduler = "lookoutequipment:CreateRetrainingScheduler"
      DeleteDataset = "lookoutequipment:DeleteDataset"
      DeleteInferenceScheduler = "lookoutequipment:DeleteInferenceScheduler"
      DeleteLabel = "lookoutequipment:DeleteLabel"
      DeleteLabelGroup = "lookoutequipment:DeleteLabelGroup"
      DeleteModel = "lookoutequipment:DeleteModel"
      DeleteResourcePolicy = "lookoutequipment:DeleteResourcePolicy"
      DeleteRetrainingScheduler = "lookoutequipment:DeleteRetrainingScheduler"
      DescribeDataIngestionJob = "lookoutequipment:DescribeDataIngestionJob"
      DescribeDataset = "lookoutequipment:DescribeDataset"
      DescribeInferenceScheduler = "lookoutequipment:DescribeInferenceScheduler"
      DescribeLabelGroup = "lookoutequipment:DescribeLabelGroup"
      DescribeModel = "lookoutequipment:DescribeModel"
      DescribeModelVersion = "lookoutequipment:DescribeModelVersion"
      DescribeResourcePolicy = "lookoutequipment:DescribeResourcePolicy"
      DescribeRetrainingScheduler = "lookoutequipment:DescribeRetrainingScheduler"
      Describelabel = "lookoutequipment:Describelabel"
      ImportDataset = "lookoutequipment:ImportDataset"
      ImportModelVersion = "lookoutequipment:ImportModelVersion"
      ListDataIngestionJobs = "lookoutequipment:ListDataIngestionJobs"
      ListDatasets = "lookoutequipment:ListDatasets"
      ListInferenceEvents = "lookoutequipment:ListInferenceEvents"
      ListInferenceExecutions = "lookoutequipment:ListInferenceExecutions"
      ListInferenceSchedulers = "lookoutequipment:ListInferenceSchedulers"
      ListLabelGroups = "lookoutequipment:ListLabelGroups"
      ListLabels = "lookoutequipment:ListLabels"
      ListModelVersions = "lookoutequipment:ListModelVersions"
      ListModels = "lookoutequipment:ListModels"
      ListRetrainingSchedulers = "lookoutequipment:ListRetrainingSchedulers"
      ListSensorStatistics = "lookoutequipment:ListSensorStatistics"
      ListTagsForResource = "lookoutequipment:ListTagsForResource"
      PutResourcePolicy = "lookoutequipment:PutResourcePolicy"
      StartDataIngestionJob = "lookoutequipment:StartDataIngestionJob"
      StartInferenceScheduler = "lookoutequipment:StartInferenceScheduler"
      StartRetrainingScheduler = "lookoutequipment:StartRetrainingScheduler"
      StopInferenceScheduler = "lookoutequipment:StopInferenceScheduler"
      StopRetrainingScheduler = "lookoutequipment:StopRetrainingScheduler"
      TagResource = "lookoutequipment:TagResource"
      UntagResource = "lookoutequipment:UntagResource"
      UpdateActiveModelVersion = "lookoutequipment:UpdateActiveModelVersion"
      UpdateInferenceScheduler = "lookoutequipment:UpdateInferenceScheduler"
      UpdateLabelGroup = "lookoutequipment:UpdateLabelGroup"
      UpdateModel = "lookoutequipment:UpdateModel"
      UpdateRetrainingScheduler = "lookoutequipment:UpdateRetrainingScheduler"
    }
    lookoutmetrics = {
      AllActions = "lookoutmetrics:*"
      ActivateAnomalyDetector = "lookoutmetrics:ActivateAnomalyDetector"
      BackTestAnomalyDetector = "lookoutmetrics:BackTestAnomalyDetector"
      CreateAlert = "lookoutmetrics:CreateAlert"
      CreateAnomalyDetector = "lookoutmetrics:CreateAnomalyDetector"
      CreateMetricSet = "lookoutmetrics:CreateMetricSet"
      DeactivateAnomalyDetector = "lookoutmetrics:DeactivateAnomalyDetector"
      DeleteAlert = "lookoutmetrics:DeleteAlert"
      DeleteAnomalyDetector = "lookoutmetrics:DeleteAnomalyDetector"
      DescribeAlert = "lookoutmetrics:DescribeAlert"
      DescribeAnomalyDetectionExecutions = "lookoutmetrics:DescribeAnomalyDetectionExecutions"
      DescribeAnomalyDetector = "lookoutmetrics:DescribeAnomalyDetector"
      DescribeMetricSet = "lookoutmetrics:DescribeMetricSet"
      DetectMetricSetConfig = "lookoutmetrics:DetectMetricSetConfig"
      GetAnomalyGroup = "lookoutmetrics:GetAnomalyGroup"
      GetDataQualityMetrics = "lookoutmetrics:GetDataQualityMetrics"
      GetFeedback = "lookoutmetrics:GetFeedback"
      GetSampleData = "lookoutmetrics:GetSampleData"
      ListAlerts = "lookoutmetrics:ListAlerts"
      ListAnomalyDetectors = "lookoutmetrics:ListAnomalyDetectors"
      ListAnomalyGroupRelatedMetrics = "lookoutmetrics:ListAnomalyGroupRelatedMetrics"
      ListAnomalyGroupSummaries = "lookoutmetrics:ListAnomalyGroupSummaries"
      ListAnomalyGroupTimeSeries = "lookoutmetrics:ListAnomalyGroupTimeSeries"
      ListMetricSets = "lookoutmetrics:ListMetricSets"
      ListTagsForResource = "lookoutmetrics:ListTagsForResource"
      PutFeedback = "lookoutmetrics:PutFeedback"
      TagResource = "lookoutmetrics:TagResource"
      UntagResource = "lookoutmetrics:UntagResource"
      UpdateAlert = "lookoutmetrics:UpdateAlert"
      UpdateAnomalyDetector = "lookoutmetrics:UpdateAnomalyDetector"
      UpdateMetricSet = "lookoutmetrics:UpdateMetricSet"
    }
    lookoutvision = {
      AllActions = "lookoutvision:*"
      CreateDataset = "lookoutvision:CreateDataset"
      CreateModel = "lookoutvision:CreateModel"
      CreateProject = "lookoutvision:CreateProject"
      DeleteDataset = "lookoutvision:DeleteDataset"
      DeleteModel = "lookoutvision:DeleteModel"
      DeleteProject = "lookoutvision:DeleteProject"
      DescribeDataset = "lookoutvision:DescribeDataset"
      DescribeModel = "lookoutvision:DescribeModel"
      DescribeModelPackagingJob = "lookoutvision:DescribeModelPackagingJob"
      DescribeProject = "lookoutvision:DescribeProject"
      DescribeTrialDetection = "lookoutvision:DescribeTrialDetection"
      DetectAnomalies = "lookoutvision:DetectAnomalies"
      ListDatasetEntries = "lookoutvision:ListDatasetEntries"
      ListModelPackagingJobs = "lookoutvision:ListModelPackagingJobs"
      ListModels = "lookoutvision:ListModels"
      ListProjects = "lookoutvision:ListProjects"
      ListTagsForResource = "lookoutvision:ListTagsForResource"
      ListTrialDetections = "lookoutvision:ListTrialDetections"
      StartModel = "lookoutvision:StartModel"
      StartModelPackagingJob = "lookoutvision:StartModelPackagingJob"
      StartTrialDetection = "lookoutvision:StartTrialDetection"
      StopModel = "lookoutvision:StopModel"
      TagResource = "lookoutvision:TagResource"
      UntagResource = "lookoutvision:UntagResource"
      UpdateDatasetEntries = "lookoutvision:UpdateDatasetEntries"
    }
    m2 = {
      AllActions = "m2:*"
      CancelBatchJobExecution = "m2:CancelBatchJobExecution"
      CreateApplication = "m2:CreateApplication"
      CreateDataSetImportTask = "m2:CreateDataSetImportTask"
      CreateDeployment = "m2:CreateDeployment"
      CreateEnvironment = "m2:CreateEnvironment"
      DeleteApplication = "m2:DeleteApplication"
      DeleteApplicationFromEnvironment = "m2:DeleteApplicationFromEnvironment"
      DeleteEnvironment = "m2:DeleteEnvironment"
      GetApplication = "m2:GetApplication"
      GetApplicationVersion = "m2:GetApplicationVersion"
      GetBatchJobExecution = "m2:GetBatchJobExecution"
      GetDataSetDetails = "m2:GetDataSetDetails"
      GetDataSetImportTask = "m2:GetDataSetImportTask"
      GetDeployment = "m2:GetDeployment"
      GetEnvironment = "m2:GetEnvironment"
      GetSignedBluinsightsUrl = "m2:GetSignedBluinsightsUrl"
      ListApplicationVersions = "m2:ListApplicationVersions"
      ListApplications = "m2:ListApplications"
      ListBatchJobDefinitions = "m2:ListBatchJobDefinitions"
      ListBatchJobExecutions = "m2:ListBatchJobExecutions"
      ListBatchJobRestartPoints = "m2:ListBatchJobRestartPoints"
      ListDataSetImportHistory = "m2:ListDataSetImportHistory"
      ListDataSets = "m2:ListDataSets"
      ListDeployments = "m2:ListDeployments"
      ListEngineVersions = "m2:ListEngineVersions"
      ListEnvironments = "m2:ListEnvironments"
      ListTagsForResource = "m2:ListTagsForResource"
      StartApplication = "m2:StartApplication"
      StartBatchJob = "m2:StartBatchJob"
      StopApplication = "m2:StopApplication"
      TagResource = "m2:TagResource"
      UntagResource = "m2:UntagResource"
      UpdateApplication = "m2:UpdateApplication"
      UpdateEnvironment = "m2:UpdateEnvironment"
    }
    machinelearning = {
      AllActions = "machinelearning:*"
      AddTags = "machinelearning:AddTags"
      CreateBatchPrediction = "machinelearning:CreateBatchPrediction"
      CreateDataSourceFromRDS = "machinelearning:CreateDataSourceFromRDS"
      CreateDataSourceFromRedshift = "machinelearning:CreateDataSourceFromRedshift"
      CreateDataSourceFromS3 = "machinelearning:CreateDataSourceFromS3"
      CreateEvaluation = "machinelearning:CreateEvaluation"
      CreateMLModel = "machinelearning:CreateMLModel"
      CreateRealtimeEndpoint = "machinelearning:CreateRealtimeEndpoint"
      DeleteBatchPrediction = "machinelearning:DeleteBatchPrediction"
      DeleteDataSource = "machinelearning:DeleteDataSource"
      DeleteEvaluation = "machinelearning:DeleteEvaluation"
      DeleteMLModel = "machinelearning:DeleteMLModel"
      DeleteRealtimeEndpoint = "machinelearning:DeleteRealtimeEndpoint"
      DeleteTags = "machinelearning:DeleteTags"
      DescribeBatchPredictions = "machinelearning:DescribeBatchPredictions"
      DescribeDataSources = "machinelearning:DescribeDataSources"
      DescribeEvaluations = "machinelearning:DescribeEvaluations"
      DescribeMLModels = "machinelearning:DescribeMLModels"
      DescribeTags = "machinelearning:DescribeTags"
      GetBatchPrediction = "machinelearning:GetBatchPrediction"
      GetDataSource = "machinelearning:GetDataSource"
      GetEvaluation = "machinelearning:GetEvaluation"
      GetMLModel = "machinelearning:GetMLModel"
      Predict = "machinelearning:Predict"
      UpdateBatchPrediction = "machinelearning:UpdateBatchPrediction"
      UpdateDataSource = "machinelearning:UpdateDataSource"
      UpdateEvaluation = "machinelearning:UpdateEvaluation"
      UpdateMLModel = "machinelearning:UpdateMLModel"
    }
    macie2 = {
      AllActions = "macie2:*"
      AcceptInvitation = "macie2:AcceptInvitation"
      BatchGetCustomDataIdentifiers = "macie2:BatchGetCustomDataIdentifiers"
      CreateAllowList = "macie2:CreateAllowList"
      CreateClassificationJob = "macie2:CreateClassificationJob"
      CreateCustomDataIdentifier = "macie2:CreateCustomDataIdentifier"
      CreateFindingsFilter = "macie2:CreateFindingsFilter"
      CreateInvitations = "macie2:CreateInvitations"
      CreateMember = "macie2:CreateMember"
      CreateSampleFindings = "macie2:CreateSampleFindings"
      DeclineInvitations = "macie2:DeclineInvitations"
      DeleteAllowList = "macie2:DeleteAllowList"
      DeleteCustomDataIdentifier = "macie2:DeleteCustomDataIdentifier"
      DeleteFindingsFilter = "macie2:DeleteFindingsFilter"
      DeleteInvitations = "macie2:DeleteInvitations"
      DeleteMember = "macie2:DeleteMember"
      DescribeBuckets = "macie2:DescribeBuckets"
      DescribeClassificationJob = "macie2:DescribeClassificationJob"
      DescribeOrganizationConfiguration = "macie2:DescribeOrganizationConfiguration"
      DisableMacie = "macie2:DisableMacie"
      DisableOrganizationAdminAccount = "macie2:DisableOrganizationAdminAccount"
      DisassociateFromAdministratorAccount = "macie2:DisassociateFromAdministratorAccount"
      DisassociateFromMasterAccount = "macie2:DisassociateFromMasterAccount"
      DisassociateMember = "macie2:DisassociateMember"
      EnableMacie = "macie2:EnableMacie"
      EnableOrganizationAdminAccount = "macie2:EnableOrganizationAdminAccount"
      GetAdministratorAccount = "macie2:GetAdministratorAccount"
      GetAllowList = "macie2:GetAllowList"
      GetAutomatedDiscoveryConfiguration = "macie2:GetAutomatedDiscoveryConfiguration"
      GetBucketStatistics = "macie2:GetBucketStatistics"
      GetClassificationExportConfiguration = "macie2:GetClassificationExportConfiguration"
      GetClassificationScope = "macie2:GetClassificationScope"
      GetCustomDataIdentifier = "macie2:GetCustomDataIdentifier"
      GetFindingStatistics = "macie2:GetFindingStatistics"
      GetFindings = "macie2:GetFindings"
      GetFindingsFilter = "macie2:GetFindingsFilter"
      GetFindingsPublicationConfiguration = "macie2:GetFindingsPublicationConfiguration"
      GetInvitationsCount = "macie2:GetInvitationsCount"
      GetMacieSession = "macie2:GetMacieSession"
      GetMasterAccount = "macie2:GetMasterAccount"
      GetMember = "macie2:GetMember"
      GetResourceProfile = "macie2:GetResourceProfile"
      GetRevealConfiguration = "macie2:GetRevealConfiguration"
      GetSensitiveDataOccurrences = "macie2:GetSensitiveDataOccurrences"
      GetSensitiveDataOccurrencesAvailability = "macie2:GetSensitiveDataOccurrencesAvailability"
      GetSensitivityInspectionTemplate = "macie2:GetSensitivityInspectionTemplate"
      GetUsageStatistics = "macie2:GetUsageStatistics"
      GetUsageTotals = "macie2:GetUsageTotals"
      ListAllowLists = "macie2:ListAllowLists"
      ListClassificationJobs = "macie2:ListClassificationJobs"
      ListClassificationScopes = "macie2:ListClassificationScopes"
      ListCustomDataIdentifiers = "macie2:ListCustomDataIdentifiers"
      ListFindings = "macie2:ListFindings"
      ListFindingsFilters = "macie2:ListFindingsFilters"
      ListInvitations = "macie2:ListInvitations"
      ListManagedDataIdentifiers = "macie2:ListManagedDataIdentifiers"
      ListMembers = "macie2:ListMembers"
      ListOrganizationAdminAccounts = "macie2:ListOrganizationAdminAccounts"
      ListResourceProfileArtifacts = "macie2:ListResourceProfileArtifacts"
      ListResourceProfileDetections = "macie2:ListResourceProfileDetections"
      ListSensitivityInspectionTemplates = "macie2:ListSensitivityInspectionTemplates"
      ListTagsForResource = "macie2:ListTagsForResource"
      PutClassificationExportConfiguration = "macie2:PutClassificationExportConfiguration"
      PutFindingsPublicationConfiguration = "macie2:PutFindingsPublicationConfiguration"
      SearchResources = "macie2:SearchResources"
      TagResource = "macie2:TagResource"
      TestCustomDataIdentifier = "macie2:TestCustomDataIdentifier"
      UntagResource = "macie2:UntagResource"
      UpdateAllowList = "macie2:UpdateAllowList"
      UpdateAutomatedDiscoveryConfiguration = "macie2:UpdateAutomatedDiscoveryConfiguration"
      UpdateClassificationJob = "macie2:UpdateClassificationJob"
      UpdateClassificationScope = "macie2:UpdateClassificationScope"
      UpdateFindingsFilter = "macie2:UpdateFindingsFilter"
      UpdateMacieSession = "macie2:UpdateMacieSession"
      UpdateMemberSession = "macie2:UpdateMemberSession"
      UpdateOrganizationConfiguration = "macie2:UpdateOrganizationConfiguration"
      UpdateResourceProfile = "macie2:UpdateResourceProfile"
      UpdateResourceProfileDetections = "macie2:UpdateResourceProfileDetections"
      UpdateRevealConfiguration = "macie2:UpdateRevealConfiguration"
      UpdateSensitivityInspectionTemplate = "macie2:UpdateSensitivityInspectionTemplate"
    }
    managedblockchain-query = {
      AllActions = "managedblockchain-query:*"
      BatchGetTokenBalance = "managedblockchain-query:BatchGetTokenBalance"
      GetAssetContract = "managedblockchain-query:GetAssetContract"
      GetTokenBalance = "managedblockchain-query:GetTokenBalance"
      GetTransaction = "managedblockchain-query:GetTransaction"
      ListAssetContracts = "managedblockchain-query:ListAssetContracts"
      ListFilteredTransactionEvents = "managedblockchain-query:ListFilteredTransactionEvents"
      ListTokenBalances = "managedblockchain-query:ListTokenBalances"
      ListTransactionEvents = "managedblockchain-query:ListTransactionEvents"
      ListTransactions = "managedblockchain-query:ListTransactions"
    }
    managedblockchain = {
      AllActions = "managedblockchain:*"
      CreateAccessor = "managedblockchain:CreateAccessor"
      CreateMember = "managedblockchain:CreateMember"
      CreateNetwork = "managedblockchain:CreateNetwork"
      CreateNode = "managedblockchain:CreateNode"
      CreateProposal = "managedblockchain:CreateProposal"
      DeleteAccessor = "managedblockchain:DeleteAccessor"
      DeleteMember = "managedblockchain:DeleteMember"
      DeleteNode = "managedblockchain:DeleteNode"
      GET = "managedblockchain:GET"
      GetAccessor = "managedblockchain:GetAccessor"
      GetMember = "managedblockchain:GetMember"
      GetNetwork = "managedblockchain:GetNetwork"
      GetNode = "managedblockchain:GetNode"
      GetProposal = "managedblockchain:GetProposal"
      Invoke = "managedblockchain:Invoke"
      InvokeRpcBitcoinMainnet = "managedblockchain:InvokeRpcBitcoinMainnet"
      InvokeRpcBitcoinTestnet = "managedblockchain:InvokeRpcBitcoinTestnet"
      InvokeRpcPolygonMainnet = "managedblockchain:InvokeRpcPolygonMainnet"
      InvokeRpcPolygonMumbaiTestnet = "managedblockchain:InvokeRpcPolygonMumbaiTestnet"
      ListAccessors = "managedblockchain:ListAccessors"
      ListInvitations = "managedblockchain:ListInvitations"
      ListMembers = "managedblockchain:ListMembers"
      ListNetworks = "managedblockchain:ListNetworks"
      ListNodes = "managedblockchain:ListNodes"
      ListProposalVotes = "managedblockchain:ListProposalVotes"
      ListProposals = "managedblockchain:ListProposals"
      ListTagsForResource = "managedblockchain:ListTagsForResource"
      POST = "managedblockchain:POST"
      RejectInvitation = "managedblockchain:RejectInvitation"
      TagResource = "managedblockchain:TagResource"
      UntagResource = "managedblockchain:UntagResource"
      UpdateMember = "managedblockchain:UpdateMember"
      UpdateNode = "managedblockchain:UpdateNode"
      VoteOnProposal = "managedblockchain:VoteOnProposal"
    }
    mapcredits = {
      AllActions = "mapcredits:*"
      ListAssociatedPrograms = "mapcredits:ListAssociatedPrograms"
      ListQuarterCredits = "mapcredits:ListQuarterCredits"
      ListQuarterSpend = "mapcredits:ListQuarterSpend"
    }
    marketplacecommerceanalytics = {
      AllActions = "marketplacecommerceanalytics:*"
      GenerateDataSet = "marketplacecommerceanalytics:GenerateDataSet"
      StartSupportDataExport = "marketplacecommerceanalytics:StartSupportDataExport"
    }
    mechanicalturk = {
      AllActions = "mechanicalturk:*"
      AcceptQualificationRequest = "mechanicalturk:AcceptQualificationRequest"
      ApproveAssignment = "mechanicalturk:ApproveAssignment"
      AssociateQualificationWithWorker = "mechanicalturk:AssociateQualificationWithWorker"
      CreateAdditionalAssignmentsForHIT = "mechanicalturk:CreateAdditionalAssignmentsForHIT"
      CreateHIT = "mechanicalturk:CreateHIT"
      CreateHITType = "mechanicalturk:CreateHITType"
      CreateHITWithHITType = "mechanicalturk:CreateHITWithHITType"
      CreateQualificationType = "mechanicalturk:CreateQualificationType"
      CreateWorkerBlock = "mechanicalturk:CreateWorkerBlock"
      DeleteHIT = "mechanicalturk:DeleteHIT"
      DeleteQualificationType = "mechanicalturk:DeleteQualificationType"
      DeleteWorkerBlock = "mechanicalturk:DeleteWorkerBlock"
      DisassociateQualificationFromWorker = "mechanicalturk:DisassociateQualificationFromWorker"
      GetAccountBalance = "mechanicalturk:GetAccountBalance"
      GetAssignment = "mechanicalturk:GetAssignment"
      GetFileUploadURL = "mechanicalturk:GetFileUploadURL"
      GetHIT = "mechanicalturk:GetHIT"
      GetQualificationScore = "mechanicalturk:GetQualificationScore"
      GetQualificationType = "mechanicalturk:GetQualificationType"
      ListAssignmentsForHIT = "mechanicalturk:ListAssignmentsForHIT"
      ListBonusPayments = "mechanicalturk:ListBonusPayments"
      ListHITs = "mechanicalturk:ListHITs"
      ListHITsForQualificationType = "mechanicalturk:ListHITsForQualificationType"
      ListQualificationRequests = "mechanicalturk:ListQualificationRequests"
      ListQualificationTypes = "mechanicalturk:ListQualificationTypes"
      ListReviewPolicyResultsForHIT = "mechanicalturk:ListReviewPolicyResultsForHIT"
      ListReviewableHITs = "mechanicalturk:ListReviewableHITs"
      ListWorkerBlocks = "mechanicalturk:ListWorkerBlocks"
      ListWorkersWithQualificationType = "mechanicalturk:ListWorkersWithQualificationType"
      NotifyWorkers = "mechanicalturk:NotifyWorkers"
      RejectAssignment = "mechanicalturk:RejectAssignment"
      RejectQualificationRequest = "mechanicalturk:RejectQualificationRequest"
      SendBonus = "mechanicalturk:SendBonus"
      SendTestEventNotification = "mechanicalturk:SendTestEventNotification"
      UpdateExpirationForHIT = "mechanicalturk:UpdateExpirationForHIT"
      UpdateHITReviewStatus = "mechanicalturk:UpdateHITReviewStatus"
      UpdateHITTypeOfHIT = "mechanicalturk:UpdateHITTypeOfHIT"
      UpdateNotificationSettings = "mechanicalturk:UpdateNotificationSettings"
      UpdateQualificationType = "mechanicalturk:UpdateQualificationType"
    }
    mediaconnect = {
      AllActions = "mediaconnect:*"
      AddBridgeOutputs = "mediaconnect:AddBridgeOutputs"
      AddBridgeSources = "mediaconnect:AddBridgeSources"
      AddFlowMediaStreams = "mediaconnect:AddFlowMediaStreams"
      AddFlowOutputs = "mediaconnect:AddFlowOutputs"
      AddFlowSources = "mediaconnect:AddFlowSources"
      AddFlowVpcInterfaces = "mediaconnect:AddFlowVpcInterfaces"
      CreateBridge = "mediaconnect:CreateBridge"
      CreateFlow = "mediaconnect:CreateFlow"
      CreateGateway = "mediaconnect:CreateGateway"
      DeleteBridge = "mediaconnect:DeleteBridge"
      DeleteFlow = "mediaconnect:DeleteFlow"
      DeleteGateway = "mediaconnect:DeleteGateway"
      DeregisterGatewayInstance = "mediaconnect:DeregisterGatewayInstance"
      DescribeBridge = "mediaconnect:DescribeBridge"
      DescribeFlow = "mediaconnect:DescribeFlow"
      DescribeFlowSourceMetadata = "mediaconnect:DescribeFlowSourceMetadata"
      DescribeGateway = "mediaconnect:DescribeGateway"
      DescribeGatewayInstance = "mediaconnect:DescribeGatewayInstance"
      DescribeOffering = "mediaconnect:DescribeOffering"
      DescribeReservation = "mediaconnect:DescribeReservation"
      DiscoverGatewayPollEndpoint = "mediaconnect:DiscoverGatewayPollEndpoint"
      GrantFlowEntitlements = "mediaconnect:GrantFlowEntitlements"
      ListBridges = "mediaconnect:ListBridges"
      ListEntitlements = "mediaconnect:ListEntitlements"
      ListFlows = "mediaconnect:ListFlows"
      ListGatewayInstances = "mediaconnect:ListGatewayInstances"
      ListGateways = "mediaconnect:ListGateways"
      ListOfferings = "mediaconnect:ListOfferings"
      ListReservations = "mediaconnect:ListReservations"
      ListTagsForResource = "mediaconnect:ListTagsForResource"
      PollGateway = "mediaconnect:PollGateway"
      PurchaseOffering = "mediaconnect:PurchaseOffering"
      RemoveBridgeOutput = "mediaconnect:RemoveBridgeOutput"
      RemoveBridgeSource = "mediaconnect:RemoveBridgeSource"
      RemoveFlowMediaStream = "mediaconnect:RemoveFlowMediaStream"
      RemoveFlowOutput = "mediaconnect:RemoveFlowOutput"
      RemoveFlowSource = "mediaconnect:RemoveFlowSource"
      RemoveFlowVpcInterface = "mediaconnect:RemoveFlowVpcInterface"
      RevokeFlowEntitlement = "mediaconnect:RevokeFlowEntitlement"
      StartFlow = "mediaconnect:StartFlow"
      StopFlow = "mediaconnect:StopFlow"
      SubmitGatewayStateChange = "mediaconnect:SubmitGatewayStateChange"
      TagResource = "mediaconnect:TagResource"
      UntagResource = "mediaconnect:UntagResource"
      UpdateBridge = "mediaconnect:UpdateBridge"
      UpdateBridgeOutput = "mediaconnect:UpdateBridgeOutput"
      UpdateBridgeSource = "mediaconnect:UpdateBridgeSource"
      UpdateBridgeState = "mediaconnect:UpdateBridgeState"
      UpdateFlow = "mediaconnect:UpdateFlow"
      UpdateFlowEntitlement = "mediaconnect:UpdateFlowEntitlement"
      UpdateFlowMediaStream = "mediaconnect:UpdateFlowMediaStream"
      UpdateFlowOutput = "mediaconnect:UpdateFlowOutput"
      UpdateFlowSource = "mediaconnect:UpdateFlowSource"
      UpdateGatewayInstance = "mediaconnect:UpdateGatewayInstance"
    }
    mediaconvert = {
      AllActions = "mediaconvert:*"
      AssociateCertificate = "mediaconvert:AssociateCertificate"
      CancelJob = "mediaconvert:CancelJob"
      CreateJob = "mediaconvert:CreateJob"
      CreateJobTemplate = "mediaconvert:CreateJobTemplate"
      CreatePreset = "mediaconvert:CreatePreset"
      CreateQueue = "mediaconvert:CreateQueue"
      DeleteJobTemplate = "mediaconvert:DeleteJobTemplate"
      DeletePolicy = "mediaconvert:DeletePolicy"
      DeletePreset = "mediaconvert:DeletePreset"
      DeleteQueue = "mediaconvert:DeleteQueue"
      DescribeEndpoints = "mediaconvert:DescribeEndpoints"
      DisassociateCertificate = "mediaconvert:DisassociateCertificate"
      GetJob = "mediaconvert:GetJob"
      GetJobTemplate = "mediaconvert:GetJobTemplate"
      GetPolicy = "mediaconvert:GetPolicy"
      GetPreset = "mediaconvert:GetPreset"
      GetQueue = "mediaconvert:GetQueue"
      ListJobTemplates = "mediaconvert:ListJobTemplates"
      ListJobs = "mediaconvert:ListJobs"
      ListPresets = "mediaconvert:ListPresets"
      ListQueues = "mediaconvert:ListQueues"
      ListTagsForResource = "mediaconvert:ListTagsForResource"
      PutPolicy = "mediaconvert:PutPolicy"
      TagResource = "mediaconvert:TagResource"
      UntagResource = "mediaconvert:UntagResource"
      UpdateJobTemplate = "mediaconvert:UpdateJobTemplate"
      UpdatePreset = "mediaconvert:UpdatePreset"
      UpdateQueue = "mediaconvert:UpdateQueue"
    }
    mediaimport = {
      AllActions = "mediaimport:*"
      CreateDatabaseBinarySnapshot = "mediaimport:CreateDatabaseBinarySnapshot"
    }
    medialive = {
      AllActions = "medialive:*"
      AcceptInputDeviceTransfer = "medialive:AcceptInputDeviceTransfer"
      BatchDelete = "medialive:BatchDelete"
      BatchStart = "medialive:BatchStart"
      BatchStop = "medialive:BatchStop"
      BatchUpdateSchedule = "medialive:BatchUpdateSchedule"
      CancelInputDeviceTransfer = "medialive:CancelInputDeviceTransfer"
      ClaimDevice = "medialive:ClaimDevice"
      CreateChannel = "medialive:CreateChannel"
      CreateCloudWatchAlarmTemplate = "medialive:CreateCloudWatchAlarmTemplate"
      CreateCloudWatchAlarmTemplateGroup = "medialive:CreateCloudWatchAlarmTemplateGroup"
      CreateEventBridgeRuleTemplate = "medialive:CreateEventBridgeRuleTemplate"
      CreateEventBridgeRuleTemplateGroup = "medialive:CreateEventBridgeRuleTemplateGroup"
      CreateInput = "medialive:CreateInput"
      CreateInputSecurityGroup = "medialive:CreateInputSecurityGroup"
      CreateMultiplex = "medialive:CreateMultiplex"
      CreateMultiplexProgram = "medialive:CreateMultiplexProgram"
      CreatePartnerInput = "medialive:CreatePartnerInput"
      CreateSignalMap = "medialive:CreateSignalMap"
      CreateTags = "medialive:CreateTags"
      DeleteChannel = "medialive:DeleteChannel"
      DeleteCloudWatchAlarmTemplate = "medialive:DeleteCloudWatchAlarmTemplate"
      DeleteCloudWatchAlarmTemplateGroup = "medialive:DeleteCloudWatchAlarmTemplateGroup"
      DeleteEventBridgeRuleTemplate = "medialive:DeleteEventBridgeRuleTemplate"
      DeleteEventBridgeRuleTemplateGroup = "medialive:DeleteEventBridgeRuleTemplateGroup"
      DeleteInput = "medialive:DeleteInput"
      DeleteInputSecurityGroup = "medialive:DeleteInputSecurityGroup"
      DeleteMultiplex = "medialive:DeleteMultiplex"
      DeleteMultiplexProgram = "medialive:DeleteMultiplexProgram"
      DeleteReservation = "medialive:DeleteReservation"
      DeleteSchedule = "medialive:DeleteSchedule"
      DeleteSignalMap = "medialive:DeleteSignalMap"
      DeleteTags = "medialive:DeleteTags"
      DescribeAccountConfiguration = "medialive:DescribeAccountConfiguration"
      DescribeChannel = "medialive:DescribeChannel"
      DescribeInput = "medialive:DescribeInput"
      DescribeInputDevice = "medialive:DescribeInputDevice"
      DescribeInputDeviceThumbnail = "medialive:DescribeInputDeviceThumbnail"
      DescribeInputSecurityGroup = "medialive:DescribeInputSecurityGroup"
      DescribeMultiplex = "medialive:DescribeMultiplex"
      DescribeMultiplexProgram = "medialive:DescribeMultiplexProgram"
      DescribeOffering = "medialive:DescribeOffering"
      DescribeReservation = "medialive:DescribeReservation"
      DescribeSchedule = "medialive:DescribeSchedule"
      DescribeThumbnails = "medialive:DescribeThumbnails"
      GetCloudWatchAlarmTemplate = "medialive:GetCloudWatchAlarmTemplate"
      GetCloudWatchAlarmTemplateGroup = "medialive:GetCloudWatchAlarmTemplateGroup"
      GetEventBridgeRuleTemplate = "medialive:GetEventBridgeRuleTemplate"
      GetEventBridgeRuleTemplateGroup = "medialive:GetEventBridgeRuleTemplateGroup"
      GetSignalMap = "medialive:GetSignalMap"
      ListChannels = "medialive:ListChannels"
      ListCloudWatchAlarmTemplateGroups = "medialive:ListCloudWatchAlarmTemplateGroups"
      ListCloudWatchAlarmTemplates = "medialive:ListCloudWatchAlarmTemplates"
      ListEventBridgeRuleTemplateGroups = "medialive:ListEventBridgeRuleTemplateGroups"
      ListEventBridgeRuleTemplates = "medialive:ListEventBridgeRuleTemplates"
      ListInputDeviceTransfers = "medialive:ListInputDeviceTransfers"
      ListInputDevices = "medialive:ListInputDevices"
      ListInputSecurityGroups = "medialive:ListInputSecurityGroups"
      ListInputs = "medialive:ListInputs"
      ListMultiplexPrograms = "medialive:ListMultiplexPrograms"
      ListMultiplexes = "medialive:ListMultiplexes"
      ListOfferings = "medialive:ListOfferings"
      ListReservations = "medialive:ListReservations"
      ListSignalMaps = "medialive:ListSignalMaps"
      ListTagsForResource = "medialive:ListTagsForResource"
      PurchaseOffering = "medialive:PurchaseOffering"
      RebootInputDevice = "medialive:RebootInputDevice"
      RejectInputDeviceTransfer = "medialive:RejectInputDeviceTransfer"
      RestartChannelPipelines = "medialive:RestartChannelPipelines"
      StartChannel = "medialive:StartChannel"
      StartDeleteMonitorDeployment = "medialive:StartDeleteMonitorDeployment"
      StartInputDevice = "medialive:StartInputDevice"
      StartInputDeviceMaintenanceWindow = "medialive:StartInputDeviceMaintenanceWindow"
      StartMonitorDeployment = "medialive:StartMonitorDeployment"
      StartMultiplex = "medialive:StartMultiplex"
      StartUpdateSignalMap = "medialive:StartUpdateSignalMap"
      StopChannel = "medialive:StopChannel"
      StopInputDevice = "medialive:StopInputDevice"
      StopMultiplex = "medialive:StopMultiplex"
      TransferInputDevice = "medialive:TransferInputDevice"
      UpdateAccountConfiguration = "medialive:UpdateAccountConfiguration"
      UpdateChannel = "medialive:UpdateChannel"
      UpdateChannelClass = "medialive:UpdateChannelClass"
      UpdateCloudWatchAlarmTemplate = "medialive:UpdateCloudWatchAlarmTemplate"
      UpdateCloudWatchAlarmTemplateGroup = "medialive:UpdateCloudWatchAlarmTemplateGroup"
      UpdateEventBridgeRuleTemplate = "medialive:UpdateEventBridgeRuleTemplate"
      UpdateEventBridgeRuleTemplateGroup = "medialive:UpdateEventBridgeRuleTemplateGroup"
      UpdateInput = "medialive:UpdateInput"
      UpdateInputDevice = "medialive:UpdateInputDevice"
      UpdateInputSecurityGroup = "medialive:UpdateInputSecurityGroup"
      UpdateMultiplex = "medialive:UpdateMultiplex"
      UpdateMultiplexProgram = "medialive:UpdateMultiplexProgram"
      UpdateReservation = "medialive:UpdateReservation"
    }
    mediapackage-vod = {
      AllActions = "mediapackage-vod:*"
      ConfigureLogs = "mediapackage-vod:ConfigureLogs"
      CreateAsset = "mediapackage-vod:CreateAsset"
      CreatePackagingConfiguration = "mediapackage-vod:CreatePackagingConfiguration"
      CreatePackagingGroup = "mediapackage-vod:CreatePackagingGroup"
      DeleteAsset = "mediapackage-vod:DeleteAsset"
      DeletePackagingConfiguration = "mediapackage-vod:DeletePackagingConfiguration"
      DeletePackagingGroup = "mediapackage-vod:DeletePackagingGroup"
      DescribeAsset = "mediapackage-vod:DescribeAsset"
      DescribePackagingConfiguration = "mediapackage-vod:DescribePackagingConfiguration"
      DescribePackagingGroup = "mediapackage-vod:DescribePackagingGroup"
      ListAssets = "mediapackage-vod:ListAssets"
      ListPackagingConfigurations = "mediapackage-vod:ListPackagingConfigurations"
      ListPackagingGroups = "mediapackage-vod:ListPackagingGroups"
      ListTagsForResource = "mediapackage-vod:ListTagsForResource"
      TagResource = "mediapackage-vod:TagResource"
      UntagResource = "mediapackage-vod:UntagResource"
      UpdatePackagingGroup = "mediapackage-vod:UpdatePackagingGroup"
    }
    mediapackage = {
      AllActions = "mediapackage:*"
      ConfigureLogs = "mediapackage:ConfigureLogs"
      CreateChannel = "mediapackage:CreateChannel"
      CreateHarvestJob = "mediapackage:CreateHarvestJob"
      CreateOriginEndpoint = "mediapackage:CreateOriginEndpoint"
      DeleteChannel = "mediapackage:DeleteChannel"
      DeleteOriginEndpoint = "mediapackage:DeleteOriginEndpoint"
      DescribeChannel = "mediapackage:DescribeChannel"
      DescribeHarvestJob = "mediapackage:DescribeHarvestJob"
      DescribeOriginEndpoint = "mediapackage:DescribeOriginEndpoint"
      ListChannels = "mediapackage:ListChannels"
      ListHarvestJobs = "mediapackage:ListHarvestJobs"
      ListOriginEndpoints = "mediapackage:ListOriginEndpoints"
      ListTagsForResource = "mediapackage:ListTagsForResource"
      RotateChannelCredentials = "mediapackage:RotateChannelCredentials"
      RotateIngestEndpointCredentials = "mediapackage:RotateIngestEndpointCredentials"
      TagResource = "mediapackage:TagResource"
      UntagResource = "mediapackage:UntagResource"
      UpdateChannel = "mediapackage:UpdateChannel"
      UpdateOriginEndpoint = "mediapackage:UpdateOriginEndpoint"
    }
    mediapackagev2 = {
      AllActions = "mediapackagev2:*"
      CreateChannel = "mediapackagev2:CreateChannel"
      CreateChannelGroup = "mediapackagev2:CreateChannelGroup"
      CreateOriginEndpoint = "mediapackagev2:CreateOriginEndpoint"
      DeleteChannel = "mediapackagev2:DeleteChannel"
      DeleteChannelGroup = "mediapackagev2:DeleteChannelGroup"
      DeleteChannelPolicy = "mediapackagev2:DeleteChannelPolicy"
      DeleteOriginEndpoint = "mediapackagev2:DeleteOriginEndpoint"
      DeleteOriginEndpointPolicy = "mediapackagev2:DeleteOriginEndpointPolicy"
      GetChannel = "mediapackagev2:GetChannel"
      GetChannelGroup = "mediapackagev2:GetChannelGroup"
      GetChannelPolicy = "mediapackagev2:GetChannelPolicy"
      GetHeadObject = "mediapackagev2:GetHeadObject"
      GetObject = "mediapackagev2:GetObject"
      GetOriginEndpoint = "mediapackagev2:GetOriginEndpoint"
      GetOriginEndpointPolicy = "mediapackagev2:GetOriginEndpointPolicy"
      ListChannelGroups = "mediapackagev2:ListChannelGroups"
      ListChannels = "mediapackagev2:ListChannels"
      ListOriginEndpoints = "mediapackagev2:ListOriginEndpoints"
      ListTagsForResource = "mediapackagev2:ListTagsForResource"
      PutChannelPolicy = "mediapackagev2:PutChannelPolicy"
      PutObject = "mediapackagev2:PutObject"
      PutOriginEndpointPolicy = "mediapackagev2:PutOriginEndpointPolicy"
      TagResource = "mediapackagev2:TagResource"
      UntagResource = "mediapackagev2:UntagResource"
      UpdateChannel = "mediapackagev2:UpdateChannel"
      UpdateChannelGroup = "mediapackagev2:UpdateChannelGroup"
      UpdateOriginEndpoint = "mediapackagev2:UpdateOriginEndpoint"
    }
    mediastore = {
      AllActions = "mediastore:*"
      CreateContainer = "mediastore:CreateContainer"
      DeleteContainer = "mediastore:DeleteContainer"
      DeleteContainerPolicy = "mediastore:DeleteContainerPolicy"
      DeleteCorsPolicy = "mediastore:DeleteCorsPolicy"
      DeleteLifecyclePolicy = "mediastore:DeleteLifecyclePolicy"
      DeleteMetricPolicy = "mediastore:DeleteMetricPolicy"
      DeleteObject = "mediastore:DeleteObject"
      DescribeContainer = "mediastore:DescribeContainer"
      DescribeObject = "mediastore:DescribeObject"
      GetContainerPolicy = "mediastore:GetContainerPolicy"
      GetCorsPolicy = "mediastore:GetCorsPolicy"
      GetLifecyclePolicy = "mediastore:GetLifecyclePolicy"
      GetMetricPolicy = "mediastore:GetMetricPolicy"
      GetObject = "mediastore:GetObject"
      ListContainers = "mediastore:ListContainers"
      ListItems = "mediastore:ListItems"
      ListTagsForResource = "mediastore:ListTagsForResource"
      PutContainerPolicy = "mediastore:PutContainerPolicy"
      PutCorsPolicy = "mediastore:PutCorsPolicy"
      PutLifecyclePolicy = "mediastore:PutLifecyclePolicy"
      PutMetricPolicy = "mediastore:PutMetricPolicy"
      PutObject = "mediastore:PutObject"
      StartAccessLogging = "mediastore:StartAccessLogging"
      StopAccessLogging = "mediastore:StopAccessLogging"
      TagResource = "mediastore:TagResource"
      UntagResource = "mediastore:UntagResource"
    }
    mediatailor = {
      AllActions = "mediatailor:*"
      ConfigureLogsForChannel = "mediatailor:ConfigureLogsForChannel"
      ConfigureLogsForPlaybackConfiguration = "mediatailor:ConfigureLogsForPlaybackConfiguration"
      CreateChannel = "mediatailor:CreateChannel"
      CreateLiveSource = "mediatailor:CreateLiveSource"
      CreatePrefetchSchedule = "mediatailor:CreatePrefetchSchedule"
      CreateProgram = "mediatailor:CreateProgram"
      CreateSourceLocation = "mediatailor:CreateSourceLocation"
      CreateVodSource = "mediatailor:CreateVodSource"
      DeleteChannel = "mediatailor:DeleteChannel"
      DeleteChannelPolicy = "mediatailor:DeleteChannelPolicy"
      DeleteLiveSource = "mediatailor:DeleteLiveSource"
      DeletePlaybackConfiguration = "mediatailor:DeletePlaybackConfiguration"
      DeletePrefetchSchedule = "mediatailor:DeletePrefetchSchedule"
      DeleteProgram = "mediatailor:DeleteProgram"
      DeleteSourceLocation = "mediatailor:DeleteSourceLocation"
      DeleteVodSource = "mediatailor:DeleteVodSource"
      DescribeChannel = "mediatailor:DescribeChannel"
      DescribeLiveSource = "mediatailor:DescribeLiveSource"
      DescribeProgram = "mediatailor:DescribeProgram"
      DescribeSourceLocation = "mediatailor:DescribeSourceLocation"
      DescribeVodSource = "mediatailor:DescribeVodSource"
      GetChannelPolicy = "mediatailor:GetChannelPolicy"
      GetChannelSchedule = "mediatailor:GetChannelSchedule"
      GetPlaybackConfiguration = "mediatailor:GetPlaybackConfiguration"
      GetPrefetchSchedule = "mediatailor:GetPrefetchSchedule"
      ListAlerts = "mediatailor:ListAlerts"
      ListChannels = "mediatailor:ListChannels"
      ListLiveSources = "mediatailor:ListLiveSources"
      ListPlaybackConfigurations = "mediatailor:ListPlaybackConfigurations"
      ListPrefetchSchedules = "mediatailor:ListPrefetchSchedules"
      ListSourceLocations = "mediatailor:ListSourceLocations"
      ListTagsForResource = "mediatailor:ListTagsForResource"
      ListVodSources = "mediatailor:ListVodSources"
      PutChannelPolicy = "mediatailor:PutChannelPolicy"
      PutPlaybackConfiguration = "mediatailor:PutPlaybackConfiguration"
      StartChannel = "mediatailor:StartChannel"
      StopChannel = "mediatailor:StopChannel"
      TagResource = "mediatailor:TagResource"
      UntagResource = "mediatailor:UntagResource"
      UpdateChannel = "mediatailor:UpdateChannel"
      UpdateLiveSource = "mediatailor:UpdateLiveSource"
      UpdateProgram = "mediatailor:UpdateProgram"
      UpdateSourceLocation = "mediatailor:UpdateSourceLocation"
      UpdateVodSource = "mediatailor:UpdateVodSource"
    }
    medical-imaging = {
      AllActions = "medical-imaging:*"
      CopyImageSet = "medical-imaging:CopyImageSet"
      CreateDatastore = "medical-imaging:CreateDatastore"
      DeleteDatastore = "medical-imaging:DeleteDatastore"
      DeleteImageSet = "medical-imaging:DeleteImageSet"
      GetDICOMImportJob = "medical-imaging:GetDICOMImportJob"
      GetDICOMInstance = "medical-imaging:GetDICOMInstance"
      GetDatastore = "medical-imaging:GetDatastore"
      GetImageFrame = "medical-imaging:GetImageFrame"
      GetImageSet = "medical-imaging:GetImageSet"
      GetImageSetMetadata = "medical-imaging:GetImageSetMetadata"
      ListDICOMImportJobs = "medical-imaging:ListDICOMImportJobs"
      ListDatastores = "medical-imaging:ListDatastores"
      ListImageSetVersions = "medical-imaging:ListImageSetVersions"
      ListTagsForResource = "medical-imaging:ListTagsForResource"
      SearchImageSets = "medical-imaging:SearchImageSets"
      StartDICOMImportJob = "medical-imaging:StartDICOMImportJob"
      TagResource = "medical-imaging:TagResource"
      UntagResource = "medical-imaging:UntagResource"
      UpdateImageSetMetadata = "medical-imaging:UpdateImageSetMetadata"
    }
    memorydb = {
      AllActions = "memorydb:*"
      BatchUpdateCluster = "memorydb:BatchUpdateCluster"
      Connect = "memorydb:Connect"
      CopySnapshot = "memorydb:CopySnapshot"
      CreateAcl = "memorydb:CreateAcl"
      CreateCluster = "memorydb:CreateCluster"
      CreateParameterGroup = "memorydb:CreateParameterGroup"
      CreateSnapshot = "memorydb:CreateSnapshot"
      CreateSubnetGroup = "memorydb:CreateSubnetGroup"
      CreateUser = "memorydb:CreateUser"
      DeleteAcl = "memorydb:DeleteAcl"
      DeleteCluster = "memorydb:DeleteCluster"
      DeleteParameterGroup = "memorydb:DeleteParameterGroup"
      DeleteSnapshot = "memorydb:DeleteSnapshot"
      DeleteSubnetGroup = "memorydb:DeleteSubnetGroup"
      DeleteUser = "memorydb:DeleteUser"
      DescribeAcls = "memorydb:DescribeAcls"
      DescribeClusters = "memorydb:DescribeClusters"
      DescribeEngineVersions = "memorydb:DescribeEngineVersions"
      DescribeEvents = "memorydb:DescribeEvents"
      DescribeParameterGroups = "memorydb:DescribeParameterGroups"
      DescribeParameters = "memorydb:DescribeParameters"
      DescribeReservedNodes = "memorydb:DescribeReservedNodes"
      DescribeReservedNodesOfferings = "memorydb:DescribeReservedNodesOfferings"
      DescribeServiceUpdates = "memorydb:DescribeServiceUpdates"
      DescribeSnapshots = "memorydb:DescribeSnapshots"
      DescribeSubnetGroups = "memorydb:DescribeSubnetGroups"
      DescribeUsers = "memorydb:DescribeUsers"
      FailoverShard = "memorydb:FailoverShard"
      ListAllowedNodeTypeUpdates = "memorydb:ListAllowedNodeTypeUpdates"
      ListTags = "memorydb:ListTags"
      PurchaseReservedNodesOffering = "memorydb:PurchaseReservedNodesOffering"
      ResetParameterGroup = "memorydb:ResetParameterGroup"
      TagResource = "memorydb:TagResource"
      UntagResource = "memorydb:UntagResource"
      UpdateAcl = "memorydb:UpdateAcl"
      UpdateCluster = "memorydb:UpdateCluster"
      UpdateParameterGroup = "memorydb:UpdateParameterGroup"
      UpdateSubnetGroup = "memorydb:UpdateSubnetGroup"
      UpdateUser = "memorydb:UpdateUser"
    }
    mgh = {
      AllActions = "mgh:*"
      AssociateCreatedArtifact = "mgh:AssociateCreatedArtifact"
      AssociateDiscoveredResource = "mgh:AssociateDiscoveredResource"
      CreateHomeRegionControl = "mgh:CreateHomeRegionControl"
      CreateProgressUpdateStream = "mgh:CreateProgressUpdateStream"
      DeleteHomeRegionControl = "mgh:DeleteHomeRegionControl"
      DeleteProgressUpdateStream = "mgh:DeleteProgressUpdateStream"
      DescribeApplicationState = "mgh:DescribeApplicationState"
      DescribeHomeRegionControls = "mgh:DescribeHomeRegionControls"
      DescribeMigrationTask = "mgh:DescribeMigrationTask"
      DisassociateCreatedArtifact = "mgh:DisassociateCreatedArtifact"
      DisassociateDiscoveredResource = "mgh:DisassociateDiscoveredResource"
      GetHomeRegion = "mgh:GetHomeRegion"
      ImportMigrationTask = "mgh:ImportMigrationTask"
      ListApplicationStates = "mgh:ListApplicationStates"
      ListCreatedArtifacts = "mgh:ListCreatedArtifacts"
      ListDiscoveredResources = "mgh:ListDiscoveredResources"
      ListMigrationTasks = "mgh:ListMigrationTasks"
      ListProgressUpdateStreams = "mgh:ListProgressUpdateStreams"
      NotifyApplicationState = "mgh:NotifyApplicationState"
      NotifyMigrationTaskState = "mgh:NotifyMigrationTaskState"
      PutResourceAttributes = "mgh:PutResourceAttributes"
    }
    mgn = {
      AllActions = "mgn:*"
      ArchiveApplication = "mgn:ArchiveApplication"
      ArchiveWave = "mgn:ArchiveWave"
      AssociateApplications = "mgn:AssociateApplications"
      AssociateSourceServers = "mgn:AssociateSourceServers"
      BatchCreateVolumeSnapshotGroupForMgn = "mgn:BatchCreateVolumeSnapshotGroupForMgn"
      BatchDeleteSnapshotRequestForMgn = "mgn:BatchDeleteSnapshotRequestForMgn"
      ChangeServerLifeCycleState = "mgn:ChangeServerLifeCycleState"
      CreateApplication = "mgn:CreateApplication"
      CreateConnector = "mgn:CreateConnector"
      CreateLaunchConfigurationTemplate = "mgn:CreateLaunchConfigurationTemplate"
      CreateReplicationConfigurationTemplate = "mgn:CreateReplicationConfigurationTemplate"
      CreateVcenterClientForMgn = "mgn:CreateVcenterClientForMgn"
      CreateWave = "mgn:CreateWave"
      DeleteApplication = "mgn:DeleteApplication"
      DeleteConnector = "mgn:DeleteConnector"
      DeleteJob = "mgn:DeleteJob"
      DeleteLaunchConfigurationTemplate = "mgn:DeleteLaunchConfigurationTemplate"
      DeleteReplicationConfigurationTemplate = "mgn:DeleteReplicationConfigurationTemplate"
      DeleteSourceServer = "mgn:DeleteSourceServer"
      DeleteVcenterClient = "mgn:DeleteVcenterClient"
      DeleteWave = "mgn:DeleteWave"
      DescribeJobLogItems = "mgn:DescribeJobLogItems"
      DescribeJobs = "mgn:DescribeJobs"
      DescribeLaunchConfigurationTemplates = "mgn:DescribeLaunchConfigurationTemplates"
      DescribeReplicationConfigurationTemplates = "mgn:DescribeReplicationConfigurationTemplates"
      DescribeReplicationServerAssociationsForMgn = "mgn:DescribeReplicationServerAssociationsForMgn"
      DescribeSnapshotRequestsForMgn = "mgn:DescribeSnapshotRequestsForMgn"
      DescribeSourceServers = "mgn:DescribeSourceServers"
      DescribeVcenterClients = "mgn:DescribeVcenterClients"
      DisassociateApplications = "mgn:DisassociateApplications"
      DisassociateSourceServers = "mgn:DisassociateSourceServers"
      DisconnectFromService = "mgn:DisconnectFromService"
      FinalizeCutover = "mgn:FinalizeCutover"
      GetAgentCommandForMgn = "mgn:GetAgentCommandForMgn"
      GetAgentConfirmedResumeInfoForMgn = "mgn:GetAgentConfirmedResumeInfoForMgn"
      GetAgentInstallationAssetsForMgn = "mgn:GetAgentInstallationAssetsForMgn"
      GetAgentReplicationInfoForMgn = "mgn:GetAgentReplicationInfoForMgn"
      GetAgentRuntimeConfigurationForMgn = "mgn:GetAgentRuntimeConfigurationForMgn"
      GetAgentSnapshotCreditsForMgn = "mgn:GetAgentSnapshotCreditsForMgn"
      GetChannelCommandsForMgn = "mgn:GetChannelCommandsForMgn"
      GetLaunchConfiguration = "mgn:GetLaunchConfiguration"
      GetReplicationConfiguration = "mgn:GetReplicationConfiguration"
      GetVcenterClientCommandsForMgn = "mgn:GetVcenterClientCommandsForMgn"
      InitializeService = "mgn:InitializeService"
      IssueClientCertificateForMgn = "mgn:IssueClientCertificateForMgn"
      ListApplications = "mgn:ListApplications"
      ListConnectors = "mgn:ListConnectors"
      ListExportErrors = "mgn:ListExportErrors"
      ListExports = "mgn:ListExports"
      ListImportErrors = "mgn:ListImportErrors"
      ListImports = "mgn:ListImports"
      ListManagedAccounts = "mgn:ListManagedAccounts"
      ListSourceServerActions = "mgn:ListSourceServerActions"
      ListTagsForResource = "mgn:ListTagsForResource"
      ListTemplateActions = "mgn:ListTemplateActions"
      ListWaves = "mgn:ListWaves"
      MarkAsArchived = "mgn:MarkAsArchived"
      NotifyAgentAuthenticationForMgn = "mgn:NotifyAgentAuthenticationForMgn"
      NotifyAgentConnectedForMgn = "mgn:NotifyAgentConnectedForMgn"
      NotifyAgentDisconnectedForMgn = "mgn:NotifyAgentDisconnectedForMgn"
      NotifyAgentReplicationProgressForMgn = "mgn:NotifyAgentReplicationProgressForMgn"
      NotifyVcenterClientStartedForMgn = "mgn:NotifyVcenterClientStartedForMgn"
      PauseReplication = "mgn:PauseReplication"
      PutSourceServerAction = "mgn:PutSourceServerAction"
      PutTemplateAction = "mgn:PutTemplateAction"
      RegisterAgentForMgn = "mgn:RegisterAgentForMgn"
      RemoveSourceServerAction = "mgn:RemoveSourceServerAction"
      RemoveTemplateAction = "mgn:RemoveTemplateAction"
      ResumeReplication = "mgn:ResumeReplication"
      RetryDataReplication = "mgn:RetryDataReplication"
      SendAgentLogsForMgn = "mgn:SendAgentLogsForMgn"
      SendAgentMetricsForMgn = "mgn:SendAgentMetricsForMgn"
      SendChannelCommandResultForMgn = "mgn:SendChannelCommandResultForMgn"
      SendClientLogsForMgn = "mgn:SendClientLogsForMgn"
      SendClientMetricsForMgn = "mgn:SendClientMetricsForMgn"
      SendVcenterClientCommandResultForMgn = "mgn:SendVcenterClientCommandResultForMgn"
      SendVcenterClientLogsForMgn = "mgn:SendVcenterClientLogsForMgn"
      SendVcenterClientMetricsForMgn = "mgn:SendVcenterClientMetricsForMgn"
      StartCutover = "mgn:StartCutover"
      StartExport = "mgn:StartExport"
      StartImport = "mgn:StartImport"
      StartReplication = "mgn:StartReplication"
      StartTest = "mgn:StartTest"
      StopReplication = "mgn:StopReplication"
      TagResource = "mgn:TagResource"
      TerminateTargetInstances = "mgn:TerminateTargetInstances"
      UnarchiveApplication = "mgn:UnarchiveApplication"
      UnarchiveWave = "mgn:UnarchiveWave"
      UntagResource = "mgn:UntagResource"
      UpdateAgentBacklogForMgn = "mgn:UpdateAgentBacklogForMgn"
      UpdateAgentConversionInfoForMgn = "mgn:UpdateAgentConversionInfoForMgn"
      UpdateAgentReplicationInfoForMgn = "mgn:UpdateAgentReplicationInfoForMgn"
      UpdateAgentReplicationProcessStateForMgn = "mgn:UpdateAgentReplicationProcessStateForMgn"
      UpdateAgentSourcePropertiesForMgn = "mgn:UpdateAgentSourcePropertiesForMgn"
      UpdateApplication = "mgn:UpdateApplication"
      UpdateConnector = "mgn:UpdateConnector"
      UpdateLaunchConfiguration = "mgn:UpdateLaunchConfiguration"
      UpdateLaunchConfigurationTemplate = "mgn:UpdateLaunchConfigurationTemplate"
      UpdateReplicationConfiguration = "mgn:UpdateReplicationConfiguration"
      UpdateReplicationConfigurationTemplate = "mgn:UpdateReplicationConfigurationTemplate"
      UpdateSourceServer = "mgn:UpdateSourceServer"
      UpdateSourceServerReplicationType = "mgn:UpdateSourceServerReplicationType"
      UpdateWave = "mgn:UpdateWave"
      VerifyClientRoleForMgn = "mgn:VerifyClientRoleForMgn"
    }
    migrationhub-orchestrator = {
      AllActions = "migrationhub-orchestrator:*"
      CreateTemplate = "migrationhub-orchestrator:CreateTemplate"
      CreateWorkflow = "migrationhub-orchestrator:CreateWorkflow"
      CreateWorkflowStep = "migrationhub-orchestrator:CreateWorkflowStep"
      CreateWorkflowStepGroup = "migrationhub-orchestrator:CreateWorkflowStepGroup"
      DeleteTemplate = "migrationhub-orchestrator:DeleteTemplate"
      DeleteWorkflow = "migrationhub-orchestrator:DeleteWorkflow"
      DeleteWorkflowStep = "migrationhub-orchestrator:DeleteWorkflowStep"
      DeleteWorkflowStepGroup = "migrationhub-orchestrator:DeleteWorkflowStepGroup"
      GetMessage = "migrationhub-orchestrator:GetMessage"
      GetTemplate = "migrationhub-orchestrator:GetTemplate"
      GetTemplateStep = "migrationhub-orchestrator:GetTemplateStep"
      GetTemplateStepGroup = "migrationhub-orchestrator:GetTemplateStepGroup"
      GetWorkflow = "migrationhub-orchestrator:GetWorkflow"
      GetWorkflowStep = "migrationhub-orchestrator:GetWorkflowStep"
      GetWorkflowStepGroup = "migrationhub-orchestrator:GetWorkflowStepGroup"
      ListPlugins = "migrationhub-orchestrator:ListPlugins"
      ListTagsForResource = "migrationhub-orchestrator:ListTagsForResource"
      ListTemplateStepGroups = "migrationhub-orchestrator:ListTemplateStepGroups"
      ListTemplateSteps = "migrationhub-orchestrator:ListTemplateSteps"
      ListTemplates = "migrationhub-orchestrator:ListTemplates"
      ListWorkflowStepGroups = "migrationhub-orchestrator:ListWorkflowStepGroups"
      ListWorkflowSteps = "migrationhub-orchestrator:ListWorkflowSteps"
      ListWorkflows = "migrationhub-orchestrator:ListWorkflows"
      RegisterPlugin = "migrationhub-orchestrator:RegisterPlugin"
      RetryWorkflowStep = "migrationhub-orchestrator:RetryWorkflowStep"
      SendMessage = "migrationhub-orchestrator:SendMessage"
      StartWorkflow = "migrationhub-orchestrator:StartWorkflow"
      StopWorkflow = "migrationhub-orchestrator:StopWorkflow"
      TagResource = "migrationhub-orchestrator:TagResource"
      UntagResource = "migrationhub-orchestrator:UntagResource"
      UpdateTemplate = "migrationhub-orchestrator:UpdateTemplate"
      UpdateWorkflow = "migrationhub-orchestrator:UpdateWorkflow"
      UpdateWorkflowStep = "migrationhub-orchestrator:UpdateWorkflowStep"
      UpdateWorkflowStepGroup = "migrationhub-orchestrator:UpdateWorkflowStepGroup"
    }
    migrationhub-strategy = {
      AllActions = "migrationhub-strategy:*"
      GetAntiPattern = "migrationhub-strategy:GetAntiPattern"
      GetApplicationComponentDetails = "migrationhub-strategy:GetApplicationComponentDetails"
      GetApplicationComponentStrategies = "migrationhub-strategy:GetApplicationComponentStrategies"
      GetAssessment = "migrationhub-strategy:GetAssessment"
      GetImportFileTask = "migrationhub-strategy:GetImportFileTask"
      GetLatestAssessmentId = "migrationhub-strategy:GetLatestAssessmentId"
      GetMessage = "migrationhub-strategy:GetMessage"
      GetPortfolioPreferences = "migrationhub-strategy:GetPortfolioPreferences"
      GetPortfolioSummary = "migrationhub-strategy:GetPortfolioSummary"
      GetRecommendationReportDetails = "migrationhub-strategy:GetRecommendationReportDetails"
      GetServerDetails = "migrationhub-strategy:GetServerDetails"
      GetServerStrategies = "migrationhub-strategy:GetServerStrategies"
      ListAnalyzableServers = "migrationhub-strategy:ListAnalyzableServers"
      ListAntiPatterns = "migrationhub-strategy:ListAntiPatterns"
      ListApplicationComponents = "migrationhub-strategy:ListApplicationComponents"
      ListCollectors = "migrationhub-strategy:ListCollectors"
      ListImportFileTask = "migrationhub-strategy:ListImportFileTask"
      ListJarArtifacts = "migrationhub-strategy:ListJarArtifacts"
      ListServers = "migrationhub-strategy:ListServers"
      PutLogData = "migrationhub-strategy:PutLogData"
      PutMetricData = "migrationhub-strategy:PutMetricData"
      PutPortfolioPreferences = "migrationhub-strategy:PutPortfolioPreferences"
      RegisterCollector = "migrationhub-strategy:RegisterCollector"
      SendMessage = "migrationhub-strategy:SendMessage"
      StartAssessment = "migrationhub-strategy:StartAssessment"
      StartImportFileTask = "migrationhub-strategy:StartImportFileTask"
      StartRecommendationReportGeneration = "migrationhub-strategy:StartRecommendationReportGeneration"
      StopAssessment = "migrationhub-strategy:StopAssessment"
      UpdateApplicationComponentConfig = "migrationhub-strategy:UpdateApplicationComponentConfig"
      UpdateCollectorConfiguration = "migrationhub-strategy:UpdateCollectorConfiguration"
      UpdateServerConfig = "migrationhub-strategy:UpdateServerConfig"
    }
    mobileanalytics = {
      AllActions = "mobileanalytics:*"
      GetFinancialReports = "mobileanalytics:GetFinancialReports"
      GetReports = "mobileanalytics:GetReports"
      PutEvents = "mobileanalytics:PutEvents"
    }
    mobiletargeting = {
      AllActions = "mobiletargeting:*"
      CreateApp = "mobiletargeting:CreateApp"
      CreateCampaign = "mobiletargeting:CreateCampaign"
      CreateEmailTemplate = "mobiletargeting:CreateEmailTemplate"
      CreateExportJob = "mobiletargeting:CreateExportJob"
      CreateImportJob = "mobiletargeting:CreateImportJob"
      CreateInAppTemplate = "mobiletargeting:CreateInAppTemplate"
      CreateJourney = "mobiletargeting:CreateJourney"
      CreatePushTemplate = "mobiletargeting:CreatePushTemplate"
      CreateRecommenderConfiguration = "mobiletargeting:CreateRecommenderConfiguration"
      CreateSegment = "mobiletargeting:CreateSegment"
      CreateSmsTemplate = "mobiletargeting:CreateSmsTemplate"
      CreateVoiceTemplate = "mobiletargeting:CreateVoiceTemplate"
      DeleteAdmChannel = "mobiletargeting:DeleteAdmChannel"
      DeleteApnsChannel = "mobiletargeting:DeleteApnsChannel"
      DeleteApnsSandboxChannel = "mobiletargeting:DeleteApnsSandboxChannel"
      DeleteApnsVoipChannel = "mobiletargeting:DeleteApnsVoipChannel"
      DeleteApnsVoipSandboxChannel = "mobiletargeting:DeleteApnsVoipSandboxChannel"
      DeleteApp = "mobiletargeting:DeleteApp"
      DeleteBaiduChannel = "mobiletargeting:DeleteBaiduChannel"
      DeleteCampaign = "mobiletargeting:DeleteCampaign"
      DeleteEmailChannel = "mobiletargeting:DeleteEmailChannel"
      DeleteEmailTemplate = "mobiletargeting:DeleteEmailTemplate"
      DeleteEndpoint = "mobiletargeting:DeleteEndpoint"
      DeleteEventStream = "mobiletargeting:DeleteEventStream"
      DeleteGcmChannel = "mobiletargeting:DeleteGcmChannel"
      DeleteInAppTemplate = "mobiletargeting:DeleteInAppTemplate"
      DeleteJourney = "mobiletargeting:DeleteJourney"
      DeletePushTemplate = "mobiletargeting:DeletePushTemplate"
      DeleteRecommenderConfiguration = "mobiletargeting:DeleteRecommenderConfiguration"
      DeleteSegment = "mobiletargeting:DeleteSegment"
      DeleteSmsChannel = "mobiletargeting:DeleteSmsChannel"
      DeleteSmsTemplate = "mobiletargeting:DeleteSmsTemplate"
      DeleteUserEndpoints = "mobiletargeting:DeleteUserEndpoints"
      DeleteVoiceChannel = "mobiletargeting:DeleteVoiceChannel"
      DeleteVoiceTemplate = "mobiletargeting:DeleteVoiceTemplate"
      GetAdmChannel = "mobiletargeting:GetAdmChannel"
      GetApnsChannel = "mobiletargeting:GetApnsChannel"
      GetApnsSandboxChannel = "mobiletargeting:GetApnsSandboxChannel"
      GetApnsVoipChannel = "mobiletargeting:GetApnsVoipChannel"
      GetApnsVoipSandboxChannel = "mobiletargeting:GetApnsVoipSandboxChannel"
      GetApp = "mobiletargeting:GetApp"
      GetApplicationDateRangeKpi = "mobiletargeting:GetApplicationDateRangeKpi"
      GetApplicationSettings = "mobiletargeting:GetApplicationSettings"
      GetApps = "mobiletargeting:GetApps"
      GetBaiduChannel = "mobiletargeting:GetBaiduChannel"
      GetCampaign = "mobiletargeting:GetCampaign"
      GetCampaignActivities = "mobiletargeting:GetCampaignActivities"
      GetCampaignDateRangeKpi = "mobiletargeting:GetCampaignDateRangeKpi"
      GetCampaignVersion = "mobiletargeting:GetCampaignVersion"
      GetCampaignVersions = "mobiletargeting:GetCampaignVersions"
      GetCampaigns = "mobiletargeting:GetCampaigns"
      GetChannels = "mobiletargeting:GetChannels"
      GetEmailChannel = "mobiletargeting:GetEmailChannel"
      GetEmailTemplate = "mobiletargeting:GetEmailTemplate"
      GetEndpoint = "mobiletargeting:GetEndpoint"
      GetEventStream = "mobiletargeting:GetEventStream"
      GetExportJob = "mobiletargeting:GetExportJob"
      GetExportJobs = "mobiletargeting:GetExportJobs"
      GetGcmChannel = "mobiletargeting:GetGcmChannel"
      GetImportJob = "mobiletargeting:GetImportJob"
      GetImportJobs = "mobiletargeting:GetImportJobs"
      GetInAppMessages = "mobiletargeting:GetInAppMessages"
      GetInAppTemplate = "mobiletargeting:GetInAppTemplate"
      GetJourney = "mobiletargeting:GetJourney"
      GetJourneyDateRangeKpi = "mobiletargeting:GetJourneyDateRangeKpi"
      GetJourneyExecutionActivityMetrics = "mobiletargeting:GetJourneyExecutionActivityMetrics"
      GetJourneyExecutionMetrics = "mobiletargeting:GetJourneyExecutionMetrics"
      GetJourneyRunExecutionActivityMetrics = "mobiletargeting:GetJourneyRunExecutionActivityMetrics"
      GetJourneyRunExecutionMetrics = "mobiletargeting:GetJourneyRunExecutionMetrics"
      GetJourneyRuns = "mobiletargeting:GetJourneyRuns"
      GetPushTemplate = "mobiletargeting:GetPushTemplate"
      GetRecommenderConfiguration = "mobiletargeting:GetRecommenderConfiguration"
      GetRecommenderConfigurations = "mobiletargeting:GetRecommenderConfigurations"
      GetReports = "mobiletargeting:GetReports"
      GetSegment = "mobiletargeting:GetSegment"
      GetSegmentExportJobs = "mobiletargeting:GetSegmentExportJobs"
      GetSegmentImportJobs = "mobiletargeting:GetSegmentImportJobs"
      GetSegmentVersion = "mobiletargeting:GetSegmentVersion"
      GetSegmentVersions = "mobiletargeting:GetSegmentVersions"
      GetSegments = "mobiletargeting:GetSegments"
      GetSmsChannel = "mobiletargeting:GetSmsChannel"
      GetSmsTemplate = "mobiletargeting:GetSmsTemplate"
      GetUserEndpoints = "mobiletargeting:GetUserEndpoints"
      GetVoiceChannel = "mobiletargeting:GetVoiceChannel"
      GetVoiceTemplate = "mobiletargeting:GetVoiceTemplate"
      ListJourneys = "mobiletargeting:ListJourneys"
      ListTagsForResource = "mobiletargeting:ListTagsForResource"
      ListTemplateVersions = "mobiletargeting:ListTemplateVersions"
      ListTemplates = "mobiletargeting:ListTemplates"
      PhoneNumberValidate = "mobiletargeting:PhoneNumberValidate"
      PutEventStream = "mobiletargeting:PutEventStream"
      PutEvents = "mobiletargeting:PutEvents"
      RemoveAttributes = "mobiletargeting:RemoveAttributes"
      SendMessages = "mobiletargeting:SendMessages"
      SendOTPMessage = "mobiletargeting:SendOTPMessage"
      SendUsersMessages = "mobiletargeting:SendUsersMessages"
      TagResource = "mobiletargeting:TagResource"
      UntagResource = "mobiletargeting:UntagResource"
      UpdateAdmChannel = "mobiletargeting:UpdateAdmChannel"
      UpdateApnsChannel = "mobiletargeting:UpdateApnsChannel"
      UpdateApnsSandboxChannel = "mobiletargeting:UpdateApnsSandboxChannel"
      UpdateApnsVoipChannel = "mobiletargeting:UpdateApnsVoipChannel"
      UpdateApnsVoipSandboxChannel = "mobiletargeting:UpdateApnsVoipSandboxChannel"
      UpdateApplicationSettings = "mobiletargeting:UpdateApplicationSettings"
      UpdateBaiduChannel = "mobiletargeting:UpdateBaiduChannel"
      UpdateCampaign = "mobiletargeting:UpdateCampaign"
      UpdateEmailChannel = "mobiletargeting:UpdateEmailChannel"
      UpdateEmailTemplate = "mobiletargeting:UpdateEmailTemplate"
      UpdateEndpoint = "mobiletargeting:UpdateEndpoint"
      UpdateEndpointsBatch = "mobiletargeting:UpdateEndpointsBatch"
      UpdateGcmChannel = "mobiletargeting:UpdateGcmChannel"
      UpdateInAppTemplate = "mobiletargeting:UpdateInAppTemplate"
      UpdateJourney = "mobiletargeting:UpdateJourney"
      UpdateJourneyState = "mobiletargeting:UpdateJourneyState"
      UpdatePushTemplate = "mobiletargeting:UpdatePushTemplate"
      UpdateRecommenderConfiguration = "mobiletargeting:UpdateRecommenderConfiguration"
      UpdateSegment = "mobiletargeting:UpdateSegment"
      UpdateSmsChannel = "mobiletargeting:UpdateSmsChannel"
      UpdateSmsTemplate = "mobiletargeting:UpdateSmsTemplate"
      UpdateTemplateActiveVersion = "mobiletargeting:UpdateTemplateActiveVersion"
      UpdateVoiceChannel = "mobiletargeting:UpdateVoiceChannel"
      UpdateVoiceTemplate = "mobiletargeting:UpdateVoiceTemplate"
      VerifyOTPMessage = "mobiletargeting:VerifyOTPMessage"
    }
    monitron = {
      AllActions = "monitron:*"
      AssociateProjectAdminUser = "monitron:AssociateProjectAdminUser"
      CreateProject = "monitron:CreateProject"
      CreateProjectUserAssociation = "monitron:CreateProjectUserAssociation"
      CreateUserAccessRoleAssociation = "monitron:CreateUserAccessRoleAssociation"
      DeleteProject = "monitron:DeleteProject"
      DeleteProjectUserAssociation = "monitron:DeleteProjectUserAssociation"
      DeleteUserAccessRoleAssociation = "monitron:DeleteUserAccessRoleAssociation"
      DisassociateProjectAdminUser = "monitron:DisassociateProjectAdminUser"
      GetProject = "monitron:GetProject"
      GetProjectAdminUser = "monitron:GetProjectAdminUser"
      ListProjectAdminUsers = "monitron:ListProjectAdminUsers"
      ListProjectUserAssociations = "monitron:ListProjectUserAssociations"
      ListProjects = "monitron:ListProjects"
      ListTagsForResource = "monitron:ListTagsForResource"
      ListUserAccessRoleAssociations = "monitron:ListUserAccessRoleAssociations"
      TagResource = "monitron:TagResource"
      UntagResource = "monitron:UntagResource"
      UpdateProject = "monitron:UpdateProject"
    }
    mq = {
      AllActions = "mq:*"
      CreateBroker = "mq:CreateBroker"
      CreateConfiguration = "mq:CreateConfiguration"
      CreateReplicaBroker = "mq:CreateReplicaBroker"
      CreateTags = "mq:CreateTags"
      CreateUser = "mq:CreateUser"
      DeleteBroker = "mq:DeleteBroker"
      DeleteTags = "mq:DeleteTags"
      DeleteUser = "mq:DeleteUser"
      DescribeBroker = "mq:DescribeBroker"
      DescribeBrokerEngineTypes = "mq:DescribeBrokerEngineTypes"
      DescribeBrokerInstanceOptions = "mq:DescribeBrokerInstanceOptions"
      DescribeConfiguration = "mq:DescribeConfiguration"
      DescribeConfigurationRevision = "mq:DescribeConfigurationRevision"
      DescribeUser = "mq:DescribeUser"
      ListBrokers = "mq:ListBrokers"
      ListConfigurationRevisions = "mq:ListConfigurationRevisions"
      ListConfigurations = "mq:ListConfigurations"
      ListTags = "mq:ListTags"
      ListUsers = "mq:ListUsers"
      Promote = "mq:Promote"
      RebootBroker = "mq:RebootBroker"
      UpdateBroker = "mq:UpdateBroker"
      UpdateConfiguration = "mq:UpdateConfiguration"
      UpdateUser = "mq:UpdateUser"
    }
    neptune-db = {
      AllActions = "neptune-db:*"
      CancelLoaderJob = "neptune-db:CancelLoaderJob"
      CancelMLDataProcessingJob = "neptune-db:CancelMLDataProcessingJob"
      CancelMLModelTrainingJob = "neptune-db:CancelMLModelTrainingJob"
      CancelMLModelTransformJob = "neptune-db:CancelMLModelTransformJob"
      CancelQuery = "neptune-db:CancelQuery"
      CreateMLEndpoint = "neptune-db:CreateMLEndpoint"
      DeleteDataViaQuery = "neptune-db:DeleteDataViaQuery"
      DeleteMLEndpoint = "neptune-db:DeleteMLEndpoint"
      DeleteStatistics = "neptune-db:DeleteStatistics"
      GetEngineStatus = "neptune-db:GetEngineStatus"
      GetGraphSummary = "neptune-db:GetGraphSummary"
      GetLoaderJobStatus = "neptune-db:GetLoaderJobStatus"
      GetMLDataProcessingJobStatus = "neptune-db:GetMLDataProcessingJobStatus"
      GetMLEndpointStatus = "neptune-db:GetMLEndpointStatus"
      GetMLModelTrainingJobStatus = "neptune-db:GetMLModelTrainingJobStatus"
      GetMLModelTransformJobStatus = "neptune-db:GetMLModelTransformJobStatus"
      GetQueryStatus = "neptune-db:GetQueryStatus"
      GetStatisticsStatus = "neptune-db:GetStatisticsStatus"
      GetStreamRecords = "neptune-db:GetStreamRecords"
      ListLoaderJobs = "neptune-db:ListLoaderJobs"
      ListMLDataProcessingJobs = "neptune-db:ListMLDataProcessingJobs"
      ListMLEndpoints = "neptune-db:ListMLEndpoints"
      ListMLModelTrainingJobs = "neptune-db:ListMLModelTrainingJobs"
      ListMLModelTransformJobs = "neptune-db:ListMLModelTransformJobs"
      ManageStatistics = "neptune-db:ManageStatistics"
      ReadDataViaQuery = "neptune-db:ReadDataViaQuery"
      ResetDatabase = "neptune-db:ResetDatabase"
      StartLoaderJob = "neptune-db:StartLoaderJob"
      StartMLDataProcessingJob = "neptune-db:StartMLDataProcessingJob"
      StartMLModelTrainingJob = "neptune-db:StartMLModelTrainingJob"
      StartMLModelTransformJob = "neptune-db:StartMLModelTransformJob"
      WriteDataViaQuery = "neptune-db:WriteDataViaQuery"
      connect = "neptune-db:connect"
    }
    neptune-graph = {
      AllActions = "neptune-graph:*"
      CancelImportTask = "neptune-graph:CancelImportTask"
      CancelQuery = "neptune-graph:CancelQuery"
      CreateGraph = "neptune-graph:CreateGraph"
      CreateGraphSnapshot = "neptune-graph:CreateGraphSnapshot"
      CreateGraphUsingImportTask = "neptune-graph:CreateGraphUsingImportTask"
      CreatePrivateGraphEndpoint = "neptune-graph:CreatePrivateGraphEndpoint"
      DeleteDataViaQuery = "neptune-graph:DeleteDataViaQuery"
      DeleteGraph = "neptune-graph:DeleteGraph"
      DeleteGraphSnapshot = "neptune-graph:DeleteGraphSnapshot"
      DeletePrivateGraphEndpoint = "neptune-graph:DeletePrivateGraphEndpoint"
      GetEngineStatus = "neptune-graph:GetEngineStatus"
      GetGraph = "neptune-graph:GetGraph"
      GetGraphSnapshot = "neptune-graph:GetGraphSnapshot"
      GetGraphSummary = "neptune-graph:GetGraphSummary"
      GetImportTask = "neptune-graph:GetImportTask"
      GetPrivateGraphEndpoint = "neptune-graph:GetPrivateGraphEndpoint"
      GetQueryStatus = "neptune-graph:GetQueryStatus"
      GetStatisticsStatus = "neptune-graph:GetStatisticsStatus"
      ListGraphSnapshots = "neptune-graph:ListGraphSnapshots"
      ListGraphs = "neptune-graph:ListGraphs"
      ListImportTasks = "neptune-graph:ListImportTasks"
      ListPrivateGraphEndpoints = "neptune-graph:ListPrivateGraphEndpoints"
      ListQueries = "neptune-graph:ListQueries"
      ListTagsForResource = "neptune-graph:ListTagsForResource"
      ReadDataViaQuery = "neptune-graph:ReadDataViaQuery"
      ResetGraph = "neptune-graph:ResetGraph"
      RestoreGraphFromSnapshot = "neptune-graph:RestoreGraphFromSnapshot"
      StartImportTask = "neptune-graph:StartImportTask"
      TagResource = "neptune-graph:TagResource"
      UntagResource = "neptune-graph:UntagResource"
      UpdateGraph = "neptune-graph:UpdateGraph"
      WriteDataViaQuery = "neptune-graph:WriteDataViaQuery"
    }
    network-firewall = {
      AllActions = "network-firewall:*"
      AssociateFirewallPolicy = "network-firewall:AssociateFirewallPolicy"
      AssociateSubnets = "network-firewall:AssociateSubnets"
      CreateFirewall = "network-firewall:CreateFirewall"
      CreateFirewallPolicy = "network-firewall:CreateFirewallPolicy"
      CreateRuleGroup = "network-firewall:CreateRuleGroup"
      CreateTLSInspectionConfiguration = "network-firewall:CreateTLSInspectionConfiguration"
      DeleteFirewall = "network-firewall:DeleteFirewall"
      DeleteFirewallPolicy = "network-firewall:DeleteFirewallPolicy"
      DeleteResourcePolicy = "network-firewall:DeleteResourcePolicy"
      DeleteRuleGroup = "network-firewall:DeleteRuleGroup"
      DeleteTLSInspectionConfiguration = "network-firewall:DeleteTLSInspectionConfiguration"
      DescribeFirewall = "network-firewall:DescribeFirewall"
      DescribeFirewallPolicy = "network-firewall:DescribeFirewallPolicy"
      DescribeLoggingConfiguration = "network-firewall:DescribeLoggingConfiguration"
      DescribeResourcePolicy = "network-firewall:DescribeResourcePolicy"
      DescribeRuleGroup = "network-firewall:DescribeRuleGroup"
      DescribeRuleGroupMetadata = "network-firewall:DescribeRuleGroupMetadata"
      DescribeTLSInspectionConfiguration = "network-firewall:DescribeTLSInspectionConfiguration"
      DisassociateSubnets = "network-firewall:DisassociateSubnets"
      ListFirewallPolicies = "network-firewall:ListFirewallPolicies"
      ListFirewalls = "network-firewall:ListFirewalls"
      ListRuleGroups = "network-firewall:ListRuleGroups"
      ListTLSInspectionConfigurations = "network-firewall:ListTLSInspectionConfigurations"
      ListTagsForResource = "network-firewall:ListTagsForResource"
      PutResourcePolicy = "network-firewall:PutResourcePolicy"
      TagResource = "network-firewall:TagResource"
      UntagResource = "network-firewall:UntagResource"
      UpdateFirewallDeleteProtection = "network-firewall:UpdateFirewallDeleteProtection"
      UpdateFirewallDescription = "network-firewall:UpdateFirewallDescription"
      UpdateFirewallEncryptionConfiguration = "network-firewall:UpdateFirewallEncryptionConfiguration"
      UpdateFirewallPolicy = "network-firewall:UpdateFirewallPolicy"
      UpdateFirewallPolicyChangeProtection = "network-firewall:UpdateFirewallPolicyChangeProtection"
      UpdateLoggingConfiguration = "network-firewall:UpdateLoggingConfiguration"
      UpdateRuleGroup = "network-firewall:UpdateRuleGroup"
      UpdateSubnetChangeProtection = "network-firewall:UpdateSubnetChangeProtection"
      UpdateTLSInspectionConfiguration = "network-firewall:UpdateTLSInspectionConfiguration"
    }
    networkmanager-chat = {
      AllActions = "networkmanager-chat:*"
      CancelMessageResponse = "networkmanager-chat:CancelMessageResponse"
      CreateConversation = "networkmanager-chat:CreateConversation"
      DeleteConversation = "networkmanager-chat:DeleteConversation"
      ListConversationMessages = "networkmanager-chat:ListConversationMessages"
      ListConversations = "networkmanager-chat:ListConversations"
      NotifyConversationIsActive = "networkmanager-chat:NotifyConversationIsActive"
      SendConversationMessage = "networkmanager-chat:SendConversationMessage"
    }
    networkmanager = {
      AllActions = "networkmanager:*"
      AcceptAttachment = "networkmanager:AcceptAttachment"
      AssociateConnectPeer = "networkmanager:AssociateConnectPeer"
      AssociateCustomerGateway = "networkmanager:AssociateCustomerGateway"
      AssociateLink = "networkmanager:AssociateLink"
      AssociateTransitGatewayConnectPeer = "networkmanager:AssociateTransitGatewayConnectPeer"
      CreateConnectAttachment = "networkmanager:CreateConnectAttachment"
      CreateConnectPeer = "networkmanager:CreateConnectPeer"
      CreateConnection = "networkmanager:CreateConnection"
      CreateCoreNetwork = "networkmanager:CreateCoreNetwork"
      CreateDevice = "networkmanager:CreateDevice"
      CreateGlobalNetwork = "networkmanager:CreateGlobalNetwork"
      CreateLink = "networkmanager:CreateLink"
      CreateSite = "networkmanager:CreateSite"
      CreateSiteToSiteVpnAttachment = "networkmanager:CreateSiteToSiteVpnAttachment"
      CreateTransitGatewayPeering = "networkmanager:CreateTransitGatewayPeering"
      CreateTransitGatewayRouteTableAttachment = "networkmanager:CreateTransitGatewayRouteTableAttachment"
      CreateVpcAttachment = "networkmanager:CreateVpcAttachment"
      DeleteAttachment = "networkmanager:DeleteAttachment"
      DeleteConnectPeer = "networkmanager:DeleteConnectPeer"
      DeleteConnection = "networkmanager:DeleteConnection"
      DeleteCoreNetwork = "networkmanager:DeleteCoreNetwork"
      DeleteCoreNetworkPolicyVersion = "networkmanager:DeleteCoreNetworkPolicyVersion"
      DeleteDevice = "networkmanager:DeleteDevice"
      DeleteGlobalNetwork = "networkmanager:DeleteGlobalNetwork"
      DeleteLink = "networkmanager:DeleteLink"
      DeletePeering = "networkmanager:DeletePeering"
      DeleteResourcePolicy = "networkmanager:DeleteResourcePolicy"
      DeleteSite = "networkmanager:DeleteSite"
      DeregisterTransitGateway = "networkmanager:DeregisterTransitGateway"
      DescribeGlobalNetworks = "networkmanager:DescribeGlobalNetworks"
      DisassociateConnectPeer = "networkmanager:DisassociateConnectPeer"
      DisassociateCustomerGateway = "networkmanager:DisassociateCustomerGateway"
      DisassociateLink = "networkmanager:DisassociateLink"
      DisassociateTransitGatewayConnectPeer = "networkmanager:DisassociateTransitGatewayConnectPeer"
      ExecuteCoreNetworkChangeSet = "networkmanager:ExecuteCoreNetworkChangeSet"
      GetConnectAttachment = "networkmanager:GetConnectAttachment"
      GetConnectPeer = "networkmanager:GetConnectPeer"
      GetConnectPeerAssociations = "networkmanager:GetConnectPeerAssociations"
      GetConnections = "networkmanager:GetConnections"
      GetCoreNetwork = "networkmanager:GetCoreNetwork"
      GetCoreNetworkChangeEvents = "networkmanager:GetCoreNetworkChangeEvents"
      GetCoreNetworkChangeSet = "networkmanager:GetCoreNetworkChangeSet"
      GetCoreNetworkPolicy = "networkmanager:GetCoreNetworkPolicy"
      GetCustomerGatewayAssociations = "networkmanager:GetCustomerGatewayAssociations"
      GetDevices = "networkmanager:GetDevices"
      GetLinkAssociations = "networkmanager:GetLinkAssociations"
      GetLinks = "networkmanager:GetLinks"
      GetNetworkResourceCounts = "networkmanager:GetNetworkResourceCounts"
      GetNetworkResourceRelationships = "networkmanager:GetNetworkResourceRelationships"
      GetNetworkResources = "networkmanager:GetNetworkResources"
      GetNetworkRoutes = "networkmanager:GetNetworkRoutes"
      GetNetworkTelemetry = "networkmanager:GetNetworkTelemetry"
      GetResourcePolicy = "networkmanager:GetResourcePolicy"
      GetRouteAnalysis = "networkmanager:GetRouteAnalysis"
      GetSiteToSiteVpnAttachment = "networkmanager:GetSiteToSiteVpnAttachment"
      GetSites = "networkmanager:GetSites"
      GetTransitGatewayConnectPeerAssociations = "networkmanager:GetTransitGatewayConnectPeerAssociations"
      GetTransitGatewayPeering = "networkmanager:GetTransitGatewayPeering"
      GetTransitGatewayRegistrations = "networkmanager:GetTransitGatewayRegistrations"
      GetTransitGatewayRouteTableAttachment = "networkmanager:GetTransitGatewayRouteTableAttachment"
      GetVpcAttachment = "networkmanager:GetVpcAttachment"
      ListAttachments = "networkmanager:ListAttachments"
      ListConnectPeers = "networkmanager:ListConnectPeers"
      ListCoreNetworkPolicyVersions = "networkmanager:ListCoreNetworkPolicyVersions"
      ListCoreNetworks = "networkmanager:ListCoreNetworks"
      ListOrganizationServiceAccessStatus = "networkmanager:ListOrganizationServiceAccessStatus"
      ListPeerings = "networkmanager:ListPeerings"
      ListTagsForResource = "networkmanager:ListTagsForResource"
      PutCoreNetworkPolicy = "networkmanager:PutCoreNetworkPolicy"
      PutResourcePolicy = "networkmanager:PutResourcePolicy"
      RegisterTransitGateway = "networkmanager:RegisterTransitGateway"
      RejectAttachment = "networkmanager:RejectAttachment"
      RestoreCoreNetworkPolicyVersion = "networkmanager:RestoreCoreNetworkPolicyVersion"
      StartOrganizationServiceAccessUpdate = "networkmanager:StartOrganizationServiceAccessUpdate"
      StartRouteAnalysis = "networkmanager:StartRouteAnalysis"
      TagResource = "networkmanager:TagResource"
      UntagResource = "networkmanager:UntagResource"
      UpdateConnection = "networkmanager:UpdateConnection"
      UpdateCoreNetwork = "networkmanager:UpdateCoreNetwork"
      UpdateDevice = "networkmanager:UpdateDevice"
      UpdateGlobalNetwork = "networkmanager:UpdateGlobalNetwork"
      UpdateLink = "networkmanager:UpdateLink"
      UpdateNetworkResourceMetadata = "networkmanager:UpdateNetworkResourceMetadata"
      UpdateSite = "networkmanager:UpdateSite"
      UpdateVpcAttachment = "networkmanager:UpdateVpcAttachment"
    }
    networkmonitor = {
      AllActions = "networkmonitor:*"
      CreateMonitor = "networkmonitor:CreateMonitor"
      CreateProbe = "networkmonitor:CreateProbe"
      DeleteMonitor = "networkmonitor:DeleteMonitor"
      DeleteProbe = "networkmonitor:DeleteProbe"
      GetMonitor = "networkmonitor:GetMonitor"
      GetProbe = "networkmonitor:GetProbe"
      ListMonitors = "networkmonitor:ListMonitors"
      ListTagsForResource = "networkmonitor:ListTagsForResource"
      TagResource = "networkmonitor:TagResource"
      UntagResource = "networkmonitor:UntagResource"
      UpdateMonitor = "networkmonitor:UpdateMonitor"
      UpdateProbe = "networkmonitor:UpdateProbe"
    }
    nimble = {
      AllActions = "nimble:*"
      AcceptEulas = "nimble:AcceptEulas"
      CreateLaunchProfile = "nimble:CreateLaunchProfile"
      CreateStreamingImage = "nimble:CreateStreamingImage"
      CreateStreamingSession = "nimble:CreateStreamingSession"
      CreateStreamingSessionStream = "nimble:CreateStreamingSessionStream"
      CreateStudio = "nimble:CreateStudio"
      CreateStudioComponent = "nimble:CreateStudioComponent"
      DeleteLaunchProfile = "nimble:DeleteLaunchProfile"
      DeleteLaunchProfileMember = "nimble:DeleteLaunchProfileMember"
      DeleteStreamingImage = "nimble:DeleteStreamingImage"
      DeleteStreamingSession = "nimble:DeleteStreamingSession"
      DeleteStudio = "nimble:DeleteStudio"
      DeleteStudioComponent = "nimble:DeleteStudioComponent"
      DeleteStudioMember = "nimble:DeleteStudioMember"
      GetEula = "nimble:GetEula"
      GetFeatureMap = "nimble:GetFeatureMap"
      GetLaunchProfile = "nimble:GetLaunchProfile"
      GetLaunchProfileDetails = "nimble:GetLaunchProfileDetails"
      GetLaunchProfileInitialization = "nimble:GetLaunchProfileInitialization"
      GetLaunchProfileMember = "nimble:GetLaunchProfileMember"
      GetStreamingImage = "nimble:GetStreamingImage"
      GetStreamingSession = "nimble:GetStreamingSession"
      GetStreamingSessionBackup = "nimble:GetStreamingSessionBackup"
      GetStreamingSessionStream = "nimble:GetStreamingSessionStream"
      GetStudio = "nimble:GetStudio"
      GetStudioComponent = "nimble:GetStudioComponent"
      GetStudioMember = "nimble:GetStudioMember"
      ListEulaAcceptances = "nimble:ListEulaAcceptances"
      ListEulas = "nimble:ListEulas"
      ListLaunchProfileMembers = "nimble:ListLaunchProfileMembers"
      ListLaunchProfiles = "nimble:ListLaunchProfiles"
      ListStreamingImages = "nimble:ListStreamingImages"
      ListStreamingSessionBackups = "nimble:ListStreamingSessionBackups"
      ListStreamingSessions = "nimble:ListStreamingSessions"
      ListStudioComponents = "nimble:ListStudioComponents"
      ListStudioMembers = "nimble:ListStudioMembers"
      ListStudios = "nimble:ListStudios"
      ListTagsForResource = "nimble:ListTagsForResource"
      PutLaunchProfileMembers = "nimble:PutLaunchProfileMembers"
      PutStudioLogEvents = "nimble:PutStudioLogEvents"
      PutStudioMembers = "nimble:PutStudioMembers"
      StartStreamingSession = "nimble:StartStreamingSession"
      StartStudioSSOConfigurationRepair = "nimble:StartStudioSSOConfigurationRepair"
      StopStreamingSession = "nimble:StopStreamingSession"
      TagResource = "nimble:TagResource"
      UntagResource = "nimble:UntagResource"
      UpdateLaunchProfile = "nimble:UpdateLaunchProfile"
      UpdateLaunchProfileMember = "nimble:UpdateLaunchProfileMember"
      UpdateStreamingImage = "nimble:UpdateStreamingImage"
      UpdateStudio = "nimble:UpdateStudio"
      UpdateStudioComponent = "nimble:UpdateStudioComponent"
    }
    notifications-contacts = {
      AllActions = "notifications-contacts:*"
      ActivateEmailContact = "notifications-contacts:ActivateEmailContact"
      CreateEmailContact = "notifications-contacts:CreateEmailContact"
      DeleteEmailContact = "notifications-contacts:DeleteEmailContact"
      GetEmailContact = "notifications-contacts:GetEmailContact"
      ListEmailContacts = "notifications-contacts:ListEmailContacts"
      ListTagsForResource = "notifications-contacts:ListTagsForResource"
      SendActivationCode = "notifications-contacts:SendActivationCode"
      TagResource = "notifications-contacts:TagResource"
      UntagResource = "notifications-contacts:UntagResource"
    }
    notifications = {
      AllActions = "notifications:*"
      AssociateChannel = "notifications:AssociateChannel"
      CreateEventRule = "notifications:CreateEventRule"
      CreateNotificationConfiguration = "notifications:CreateNotificationConfiguration"
      DeleteEventRule = "notifications:DeleteEventRule"
      DeleteNotificationConfiguration = "notifications:DeleteNotificationConfiguration"
      DeregisterNotificationHub = "notifications:DeregisterNotificationHub"
      DisassociateChannel = "notifications:DisassociateChannel"
      GetEventRule = "notifications:GetEventRule"
      GetNotificationConfiguration = "notifications:GetNotificationConfiguration"
      GetNotificationEvent = "notifications:GetNotificationEvent"
      ListChannels = "notifications:ListChannels"
      ListEventRules = "notifications:ListEventRules"
      ListNotificationConfigurations = "notifications:ListNotificationConfigurations"
      ListNotificationEvents = "notifications:ListNotificationEvents"
      ListNotificationHubs = "notifications:ListNotificationHubs"
      ListTagsForResource = "notifications:ListTagsForResource"
      RegisterNotificationHub = "notifications:RegisterNotificationHub"
      TagResource = "notifications:TagResource"
      UntagResource = "notifications:UntagResource"
      UpdateEventRule = "notifications:UpdateEventRule"
      UpdateNotificationConfiguration = "notifications:UpdateNotificationConfiguration"
    }
    oam = {
      AllActions = "oam:*"
      CreateLink = "oam:CreateLink"
      CreateSink = "oam:CreateSink"
      DeleteLink = "oam:DeleteLink"
      DeleteSink = "oam:DeleteSink"
      GetLink = "oam:GetLink"
      GetSink = "oam:GetSink"
      GetSinkPolicy = "oam:GetSinkPolicy"
      ListAttachedLinks = "oam:ListAttachedLinks"
      ListLinks = "oam:ListLinks"
      ListSinks = "oam:ListSinks"
      ListTagsForResource = "oam:ListTagsForResource"
      PutSinkPolicy = "oam:PutSinkPolicy"
      TagResource = "oam:TagResource"
      UntagResource = "oam:UntagResource"
      UpdateLink = "oam:UpdateLink"
    }
    omics = {
      AllActions = "omics:*"
      AbortMultipartReadSetUpload = "omics:AbortMultipartReadSetUpload"
      AcceptShare = "omics:AcceptShare"
      BatchDeleteReadSet = "omics:BatchDeleteReadSet"
      CancelAnnotationImportJob = "omics:CancelAnnotationImportJob"
      CancelRun = "omics:CancelRun"
      CancelVariantImportJob = "omics:CancelVariantImportJob"
      CompleteMultipartReadSetUpload = "omics:CompleteMultipartReadSetUpload"
      CreateAnnotationStore = "omics:CreateAnnotationStore"
      CreateAnnotationStoreVersion = "omics:CreateAnnotationStoreVersion"
      CreateMultipartReadSetUpload = "omics:CreateMultipartReadSetUpload"
      CreateReferenceStore = "omics:CreateReferenceStore"
      CreateRunGroup = "omics:CreateRunGroup"
      CreateSequenceStore = "omics:CreateSequenceStore"
      CreateShare = "omics:CreateShare"
      CreateVariantStore = "omics:CreateVariantStore"
      CreateWorkflow = "omics:CreateWorkflow"
      DeleteAnnotationStore = "omics:DeleteAnnotationStore"
      DeleteAnnotationStoreVersions = "omics:DeleteAnnotationStoreVersions"
      DeleteReference = "omics:DeleteReference"
      DeleteReferenceStore = "omics:DeleteReferenceStore"
      DeleteRun = "omics:DeleteRun"
      DeleteRunGroup = "omics:DeleteRunGroup"
      DeleteSequenceStore = "omics:DeleteSequenceStore"
      DeleteShare = "omics:DeleteShare"
      DeleteVariantStore = "omics:DeleteVariantStore"
      DeleteWorkflow = "omics:DeleteWorkflow"
      GetAnnotationImportJob = "omics:GetAnnotationImportJob"
      GetAnnotationStore = "omics:GetAnnotationStore"
      GetAnnotationStoreVersion = "omics:GetAnnotationStoreVersion"
      GetReadSet = "omics:GetReadSet"
      GetReadSetActivationJob = "omics:GetReadSetActivationJob"
      GetReadSetExportJob = "omics:GetReadSetExportJob"
      GetReadSetImportJob = "omics:GetReadSetImportJob"
      GetReadSetMetadata = "omics:GetReadSetMetadata"
      GetReference = "omics:GetReference"
      GetReferenceImportJob = "omics:GetReferenceImportJob"
      GetReferenceMetadata = "omics:GetReferenceMetadata"
      GetReferenceStore = "omics:GetReferenceStore"
      GetRun = "omics:GetRun"
      GetRunGroup = "omics:GetRunGroup"
      GetRunTask = "omics:GetRunTask"
      GetSequenceStore = "omics:GetSequenceStore"
      GetShare = "omics:GetShare"
      GetVariantImportJob = "omics:GetVariantImportJob"
      GetVariantStore = "omics:GetVariantStore"
      GetWorkflow = "omics:GetWorkflow"
      ListAnnotationImportJobs = "omics:ListAnnotationImportJobs"
      ListAnnotationStoreVersions = "omics:ListAnnotationStoreVersions"
      ListAnnotationStores = "omics:ListAnnotationStores"
      ListMultipartReadSetUploads = "omics:ListMultipartReadSetUploads"
      ListReadSetActivationJobs = "omics:ListReadSetActivationJobs"
      ListReadSetExportJobs = "omics:ListReadSetExportJobs"
      ListReadSetImportJobs = "omics:ListReadSetImportJobs"
      ListReadSetUploadParts = "omics:ListReadSetUploadParts"
      ListReadSets = "omics:ListReadSets"
      ListReferenceImportJobs = "omics:ListReferenceImportJobs"
      ListReferenceStores = "omics:ListReferenceStores"
      ListReferences = "omics:ListReferences"
      ListRunGroups = "omics:ListRunGroups"
      ListRunTasks = "omics:ListRunTasks"
      ListRuns = "omics:ListRuns"
      ListSequenceStores = "omics:ListSequenceStores"
      ListShares = "omics:ListShares"
      ListTagsForResource = "omics:ListTagsForResource"
      ListVariantImportJobs = "omics:ListVariantImportJobs"
      ListVariantStores = "omics:ListVariantStores"
      ListWorkflows = "omics:ListWorkflows"
      StartAnnotationImportJob = "omics:StartAnnotationImportJob"
      StartReadSetActivationJob = "omics:StartReadSetActivationJob"
      StartReadSetExportJob = "omics:StartReadSetExportJob"
      StartReadSetImportJob = "omics:StartReadSetImportJob"
      StartReferenceImportJob = "omics:StartReferenceImportJob"
      StartRun = "omics:StartRun"
      StartVariantImportJob = "omics:StartVariantImportJob"
      TagResource = "omics:TagResource"
      UntagResource = "omics:UntagResource"
      UpdateAnnotationStore = "omics:UpdateAnnotationStore"
      UpdateAnnotationStoreVersion = "omics:UpdateAnnotationStoreVersion"
      UpdateRunGroup = "omics:UpdateRunGroup"
      UpdateVariantStore = "omics:UpdateVariantStore"
      UpdateWorkflow = "omics:UpdateWorkflow"
      UploadReadSetPart = "omics:UploadReadSetPart"
    }
    one = {
      AllActions = "one:*"
      CreateDeviceActivationQrCode = "one:CreateDeviceActivationQrCode"
      CreateDeviceConfigurationTemplate = "one:CreateDeviceConfigurationTemplate"
      CreateDeviceInstance = "one:CreateDeviceInstance"
      CreateDeviceInstanceConfiguration = "one:CreateDeviceInstanceConfiguration"
      CreateSite = "one:CreateSite"
      DeleteAssociatedDevice = "one:DeleteAssociatedDevice"
      DeleteDeviceConfigurationTemplate = "one:DeleteDeviceConfigurationTemplate"
      DeleteDeviceInstance = "one:DeleteDeviceInstance"
      DeleteSite = "one:DeleteSite"
      DeleteUser = "one:DeleteUser"
      GetDeviceConfigurationTemplate = "one:GetDeviceConfigurationTemplate"
      GetDeviceInstance = "one:GetDeviceInstance"
      GetDeviceInstanceConfiguration = "one:GetDeviceInstanceConfiguration"
      GetSite = "one:GetSite"
      GetSiteAddress = "one:GetSiteAddress"
      ListDeviceConfigurationTemplates = "one:ListDeviceConfigurationTemplates"
      ListDeviceInstances = "one:ListDeviceInstances"
      ListSites = "one:ListSites"
      ListTagsForResource = "one:ListTagsForResource"
      ListUsers = "one:ListUsers"
      RebootDevice = "one:RebootDevice"
      TagResource = "one:TagResource"
      UntagResource = "one:UntagResource"
      UpdateDeviceConfigurationTemplate = "one:UpdateDeviceConfigurationTemplate"
      UpdateDeviceInstance = "one:UpdateDeviceInstance"
      UpdateSite = "one:UpdateSite"
      UpdateSiteAddress = "one:UpdateSiteAddress"
    }
    opsworks-cm = {
      AllActions = "opsworks-cm:*"
      AssociateNode = "opsworks-cm:AssociateNode"
      CreateBackup = "opsworks-cm:CreateBackup"
      CreateServer = "opsworks-cm:CreateServer"
      DeleteBackup = "opsworks-cm:DeleteBackup"
      DeleteServer = "opsworks-cm:DeleteServer"
      DescribeAccountAttributes = "opsworks-cm:DescribeAccountAttributes"
      DescribeBackups = "opsworks-cm:DescribeBackups"
      DescribeEvents = "opsworks-cm:DescribeEvents"
      DescribeNodeAssociationStatus = "opsworks-cm:DescribeNodeAssociationStatus"
      DescribeServers = "opsworks-cm:DescribeServers"
      DisassociateNode = "opsworks-cm:DisassociateNode"
      ExportServerEngineAttribute = "opsworks-cm:ExportServerEngineAttribute"
      ListTagsForResource = "opsworks-cm:ListTagsForResource"
      RestoreServer = "opsworks-cm:RestoreServer"
      StartMaintenance = "opsworks-cm:StartMaintenance"
      TagResource = "opsworks-cm:TagResource"
      UntagResource = "opsworks-cm:UntagResource"
      UpdateServer = "opsworks-cm:UpdateServer"
      UpdateServerEngineAttributes = "opsworks-cm:UpdateServerEngineAttributes"
    }
    opsworks = {
      AllActions = "opsworks:*"
      AssignInstance = "opsworks:AssignInstance"
      AssignVolume = "opsworks:AssignVolume"
      AssociateElasticIp = "opsworks:AssociateElasticIp"
      AttachElasticLoadBalancer = "opsworks:AttachElasticLoadBalancer"
      CloneStack = "opsworks:CloneStack"
      CreateApp = "opsworks:CreateApp"
      CreateDeployment = "opsworks:CreateDeployment"
      CreateInstance = "opsworks:CreateInstance"
      CreateLayer = "opsworks:CreateLayer"
      CreateStack = "opsworks:CreateStack"
      CreateUserProfile = "opsworks:CreateUserProfile"
      DeleteApp = "opsworks:DeleteApp"
      DeleteInstance = "opsworks:DeleteInstance"
      DeleteLayer = "opsworks:DeleteLayer"
      DeleteStack = "opsworks:DeleteStack"
      DeleteUserProfile = "opsworks:DeleteUserProfile"
      DeregisterEcsCluster = "opsworks:DeregisterEcsCluster"
      DeregisterElasticIp = "opsworks:DeregisterElasticIp"
      DeregisterInstance = "opsworks:DeregisterInstance"
      DeregisterRdsDbInstance = "opsworks:DeregisterRdsDbInstance"
      DeregisterVolume = "opsworks:DeregisterVolume"
      DescribeAgentVersions = "opsworks:DescribeAgentVersions"
      DescribeApps = "opsworks:DescribeApps"
      DescribeCommands = "opsworks:DescribeCommands"
      DescribeDeployments = "opsworks:DescribeDeployments"
      DescribeEcsClusters = "opsworks:DescribeEcsClusters"
      DescribeElasticIps = "opsworks:DescribeElasticIps"
      DescribeElasticLoadBalancers = "opsworks:DescribeElasticLoadBalancers"
      DescribeInstances = "opsworks:DescribeInstances"
      DescribeLayers = "opsworks:DescribeLayers"
      DescribeLoadBasedAutoScaling = "opsworks:DescribeLoadBasedAutoScaling"
      DescribeMyUserProfile = "opsworks:DescribeMyUserProfile"
      DescribeOperatingSystems = "opsworks:DescribeOperatingSystems"
      DescribePermissions = "opsworks:DescribePermissions"
      DescribeRaidArrays = "opsworks:DescribeRaidArrays"
      DescribeRdsDbInstances = "opsworks:DescribeRdsDbInstances"
      DescribeServiceErrors = "opsworks:DescribeServiceErrors"
      DescribeStackProvisioningParameters = "opsworks:DescribeStackProvisioningParameters"
      DescribeStackSummary = "opsworks:DescribeStackSummary"
      DescribeStacks = "opsworks:DescribeStacks"
      DescribeTimeBasedAutoScaling = "opsworks:DescribeTimeBasedAutoScaling"
      DescribeUserProfiles = "opsworks:DescribeUserProfiles"
      DescribeVolumes = "opsworks:DescribeVolumes"
      DetachElasticLoadBalancer = "opsworks:DetachElasticLoadBalancer"
      DisassociateElasticIp = "opsworks:DisassociateElasticIp"
      GetHostnameSuggestion = "opsworks:GetHostnameSuggestion"
      GrantAccess = "opsworks:GrantAccess"
      ListTags = "opsworks:ListTags"
      RebootInstance = "opsworks:RebootInstance"
      RegisterEcsCluster = "opsworks:RegisterEcsCluster"
      RegisterElasticIp = "opsworks:RegisterElasticIp"
      RegisterInstance = "opsworks:RegisterInstance"
      RegisterRdsDbInstance = "opsworks:RegisterRdsDbInstance"
      RegisterVolume = "opsworks:RegisterVolume"
      SetLoadBasedAutoScaling = "opsworks:SetLoadBasedAutoScaling"
      SetPermission = "opsworks:SetPermission"
      SetTimeBasedAutoScaling = "opsworks:SetTimeBasedAutoScaling"
      StartInstance = "opsworks:StartInstance"
      StartStack = "opsworks:StartStack"
      StopInstance = "opsworks:StopInstance"
      StopStack = "opsworks:StopStack"
      TagResource = "opsworks:TagResource"
      UnassignInstance = "opsworks:UnassignInstance"
      UnassignVolume = "opsworks:UnassignVolume"
      UntagResource = "opsworks:UntagResource"
      UpdateApp = "opsworks:UpdateApp"
      UpdateElasticIp = "opsworks:UpdateElasticIp"
      UpdateInstance = "opsworks:UpdateInstance"
      UpdateLayer = "opsworks:UpdateLayer"
      UpdateMyUserProfile = "opsworks:UpdateMyUserProfile"
      UpdateRdsDbInstance = "opsworks:UpdateRdsDbInstance"
      UpdateStack = "opsworks:UpdateStack"
      UpdateUserProfile = "opsworks:UpdateUserProfile"
      UpdateVolume = "opsworks:UpdateVolume"
    }
    organizations = {
      AllActions = "organizations:*"
      AcceptHandshake = "organizations:AcceptHandshake"
      AttachPolicy = "organizations:AttachPolicy"
      CancelHandshake = "organizations:CancelHandshake"
      CloseAccount = "organizations:CloseAccount"
      CreateAccount = "organizations:CreateAccount"
      CreateGovCloudAccount = "organizations:CreateGovCloudAccount"
      CreateOrganization = "organizations:CreateOrganization"
      CreateOrganizationalUnit = "organizations:CreateOrganizationalUnit"
      CreatePolicy = "organizations:CreatePolicy"
      DeclineHandshake = "organizations:DeclineHandshake"
      DeleteOrganization = "organizations:DeleteOrganization"
      DeleteOrganizationalUnit = "organizations:DeleteOrganizationalUnit"
      DeletePolicy = "organizations:DeletePolicy"
      DeleteResourcePolicy = "organizations:DeleteResourcePolicy"
      DeregisterDelegatedAdministrator = "organizations:DeregisterDelegatedAdministrator"
      DescribeAccount = "organizations:DescribeAccount"
      DescribeCreateAccountStatus = "organizations:DescribeCreateAccountStatus"
      DescribeEffectivePolicy = "organizations:DescribeEffectivePolicy"
      DescribeHandshake = "organizations:DescribeHandshake"
      DescribeOrganization = "organizations:DescribeOrganization"
      DescribeOrganizationalUnit = "organizations:DescribeOrganizationalUnit"
      DescribePolicy = "organizations:DescribePolicy"
      DescribeResourcePolicy = "organizations:DescribeResourcePolicy"
      DetachPolicy = "organizations:DetachPolicy"
      DisableAWSServiceAccess = "organizations:DisableAWSServiceAccess"
      DisablePolicyType = "organizations:DisablePolicyType"
      EnableAWSServiceAccess = "organizations:EnableAWSServiceAccess"
      EnableAllFeatures = "organizations:EnableAllFeatures"
      EnablePolicyType = "organizations:EnablePolicyType"
      InviteAccountToOrganization = "organizations:InviteAccountToOrganization"
      LeaveOrganization = "organizations:LeaveOrganization"
      ListAWSServiceAccessForOrganization = "organizations:ListAWSServiceAccessForOrganization"
      ListAccounts = "organizations:ListAccounts"
      ListAccountsForParent = "organizations:ListAccountsForParent"
      ListChildren = "organizations:ListChildren"
      ListCreateAccountStatus = "organizations:ListCreateAccountStatus"
      ListDelegatedAdministrators = "organizations:ListDelegatedAdministrators"
      ListDelegatedServicesForAccount = "organizations:ListDelegatedServicesForAccount"
      ListHandshakesForAccount = "organizations:ListHandshakesForAccount"
      ListHandshakesForOrganization = "organizations:ListHandshakesForOrganization"
      ListOrganizationalUnitsForParent = "organizations:ListOrganizationalUnitsForParent"
      ListParents = "organizations:ListParents"
      ListPolicies = "organizations:ListPolicies"
      ListPoliciesForTarget = "organizations:ListPoliciesForTarget"
      ListRoots = "organizations:ListRoots"
      ListTagsForResource = "organizations:ListTagsForResource"
      ListTargetsForPolicy = "organizations:ListTargetsForPolicy"
      MoveAccount = "organizations:MoveAccount"
      PutResourcePolicy = "organizations:PutResourcePolicy"
      RegisterDelegatedAdministrator = "organizations:RegisterDelegatedAdministrator"
      RemoveAccountFromOrganization = "organizations:RemoveAccountFromOrganization"
      TagResource = "organizations:TagResource"
      UntagResource = "organizations:UntagResource"
      UpdateOrganizationalUnit = "organizations:UpdateOrganizationalUnit"
      UpdatePolicy = "organizations:UpdatePolicy"
    }
    osis = {
      AllActions = "osis:*"
      CreatePipeline = "osis:CreatePipeline"
      DeletePipeline = "osis:DeletePipeline"
      GetPipeline = "osis:GetPipeline"
      GetPipelineBlueprint = "osis:GetPipelineBlueprint"
      GetPipelineChangeProgress = "osis:GetPipelineChangeProgress"
      Ingest = "osis:Ingest"
      ListPipelineBlueprints = "osis:ListPipelineBlueprints"
      ListPipelines = "osis:ListPipelines"
      ListTagsForResource = "osis:ListTagsForResource"
      StartPipeline = "osis:StartPipeline"
      StopPipeline = "osis:StopPipeline"
      TagResource = "osis:TagResource"
      UntagResource = "osis:UntagResource"
      UpdatePipeline = "osis:UpdatePipeline"
      ValidatePipeline = "osis:ValidatePipeline"
    }
    outposts = {
      AllActions = "outposts:*"
      CancelCapacityTask = "outposts:CancelCapacityTask"
      CancelOrder = "outposts:CancelOrder"
      CreateOrder = "outposts:CreateOrder"
      CreateOutpost = "outposts:CreateOutpost"
      CreatePrivateConnectivityConfig = "outposts:CreatePrivateConnectivityConfig"
      CreateSite = "outposts:CreateSite"
      DeleteOutpost = "outposts:DeleteOutpost"
      DeleteSite = "outposts:DeleteSite"
      GetCapacityTask = "outposts:GetCapacityTask"
      GetCatalogItem = "outposts:GetCatalogItem"
      GetConnection = "outposts:GetConnection"
      GetOrder = "outposts:GetOrder"
      GetOutpost = "outposts:GetOutpost"
      GetOutpostInstanceTypes = "outposts:GetOutpostInstanceTypes"
      GetOutpostSupportedInstanceTypes = "outposts:GetOutpostSupportedInstanceTypes"
      GetPrivateConnectivityConfig = "outposts:GetPrivateConnectivityConfig"
      GetSite = "outposts:GetSite"
      GetSiteAddress = "outposts:GetSiteAddress"
      ListAssets = "outposts:ListAssets"
      ListCapacityTasks = "outposts:ListCapacityTasks"
      ListCatalogItems = "outposts:ListCatalogItems"
      ListOrders = "outposts:ListOrders"
      ListOutposts = "outposts:ListOutposts"
      ListSites = "outposts:ListSites"
      ListTagsForResource = "outposts:ListTagsForResource"
      StartCapacityTask = "outposts:StartCapacityTask"
      StartConnection = "outposts:StartConnection"
      TagResource = "outposts:TagResource"
      UntagResource = "outposts:UntagResource"
      UpdateOutpost = "outposts:UpdateOutpost"
      UpdateSite = "outposts:UpdateSite"
      UpdateSiteAddress = "outposts:UpdateSiteAddress"
      UpdateSiteRackPhysicalProperties = "outposts:UpdateSiteRackPhysicalProperties"
    }
    panorama = {
      AllActions = "panorama:*"
      CreateApplicationInstance = "panorama:CreateApplicationInstance"
      CreateJobForDevices = "panorama:CreateJobForDevices"
      CreateNodeFromTemplateJob = "panorama:CreateNodeFromTemplateJob"
      CreatePackage = "panorama:CreatePackage"
      CreatePackageImportJob = "panorama:CreatePackageImportJob"
      DeleteDevice = "panorama:DeleteDevice"
      DeletePackage = "panorama:DeletePackage"
      DeregisterPackageVersion = "panorama:DeregisterPackageVersion"
      DescribeApplicationInstance = "panorama:DescribeApplicationInstance"
      DescribeApplicationInstanceDetails = "panorama:DescribeApplicationInstanceDetails"
      DescribeDevice = "panorama:DescribeDevice"
      DescribeDeviceJob = "panorama:DescribeDeviceJob"
      DescribeNode = "panorama:DescribeNode"
      DescribeNodeFromTemplateJob = "panorama:DescribeNodeFromTemplateJob"
      DescribePackage = "panorama:DescribePackage"
      DescribePackageImportJob = "panorama:DescribePackageImportJob"
      DescribePackageVersion = "panorama:DescribePackageVersion"
      DescribeSoftware = "panorama:DescribeSoftware"
      GetWebSocketURL = "panorama:GetWebSocketURL"
      ListApplicationInstanceDependencies = "panorama:ListApplicationInstanceDependencies"
      ListApplicationInstanceNodeInstances = "panorama:ListApplicationInstanceNodeInstances"
      ListApplicationInstances = "panorama:ListApplicationInstances"
      ListDevices = "panorama:ListDevices"
      ListDevicesJobs = "panorama:ListDevicesJobs"
      ListNodeFromTemplateJobs = "panorama:ListNodeFromTemplateJobs"
      ListNodes = "panorama:ListNodes"
      ListPackageImportJobs = "panorama:ListPackageImportJobs"
      ListPackages = "panorama:ListPackages"
      ListTagsForResource = "panorama:ListTagsForResource"
      ProvisionDevice = "panorama:ProvisionDevice"
      RegisterPackageVersion = "panorama:RegisterPackageVersion"
      RemoveApplicationInstance = "panorama:RemoveApplicationInstance"
      SignalApplicationInstanceNodeInstances = "panorama:SignalApplicationInstanceNodeInstances"
      TagResource = "panorama:TagResource"
      UntagResource = "panorama:UntagResource"
      UpdateDeviceMetadata = "panorama:UpdateDeviceMetadata"
    }
    partnercentral-account-management = {
      AllActions = "partnercentral-account-management:*"
      AssociatePartnerAccount = "partnercentral-account-management:AssociatePartnerAccount"
      AssociatePartnerUser = "partnercentral-account-management:AssociatePartnerUser"
      DisassociatePartnerUser = "partnercentral-account-management:DisassociatePartnerUser"
    }
    payment-cryptography = {
      AllActions = "payment-cryptography:*"
      CreateAlias = "payment-cryptography:CreateAlias"
      CreateKey = "payment-cryptography:CreateKey"
      DecryptData = "payment-cryptography:DecryptData"
      DeleteAlias = "payment-cryptography:DeleteAlias"
      DeleteKey = "payment-cryptography:DeleteKey"
      EncryptData = "payment-cryptography:EncryptData"
      ExportKey = "payment-cryptography:ExportKey"
      GenerateCardValidationData = "payment-cryptography:GenerateCardValidationData"
      GenerateMac = "payment-cryptography:GenerateMac"
      GeneratePinData = "payment-cryptography:GeneratePinData"
      GetAlias = "payment-cryptography:GetAlias"
      GetKey = "payment-cryptography:GetKey"
      GetParametersForExport = "payment-cryptography:GetParametersForExport"
      GetParametersForImport = "payment-cryptography:GetParametersForImport"
      GetPublicKeyCertificate = "payment-cryptography:GetPublicKeyCertificate"
      ImportKey = "payment-cryptography:ImportKey"
      ListAliases = "payment-cryptography:ListAliases"
      ListKeys = "payment-cryptography:ListKeys"
      ListTagsForResource = "payment-cryptography:ListTagsForResource"
      ReEncryptData = "payment-cryptography:ReEncryptData"
      RestoreKey = "payment-cryptography:RestoreKey"
      StartKeyUsage = "payment-cryptography:StartKeyUsage"
      StopKeyUsage = "payment-cryptography:StopKeyUsage"
      TagResource = "payment-cryptography:TagResource"
      TranslatePinData = "payment-cryptography:TranslatePinData"
      UntagResource = "payment-cryptography:UntagResource"
      UpdateAlias = "payment-cryptography:UpdateAlias"
      VerifyAuthRequestCryptogram = "payment-cryptography:VerifyAuthRequestCryptogram"
      VerifyCardValidationData = "payment-cryptography:VerifyCardValidationData"
      VerifyMac = "payment-cryptography:VerifyMac"
      VerifyPinData = "payment-cryptography:VerifyPinData"
    }
    payments = {
      AllActions = "payments:*"
      CreatePaymentInstrument = "payments:CreatePaymentInstrument"
      DeletePaymentInstrument = "payments:DeletePaymentInstrument"
      GetPaymentInstrument = "payments:GetPaymentInstrument"
      GetPaymentStatus = "payments:GetPaymentStatus"
      ListPaymentInstruments = "payments:ListPaymentInstruments"
      ListPaymentPreferences = "payments:ListPaymentPreferences"
      ListTagsForResource = "payments:ListTagsForResource"
      MakePayment = "payments:MakePayment"
      TagResource = "payments:TagResource"
      UntagResource = "payments:UntagResource"
      UpdatePaymentInstrument = "payments:UpdatePaymentInstrument"
      UpdatePaymentPreferences = "payments:UpdatePaymentPreferences"
    }
    pca-connector-ad = {
      AllActions = "pca-connector-ad:*"
      CreateConnector = "pca-connector-ad:CreateConnector"
      CreateDirectoryRegistration = "pca-connector-ad:CreateDirectoryRegistration"
      CreateServicePrincipalName = "pca-connector-ad:CreateServicePrincipalName"
      CreateTemplate = "pca-connector-ad:CreateTemplate"
      CreateTemplateGroupAccessControlEntry = "pca-connector-ad:CreateTemplateGroupAccessControlEntry"
      DeleteConnector = "pca-connector-ad:DeleteConnector"
      DeleteDirectoryRegistration = "pca-connector-ad:DeleteDirectoryRegistration"
      DeleteServicePrincipalName = "pca-connector-ad:DeleteServicePrincipalName"
      DeleteTemplate = "pca-connector-ad:DeleteTemplate"
      DeleteTemplateGroupAccessControlEntry = "pca-connector-ad:DeleteTemplateGroupAccessControlEntry"
      GetConnector = "pca-connector-ad:GetConnector"
      GetDirectoryRegistration = "pca-connector-ad:GetDirectoryRegistration"
      GetServicePrincipalName = "pca-connector-ad:GetServicePrincipalName"
      GetTemplate = "pca-connector-ad:GetTemplate"
      GetTemplateGroupAccessControlEntry = "pca-connector-ad:GetTemplateGroupAccessControlEntry"
      ListConnectors = "pca-connector-ad:ListConnectors"
      ListDirectoryRegistrations = "pca-connector-ad:ListDirectoryRegistrations"
      ListServicePrincipalNames = "pca-connector-ad:ListServicePrincipalNames"
      ListTagsForResource = "pca-connector-ad:ListTagsForResource"
      ListTemplateGroupAccessControlEntries = "pca-connector-ad:ListTemplateGroupAccessControlEntries"
      ListTemplates = "pca-connector-ad:ListTemplates"
      TagResource = "pca-connector-ad:TagResource"
      UntagResource = "pca-connector-ad:UntagResource"
      UpdateTemplate = "pca-connector-ad:UpdateTemplate"
      UpdateTemplateGroupAccessControlEntry = "pca-connector-ad:UpdateTemplateGroupAccessControlEntry"
    }
    pca-connector-scep = {
      AllActions = "pca-connector-scep:*"
      CreateChallenge = "pca-connector-scep:CreateChallenge"
      CreateConnector = "pca-connector-scep:CreateConnector"
      DeleteChallenge = "pca-connector-scep:DeleteChallenge"
      DeleteConnector = "pca-connector-scep:DeleteConnector"
      GetChallengeMetadata = "pca-connector-scep:GetChallengeMetadata"
      GetChallengePassword = "pca-connector-scep:GetChallengePassword"
      GetConnector = "pca-connector-scep:GetConnector"
      ListChallengeMetadata = "pca-connector-scep:ListChallengeMetadata"
      ListConnectors = "pca-connector-scep:ListConnectors"
      ListTagsForResource = "pca-connector-scep:ListTagsForResource"
      TagResource = "pca-connector-scep:TagResource"
      UntagResource = "pca-connector-scep:UntagResource"
    }
    personalize = {
      AllActions = "personalize:*"
      CreateBatchInferenceJob = "personalize:CreateBatchInferenceJob"
      CreateBatchSegmentJob = "personalize:CreateBatchSegmentJob"
      CreateCampaign = "personalize:CreateCampaign"
      CreateDataDeletionJob = "personalize:CreateDataDeletionJob"
      CreateDataInsightsJob = "personalize:CreateDataInsightsJob"
      CreateDataset = "personalize:CreateDataset"
      CreateDatasetExportJob = "personalize:CreateDatasetExportJob"
      CreateDatasetGroup = "personalize:CreateDatasetGroup"
      CreateDatasetImportJob = "personalize:CreateDatasetImportJob"
      CreateEventTracker = "personalize:CreateEventTracker"
      CreateFilter = "personalize:CreateFilter"
      CreateMetricAttribution = "personalize:CreateMetricAttribution"
      CreateRecommender = "personalize:CreateRecommender"
      CreateSchema = "personalize:CreateSchema"
      CreateSolution = "personalize:CreateSolution"
      CreateSolutionVersion = "personalize:CreateSolutionVersion"
      DeleteCampaign = "personalize:DeleteCampaign"
      DeleteDataset = "personalize:DeleteDataset"
      DeleteDatasetGroup = "personalize:DeleteDatasetGroup"
      DeleteEventTracker = "personalize:DeleteEventTracker"
      DeleteFilter = "personalize:DeleteFilter"
      DeleteMetricAttribution = "personalize:DeleteMetricAttribution"
      DeleteRecommender = "personalize:DeleteRecommender"
      DeleteSchema = "personalize:DeleteSchema"
      DeleteSolution = "personalize:DeleteSolution"
      DescribeAlgorithm = "personalize:DescribeAlgorithm"
      DescribeBatchInferenceJob = "personalize:DescribeBatchInferenceJob"
      DescribeBatchSegmentJob = "personalize:DescribeBatchSegmentJob"
      DescribeCampaign = "personalize:DescribeCampaign"
      DescribeDataDeletionJob = "personalize:DescribeDataDeletionJob"
      DescribeDataInsightsJob = "personalize:DescribeDataInsightsJob"
      DescribeDataset = "personalize:DescribeDataset"
      DescribeDatasetExportJob = "personalize:DescribeDatasetExportJob"
      DescribeDatasetGroup = "personalize:DescribeDatasetGroup"
      DescribeDatasetImportJob = "personalize:DescribeDatasetImportJob"
      DescribeEventTracker = "personalize:DescribeEventTracker"
      DescribeFeatureTransformation = "personalize:DescribeFeatureTransformation"
      DescribeFilter = "personalize:DescribeFilter"
      DescribeMetricAttribution = "personalize:DescribeMetricAttribution"
      DescribeRecipe = "personalize:DescribeRecipe"
      DescribeRecommender = "personalize:DescribeRecommender"
      DescribeSchema = "personalize:DescribeSchema"
      DescribeSolution = "personalize:DescribeSolution"
      DescribeSolutionVersion = "personalize:DescribeSolutionVersion"
      GetActionRecommendations = "personalize:GetActionRecommendations"
      GetDataInsights = "personalize:GetDataInsights"
      GetPersonalizedRanking = "personalize:GetPersonalizedRanking"
      GetRecommendations = "personalize:GetRecommendations"
      GetSolutionMetrics = "personalize:GetSolutionMetrics"
      ListBatchInferenceJobs = "personalize:ListBatchInferenceJobs"
      ListBatchSegmentJobs = "personalize:ListBatchSegmentJobs"
      ListCampaigns = "personalize:ListCampaigns"
      ListDataDeletionJobs = "personalize:ListDataDeletionJobs"
      ListDataInsightsJobs = "personalize:ListDataInsightsJobs"
      ListDatasetExportJobs = "personalize:ListDatasetExportJobs"
      ListDatasetGroups = "personalize:ListDatasetGroups"
      ListDatasetImportJobs = "personalize:ListDatasetImportJobs"
      ListDatasets = "personalize:ListDatasets"
      ListEventTrackers = "personalize:ListEventTrackers"
      ListFilters = "personalize:ListFilters"
      ListMetricAttributionMetrics = "personalize:ListMetricAttributionMetrics"
      ListMetricAttributions = "personalize:ListMetricAttributions"
      ListRecipes = "personalize:ListRecipes"
      ListRecommenders = "personalize:ListRecommenders"
      ListSchemas = "personalize:ListSchemas"
      ListSolutionVersions = "personalize:ListSolutionVersions"
      ListSolutions = "personalize:ListSolutions"
      ListTagsForResource = "personalize:ListTagsForResource"
      PutActionInteractions = "personalize:PutActionInteractions"
      PutActions = "personalize:PutActions"
      PutEvents = "personalize:PutEvents"
      PutItems = "personalize:PutItems"
      PutUsers = "personalize:PutUsers"
      StartRecommender = "personalize:StartRecommender"
      StopRecommender = "personalize:StopRecommender"
      StopSolutionVersionCreation = "personalize:StopSolutionVersionCreation"
      TagResource = "personalize:TagResource"
      UntagResource = "personalize:UntagResource"
      UpdateCampaign = "personalize:UpdateCampaign"
      UpdateDataset = "personalize:UpdateDataset"
      UpdateMetricAttribution = "personalize:UpdateMetricAttribution"
      UpdateRecommender = "personalize:UpdateRecommender"
    }
    pi = {
      AllActions = "pi:*"
      CreatePerformanceAnalysisReport = "pi:CreatePerformanceAnalysisReport"
      DeletePerformanceAnalysisReport = "pi:DeletePerformanceAnalysisReport"
      DescribeDimensionKeys = "pi:DescribeDimensionKeys"
      GetDimensionKeyDetails = "pi:GetDimensionKeyDetails"
      GetPerformanceAnalysisReport = "pi:GetPerformanceAnalysisReport"
      GetResourceMetadata = "pi:GetResourceMetadata"
      GetResourceMetrics = "pi:GetResourceMetrics"
      ListAvailableResourceDimensions = "pi:ListAvailableResourceDimensions"
      ListAvailableResourceMetrics = "pi:ListAvailableResourceMetrics"
      ListPerformanceAnalysisReports = "pi:ListPerformanceAnalysisReports"
      ListTagsForResource = "pi:ListTagsForResource"
      TagResource = "pi:TagResource"
      UntagResource = "pi:UntagResource"
    }
    pipes = {
      AllActions = "pipes:*"
      CreatePipe = "pipes:CreatePipe"
      DeletePipe = "pipes:DeletePipe"
      DescribePipe = "pipes:DescribePipe"
      ListPipes = "pipes:ListPipes"
      ListTagsForResource = "pipes:ListTagsForResource"
      StartPipe = "pipes:StartPipe"
      StopPipe = "pipes:StopPipe"
      TagResource = "pipes:TagResource"
      UntagResource = "pipes:UntagResource"
      UpdatePipe = "pipes:UpdatePipe"
    }
    polly = {
      AllActions = "polly:*"
      DeleteLexicon = "polly:DeleteLexicon"
      DescribeVoices = "polly:DescribeVoices"
      GetLexicon = "polly:GetLexicon"
      GetSpeechSynthesisTask = "polly:GetSpeechSynthesisTask"
      ListLexicons = "polly:ListLexicons"
      ListSpeechSynthesisTasks = "polly:ListSpeechSynthesisTasks"
      PutLexicon = "polly:PutLexicon"
      StartSpeechSynthesisTask = "polly:StartSpeechSynthesisTask"
      SynthesizeSpeech = "polly:SynthesizeSpeech"
    }
    pricing = {
      AllActions = "pricing:*"
      DescribeServices = "pricing:DescribeServices"
      GetAttributeValues = "pricing:GetAttributeValues"
      GetPriceListFileUrl = "pricing:GetPriceListFileUrl"
      GetProducts = "pricing:GetProducts"
      ListPriceLists = "pricing:ListPriceLists"
    }
    private-networks = {
      AllActions = "private-networks:*"
      AcknowledgeOrderReceipt = "private-networks:AcknowledgeOrderReceipt"
      ActivateDeviceIdentifier = "private-networks:ActivateDeviceIdentifier"
      ActivateNetworkSite = "private-networks:ActivateNetworkSite"
      ConfigureAccessPoint = "private-networks:ConfigureAccessPoint"
      CreateNetwork = "private-networks:CreateNetwork"
      CreateNetworkSite = "private-networks:CreateNetworkSite"
      DeactivateDeviceIdentifier = "private-networks:DeactivateDeviceIdentifier"
      DeleteNetwork = "private-networks:DeleteNetwork"
      DeleteNetworkSite = "private-networks:DeleteNetworkSite"
      GetDeviceIdentifier = "private-networks:GetDeviceIdentifier"
      GetNetwork = "private-networks:GetNetwork"
      GetNetworkResource = "private-networks:GetNetworkResource"
      GetNetworkSite = "private-networks:GetNetworkSite"
      GetOrder = "private-networks:GetOrder"
      ListDeviceIdentifiers = "private-networks:ListDeviceIdentifiers"
      ListNetworkResources = "private-networks:ListNetworkResources"
      ListNetworkSites = "private-networks:ListNetworkSites"
      ListNetworks = "private-networks:ListNetworks"
      ListOrders = "private-networks:ListOrders"
      ListTagsForResource = "private-networks:ListTagsForResource"
      Ping = "private-networks:Ping"
      StartNetworkResourceUpdate = "private-networks:StartNetworkResourceUpdate"
      TagResource = "private-networks:TagResource"
      UntagResource = "private-networks:UntagResource"
      UpdateNetworkSite = "private-networks:UpdateNetworkSite"
      UpdateNetworkSitePlan = "private-networks:UpdateNetworkSitePlan"
    }
    profile = {
      AllActions = "profile:*"
      AddProfileKey = "profile:AddProfileKey"
      CreateCalculatedAttributeDefinition = "profile:CreateCalculatedAttributeDefinition"
      CreateDomain = "profile:CreateDomain"
      CreateEventStream = "profile:CreateEventStream"
      CreateIntegrationWorkflow = "profile:CreateIntegrationWorkflow"
      CreateProfile = "profile:CreateProfile"
      DeleteCalculatedAttributeDefinition = "profile:DeleteCalculatedAttributeDefinition"
      DeleteDomain = "profile:DeleteDomain"
      DeleteEventStream = "profile:DeleteEventStream"
      DeleteIntegration = "profile:DeleteIntegration"
      DeleteProfile = "profile:DeleteProfile"
      DeleteProfileKey = "profile:DeleteProfileKey"
      DeleteProfileObject = "profile:DeleteProfileObject"
      DeleteProfileObjectType = "profile:DeleteProfileObjectType"
      DeleteWorkflow = "profile:DeleteWorkflow"
      DetectProfileObjectType = "profile:DetectProfileObjectType"
      GetAutoMergingPreview = "profile:GetAutoMergingPreview"
      GetCalculatedAttributeDefinition = "profile:GetCalculatedAttributeDefinition"
      GetCalculatedAttributeForProfile = "profile:GetCalculatedAttributeForProfile"
      GetDomain = "profile:GetDomain"
      GetEventStream = "profile:GetEventStream"
      GetIdentityResolutionJob = "profile:GetIdentityResolutionJob"
      GetIntegration = "profile:GetIntegration"
      GetMatches = "profile:GetMatches"
      GetProfileObjectType = "profile:GetProfileObjectType"
      GetProfileObjectTypeTemplate = "profile:GetProfileObjectTypeTemplate"
      GetSimilarProfiles = "profile:GetSimilarProfiles"
      GetWorkflow = "profile:GetWorkflow"
      GetWorkflowSteps = "profile:GetWorkflowSteps"
      ListAccountIntegrations = "profile:ListAccountIntegrations"
      ListCalculatedAttributeDefinitions = "profile:ListCalculatedAttributeDefinitions"
      ListCalculatedAttributesForProfile = "profile:ListCalculatedAttributesForProfile"
      ListDomains = "profile:ListDomains"
      ListEventStreams = "profile:ListEventStreams"
      ListIdentityResolutionJobs = "profile:ListIdentityResolutionJobs"
      ListIntegrations = "profile:ListIntegrations"
      ListProfileObjectTypeTemplates = "profile:ListProfileObjectTypeTemplates"
      ListProfileObjectTypes = "profile:ListProfileObjectTypes"
      ListProfileObjects = "profile:ListProfileObjects"
      ListRuleBasedMatches = "profile:ListRuleBasedMatches"
      ListTagsForResource = "profile:ListTagsForResource"
      ListWorkflows = "profile:ListWorkflows"
      MergeProfiles = "profile:MergeProfiles"
      PutIntegration = "profile:PutIntegration"
      PutProfileObject = "profile:PutProfileObject"
      PutProfileObjectType = "profile:PutProfileObjectType"
      SearchProfiles = "profile:SearchProfiles"
      TagResource = "profile:TagResource"
      UntagResource = "profile:UntagResource"
      UpdateCalculatedAttributeDefinition = "profile:UpdateCalculatedAttributeDefinition"
      UpdateDomain = "profile:UpdateDomain"
      UpdateProfile = "profile:UpdateProfile"
    }
    proton = {
      AllActions = "proton:*"
      AcceptEnvironmentAccountConnection = "proton:AcceptEnvironmentAccountConnection"
      CancelComponentDeployment = "proton:CancelComponentDeployment"
      CancelEnvironmentDeployment = "proton:CancelEnvironmentDeployment"
      CancelServiceInstanceDeployment = "proton:CancelServiceInstanceDeployment"
      CancelServicePipelineDeployment = "proton:CancelServicePipelineDeployment"
      CreateComponent = "proton:CreateComponent"
      CreateEnvironment = "proton:CreateEnvironment"
      CreateEnvironmentAccountConnection = "proton:CreateEnvironmentAccountConnection"
      CreateEnvironmentTemplate = "proton:CreateEnvironmentTemplate"
      CreateEnvironmentTemplateMajorVersion = "proton:CreateEnvironmentTemplateMajorVersion"
      CreateEnvironmentTemplateMinorVersion = "proton:CreateEnvironmentTemplateMinorVersion"
      CreateEnvironmentTemplateVersion = "proton:CreateEnvironmentTemplateVersion"
      CreateRepository = "proton:CreateRepository"
      CreateService = "proton:CreateService"
      CreateServiceInstance = "proton:CreateServiceInstance"
      CreateServiceSyncConfig = "proton:CreateServiceSyncConfig"
      CreateServiceTemplate = "proton:CreateServiceTemplate"
      CreateServiceTemplateMajorVersion = "proton:CreateServiceTemplateMajorVersion"
      CreateServiceTemplateMinorVersion = "proton:CreateServiceTemplateMinorVersion"
      CreateServiceTemplateVersion = "proton:CreateServiceTemplateVersion"
      CreateTemplateSyncConfig = "proton:CreateTemplateSyncConfig"
      DeleteAccountRoles = "proton:DeleteAccountRoles"
      DeleteComponent = "proton:DeleteComponent"
      DeleteDeployment = "proton:DeleteDeployment"
      DeleteEnvironment = "proton:DeleteEnvironment"
      DeleteEnvironmentAccountConnection = "proton:DeleteEnvironmentAccountConnection"
      DeleteEnvironmentTemplate = "proton:DeleteEnvironmentTemplate"
      DeleteEnvironmentTemplateMajorVersion = "proton:DeleteEnvironmentTemplateMajorVersion"
      DeleteEnvironmentTemplateMinorVersion = "proton:DeleteEnvironmentTemplateMinorVersion"
      DeleteEnvironmentTemplateVersion = "proton:DeleteEnvironmentTemplateVersion"
      DeleteRepository = "proton:DeleteRepository"
      DeleteService = "proton:DeleteService"
      DeleteServiceSyncConfig = "proton:DeleteServiceSyncConfig"
      DeleteServiceTemplate = "proton:DeleteServiceTemplate"
      DeleteServiceTemplateMajorVersion = "proton:DeleteServiceTemplateMajorVersion"
      DeleteServiceTemplateMinorVersion = "proton:DeleteServiceTemplateMinorVersion"
      DeleteServiceTemplateVersion = "proton:DeleteServiceTemplateVersion"
      DeleteTemplateSyncConfig = "proton:DeleteTemplateSyncConfig"
      GetAccountRoles = "proton:GetAccountRoles"
      GetAccountSettings = "proton:GetAccountSettings"
      GetComponent = "proton:GetComponent"
      GetDeployment = "proton:GetDeployment"
      GetEnvironment = "proton:GetEnvironment"
      GetEnvironmentAccountConnection = "proton:GetEnvironmentAccountConnection"
      GetEnvironmentTemplate = "proton:GetEnvironmentTemplate"
      GetEnvironmentTemplateMajorVersion = "proton:GetEnvironmentTemplateMajorVersion"
      GetEnvironmentTemplateMinorVersion = "proton:GetEnvironmentTemplateMinorVersion"
      GetEnvironmentTemplateVersion = "proton:GetEnvironmentTemplateVersion"
      GetRepository = "proton:GetRepository"
      GetRepositorySyncStatus = "proton:GetRepositorySyncStatus"
      GetResourceTemplateVersionStatusCounts = "proton:GetResourceTemplateVersionStatusCounts"
      GetResourcesSummary = "proton:GetResourcesSummary"
      GetService = "proton:GetService"
      GetServiceInstance = "proton:GetServiceInstance"
      GetServiceInstanceSyncStatus = "proton:GetServiceInstanceSyncStatus"
      GetServiceSyncBlockerSummary = "proton:GetServiceSyncBlockerSummary"
      GetServiceSyncConfig = "proton:GetServiceSyncConfig"
      GetServiceTemplate = "proton:GetServiceTemplate"
      GetServiceTemplateMajorVersion = "proton:GetServiceTemplateMajorVersion"
      GetServiceTemplateMinorVersion = "proton:GetServiceTemplateMinorVersion"
      GetServiceTemplateVersion = "proton:GetServiceTemplateVersion"
      GetTemplateSyncConfig = "proton:GetTemplateSyncConfig"
      GetTemplateSyncStatus = "proton:GetTemplateSyncStatus"
      ListComponentOutputs = "proton:ListComponentOutputs"
      ListComponentProvisionedResources = "proton:ListComponentProvisionedResources"
      ListComponents = "proton:ListComponents"
      ListDeployments = "proton:ListDeployments"
      ListEnvironmentAccountConnections = "proton:ListEnvironmentAccountConnections"
      ListEnvironmentOutputs = "proton:ListEnvironmentOutputs"
      ListEnvironmentProvisionedResources = "proton:ListEnvironmentProvisionedResources"
      ListEnvironmentTemplateMajorVersions = "proton:ListEnvironmentTemplateMajorVersions"
      ListEnvironmentTemplateMinorVersions = "proton:ListEnvironmentTemplateMinorVersions"
      ListEnvironmentTemplateVersions = "proton:ListEnvironmentTemplateVersions"
      ListEnvironmentTemplates = "proton:ListEnvironmentTemplates"
      ListEnvironments = "proton:ListEnvironments"
      ListRepositories = "proton:ListRepositories"
      ListRepositorySyncDefinitions = "proton:ListRepositorySyncDefinitions"
      ListServiceInstanceOutputs = "proton:ListServiceInstanceOutputs"
      ListServiceInstanceProvisionedResources = "proton:ListServiceInstanceProvisionedResources"
      ListServiceInstances = "proton:ListServiceInstances"
      ListServicePipelineOutputs = "proton:ListServicePipelineOutputs"
      ListServicePipelineProvisionedResources = "proton:ListServicePipelineProvisionedResources"
      ListServiceTemplateMajorVersions = "proton:ListServiceTemplateMajorVersions"
      ListServiceTemplateMinorVersions = "proton:ListServiceTemplateMinorVersions"
      ListServiceTemplateVersions = "proton:ListServiceTemplateVersions"
      ListServiceTemplates = "proton:ListServiceTemplates"
      ListServices = "proton:ListServices"
      ListTagsForResource = "proton:ListTagsForResource"
      NotifyResourceDeploymentStatusChange = "proton:NotifyResourceDeploymentStatusChange"
      RejectEnvironmentAccountConnection = "proton:RejectEnvironmentAccountConnection"
      TagResource = "proton:TagResource"
      UntagResource = "proton:UntagResource"
      UpdateAccountRoles = "proton:UpdateAccountRoles"
      UpdateAccountSettings = "proton:UpdateAccountSettings"
      UpdateComponent = "proton:UpdateComponent"
      UpdateEnvironment = "proton:UpdateEnvironment"
      UpdateEnvironmentAccountConnection = "proton:UpdateEnvironmentAccountConnection"
      UpdateEnvironmentTemplate = "proton:UpdateEnvironmentTemplate"
      UpdateEnvironmentTemplateMajorVersion = "proton:UpdateEnvironmentTemplateMajorVersion"
      UpdateEnvironmentTemplateMinorVersion = "proton:UpdateEnvironmentTemplateMinorVersion"
      UpdateEnvironmentTemplateVersion = "proton:UpdateEnvironmentTemplateVersion"
      UpdateService = "proton:UpdateService"
      UpdateServiceInstance = "proton:UpdateServiceInstance"
      UpdateServicePipeline = "proton:UpdateServicePipeline"
      UpdateServiceSyncBlocker = "proton:UpdateServiceSyncBlocker"
      UpdateServiceSyncConfig = "proton:UpdateServiceSyncConfig"
      UpdateServiceTemplate = "proton:UpdateServiceTemplate"
      UpdateServiceTemplateMajorVersion = "proton:UpdateServiceTemplateMajorVersion"
      UpdateServiceTemplateMinorVersion = "proton:UpdateServiceTemplateMinorVersion"
      UpdateServiceTemplateVersion = "proton:UpdateServiceTemplateVersion"
      UpdateTemplateSyncConfig = "proton:UpdateTemplateSyncConfig"
    }
    purchase-orders = {
      AllActions = "purchase-orders:*"
      AddPurchaseOrder = "purchase-orders:AddPurchaseOrder"
      DeletePurchaseOrder = "purchase-orders:DeletePurchaseOrder"
      GetConsoleActionSetEnforced = "purchase-orders:GetConsoleActionSetEnforced"
      GetPurchaseOrder = "purchase-orders:GetPurchaseOrder"
      ListPurchaseOrderInvoices = "purchase-orders:ListPurchaseOrderInvoices"
      ListPurchaseOrders = "purchase-orders:ListPurchaseOrders"
      ListTagsForResource = "purchase-orders:ListTagsForResource"
      ModifyPurchaseOrders = "purchase-orders:ModifyPurchaseOrders"
      TagResource = "purchase-orders:TagResource"
      UntagResource = "purchase-orders:UntagResource"
      UpdateConsoleActionSetEnforced = "purchase-orders:UpdateConsoleActionSetEnforced"
      UpdatePurchaseOrder = "purchase-orders:UpdatePurchaseOrder"
      UpdatePurchaseOrderStatus = "purchase-orders:UpdatePurchaseOrderStatus"
      ViewPurchaseOrders = "purchase-orders:ViewPurchaseOrders"
    }
    q = {
      AllActions = "q:*"
      CreateAssignment = "q:CreateAssignment"
      DeleteAssignment = "q:DeleteAssignment"
      GetConversation = "q:GetConversation"
      GetIdentityMetadata = "q:GetIdentityMetadata"
      GetTroubleshootingResults = "q:GetTroubleshootingResults"
      ListConversations = "q:ListConversations"
      PassRequest = "q:PassRequest"
      SendMessage = "q:SendMessage"
      StartConversation = "q:StartConversation"
      StartTroubleshootingAnalysis = "q:StartTroubleshootingAnalysis"
      StartTroubleshootingResolutionExplanation = "q:StartTroubleshootingResolutionExplanation"
      UpdateTroubleshootingCommandResult = "q:UpdateTroubleshootingCommandResult"
    }
    qapps = {
      AllActions = "qapps:*"
      AssociateQAppWithUser = "qapps:AssociateQAppWithUser"
      CopyQApp = "qapps:CopyQApp"
      CreateLibraryItem = "qapps:CreateLibraryItem"
      CreateLibraryItemReview = "qapps:CreateLibraryItemReview"
      CreateQApp = "qapps:CreateQApp"
      CreateSubscriptionToken = "qapps:CreateSubscriptionToken"
      DeleteLibraryItem = "qapps:DeleteLibraryItem"
      DeleteQApp = "qapps:DeleteQApp"
      DisassociateQAppFromUser = "qapps:DisassociateQAppFromUser"
      GetLibraryItem = "qapps:GetLibraryItem"
      GetQApp = "qapps:GetQApp"
      ImportDocumentToQApp = "qapps:ImportDocumentToQApp"
      ImportDocumentToQAppSession = "qapps:ImportDocumentToQAppSession"
      ListLibraryItems = "qapps:ListLibraryItems"
      ListQApps = "qapps:ListQApps"
      PredictProblemStatementFromConversation = "qapps:PredictProblemStatementFromConversation"
      PredictQAppFromProblemStatement = "qapps:PredictQAppFromProblemStatement"
      StartQAppSession = "qapps:StartQAppSession"
      StopQAppSession = "qapps:StopQAppSession"
      UpdateLibraryItem = "qapps:UpdateLibraryItem"
      UpdateQApp = "qapps:UpdateQApp"
    }
    qbusiness = {
      AllActions = "qbusiness:*"
      AddUserLicenses = "qbusiness:AddUserLicenses"
      BatchDeleteDocument = "qbusiness:BatchDeleteDocument"
      BatchPutDocument = "qbusiness:BatchPutDocument"
      CancelSubscription = "qbusiness:CancelSubscription"
      Chat = "qbusiness:Chat"
      ChatSync = "qbusiness:ChatSync"
      CreateApplication = "qbusiness:CreateApplication"
      CreateDataSource = "qbusiness:CreateDataSource"
      CreateIndex = "qbusiness:CreateIndex"
      CreateLicense = "qbusiness:CreateLicense"
      CreatePlugin = "qbusiness:CreatePlugin"
      CreateRetriever = "qbusiness:CreateRetriever"
      CreateSubscription = "qbusiness:CreateSubscription"
      CreateUser = "qbusiness:CreateUser"
      CreateWebExperience = "qbusiness:CreateWebExperience"
      DeleteApplication = "qbusiness:DeleteApplication"
      DeleteChatControlsConfiguration = "qbusiness:DeleteChatControlsConfiguration"
      DeleteConversation = "qbusiness:DeleteConversation"
      DeleteDataSource = "qbusiness:DeleteDataSource"
      DeleteGroup = "qbusiness:DeleteGroup"
      DeleteIndex = "qbusiness:DeleteIndex"
      DeletePlugin = "qbusiness:DeletePlugin"
      DeleteRetriever = "qbusiness:DeleteRetriever"
      DeleteUser = "qbusiness:DeleteUser"
      DeleteWebExperience = "qbusiness:DeleteWebExperience"
      GetApplication = "qbusiness:GetApplication"
      GetChatControlsConfiguration = "qbusiness:GetChatControlsConfiguration"
      GetDataSource = "qbusiness:GetDataSource"
      GetGroup = "qbusiness:GetGroup"
      GetIndex = "qbusiness:GetIndex"
      GetLicense = "qbusiness:GetLicense"
      GetPlugin = "qbusiness:GetPlugin"
      GetRetriever = "qbusiness:GetRetriever"
      GetUser = "qbusiness:GetUser"
      GetWebExperience = "qbusiness:GetWebExperience"
      ListApplications = "qbusiness:ListApplications"
      ListConversations = "qbusiness:ListConversations"
      ListDataSourceSyncJobs = "qbusiness:ListDataSourceSyncJobs"
      ListDataSources = "qbusiness:ListDataSources"
      ListDocuments = "qbusiness:ListDocuments"
      ListGroups = "qbusiness:ListGroups"
      ListIndices = "qbusiness:ListIndices"
      ListMessages = "qbusiness:ListMessages"
      ListPlugins = "qbusiness:ListPlugins"
      ListRetrievers = "qbusiness:ListRetrievers"
      ListSubscriptions = "qbusiness:ListSubscriptions"
      ListTagsForResource = "qbusiness:ListTagsForResource"
      ListUserLicenses = "qbusiness:ListUserLicenses"
      ListWebExperiences = "qbusiness:ListWebExperiences"
      PutFeedback = "qbusiness:PutFeedback"
      PutGroup = "qbusiness:PutGroup"
      RemoveUserLicenses = "qbusiness:RemoveUserLicenses"
      StartDataSourceSyncJob = "qbusiness:StartDataSourceSyncJob"
      StopDataSourceSyncJob = "qbusiness:StopDataSourceSyncJob"
      TagResource = "qbusiness:TagResource"
      UntagResource = "qbusiness:UntagResource"
      UpdateApplication = "qbusiness:UpdateApplication"
      UpdateChatControlsConfiguration = "qbusiness:UpdateChatControlsConfiguration"
      UpdateDataSource = "qbusiness:UpdateDataSource"
      UpdateIndex = "qbusiness:UpdateIndex"
      UpdatePlugin = "qbusiness:UpdatePlugin"
      UpdateRetriever = "qbusiness:UpdateRetriever"
      UpdateSubscription = "qbusiness:UpdateSubscription"
      UpdateUser = "qbusiness:UpdateUser"
      UpdateWebExperience = "qbusiness:UpdateWebExperience"
    }
    qldb = {
      AllActions = "qldb:*"
      CancelJournalKinesisStream = "qldb:CancelJournalKinesisStream"
      CreateLedger = "qldb:CreateLedger"
      DeleteLedger = "qldb:DeleteLedger"
      DescribeJournalKinesisStream = "qldb:DescribeJournalKinesisStream"
      DescribeJournalS3Export = "qldb:DescribeJournalS3Export"
      DescribeLedger = "qldb:DescribeLedger"
      ExecuteStatement = "qldb:ExecuteStatement"
      ExportJournalToS3 = "qldb:ExportJournalToS3"
      GetBlock = "qldb:GetBlock"
      GetDigest = "qldb:GetDigest"
      GetRevision = "qldb:GetRevision"
      InsertSampleData = "qldb:InsertSampleData"
      ListJournalKinesisStreamsForLedger = "qldb:ListJournalKinesisStreamsForLedger"
      ListJournalS3Exports = "qldb:ListJournalS3Exports"
      ListJournalS3ExportsForLedger = "qldb:ListJournalS3ExportsForLedger"
      ListLedgers = "qldb:ListLedgers"
      ListTagsForResource = "qldb:ListTagsForResource"
      PartiQLCreateIndex = "qldb:PartiQLCreateIndex"
      PartiQLCreateTable = "qldb:PartiQLCreateTable"
      PartiQLDelete = "qldb:PartiQLDelete"
      PartiQLDropIndex = "qldb:PartiQLDropIndex"
      PartiQLDropTable = "qldb:PartiQLDropTable"
      PartiQLHistoryFunction = "qldb:PartiQLHistoryFunction"
      PartiQLInsert = "qldb:PartiQLInsert"
      PartiQLRedact = "qldb:PartiQLRedact"
      PartiQLSelect = "qldb:PartiQLSelect"
      PartiQLUndropTable = "qldb:PartiQLUndropTable"
      PartiQLUpdate = "qldb:PartiQLUpdate"
      SendCommand = "qldb:SendCommand"
      ShowCatalog = "qldb:ShowCatalog"
      StreamJournalToKinesis = "qldb:StreamJournalToKinesis"
      TagResource = "qldb:TagResource"
      UntagResource = "qldb:UntagResource"
      UpdateLedger = "qldb:UpdateLedger"
      UpdateLedgerPermissionsMode = "qldb:UpdateLedgerPermissionsMode"
    }
    quicksight = {
      AllActions = "quicksight:*"
      AccountConfigurations = "quicksight:AccountConfigurations"
      CancelIngestion = "quicksight:CancelIngestion"
      CreateAccountCustomization = "quicksight:CreateAccountCustomization"
      CreateAccountSubscription = "quicksight:CreateAccountSubscription"
      CreateAdmin = "quicksight:CreateAdmin"
      CreateAnalysis = "quicksight:CreateAnalysis"
      CreateCustomPermissions = "quicksight:CreateCustomPermissions"
      CreateDashboard = "quicksight:CreateDashboard"
      CreateDataSet = "quicksight:CreateDataSet"
      CreateDataSource = "quicksight:CreateDataSource"
      CreateEmailCustomizationTemplate = "quicksight:CreateEmailCustomizationTemplate"
      CreateFolder = "quicksight:CreateFolder"
      CreateFolderMembership = "quicksight:CreateFolderMembership"
      CreateGroup = "quicksight:CreateGroup"
      CreateGroupMembership = "quicksight:CreateGroupMembership"
      CreateIAMPolicyAssignment = "quicksight:CreateIAMPolicyAssignment"
      CreateIngestion = "quicksight:CreateIngestion"
      CreateNamespace = "quicksight:CreateNamespace"
      CreateReader = "quicksight:CreateReader"
      CreateRefreshSchedule = "quicksight:CreateRefreshSchedule"
      CreateRoleMembership = "quicksight:CreateRoleMembership"
      CreateTemplate = "quicksight:CreateTemplate"
      CreateTemplateAlias = "quicksight:CreateTemplateAlias"
      CreateTheme = "quicksight:CreateTheme"
      CreateThemeAlias = "quicksight:CreateThemeAlias"
      CreateTopic = "quicksight:CreateTopic"
      CreateTopicRefreshSchedule = "quicksight:CreateTopicRefreshSchedule"
      CreateUser = "quicksight:CreateUser"
      CreateVPCConnection = "quicksight:CreateVPCConnection"
      DeleteAccountCustomization = "quicksight:DeleteAccountCustomization"
      DeleteAccountSubscription = "quicksight:DeleteAccountSubscription"
      DeleteAnalysis = "quicksight:DeleteAnalysis"
      DeleteCustomPermissions = "quicksight:DeleteCustomPermissions"
      DeleteDashboard = "quicksight:DeleteDashboard"
      DeleteDataSet = "quicksight:DeleteDataSet"
      DeleteDataSetRefreshProperties = "quicksight:DeleteDataSetRefreshProperties"
      DeleteDataSource = "quicksight:DeleteDataSource"
      DeleteEmailCustomizationTemplate = "quicksight:DeleteEmailCustomizationTemplate"
      DeleteFolder = "quicksight:DeleteFolder"
      DeleteFolderMembership = "quicksight:DeleteFolderMembership"
      DeleteGroup = "quicksight:DeleteGroup"
      DeleteGroupMembership = "quicksight:DeleteGroupMembership"
      DeleteIAMPolicyAssignment = "quicksight:DeleteIAMPolicyAssignment"
      DeleteIdentityPropagationConfig = "quicksight:DeleteIdentityPropagationConfig"
      DeleteNamespace = "quicksight:DeleteNamespace"
      DeleteRefreshSchedule = "quicksight:DeleteRefreshSchedule"
      DeleteRoleCustomPermission = "quicksight:DeleteRoleCustomPermission"
      DeleteRoleMembership = "quicksight:DeleteRoleMembership"
      DeleteTemplate = "quicksight:DeleteTemplate"
      DeleteTemplateAlias = "quicksight:DeleteTemplateAlias"
      DeleteTheme = "quicksight:DeleteTheme"
      DeleteThemeAlias = "quicksight:DeleteThemeAlias"
      DeleteTopic = "quicksight:DeleteTopic"
      DeleteTopicRefreshSchedule = "quicksight:DeleteTopicRefreshSchedule"
      DeleteUser = "quicksight:DeleteUser"
      DeleteUserByPrincipalId = "quicksight:DeleteUserByPrincipalId"
      DeleteVPCConnection = "quicksight:DeleteVPCConnection"
      DescribeAccountCustomization = "quicksight:DescribeAccountCustomization"
      DescribeAccountSettings = "quicksight:DescribeAccountSettings"
      DescribeAccountSubscription = "quicksight:DescribeAccountSubscription"
      DescribeAnalysis = "quicksight:DescribeAnalysis"
      DescribeAnalysisPermissions = "quicksight:DescribeAnalysisPermissions"
      DescribeAssetBundleExportJob = "quicksight:DescribeAssetBundleExportJob"
      DescribeAssetBundleImportJob = "quicksight:DescribeAssetBundleImportJob"
      DescribeCustomPermissions = "quicksight:DescribeCustomPermissions"
      DescribeDashboard = "quicksight:DescribeDashboard"
      DescribeDashboardPermissions = "quicksight:DescribeDashboardPermissions"
      DescribeDashboardSnapshotJob = "quicksight:DescribeDashboardSnapshotJob"
      DescribeDashboardSnapshotJobResult = "quicksight:DescribeDashboardSnapshotJobResult"
      DescribeDataSet = "quicksight:DescribeDataSet"
      DescribeDataSetPermissions = "quicksight:DescribeDataSetPermissions"
      DescribeDataSetRefreshProperties = "quicksight:DescribeDataSetRefreshProperties"
      DescribeDataSource = "quicksight:DescribeDataSource"
      DescribeDataSourcePermissions = "quicksight:DescribeDataSourcePermissions"
      DescribeEmailCustomizationTemplate = "quicksight:DescribeEmailCustomizationTemplate"
      DescribeFolder = "quicksight:DescribeFolder"
      DescribeFolderPermissions = "quicksight:DescribeFolderPermissions"
      DescribeFolderResolvedPermissions = "quicksight:DescribeFolderResolvedPermissions"
      DescribeGroup = "quicksight:DescribeGroup"
      DescribeGroupMembership = "quicksight:DescribeGroupMembership"
      DescribeIAMPolicyAssignment = "quicksight:DescribeIAMPolicyAssignment"
      DescribeIngestion = "quicksight:DescribeIngestion"
      DescribeIpRestriction = "quicksight:DescribeIpRestriction"
      DescribeKeyRegistration = "quicksight:DescribeKeyRegistration"
      DescribeNamespace = "quicksight:DescribeNamespace"
      DescribeRefreshSchedule = "quicksight:DescribeRefreshSchedule"
      DescribeRoleCustomPermission = "quicksight:DescribeRoleCustomPermission"
      DescribeTemplate = "quicksight:DescribeTemplate"
      DescribeTemplateAlias = "quicksight:DescribeTemplateAlias"
      DescribeTemplatePermissions = "quicksight:DescribeTemplatePermissions"
      DescribeTheme = "quicksight:DescribeTheme"
      DescribeThemeAlias = "quicksight:DescribeThemeAlias"
      DescribeThemePermissions = "quicksight:DescribeThemePermissions"
      DescribeTopic = "quicksight:DescribeTopic"
      DescribeTopicPermissions = "quicksight:DescribeTopicPermissions"
      DescribeTopicRefresh = "quicksight:DescribeTopicRefresh"
      DescribeTopicRefreshSchedule = "quicksight:DescribeTopicRefreshSchedule"
      DescribeUser = "quicksight:DescribeUser"
      DescribeVPCConnection = "quicksight:DescribeVPCConnection"
      GenerateEmbedUrlForAnonymousUser = "quicksight:GenerateEmbedUrlForAnonymousUser"
      GenerateEmbedUrlForRegisteredUser = "quicksight:GenerateEmbedUrlForRegisteredUser"
      GetAnonymousUserEmbedUrl = "quicksight:GetAnonymousUserEmbedUrl"
      GetAuthCode = "quicksight:GetAuthCode"
      GetDashboardEmbedUrl = "quicksight:GetDashboardEmbedUrl"
      GetGroupMapping = "quicksight:GetGroupMapping"
      GetSessionEmbedUrl = "quicksight:GetSessionEmbedUrl"
      ListAnalyses = "quicksight:ListAnalyses"
      ListAssetBundleExportJobs = "quicksight:ListAssetBundleExportJobs"
      ListAssetBundleImportJobs = "quicksight:ListAssetBundleImportJobs"
      ListCustomPermissions = "quicksight:ListCustomPermissions"
      ListCustomerManagedKeys = "quicksight:ListCustomerManagedKeys"
      ListDashboardVersions = "quicksight:ListDashboardVersions"
      ListDashboards = "quicksight:ListDashboards"
      ListDataSets = "quicksight:ListDataSets"
      ListDataSources = "quicksight:ListDataSources"
      ListFolderMembers = "quicksight:ListFolderMembers"
      ListFolders = "quicksight:ListFolders"
      ListGroupMemberships = "quicksight:ListGroupMemberships"
      ListGroups = "quicksight:ListGroups"
      ListIAMPolicyAssignments = "quicksight:ListIAMPolicyAssignments"
      ListIAMPolicyAssignmentsForUser = "quicksight:ListIAMPolicyAssignmentsForUser"
      ListIdentityPropagationConfigs = "quicksight:ListIdentityPropagationConfigs"
      ListIngestions = "quicksight:ListIngestions"
      ListKMSKeysForUser = "quicksight:ListKMSKeysForUser"
      ListNamespaces = "quicksight:ListNamespaces"
      ListRefreshSchedules = "quicksight:ListRefreshSchedules"
      ListRoleMemberships = "quicksight:ListRoleMemberships"
      ListTagsForResource = "quicksight:ListTagsForResource"
      ListTemplateAliases = "quicksight:ListTemplateAliases"
      ListTemplateVersions = "quicksight:ListTemplateVersions"
      ListTemplates = "quicksight:ListTemplates"
      ListThemeAliases = "quicksight:ListThemeAliases"
      ListThemeVersions = "quicksight:ListThemeVersions"
      ListThemes = "quicksight:ListThemes"
      ListTopicRefreshSchedules = "quicksight:ListTopicRefreshSchedules"
      ListTopics = "quicksight:ListTopics"
      ListUserGroups = "quicksight:ListUserGroups"
      ListUsers = "quicksight:ListUsers"
      ListVPCConnections = "quicksight:ListVPCConnections"
      PassDataSet = "quicksight:PassDataSet"
      PassDataSource = "quicksight:PassDataSource"
      PutDataSetRefreshProperties = "quicksight:PutDataSetRefreshProperties"
      RegisterCustomerManagedKey = "quicksight:RegisterCustomerManagedKey"
      RegisterUser = "quicksight:RegisterUser"
      RemoveCustomerManagedKey = "quicksight:RemoveCustomerManagedKey"
      RestoreAnalysis = "quicksight:RestoreAnalysis"
      ScopeDownPolicy = "quicksight:ScopeDownPolicy"
      SearchAnalyses = "quicksight:SearchAnalyses"
      SearchDashboards = "quicksight:SearchDashboards"
      SearchDataSets = "quicksight:SearchDataSets"
      SearchDataSources = "quicksight:SearchDataSources"
      SearchDirectoryGroups = "quicksight:SearchDirectoryGroups"
      SearchFolders = "quicksight:SearchFolders"
      SearchGroups = "quicksight:SearchGroups"
      SearchUsers = "quicksight:SearchUsers"
      SetGroupMapping = "quicksight:SetGroupMapping"
      StartAssetBundleExportJob = "quicksight:StartAssetBundleExportJob"
      StartAssetBundleImportJob = "quicksight:StartAssetBundleImportJob"
      StartDashboardSnapshotJob = "quicksight:StartDashboardSnapshotJob"
      Subscribe = "quicksight:Subscribe"
      TagResource = "quicksight:TagResource"
      Unsubscribe = "quicksight:Unsubscribe"
      UntagResource = "quicksight:UntagResource"
      UpdateAccountCustomization = "quicksight:UpdateAccountCustomization"
      UpdateAccountSettings = "quicksight:UpdateAccountSettings"
      UpdateAnalysis = "quicksight:UpdateAnalysis"
      UpdateAnalysisPermissions = "quicksight:UpdateAnalysisPermissions"
      UpdateCustomPermissions = "quicksight:UpdateCustomPermissions"
      UpdateDashboard = "quicksight:UpdateDashboard"
      UpdateDashboardLinks = "quicksight:UpdateDashboardLinks"
      UpdateDashboardPermissions = "quicksight:UpdateDashboardPermissions"
      UpdateDashboardPublishedVersion = "quicksight:UpdateDashboardPublishedVersion"
      UpdateDataSet = "quicksight:UpdateDataSet"
      UpdateDataSetPermissions = "quicksight:UpdateDataSetPermissions"
      UpdateDataSource = "quicksight:UpdateDataSource"
      UpdateDataSourcePermissions = "quicksight:UpdateDataSourcePermissions"
      UpdateEmailCustomizationTemplate = "quicksight:UpdateEmailCustomizationTemplate"
      UpdateFolder = "quicksight:UpdateFolder"
      UpdateFolderPermissions = "quicksight:UpdateFolderPermissions"
      UpdateGroup = "quicksight:UpdateGroup"
      UpdateIAMPolicyAssignment = "quicksight:UpdateIAMPolicyAssignment"
      UpdateIdentityPropagationConfig = "quicksight:UpdateIdentityPropagationConfig"
      UpdateIpRestriction = "quicksight:UpdateIpRestriction"
      UpdateKeyRegistration = "quicksight:UpdateKeyRegistration"
      UpdatePublicSharingSettings = "quicksight:UpdatePublicSharingSettings"
      UpdateRefreshSchedule = "quicksight:UpdateRefreshSchedule"
      UpdateResourcePermissions = "quicksight:UpdateResourcePermissions"
      UpdateRoleCustomPermission = "quicksight:UpdateRoleCustomPermission"
      UpdateSPICECapacityConfiguration = "quicksight:UpdateSPICECapacityConfiguration"
      UpdateTemplate = "quicksight:UpdateTemplate"
      UpdateTemplateAlias = "quicksight:UpdateTemplateAlias"
      UpdateTemplatePermissions = "quicksight:UpdateTemplatePermissions"
      UpdateTheme = "quicksight:UpdateTheme"
      UpdateThemeAlias = "quicksight:UpdateThemeAlias"
      UpdateThemePermissions = "quicksight:UpdateThemePermissions"
      UpdateTopic = "quicksight:UpdateTopic"
      UpdateTopicPermissions = "quicksight:UpdateTopicPermissions"
      UpdateTopicRefreshSchedule = "quicksight:UpdateTopicRefreshSchedule"
      UpdateUser = "quicksight:UpdateUser"
      UpdateVPCConnection = "quicksight:UpdateVPCConnection"
    }
    ram = {
      AllActions = "ram:*"
      AcceptResourceShareInvitation = "ram:AcceptResourceShareInvitation"
      AssociateResourceShare = "ram:AssociateResourceShare"
      AssociateResourceSharePermission = "ram:AssociateResourceSharePermission"
      CreatePermission = "ram:CreatePermission"
      CreatePermissionVersion = "ram:CreatePermissionVersion"
      CreateResourceShare = "ram:CreateResourceShare"
      DeletePermission = "ram:DeletePermission"
      DeletePermissionVersion = "ram:DeletePermissionVersion"
      DeleteResourceShare = "ram:DeleteResourceShare"
      DisassociateResourceShare = "ram:DisassociateResourceShare"
      DisassociateResourceSharePermission = "ram:DisassociateResourceSharePermission"
      EnableSharingWithAwsOrganization = "ram:EnableSharingWithAwsOrganization"
      GetPermission = "ram:GetPermission"
      GetResourcePolicies = "ram:GetResourcePolicies"
      GetResourceShareAssociations = "ram:GetResourceShareAssociations"
      GetResourceShareInvitations = "ram:GetResourceShareInvitations"
      GetResourceShares = "ram:GetResourceShares"
      ListPendingInvitationResources = "ram:ListPendingInvitationResources"
      ListPermissionAssociations = "ram:ListPermissionAssociations"
      ListPermissionVersions = "ram:ListPermissionVersions"
      ListPermissions = "ram:ListPermissions"
      ListPrincipals = "ram:ListPrincipals"
      ListReplacePermissionAssociationsWork = "ram:ListReplacePermissionAssociationsWork"
      ListResourceSharePermissions = "ram:ListResourceSharePermissions"
      ListResourceTypes = "ram:ListResourceTypes"
      ListResources = "ram:ListResources"
      PromotePermissionCreatedFromPolicy = "ram:PromotePermissionCreatedFromPolicy"
      PromoteResourceShareCreatedFromPolicy = "ram:PromoteResourceShareCreatedFromPolicy"
      RejectResourceShareInvitation = "ram:RejectResourceShareInvitation"
      ReplacePermissionAssociations = "ram:ReplacePermissionAssociations"
      SetDefaultPermissionVersion = "ram:SetDefaultPermissionVersion"
      TagResource = "ram:TagResource"
      UntagResource = "ram:UntagResource"
      UpdateResourceShare = "ram:UpdateResourceShare"
    }
    rbin = {
      AllActions = "rbin:*"
      CreateRule = "rbin:CreateRule"
      DeleteRule = "rbin:DeleteRule"
      GetRule = "rbin:GetRule"
      ListRules = "rbin:ListRules"
      ListTagsForResource = "rbin:ListTagsForResource"
      LockRule = "rbin:LockRule"
      TagResource = "rbin:TagResource"
      UnlockRule = "rbin:UnlockRule"
      UntagResource = "rbin:UntagResource"
      UpdateRule = "rbin:UpdateRule"
    }
    rds-data = {
      AllActions = "rds-data:*"
      BatchExecuteStatement = "rds-data:BatchExecuteStatement"
      BeginTransaction = "rds-data:BeginTransaction"
      CommitTransaction = "rds-data:CommitTransaction"
      ExecuteSql = "rds-data:ExecuteSql"
      ExecuteStatement = "rds-data:ExecuteStatement"
      RollbackTransaction = "rds-data:RollbackTransaction"
    }
    rds-db = {
      AllActions = "rds-db:*"
      connect = "rds-db:connect"
    }
    rds = {
      AllActions = "rds:*"
      AddRoleToDBCluster = "rds:AddRoleToDBCluster"
      AddRoleToDBInstance = "rds:AddRoleToDBInstance"
      AddSourceIdentifierToSubscription = "rds:AddSourceIdentifierToSubscription"
      AddTagsToResource = "rds:AddTagsToResource"
      ApplyPendingMaintenanceAction = "rds:ApplyPendingMaintenanceAction"
      AuthorizeDBSecurityGroupIngress = "rds:AuthorizeDBSecurityGroupIngress"
      BacktrackDBCluster = "rds:BacktrackDBCluster"
      CancelExportTask = "rds:CancelExportTask"
      CopyDBClusterParameterGroup = "rds:CopyDBClusterParameterGroup"
      CopyDBClusterSnapshot = "rds:CopyDBClusterSnapshot"
      CopyDBParameterGroup = "rds:CopyDBParameterGroup"
      CopyDBSnapshot = "rds:CopyDBSnapshot"
      CopyOptionGroup = "rds:CopyOptionGroup"
      CreateBlueGreenDeployment = "rds:CreateBlueGreenDeployment"
      CreateCustomDBEngineVersion = "rds:CreateCustomDBEngineVersion"
      CreateDBCluster = "rds:CreateDBCluster"
      CreateDBClusterEndpoint = "rds:CreateDBClusterEndpoint"
      CreateDBClusterParameterGroup = "rds:CreateDBClusterParameterGroup"
      CreateDBClusterSnapshot = "rds:CreateDBClusterSnapshot"
      CreateDBInstance = "rds:CreateDBInstance"
      CreateDBInstanceReadReplica = "rds:CreateDBInstanceReadReplica"
      CreateDBParameterGroup = "rds:CreateDBParameterGroup"
      CreateDBProxy = "rds:CreateDBProxy"
      CreateDBProxyEndpoint = "rds:CreateDBProxyEndpoint"
      CreateDBSecurityGroup = "rds:CreateDBSecurityGroup"
      CreateDBShardGroup = "rds:CreateDBShardGroup"
      CreateDBSnapshot = "rds:CreateDBSnapshot"
      CreateDBSubnetGroup = "rds:CreateDBSubnetGroup"
      CreateEventSubscription = "rds:CreateEventSubscription"
      CreateGlobalCluster = "rds:CreateGlobalCluster"
      CreateIntegration = "rds:CreateIntegration"
      CreateOptionGroup = "rds:CreateOptionGroup"
      CreateTenantDatabase = "rds:CreateTenantDatabase"
      CrossRegionCommunication = "rds:CrossRegionCommunication"
      DeleteBlueGreenDeployment = "rds:DeleteBlueGreenDeployment"
      DeleteCustomDBEngineVersion = "rds:DeleteCustomDBEngineVersion"
      DeleteDBCluster = "rds:DeleteDBCluster"
      DeleteDBClusterAutomatedBackup = "rds:DeleteDBClusterAutomatedBackup"
      DeleteDBClusterEndpoint = "rds:DeleteDBClusterEndpoint"
      DeleteDBClusterParameterGroup = "rds:DeleteDBClusterParameterGroup"
      DeleteDBClusterSnapshot = "rds:DeleteDBClusterSnapshot"
      DeleteDBInstance = "rds:DeleteDBInstance"
      DeleteDBInstanceAutomatedBackup = "rds:DeleteDBInstanceAutomatedBackup"
      DeleteDBParameterGroup = "rds:DeleteDBParameterGroup"
      DeleteDBProxy = "rds:DeleteDBProxy"
      DeleteDBProxyEndpoint = "rds:DeleteDBProxyEndpoint"
      DeleteDBSecurityGroup = "rds:DeleteDBSecurityGroup"
      DeleteDBShardGroup = "rds:DeleteDBShardGroup"
      DeleteDBSnapshot = "rds:DeleteDBSnapshot"
      DeleteDBSubnetGroup = "rds:DeleteDBSubnetGroup"
      DeleteEventSubscription = "rds:DeleteEventSubscription"
      DeleteGlobalCluster = "rds:DeleteGlobalCluster"
      DeleteIntegration = "rds:DeleteIntegration"
      DeleteOptionGroup = "rds:DeleteOptionGroup"
      DeleteTenantDatabase = "rds:DeleteTenantDatabase"
      DeregisterDBProxyTargets = "rds:DeregisterDBProxyTargets"
      DescribeAccountAttributes = "rds:DescribeAccountAttributes"
      DescribeBlueGreenDeployments = "rds:DescribeBlueGreenDeployments"
      DescribeCertificates = "rds:DescribeCertificates"
      DescribeDBClusterAutomatedBackups = "rds:DescribeDBClusterAutomatedBackups"
      DescribeDBClusterBacktracks = "rds:DescribeDBClusterBacktracks"
      DescribeDBClusterEndpoints = "rds:DescribeDBClusterEndpoints"
      DescribeDBClusterParameterGroups = "rds:DescribeDBClusterParameterGroups"
      DescribeDBClusterParameters = "rds:DescribeDBClusterParameters"
      DescribeDBClusterSnapshotAttributes = "rds:DescribeDBClusterSnapshotAttributes"
      DescribeDBClusterSnapshots = "rds:DescribeDBClusterSnapshots"
      DescribeDBClusters = "rds:DescribeDBClusters"
      DescribeDBEngineVersions = "rds:DescribeDBEngineVersions"
      DescribeDBInstanceAutomatedBackups = "rds:DescribeDBInstanceAutomatedBackups"
      DescribeDBInstances = "rds:DescribeDBInstances"
      DescribeDBLogFiles = "rds:DescribeDBLogFiles"
      DescribeDBParameterGroups = "rds:DescribeDBParameterGroups"
      DescribeDBParameters = "rds:DescribeDBParameters"
      DescribeDBProxies = "rds:DescribeDBProxies"
      DescribeDBProxyEndpoints = "rds:DescribeDBProxyEndpoints"
      DescribeDBProxyTargetGroups = "rds:DescribeDBProxyTargetGroups"
      DescribeDBProxyTargets = "rds:DescribeDBProxyTargets"
      DescribeDBRecommendations = "rds:DescribeDBRecommendations"
      DescribeDBSecurityGroups = "rds:DescribeDBSecurityGroups"
      DescribeDBShardGroups = "rds:DescribeDBShardGroups"
      DescribeDBSnapshotAttributes = "rds:DescribeDBSnapshotAttributes"
      DescribeDBSnapshots = "rds:DescribeDBSnapshots"
      DescribeDBSubnetGroups = "rds:DescribeDBSubnetGroups"
      DescribeDbSnapshotTenantDatabases = "rds:DescribeDbSnapshotTenantDatabases"
      DescribeEngineDefaultClusterParameters = "rds:DescribeEngineDefaultClusterParameters"
      DescribeEngineDefaultParameters = "rds:DescribeEngineDefaultParameters"
      DescribeEventCategories = "rds:DescribeEventCategories"
      DescribeEventSubscriptions = "rds:DescribeEventSubscriptions"
      DescribeEvents = "rds:DescribeEvents"
      DescribeExportTasks = "rds:DescribeExportTasks"
      DescribeGlobalClusters = "rds:DescribeGlobalClusters"
      DescribeIntegrations = "rds:DescribeIntegrations"
      DescribeOptionGroupOptions = "rds:DescribeOptionGroupOptions"
      DescribeOptionGroups = "rds:DescribeOptionGroups"
      DescribeOrderableDBInstanceOptions = "rds:DescribeOrderableDBInstanceOptions"
      DescribePendingMaintenanceActions = "rds:DescribePendingMaintenanceActions"
      DescribeRecommendationGroups = "rds:DescribeRecommendationGroups"
      DescribeRecommendations = "rds:DescribeRecommendations"
      DescribeReservedDBInstances = "rds:DescribeReservedDBInstances"
      DescribeReservedDBInstancesOfferings = "rds:DescribeReservedDBInstancesOfferings"
      DescribeSourceRegions = "rds:DescribeSourceRegions"
      DescribeTenantDatabases = "rds:DescribeTenantDatabases"
      DescribeValidDBInstanceModifications = "rds:DescribeValidDBInstanceModifications"
      DisableHttpEndpoint = "rds:DisableHttpEndpoint"
      DownloadCompleteDBLogFile = "rds:DownloadCompleteDBLogFile"
      DownloadDBLogFilePortion = "rds:DownloadDBLogFilePortion"
      EnableHttpEndpoint = "rds:EnableHttpEndpoint"
      FailoverDBCluster = "rds:FailoverDBCluster"
      FailoverGlobalCluster = "rds:FailoverGlobalCluster"
      ListTagsForResource = "rds:ListTagsForResource"
      ModifyActivityStream = "rds:ModifyActivityStream"
      ModifyCertificates = "rds:ModifyCertificates"
      ModifyCurrentDBClusterCapacity = "rds:ModifyCurrentDBClusterCapacity"
      ModifyCustomDBEngineVersion = "rds:ModifyCustomDBEngineVersion"
      ModifyDBCluster = "rds:ModifyDBCluster"
      ModifyDBClusterEndpoint = "rds:ModifyDBClusterEndpoint"
      ModifyDBClusterParameterGroup = "rds:ModifyDBClusterParameterGroup"
      ModifyDBClusterSnapshotAttribute = "rds:ModifyDBClusterSnapshotAttribute"
      ModifyDBInstance = "rds:ModifyDBInstance"
      ModifyDBParameterGroup = "rds:ModifyDBParameterGroup"
      ModifyDBProxy = "rds:ModifyDBProxy"
      ModifyDBProxyEndpoint = "rds:ModifyDBProxyEndpoint"
      ModifyDBProxyTargetGroup = "rds:ModifyDBProxyTargetGroup"
      ModifyDBRecommendation = "rds:ModifyDBRecommendation"
      ModifyDBShardGroup = "rds:ModifyDBShardGroup"
      ModifyDBSnapshot = "rds:ModifyDBSnapshot"
      ModifyDBSnapshotAttribute = "rds:ModifyDBSnapshotAttribute"
      ModifyDBSubnetGroup = "rds:ModifyDBSubnetGroup"
      ModifyEventSubscription = "rds:ModifyEventSubscription"
      ModifyGlobalCluster = "rds:ModifyGlobalCluster"
      ModifyIntegration = "rds:ModifyIntegration"
      ModifyOptionGroup = "rds:ModifyOptionGroup"
      ModifyRecommendation = "rds:ModifyRecommendation"
      ModifyTenantDatabase = "rds:ModifyTenantDatabase"
      PromoteReadReplica = "rds:PromoteReadReplica"
      PromoteReadReplicaDBCluster = "rds:PromoteReadReplicaDBCluster"
      PurchaseReservedDBInstancesOffering = "rds:PurchaseReservedDBInstancesOffering"
      RebootDBCluster = "rds:RebootDBCluster"
      RebootDBInstance = "rds:RebootDBInstance"
      RebootDBShardGroup = "rds:RebootDBShardGroup"
      RegisterDBProxyTargets = "rds:RegisterDBProxyTargets"
      RemoveFromGlobalCluster = "rds:RemoveFromGlobalCluster"
      RemoveRoleFromDBCluster = "rds:RemoveRoleFromDBCluster"
      RemoveRoleFromDBInstance = "rds:RemoveRoleFromDBInstance"
      RemoveSourceIdentifierFromSubscription = "rds:RemoveSourceIdentifierFromSubscription"
      RemoveTagsFromResource = "rds:RemoveTagsFromResource"
      ResetDBClusterParameterGroup = "rds:ResetDBClusterParameterGroup"
      ResetDBParameterGroup = "rds:ResetDBParameterGroup"
      RestoreDBClusterFromS3 = "rds:RestoreDBClusterFromS3"
      RestoreDBClusterFromSnapshot = "rds:RestoreDBClusterFromSnapshot"
      RestoreDBClusterToPointInTime = "rds:RestoreDBClusterToPointInTime"
      RestoreDBInstanceFromDBSnapshot = "rds:RestoreDBInstanceFromDBSnapshot"
      RestoreDBInstanceFromS3 = "rds:RestoreDBInstanceFromS3"
      RestoreDBInstanceToPointInTime = "rds:RestoreDBInstanceToPointInTime"
      RevokeDBSecurityGroupIngress = "rds:RevokeDBSecurityGroupIngress"
      StartActivityStream = "rds:StartActivityStream"
      StartDBCluster = "rds:StartDBCluster"
      StartDBInstance = "rds:StartDBInstance"
      StartDBInstanceAutomatedBackupsReplication = "rds:StartDBInstanceAutomatedBackupsReplication"
      StartExportTask = "rds:StartExportTask"
      StopActivityStream = "rds:StopActivityStream"
      StopDBCluster = "rds:StopDBCluster"
      StopDBInstance = "rds:StopDBInstance"
      StopDBInstanceAutomatedBackupsReplication = "rds:StopDBInstanceAutomatedBackupsReplication"
      SwitchoverBlueGreenDeployment = "rds:SwitchoverBlueGreenDeployment"
      SwitchoverGlobalCluster = "rds:SwitchoverGlobalCluster"
      SwitchoverReadReplica = "rds:SwitchoverReadReplica"
    }
    redshift-data = {
      AllActions = "redshift-data:*"
      BatchExecuteStatement = "redshift-data:BatchExecuteStatement"
      CancelStatement = "redshift-data:CancelStatement"
      DescribeStatement = "redshift-data:DescribeStatement"
      DescribeTable = "redshift-data:DescribeTable"
      ExecuteStatement = "redshift-data:ExecuteStatement"
      GetStatementResult = "redshift-data:GetStatementResult"
      ListDatabases = "redshift-data:ListDatabases"
      ListSchemas = "redshift-data:ListSchemas"
      ListStatements = "redshift-data:ListStatements"
      ListTables = "redshift-data:ListTables"
    }
    redshift-serverless = {
      AllActions = "redshift-serverless:*"
      ConvertRecoveryPointToSnapshot = "redshift-serverless:ConvertRecoveryPointToSnapshot"
      CreateCustomDomainAssociation = "redshift-serverless:CreateCustomDomainAssociation"
      CreateEndpointAccess = "redshift-serverless:CreateEndpointAccess"
      CreateNamespace = "redshift-serverless:CreateNamespace"
      CreateScheduledAction = "redshift-serverless:CreateScheduledAction"
      CreateSnapshot = "redshift-serverless:CreateSnapshot"
      CreateSnapshotCopyConfiguration = "redshift-serverless:CreateSnapshotCopyConfiguration"
      CreateUsageLimit = "redshift-serverless:CreateUsageLimit"
      CreateWorkgroup = "redshift-serverless:CreateWorkgroup"
      DeleteCustomDomainAssociation = "redshift-serverless:DeleteCustomDomainAssociation"
      DeleteEndpointAccess = "redshift-serverless:DeleteEndpointAccess"
      DeleteNamespace = "redshift-serverless:DeleteNamespace"
      DeleteResourcePolicy = "redshift-serverless:DeleteResourcePolicy"
      DeleteScheduledAction = "redshift-serverless:DeleteScheduledAction"
      DeleteSnapshot = "redshift-serverless:DeleteSnapshot"
      DeleteSnapshotCopyConfiguration = "redshift-serverless:DeleteSnapshotCopyConfiguration"
      DeleteUsageLimit = "redshift-serverless:DeleteUsageLimit"
      DeleteWorkgroup = "redshift-serverless:DeleteWorkgroup"
      DescribeOneTimeCredit = "redshift-serverless:DescribeOneTimeCredit"
      GetCredentials = "redshift-serverless:GetCredentials"
      GetCustomDomainAssociation = "redshift-serverless:GetCustomDomainAssociation"
      GetEndpointAccess = "redshift-serverless:GetEndpointAccess"
      GetNamespace = "redshift-serverless:GetNamespace"
      GetRecoveryPoint = "redshift-serverless:GetRecoveryPoint"
      GetResourcePolicy = "redshift-serverless:GetResourcePolicy"
      GetScheduledAction = "redshift-serverless:GetScheduledAction"
      GetSnapshot = "redshift-serverless:GetSnapshot"
      GetTableRestoreStatus = "redshift-serverless:GetTableRestoreStatus"
      GetUsageLimit = "redshift-serverless:GetUsageLimit"
      GetWorkgroup = "redshift-serverless:GetWorkgroup"
      ListCustomDomainAssociations = "redshift-serverless:ListCustomDomainAssociations"
      ListEndpointAccess = "redshift-serverless:ListEndpointAccess"
      ListNamespaces = "redshift-serverless:ListNamespaces"
      ListRecoveryPoints = "redshift-serverless:ListRecoveryPoints"
      ListScheduledActions = "redshift-serverless:ListScheduledActions"
      ListSnapshotCopyConfigurations = "redshift-serverless:ListSnapshotCopyConfigurations"
      ListSnapshots = "redshift-serverless:ListSnapshots"
      ListTableRestoreStatus = "redshift-serverless:ListTableRestoreStatus"
      ListTagsForResource = "redshift-serverless:ListTagsForResource"
      ListUsageLimits = "redshift-serverless:ListUsageLimits"
      ListWorkgroups = "redshift-serverless:ListWorkgroups"
      PutResourcePolicy = "redshift-serverless:PutResourcePolicy"
      RestoreFromRecoveryPoint = "redshift-serverless:RestoreFromRecoveryPoint"
      RestoreFromSnapshot = "redshift-serverless:RestoreFromSnapshot"
      RestoreTableFromRecoveryPoint = "redshift-serverless:RestoreTableFromRecoveryPoint"
      RestoreTableFromSnapshot = "redshift-serverless:RestoreTableFromSnapshot"
      TagResource = "redshift-serverless:TagResource"
      UntagResource = "redshift-serverless:UntagResource"
      UpdateCustomDomainAssociation = "redshift-serverless:UpdateCustomDomainAssociation"
      UpdateEndpointAccess = "redshift-serverless:UpdateEndpointAccess"
      UpdateNamespace = "redshift-serverless:UpdateNamespace"
      UpdateScheduledAction = "redshift-serverless:UpdateScheduledAction"
      UpdateSnapshot = "redshift-serverless:UpdateSnapshot"
      UpdateSnapshotCopyConfiguration = "redshift-serverless:UpdateSnapshotCopyConfiguration"
      UpdateUsageLimit = "redshift-serverless:UpdateUsageLimit"
      UpdateWorkgroup = "redshift-serverless:UpdateWorkgroup"
    }
    redshift = {
      AllActions = "redshift:*"
      AcceptReservedNodeExchange = "redshift:AcceptReservedNodeExchange"
      AddPartner = "redshift:AddPartner"
      AssociateDataShareConsumer = "redshift:AssociateDataShareConsumer"
      AuthorizeClusterSecurityGroupIngress = "redshift:AuthorizeClusterSecurityGroupIngress"
      AuthorizeDataShare = "redshift:AuthorizeDataShare"
      AuthorizeEndpointAccess = "redshift:AuthorizeEndpointAccess"
      AuthorizeSnapshotAccess = "redshift:AuthorizeSnapshotAccess"
      BatchDeleteClusterSnapshots = "redshift:BatchDeleteClusterSnapshots"
      BatchModifyClusterSnapshots = "redshift:BatchModifyClusterSnapshots"
      CancelQuery = "redshift:CancelQuery"
      CancelQuerySession = "redshift:CancelQuerySession"
      CancelResize = "redshift:CancelResize"
      CopyClusterSnapshot = "redshift:CopyClusterSnapshot"
      CreateAuthenticationProfile = "redshift:CreateAuthenticationProfile"
      CreateCluster = "redshift:CreateCluster"
      CreateClusterParameterGroup = "redshift:CreateClusterParameterGroup"
      CreateClusterSecurityGroup = "redshift:CreateClusterSecurityGroup"
      CreateClusterSnapshot = "redshift:CreateClusterSnapshot"
      CreateClusterSubnetGroup = "redshift:CreateClusterSubnetGroup"
      CreateClusterUser = "redshift:CreateClusterUser"
      CreateCustomDomainAssociation = "redshift:CreateCustomDomainAssociation"
      CreateEndpointAccess = "redshift:CreateEndpointAccess"
      CreateEventSubscription = "redshift:CreateEventSubscription"
      CreateHsmClientCertificate = "redshift:CreateHsmClientCertificate"
      CreateHsmConfiguration = "redshift:CreateHsmConfiguration"
      CreateQev2IdcApplication = "redshift:CreateQev2IdcApplication"
      CreateRedshiftIdcApplication = "redshift:CreateRedshiftIdcApplication"
      CreateSavedQuery = "redshift:CreateSavedQuery"
      CreateScheduledAction = "redshift:CreateScheduledAction"
      CreateSnapshotCopyGrant = "redshift:CreateSnapshotCopyGrant"
      CreateSnapshotSchedule = "redshift:CreateSnapshotSchedule"
      CreateTags = "redshift:CreateTags"
      CreateUsageLimit = "redshift:CreateUsageLimit"
      DeauthorizeDataShare = "redshift:DeauthorizeDataShare"
      DeleteAuthenticationProfile = "redshift:DeleteAuthenticationProfile"
      DeleteCluster = "redshift:DeleteCluster"
      DeleteClusterParameterGroup = "redshift:DeleteClusterParameterGroup"
      DeleteClusterSecurityGroup = "redshift:DeleteClusterSecurityGroup"
      DeleteClusterSnapshot = "redshift:DeleteClusterSnapshot"
      DeleteClusterSubnetGroup = "redshift:DeleteClusterSubnetGroup"
      DeleteCustomDomainAssociation = "redshift:DeleteCustomDomainAssociation"
      DeleteEndpointAccess = "redshift:DeleteEndpointAccess"
      DeleteEventSubscription = "redshift:DeleteEventSubscription"
      DeleteHsmClientCertificate = "redshift:DeleteHsmClientCertificate"
      DeleteHsmConfiguration = "redshift:DeleteHsmConfiguration"
      DeletePartner = "redshift:DeletePartner"
      DeleteQev2IdcApplication = "redshift:DeleteQev2IdcApplication"
      DeleteRedshiftIdcApplication = "redshift:DeleteRedshiftIdcApplication"
      DeleteResourcePolicy = "redshift:DeleteResourcePolicy"
      DeleteSavedQueries = "redshift:DeleteSavedQueries"
      DeleteScheduledAction = "redshift:DeleteScheduledAction"
      DeleteSnapshotCopyGrant = "redshift:DeleteSnapshotCopyGrant"
      DeleteSnapshotSchedule = "redshift:DeleteSnapshotSchedule"
      DeleteTags = "redshift:DeleteTags"
      DeleteUsageLimit = "redshift:DeleteUsageLimit"
      DescribeAccountAttributes = "redshift:DescribeAccountAttributes"
      DescribeAuthenticationProfiles = "redshift:DescribeAuthenticationProfiles"
      DescribeClusterDbRevisions = "redshift:DescribeClusterDbRevisions"
      DescribeClusterParameterGroups = "redshift:DescribeClusterParameterGroups"
      DescribeClusterParameters = "redshift:DescribeClusterParameters"
      DescribeClusterSecurityGroups = "redshift:DescribeClusterSecurityGroups"
      DescribeClusterSnapshots = "redshift:DescribeClusterSnapshots"
      DescribeClusterSubnetGroups = "redshift:DescribeClusterSubnetGroups"
      DescribeClusterTracks = "redshift:DescribeClusterTracks"
      DescribeClusterVersions = "redshift:DescribeClusterVersions"
      DescribeClusters = "redshift:DescribeClusters"
      DescribeCustomDomainAssociations = "redshift:DescribeCustomDomainAssociations"
      DescribeDataShares = "redshift:DescribeDataShares"
      DescribeDataSharesForConsumer = "redshift:DescribeDataSharesForConsumer"
      DescribeDataSharesForProducer = "redshift:DescribeDataSharesForProducer"
      DescribeDefaultClusterParameters = "redshift:DescribeDefaultClusterParameters"
      DescribeEndpointAccess = "redshift:DescribeEndpointAccess"
      DescribeEndpointAuthorization = "redshift:DescribeEndpointAuthorization"
      DescribeEventCategories = "redshift:DescribeEventCategories"
      DescribeEventSubscriptions = "redshift:DescribeEventSubscriptions"
      DescribeEvents = "redshift:DescribeEvents"
      DescribeHsmClientCertificates = "redshift:DescribeHsmClientCertificates"
      DescribeHsmConfigurations = "redshift:DescribeHsmConfigurations"
      DescribeInboundIntegrations = "redshift:DescribeInboundIntegrations"
      DescribeLoggingStatus = "redshift:DescribeLoggingStatus"
      DescribeNodeConfigurationOptions = "redshift:DescribeNodeConfigurationOptions"
      DescribeOrderableClusterOptions = "redshift:DescribeOrderableClusterOptions"
      DescribePartners = "redshift:DescribePartners"
      DescribeQev2IdcApplications = "redshift:DescribeQev2IdcApplications"
      DescribeQuery = "redshift:DescribeQuery"
      DescribeRedshiftIdcApplications = "redshift:DescribeRedshiftIdcApplications"
      DescribeReservedNodeExchangeStatus = "redshift:DescribeReservedNodeExchangeStatus"
      DescribeReservedNodeOfferings = "redshift:DescribeReservedNodeOfferings"
      DescribeReservedNodes = "redshift:DescribeReservedNodes"
      DescribeResize = "redshift:DescribeResize"
      DescribeSavedQueries = "redshift:DescribeSavedQueries"
      DescribeScheduledActions = "redshift:DescribeScheduledActions"
      DescribeSnapshotCopyGrants = "redshift:DescribeSnapshotCopyGrants"
      DescribeSnapshotSchedules = "redshift:DescribeSnapshotSchedules"
      DescribeStorage = "redshift:DescribeStorage"
      DescribeTable = "redshift:DescribeTable"
      DescribeTableRestoreStatus = "redshift:DescribeTableRestoreStatus"
      DescribeTags = "redshift:DescribeTags"
      DescribeUsageLimits = "redshift:DescribeUsageLimits"
      DisableLogging = "redshift:DisableLogging"
      DisableSnapshotCopy = "redshift:DisableSnapshotCopy"
      DisassociateDataShareConsumer = "redshift:DisassociateDataShareConsumer"
      EnableLogging = "redshift:EnableLogging"
      EnableSnapshotCopy = "redshift:EnableSnapshotCopy"
      ExecuteQuery = "redshift:ExecuteQuery"
      FailoverPrimaryCompute = "redshift:FailoverPrimaryCompute"
      FetchResults = "redshift:FetchResults"
      GetClusterCredentials = "redshift:GetClusterCredentials"
      GetClusterCredentialsWithIAM = "redshift:GetClusterCredentialsWithIAM"
      GetReservedNodeExchangeConfigurationOptions = "redshift:GetReservedNodeExchangeConfigurationOptions"
      GetReservedNodeExchangeOfferings = "redshift:GetReservedNodeExchangeOfferings"
      GetResourcePolicy = "redshift:GetResourcePolicy"
      JoinGroup = "redshift:JoinGroup"
      ListDatabases = "redshift:ListDatabases"
      ListRecommendations = "redshift:ListRecommendations"
      ListSavedQueries = "redshift:ListSavedQueries"
      ListSchemas = "redshift:ListSchemas"
      ListTables = "redshift:ListTables"
      ModifyAquaConfiguration = "redshift:ModifyAquaConfiguration"
      ModifyAuthenticationProfile = "redshift:ModifyAuthenticationProfile"
      ModifyCluster = "redshift:ModifyCluster"
      ModifyClusterDbRevision = "redshift:ModifyClusterDbRevision"
      ModifyClusterIamRoles = "redshift:ModifyClusterIamRoles"
      ModifyClusterMaintenance = "redshift:ModifyClusterMaintenance"
      ModifyClusterParameterGroup = "redshift:ModifyClusterParameterGroup"
      ModifyClusterSnapshot = "redshift:ModifyClusterSnapshot"
      ModifyClusterSnapshotSchedule = "redshift:ModifyClusterSnapshotSchedule"
      ModifyClusterSubnetGroup = "redshift:ModifyClusterSubnetGroup"
      ModifyCustomDomainAssociation = "redshift:ModifyCustomDomainAssociation"
      ModifyEndpointAccess = "redshift:ModifyEndpointAccess"
      ModifyEventSubscription = "redshift:ModifyEventSubscription"
      ModifyQev2IdcApplication = "redshift:ModifyQev2IdcApplication"
      ModifyRedshiftIdcApplication = "redshift:ModifyRedshiftIdcApplication"
      ModifySavedQuery = "redshift:ModifySavedQuery"
      ModifyScheduledAction = "redshift:ModifyScheduledAction"
      ModifySnapshotCopyRetentionPeriod = "redshift:ModifySnapshotCopyRetentionPeriod"
      ModifySnapshotSchedule = "redshift:ModifySnapshotSchedule"
      ModifyUsageLimit = "redshift:ModifyUsageLimit"
      PauseCluster = "redshift:PauseCluster"
      PurchaseReservedNodeOffering = "redshift:PurchaseReservedNodeOffering"
      PutResourcePolicy = "redshift:PutResourcePolicy"
      RebootCluster = "redshift:RebootCluster"
      RejectDataShare = "redshift:RejectDataShare"
      ResetClusterParameterGroup = "redshift:ResetClusterParameterGroup"
      ResizeCluster = "redshift:ResizeCluster"
      RestoreFromClusterSnapshot = "redshift:RestoreFromClusterSnapshot"
      RestoreTableFromClusterSnapshot = "redshift:RestoreTableFromClusterSnapshot"
      ResumeCluster = "redshift:ResumeCluster"
      RevokeClusterSecurityGroupIngress = "redshift:RevokeClusterSecurityGroupIngress"
      RevokeEndpointAccess = "redshift:RevokeEndpointAccess"
      RevokeSnapshotAccess = "redshift:RevokeSnapshotAccess"
      RotateEncryptionKey = "redshift:RotateEncryptionKey"
      UpdatePartnerStatus = "redshift:UpdatePartnerStatus"
      ViewQueriesFromConsole = "redshift:ViewQueriesFromConsole"
      ViewQueriesInConsole = "redshift:ViewQueriesInConsole"
    }
    refactor-spaces = {
      AllActions = "refactor-spaces:*"
      CreateApplication = "refactor-spaces:CreateApplication"
      CreateEnvironment = "refactor-spaces:CreateEnvironment"
      CreateRoute = "refactor-spaces:CreateRoute"
      CreateService = "refactor-spaces:CreateService"
      DeleteApplication = "refactor-spaces:DeleteApplication"
      DeleteEnvironment = "refactor-spaces:DeleteEnvironment"
      DeleteResourcePolicy = "refactor-spaces:DeleteResourcePolicy"
      DeleteRoute = "refactor-spaces:DeleteRoute"
      DeleteService = "refactor-spaces:DeleteService"
      GetApplication = "refactor-spaces:GetApplication"
      GetEnvironment = "refactor-spaces:GetEnvironment"
      GetResourcePolicy = "refactor-spaces:GetResourcePolicy"
      GetRoute = "refactor-spaces:GetRoute"
      GetService = "refactor-spaces:GetService"
      ListApplications = "refactor-spaces:ListApplications"
      ListEnvironmentVpcs = "refactor-spaces:ListEnvironmentVpcs"
      ListEnvironments = "refactor-spaces:ListEnvironments"
      ListRoutes = "refactor-spaces:ListRoutes"
      ListServices = "refactor-spaces:ListServices"
      ListTagsForResource = "refactor-spaces:ListTagsForResource"
      PutResourcePolicy = "refactor-spaces:PutResourcePolicy"
      TagResource = "refactor-spaces:TagResource"
      UntagResource = "refactor-spaces:UntagResource"
      UpdateRoute = "refactor-spaces:UpdateRoute"
    }
    rekognition = {
      AllActions = "rekognition:*"
      AssociateFaces = "rekognition:AssociateFaces"
      CompareFaces = "rekognition:CompareFaces"
      CopyProjectVersion = "rekognition:CopyProjectVersion"
      CreateCollection = "rekognition:CreateCollection"
      CreateDataset = "rekognition:CreateDataset"
      CreateFaceLivenessSession = "rekognition:CreateFaceLivenessSession"
      CreateProject = "rekognition:CreateProject"
      CreateProjectVersion = "rekognition:CreateProjectVersion"
      CreateStreamProcessor = "rekognition:CreateStreamProcessor"
      CreateUser = "rekognition:CreateUser"
      DeleteCollection = "rekognition:DeleteCollection"
      DeleteDataset = "rekognition:DeleteDataset"
      DeleteFaces = "rekognition:DeleteFaces"
      DeleteProject = "rekognition:DeleteProject"
      DeleteProjectPolicy = "rekognition:DeleteProjectPolicy"
      DeleteProjectVersion = "rekognition:DeleteProjectVersion"
      DeleteStreamProcessor = "rekognition:DeleteStreamProcessor"
      DeleteUser = "rekognition:DeleteUser"
      DescribeCollection = "rekognition:DescribeCollection"
      DescribeDataset = "rekognition:DescribeDataset"
      DescribeProjectVersions = "rekognition:DescribeProjectVersions"
      DescribeProjects = "rekognition:DescribeProjects"
      DescribeStreamProcessor = "rekognition:DescribeStreamProcessor"
      DetectCustomLabels = "rekognition:DetectCustomLabels"
      DetectFaces = "rekognition:DetectFaces"
      DetectLabels = "rekognition:DetectLabels"
      DetectModerationLabels = "rekognition:DetectModerationLabels"
      DetectProtectiveEquipment = "rekognition:DetectProtectiveEquipment"
      DetectText = "rekognition:DetectText"
      DisassociateFaces = "rekognition:DisassociateFaces"
      DistributeDatasetEntries = "rekognition:DistributeDatasetEntries"
      GetCelebrityInfo = "rekognition:GetCelebrityInfo"
      GetCelebrityRecognition = "rekognition:GetCelebrityRecognition"
      GetContentModeration = "rekognition:GetContentModeration"
      GetFaceDetection = "rekognition:GetFaceDetection"
      GetFaceLivenessSessionResults = "rekognition:GetFaceLivenessSessionResults"
      GetFaceSearch = "rekognition:GetFaceSearch"
      GetLabelDetection = "rekognition:GetLabelDetection"
      GetMediaAnalysisJob = "rekognition:GetMediaAnalysisJob"
      GetPersonTracking = "rekognition:GetPersonTracking"
      GetSegmentDetection = "rekognition:GetSegmentDetection"
      GetTextDetection = "rekognition:GetTextDetection"
      IndexFaces = "rekognition:IndexFaces"
      ListCollections = "rekognition:ListCollections"
      ListDatasetEntries = "rekognition:ListDatasetEntries"
      ListDatasetLabels = "rekognition:ListDatasetLabels"
      ListFaces = "rekognition:ListFaces"
      ListMediaAnalysisJobs = "rekognition:ListMediaAnalysisJobs"
      ListProjectPolicies = "rekognition:ListProjectPolicies"
      ListStreamProcessors = "rekognition:ListStreamProcessors"
      ListTagsForResource = "rekognition:ListTagsForResource"
      ListUsers = "rekognition:ListUsers"
      PutProjectPolicy = "rekognition:PutProjectPolicy"
      RecognizeCelebrities = "rekognition:RecognizeCelebrities"
      SearchFaces = "rekognition:SearchFaces"
      SearchFacesByImage = "rekognition:SearchFacesByImage"
      SearchUsers = "rekognition:SearchUsers"
      SearchUsersByImage = "rekognition:SearchUsersByImage"
      StartCelebrityRecognition = "rekognition:StartCelebrityRecognition"
      StartContentModeration = "rekognition:StartContentModeration"
      StartFaceDetection = "rekognition:StartFaceDetection"
      StartFaceLivenessSession = "rekognition:StartFaceLivenessSession"
      StartFaceSearch = "rekognition:StartFaceSearch"
      StartLabelDetection = "rekognition:StartLabelDetection"
      StartMediaAnalysisJob = "rekognition:StartMediaAnalysisJob"
      StartPersonTracking = "rekognition:StartPersonTracking"
      StartProjectVersion = "rekognition:StartProjectVersion"
      StartSegmentDetection = "rekognition:StartSegmentDetection"
      StartStreamProcessor = "rekognition:StartStreamProcessor"
      StartTextDetection = "rekognition:StartTextDetection"
      StopProjectVersion = "rekognition:StopProjectVersion"
      StopStreamProcessor = "rekognition:StopStreamProcessor"
      TagResource = "rekognition:TagResource"
      UntagResource = "rekognition:UntagResource"
      UpdateDatasetEntries = "rekognition:UpdateDatasetEntries"
      UpdateStreamProcessor = "rekognition:UpdateStreamProcessor"
    }
    repostspace = {
      AllActions = "repostspace:*"
      CreateSpace = "repostspace:CreateSpace"
      DeleteSpace = "repostspace:DeleteSpace"
      DeregisterAdmin = "repostspace:DeregisterAdmin"
      GetSpace = "repostspace:GetSpace"
      ListSpaces = "repostspace:ListSpaces"
      ListTagsForResource = "repostspace:ListTagsForResource"
      RegisterAdmin = "repostspace:RegisterAdmin"
      SendInvites = "repostspace:SendInvites"
      TagResource = "repostspace:TagResource"
      UntagResource = "repostspace:UntagResource"
      UpdateSpace = "repostspace:UpdateSpace"
    }
    resiliencehub = {
      AllActions = "resiliencehub:*"
      AddDraftAppVersionResourceMappings = "resiliencehub:AddDraftAppVersionResourceMappings"
      BatchUpdateRecommendationStatus = "resiliencehub:BatchUpdateRecommendationStatus"
      CreateApp = "resiliencehub:CreateApp"
      CreateAppVersionAppComponent = "resiliencehub:CreateAppVersionAppComponent"
      CreateAppVersionResource = "resiliencehub:CreateAppVersionResource"
      CreateRecommendationTemplate = "resiliencehub:CreateRecommendationTemplate"
      CreateResiliencyPolicy = "resiliencehub:CreateResiliencyPolicy"
      DeleteApp = "resiliencehub:DeleteApp"
      DeleteAppAssessment = "resiliencehub:DeleteAppAssessment"
      DeleteAppInputSource = "resiliencehub:DeleteAppInputSource"
      DeleteAppVersionAppComponent = "resiliencehub:DeleteAppVersionAppComponent"
      DeleteAppVersionResource = "resiliencehub:DeleteAppVersionResource"
      DeleteRecommendationTemplate = "resiliencehub:DeleteRecommendationTemplate"
      DeleteResiliencyPolicy = "resiliencehub:DeleteResiliencyPolicy"
      DescribeApp = "resiliencehub:DescribeApp"
      DescribeAppAssessment = "resiliencehub:DescribeAppAssessment"
      DescribeAppVersion = "resiliencehub:DescribeAppVersion"
      DescribeAppVersionAppComponent = "resiliencehub:DescribeAppVersionAppComponent"
      DescribeAppVersionResource = "resiliencehub:DescribeAppVersionResource"
      DescribeAppVersionResourcesResolutionStatus = "resiliencehub:DescribeAppVersionResourcesResolutionStatus"
      DescribeAppVersionTemplate = "resiliencehub:DescribeAppVersionTemplate"
      DescribeDraftAppVersionResourcesImportStatus = "resiliencehub:DescribeDraftAppVersionResourcesImportStatus"
      DescribeResiliencyPolicy = "resiliencehub:DescribeResiliencyPolicy"
      ImportResourcesToDraftAppVersion = "resiliencehub:ImportResourcesToDraftAppVersion"
      ListAlarmRecommendations = "resiliencehub:ListAlarmRecommendations"
      ListAppAssessmentComplianceDrifts = "resiliencehub:ListAppAssessmentComplianceDrifts"
      ListAppAssessmentResourceDrifts = "resiliencehub:ListAppAssessmentResourceDrifts"
      ListAppAssessments = "resiliencehub:ListAppAssessments"
      ListAppComponentCompliances = "resiliencehub:ListAppComponentCompliances"
      ListAppComponentRecommendations = "resiliencehub:ListAppComponentRecommendations"
      ListAppInputSources = "resiliencehub:ListAppInputSources"
      ListAppVersionAppComponents = "resiliencehub:ListAppVersionAppComponents"
      ListAppVersionResourceMappings = "resiliencehub:ListAppVersionResourceMappings"
      ListAppVersionResources = "resiliencehub:ListAppVersionResources"
      ListAppVersions = "resiliencehub:ListAppVersions"
      ListApps = "resiliencehub:ListApps"
      ListRecommendationTemplates = "resiliencehub:ListRecommendationTemplates"
      ListResiliencyPolicies = "resiliencehub:ListResiliencyPolicies"
      ListSopRecommendations = "resiliencehub:ListSopRecommendations"
      ListSuggestedResiliencyPolicies = "resiliencehub:ListSuggestedResiliencyPolicies"
      ListTagsForResource = "resiliencehub:ListTagsForResource"
      ListTestRecommendations = "resiliencehub:ListTestRecommendations"
      ListUnsupportedAppVersionResources = "resiliencehub:ListUnsupportedAppVersionResources"
      PublishAppVersion = "resiliencehub:PublishAppVersion"
      PutDraftAppVersionTemplate = "resiliencehub:PutDraftAppVersionTemplate"
      RemoveDraftAppVersionResourceMappings = "resiliencehub:RemoveDraftAppVersionResourceMappings"
      ResolveAppVersionResources = "resiliencehub:ResolveAppVersionResources"
      StartAppAssessment = "resiliencehub:StartAppAssessment"
      TagResource = "resiliencehub:TagResource"
      UntagResource = "resiliencehub:UntagResource"
      UpdateApp = "resiliencehub:UpdateApp"
      UpdateAppVersion = "resiliencehub:UpdateAppVersion"
      UpdateAppVersionAppComponent = "resiliencehub:UpdateAppVersionAppComponent"
      UpdateAppVersionResource = "resiliencehub:UpdateAppVersionResource"
      UpdateResiliencyPolicy = "resiliencehub:UpdateResiliencyPolicy"
    }
    resource-explorer-2 = {
      AllActions = "resource-explorer-2:*"
      AssociateDefaultView = "resource-explorer-2:AssociateDefaultView"
      BatchGetView = "resource-explorer-2:BatchGetView"
      CreateIndex = "resource-explorer-2:CreateIndex"
      CreateView = "resource-explorer-2:CreateView"
      DeleteIndex = "resource-explorer-2:DeleteIndex"
      DeleteView = "resource-explorer-2:DeleteView"
      DisassociateDefaultView = "resource-explorer-2:DisassociateDefaultView"
      GetAccountLevelServiceConfiguration = "resource-explorer-2:GetAccountLevelServiceConfiguration"
      GetDefaultView = "resource-explorer-2:GetDefaultView"
      GetIndex = "resource-explorer-2:GetIndex"
      GetView = "resource-explorer-2:GetView"
      ListIndexes = "resource-explorer-2:ListIndexes"
      ListIndexesForMembers = "resource-explorer-2:ListIndexesForMembers"
      ListSupportedResourceTypes = "resource-explorer-2:ListSupportedResourceTypes"
      ListTagsForResource = "resource-explorer-2:ListTagsForResource"
      ListViews = "resource-explorer-2:ListViews"
      Search = "resource-explorer-2:Search"
      TagResource = "resource-explorer-2:TagResource"
      UntagResource = "resource-explorer-2:UntagResource"
      UpdateIndexType = "resource-explorer-2:UpdateIndexType"
      UpdateView = "resource-explorer-2:UpdateView"
    }
    resource-explorer = {
      AllActions = "resource-explorer:*"
      ListResourceTypes = "resource-explorer:ListResourceTypes"
      ListResources = "resource-explorer:ListResources"
      ListTags = "resource-explorer:ListTags"
    }
    resource-groups = {
      AllActions = "resource-groups:*"
      AssociateResource = "resource-groups:AssociateResource"
      CreateGroup = "resource-groups:CreateGroup"
      DeleteGroup = "resource-groups:DeleteGroup"
      DeleteGroupPolicy = "resource-groups:DeleteGroupPolicy"
      DisassociateResource = "resource-groups:DisassociateResource"
      GetAccountSettings = "resource-groups:GetAccountSettings"
      GetGroup = "resource-groups:GetGroup"
      GetGroupConfiguration = "resource-groups:GetGroupConfiguration"
      GetGroupPolicy = "resource-groups:GetGroupPolicy"
      GetGroupQuery = "resource-groups:GetGroupQuery"
      GetTags = "resource-groups:GetTags"
      GroupResources = "resource-groups:GroupResources"
      ListGroupResources = "resource-groups:ListGroupResources"
      ListGroups = "resource-groups:ListGroups"
      ListResourceTypes = "resource-groups:ListResourceTypes"
      PutGroupConfiguration = "resource-groups:PutGroupConfiguration"
      PutGroupPolicy = "resource-groups:PutGroupPolicy"
      SearchResources = "resource-groups:SearchResources"
      Tag = "resource-groups:Tag"
      UngroupResources = "resource-groups:UngroupResources"
      Untag = "resource-groups:Untag"
      UpdateAccountSettings = "resource-groups:UpdateAccountSettings"
      UpdateGroup = "resource-groups:UpdateGroup"
      UpdateGroupQuery = "resource-groups:UpdateGroupQuery"
    }
    rhelkb = {
      AllActions = "rhelkb:*"
      GetRhelURL = "rhelkb:GetRhelURL"
    }
    robomaker = {
      AllActions = "robomaker:*"
      BatchDeleteWorlds = "robomaker:BatchDeleteWorlds"
      BatchDescribeSimulationJob = "robomaker:BatchDescribeSimulationJob"
      CancelDeploymentJob = "robomaker:CancelDeploymentJob"
      CancelSimulationJob = "robomaker:CancelSimulationJob"
      CancelSimulationJobBatch = "robomaker:CancelSimulationJobBatch"
      CancelWorldExportJob = "robomaker:CancelWorldExportJob"
      CancelWorldGenerationJob = "robomaker:CancelWorldGenerationJob"
      CreateDeploymentJob = "robomaker:CreateDeploymentJob"
      CreateFleet = "robomaker:CreateFleet"
      CreateRobot = "robomaker:CreateRobot"
      CreateRobotApplication = "robomaker:CreateRobotApplication"
      CreateRobotApplicationVersion = "robomaker:CreateRobotApplicationVersion"
      CreateSimulationApplication = "robomaker:CreateSimulationApplication"
      CreateSimulationApplicationVersion = "robomaker:CreateSimulationApplicationVersion"
      CreateSimulationJob = "robomaker:CreateSimulationJob"
      CreateWorldExportJob = "robomaker:CreateWorldExportJob"
      CreateWorldGenerationJob = "robomaker:CreateWorldGenerationJob"
      CreateWorldTemplate = "robomaker:CreateWorldTemplate"
      DeleteFleet = "robomaker:DeleteFleet"
      DeleteRobot = "robomaker:DeleteRobot"
      DeleteRobotApplication = "robomaker:DeleteRobotApplication"
      DeleteSimulationApplication = "robomaker:DeleteSimulationApplication"
      DeleteWorldTemplate = "robomaker:DeleteWorldTemplate"
      DeregisterRobot = "robomaker:DeregisterRobot"
      DescribeDeploymentJob = "robomaker:DescribeDeploymentJob"
      DescribeFleet = "robomaker:DescribeFleet"
      DescribeRobot = "robomaker:DescribeRobot"
      DescribeRobotApplication = "robomaker:DescribeRobotApplication"
      DescribeSimulationApplication = "robomaker:DescribeSimulationApplication"
      DescribeSimulationJob = "robomaker:DescribeSimulationJob"
      DescribeSimulationJobBatch = "robomaker:DescribeSimulationJobBatch"
      DescribeWorld = "robomaker:DescribeWorld"
      DescribeWorldExportJob = "robomaker:DescribeWorldExportJob"
      DescribeWorldGenerationJob = "robomaker:DescribeWorldGenerationJob"
      DescribeWorldTemplate = "robomaker:DescribeWorldTemplate"
      GetWorldTemplateBody = "robomaker:GetWorldTemplateBody"
      ListDeploymentJobs = "robomaker:ListDeploymentJobs"
      ListFleets = "robomaker:ListFleets"
      ListRobotApplications = "robomaker:ListRobotApplications"
      ListRobots = "robomaker:ListRobots"
      ListSimulationApplications = "robomaker:ListSimulationApplications"
      ListSimulationJobBatches = "robomaker:ListSimulationJobBatches"
      ListSimulationJobs = "robomaker:ListSimulationJobs"
      ListSupportedAvailabilityZones = "robomaker:ListSupportedAvailabilityZones"
      ListTagsForResource = "robomaker:ListTagsForResource"
      ListWorldExportJobs = "robomaker:ListWorldExportJobs"
      ListWorldGenerationJobs = "robomaker:ListWorldGenerationJobs"
      ListWorldTemplates = "robomaker:ListWorldTemplates"
      ListWorlds = "robomaker:ListWorlds"
      RegisterRobot = "robomaker:RegisterRobot"
      RestartSimulationJob = "robomaker:RestartSimulationJob"
      StartSimulationJobBatch = "robomaker:StartSimulationJobBatch"
      SyncDeploymentJob = "robomaker:SyncDeploymentJob"
      TagResource = "robomaker:TagResource"
      UntagResource = "robomaker:UntagResource"
      UpdateRobotApplication = "robomaker:UpdateRobotApplication"
      UpdateRobotDeployment = "robomaker:UpdateRobotDeployment"
      UpdateSimulationApplication = "robomaker:UpdateSimulationApplication"
      UpdateWorldTemplate = "robomaker:UpdateWorldTemplate"
    }
    rolesanywhere = {
      AllActions = "rolesanywhere:*"
      CreateProfile = "rolesanywhere:CreateProfile"
      CreateTrustAnchor = "rolesanywhere:CreateTrustAnchor"
      DeleteAttributeMapping = "rolesanywhere:DeleteAttributeMapping"
      DeleteCrl = "rolesanywhere:DeleteCrl"
      DeleteProfile = "rolesanywhere:DeleteProfile"
      DeleteTrustAnchor = "rolesanywhere:DeleteTrustAnchor"
      DisableCrl = "rolesanywhere:DisableCrl"
      DisableProfile = "rolesanywhere:DisableProfile"
      DisableTrustAnchor = "rolesanywhere:DisableTrustAnchor"
      EnableCrl = "rolesanywhere:EnableCrl"
      EnableProfile = "rolesanywhere:EnableProfile"
      EnableTrustAnchor = "rolesanywhere:EnableTrustAnchor"
      GetCrl = "rolesanywhere:GetCrl"
      GetProfile = "rolesanywhere:GetProfile"
      GetSubject = "rolesanywhere:GetSubject"
      GetTrustAnchor = "rolesanywhere:GetTrustAnchor"
      ImportCrl = "rolesanywhere:ImportCrl"
      ListCrls = "rolesanywhere:ListCrls"
      ListProfiles = "rolesanywhere:ListProfiles"
      ListSubjects = "rolesanywhere:ListSubjects"
      ListTagsForResource = "rolesanywhere:ListTagsForResource"
      ListTrustAnchors = "rolesanywhere:ListTrustAnchors"
      PutAttributeMapping = "rolesanywhere:PutAttributeMapping"
      PutNotificationSettings = "rolesanywhere:PutNotificationSettings"
      ResetNotificationSettings = "rolesanywhere:ResetNotificationSettings"
      TagResource = "rolesanywhere:TagResource"
      UntagResource = "rolesanywhere:UntagResource"
      UpdateCrl = "rolesanywhere:UpdateCrl"
      UpdateProfile = "rolesanywhere:UpdateProfile"
      UpdateTrustAnchor = "rolesanywhere:UpdateTrustAnchor"
    }
    route53-recovery-cluster = {
      AllActions = "route53-recovery-cluster:*"
      GetRoutingControlState = "route53-recovery-cluster:GetRoutingControlState"
      ListRoutingControls = "route53-recovery-cluster:ListRoutingControls"
      UpdateRoutingControlState = "route53-recovery-cluster:UpdateRoutingControlState"
      UpdateRoutingControlStates = "route53-recovery-cluster:UpdateRoutingControlStates"
    }
    route53-recovery-control-config = {
      AllActions = "route53-recovery-control-config:*"
      CreateCluster = "route53-recovery-control-config:CreateCluster"
      CreateControlPanel = "route53-recovery-control-config:CreateControlPanel"
      CreateRoutingControl = "route53-recovery-control-config:CreateRoutingControl"
      CreateSafetyRule = "route53-recovery-control-config:CreateSafetyRule"
      DeleteCluster = "route53-recovery-control-config:DeleteCluster"
      DeleteControlPanel = "route53-recovery-control-config:DeleteControlPanel"
      DeleteRoutingControl = "route53-recovery-control-config:DeleteRoutingControl"
      DeleteSafetyRule = "route53-recovery-control-config:DeleteSafetyRule"
      DescribeCluster = "route53-recovery-control-config:DescribeCluster"
      DescribeControlPanel = "route53-recovery-control-config:DescribeControlPanel"
      DescribeRoutingControl = "route53-recovery-control-config:DescribeRoutingControl"
      DescribeRoutingControlByName = "route53-recovery-control-config:DescribeRoutingControlByName"
      DescribeSafetyRule = "route53-recovery-control-config:DescribeSafetyRule"
      GetResourcePolicy = "route53-recovery-control-config:GetResourcePolicy"
      ListAssociatedRoute53HealthChecks = "route53-recovery-control-config:ListAssociatedRoute53HealthChecks"
      ListClusters = "route53-recovery-control-config:ListClusters"
      ListControlPanels = "route53-recovery-control-config:ListControlPanels"
      ListRoutingControls = "route53-recovery-control-config:ListRoutingControls"
      ListSafetyRules = "route53-recovery-control-config:ListSafetyRules"
      ListTagsForResource = "route53-recovery-control-config:ListTagsForResource"
      TagResource = "route53-recovery-control-config:TagResource"
      UntagResource = "route53-recovery-control-config:UntagResource"
      UpdateControlPanel = "route53-recovery-control-config:UpdateControlPanel"
      UpdateRoutingControl = "route53-recovery-control-config:UpdateRoutingControl"
      UpdateSafetyRule = "route53-recovery-control-config:UpdateSafetyRule"
    }
    route53-recovery-readiness = {
      AllActions = "route53-recovery-readiness:*"
      CreateCell = "route53-recovery-readiness:CreateCell"
      CreateCrossAccountAuthorization = "route53-recovery-readiness:CreateCrossAccountAuthorization"
      CreateReadinessCheck = "route53-recovery-readiness:CreateReadinessCheck"
      CreateRecoveryGroup = "route53-recovery-readiness:CreateRecoveryGroup"
      CreateResourceSet = "route53-recovery-readiness:CreateResourceSet"
      DeleteCell = "route53-recovery-readiness:DeleteCell"
      DeleteCrossAccountAuthorization = "route53-recovery-readiness:DeleteCrossAccountAuthorization"
      DeleteReadinessCheck = "route53-recovery-readiness:DeleteReadinessCheck"
      DeleteRecoveryGroup = "route53-recovery-readiness:DeleteRecoveryGroup"
      DeleteResourceSet = "route53-recovery-readiness:DeleteResourceSet"
      GetArchitectureRecommendations = "route53-recovery-readiness:GetArchitectureRecommendations"
      GetCell = "route53-recovery-readiness:GetCell"
      GetCellReadinessSummary = "route53-recovery-readiness:GetCellReadinessSummary"
      GetReadinessCheck = "route53-recovery-readiness:GetReadinessCheck"
      GetReadinessCheckResourceStatus = "route53-recovery-readiness:GetReadinessCheckResourceStatus"
      GetReadinessCheckStatus = "route53-recovery-readiness:GetReadinessCheckStatus"
      GetRecoveryGroup = "route53-recovery-readiness:GetRecoveryGroup"
      GetRecoveryGroupReadinessSummary = "route53-recovery-readiness:GetRecoveryGroupReadinessSummary"
      GetResourceSet = "route53-recovery-readiness:GetResourceSet"
      ListCells = "route53-recovery-readiness:ListCells"
      ListCrossAccountAuthorizations = "route53-recovery-readiness:ListCrossAccountAuthorizations"
      ListReadinessChecks = "route53-recovery-readiness:ListReadinessChecks"
      ListRecoveryGroups = "route53-recovery-readiness:ListRecoveryGroups"
      ListResourceSets = "route53-recovery-readiness:ListResourceSets"
      ListRules = "route53-recovery-readiness:ListRules"
      ListTagsForResources = "route53-recovery-readiness:ListTagsForResources"
      TagResource = "route53-recovery-readiness:TagResource"
      UntagResource = "route53-recovery-readiness:UntagResource"
      UpdateCell = "route53-recovery-readiness:UpdateCell"
      UpdateReadinessCheck = "route53-recovery-readiness:UpdateReadinessCheck"
      UpdateRecoveryGroup = "route53-recovery-readiness:UpdateRecoveryGroup"
      UpdateResourceSet = "route53-recovery-readiness:UpdateResourceSet"
    }
    route53 = {
      AllActions = "route53:*"
      ActivateKeySigningKey = "route53:ActivateKeySigningKey"
      AssociateVPCWithHostedZone = "route53:AssociateVPCWithHostedZone"
      ChangeCidrCollection = "route53:ChangeCidrCollection"
      ChangeResourceRecordSets = "route53:ChangeResourceRecordSets"
      ChangeTagsForResource = "route53:ChangeTagsForResource"
      CreateCidrCollection = "route53:CreateCidrCollection"
      CreateHealthCheck = "route53:CreateHealthCheck"
      CreateHostedZone = "route53:CreateHostedZone"
      CreateKeySigningKey = "route53:CreateKeySigningKey"
      CreateQueryLoggingConfig = "route53:CreateQueryLoggingConfig"
      CreateReusableDelegationSet = "route53:CreateReusableDelegationSet"
      CreateTrafficPolicy = "route53:CreateTrafficPolicy"
      CreateTrafficPolicyInstance = "route53:CreateTrafficPolicyInstance"
      CreateTrafficPolicyVersion = "route53:CreateTrafficPolicyVersion"
      CreateVPCAssociationAuthorization = "route53:CreateVPCAssociationAuthorization"
      DeactivateKeySigningKey = "route53:DeactivateKeySigningKey"
      DeleteCidrCollection = "route53:DeleteCidrCollection"
      DeleteHealthCheck = "route53:DeleteHealthCheck"
      DeleteHostedZone = "route53:DeleteHostedZone"
      DeleteKeySigningKey = "route53:DeleteKeySigningKey"
      DeleteQueryLoggingConfig = "route53:DeleteQueryLoggingConfig"
      DeleteReusableDelegationSet = "route53:DeleteReusableDelegationSet"
      DeleteTrafficPolicy = "route53:DeleteTrafficPolicy"
      DeleteTrafficPolicyInstance = "route53:DeleteTrafficPolicyInstance"
      DeleteVPCAssociationAuthorization = "route53:DeleteVPCAssociationAuthorization"
      DisableHostedZoneDNSSEC = "route53:DisableHostedZoneDNSSEC"
      DisassociateVPCFromHostedZone = "route53:DisassociateVPCFromHostedZone"
      EnableHostedZoneDNSSEC = "route53:EnableHostedZoneDNSSEC"
      GetAccountLimit = "route53:GetAccountLimit"
      GetChange = "route53:GetChange"
      GetCheckerIpRanges = "route53:GetCheckerIpRanges"
      GetDNSSEC = "route53:GetDNSSEC"
      GetGeoLocation = "route53:GetGeoLocation"
      GetHealthCheck = "route53:GetHealthCheck"
      GetHealthCheckCount = "route53:GetHealthCheckCount"
      GetHealthCheckLastFailureReason = "route53:GetHealthCheckLastFailureReason"
      GetHealthCheckStatus = "route53:GetHealthCheckStatus"
      GetHostedZone = "route53:GetHostedZone"
      GetHostedZoneCount = "route53:GetHostedZoneCount"
      GetHostedZoneLimit = "route53:GetHostedZoneLimit"
      GetQueryLoggingConfig = "route53:GetQueryLoggingConfig"
      GetReusableDelegationSet = "route53:GetReusableDelegationSet"
      GetReusableDelegationSetLimit = "route53:GetReusableDelegationSetLimit"
      GetTrafficPolicy = "route53:GetTrafficPolicy"
      GetTrafficPolicyInstance = "route53:GetTrafficPolicyInstance"
      GetTrafficPolicyInstanceCount = "route53:GetTrafficPolicyInstanceCount"
      ListCidrBlocks = "route53:ListCidrBlocks"
      ListCidrCollections = "route53:ListCidrCollections"
      ListCidrLocations = "route53:ListCidrLocations"
      ListGeoLocations = "route53:ListGeoLocations"
      ListHealthChecks = "route53:ListHealthChecks"
      ListHostedZones = "route53:ListHostedZones"
      ListHostedZonesByName = "route53:ListHostedZonesByName"
      ListHostedZonesByVPC = "route53:ListHostedZonesByVPC"
      ListQueryLoggingConfigs = "route53:ListQueryLoggingConfigs"
      ListResourceRecordSets = "route53:ListResourceRecordSets"
      ListReusableDelegationSets = "route53:ListReusableDelegationSets"
      ListTagsForResource = "route53:ListTagsForResource"
      ListTagsForResources = "route53:ListTagsForResources"
      ListTrafficPolicies = "route53:ListTrafficPolicies"
      ListTrafficPolicyInstances = "route53:ListTrafficPolicyInstances"
      ListTrafficPolicyInstancesByHostedZone = "route53:ListTrafficPolicyInstancesByHostedZone"
      ListTrafficPolicyInstancesByPolicy = "route53:ListTrafficPolicyInstancesByPolicy"
      ListTrafficPolicyVersions = "route53:ListTrafficPolicyVersions"
      ListVPCAssociationAuthorizations = "route53:ListVPCAssociationAuthorizations"
      TestDNSAnswer = "route53:TestDNSAnswer"
      UpdateHealthCheck = "route53:UpdateHealthCheck"
      UpdateHostedZoneComment = "route53:UpdateHostedZoneComment"
      UpdateTrafficPolicyComment = "route53:UpdateTrafficPolicyComment"
      UpdateTrafficPolicyInstance = "route53:UpdateTrafficPolicyInstance"
    }
    route53domains = {
      AllActions = "route53domains:*"
      AcceptDomainTransferFromAnotherAwsAccount = "route53domains:AcceptDomainTransferFromAnotherAwsAccount"
      AssociateDelegationSignerToDomain = "route53domains:AssociateDelegationSignerToDomain"
      CancelDomainTransferToAnotherAwsAccount = "route53domains:CancelDomainTransferToAnotherAwsAccount"
      CheckDomainAvailability = "route53domains:CheckDomainAvailability"
      CheckDomainTransferability = "route53domains:CheckDomainTransferability"
      DeleteDomain = "route53domains:DeleteDomain"
      DeleteTagsForDomain = "route53domains:DeleteTagsForDomain"
      DisableDomainAutoRenew = "route53domains:DisableDomainAutoRenew"
      DisableDomainTransferLock = "route53domains:DisableDomainTransferLock"
      DisassociateDelegationSignerFromDomain = "route53domains:DisassociateDelegationSignerFromDomain"
      EnableDomainAutoRenew = "route53domains:EnableDomainAutoRenew"
      EnableDomainTransferLock = "route53domains:EnableDomainTransferLock"
      GetContactReachabilityStatus = "route53domains:GetContactReachabilityStatus"
      GetDomainDetail = "route53domains:GetDomainDetail"
      GetDomainSuggestions = "route53domains:GetDomainSuggestions"
      GetOperationDetail = "route53domains:GetOperationDetail"
      ListDomains = "route53domains:ListDomains"
      ListOperations = "route53domains:ListOperations"
      ListPrices = "route53domains:ListPrices"
      ListTagsForDomain = "route53domains:ListTagsForDomain"
      PushDomain = "route53domains:PushDomain"
      RegisterDomain = "route53domains:RegisterDomain"
      RejectDomainTransferFromAnotherAwsAccount = "route53domains:RejectDomainTransferFromAnotherAwsAccount"
      RenewDomain = "route53domains:RenewDomain"
      ResendContactReachabilityEmail = "route53domains:ResendContactReachabilityEmail"
      ResendOperationAuthorization = "route53domains:ResendOperationAuthorization"
      RetrieveDomainAuthCode = "route53domains:RetrieveDomainAuthCode"
      TransferDomain = "route53domains:TransferDomain"
      TransferDomainToAnotherAwsAccount = "route53domains:TransferDomainToAnotherAwsAccount"
      UpdateDomainContact = "route53domains:UpdateDomainContact"
      UpdateDomainContactPrivacy = "route53domains:UpdateDomainContactPrivacy"
      UpdateDomainNameservers = "route53domains:UpdateDomainNameservers"
      UpdateTagsForDomain = "route53domains:UpdateTagsForDomain"
      ViewBilling = "route53domains:ViewBilling"
    }
    route53profiles = {
      AllActions = "route53profiles:*"
      AssociateProfile = "route53profiles:AssociateProfile"
      AssociateResourceToProfile = "route53profiles:AssociateResourceToProfile"
      CreateProfile = "route53profiles:CreateProfile"
      DeleteProfile = "route53profiles:DeleteProfile"
      DisassociateProfile = "route53profiles:DisassociateProfile"
      DisassociateResourceFromProfile = "route53profiles:DisassociateResourceFromProfile"
      GetProfile = "route53profiles:GetProfile"
      GetProfileAssociation = "route53profiles:GetProfileAssociation"
      GetProfileResourceAssociation = "route53profiles:GetProfileResourceAssociation"
      ListProfileAssociations = "route53profiles:ListProfileAssociations"
      ListProfileResourceAssociations = "route53profiles:ListProfileResourceAssociations"
      ListProfiles = "route53profiles:ListProfiles"
      ListTagsForResource = "route53profiles:ListTagsForResource"
      TagResource = "route53profiles:TagResource"
      UntagResource = "route53profiles:UntagResource"
      UpdateProfileResourceAssociation = "route53profiles:UpdateProfileResourceAssociation"
    }
    route53resolver = {
      AllActions = "route53resolver:*"
      AssociateFirewallRuleGroup = "route53resolver:AssociateFirewallRuleGroup"
      AssociateResolverEndpointIpAddress = "route53resolver:AssociateResolverEndpointIpAddress"
      AssociateResolverQueryLogConfig = "route53resolver:AssociateResolverQueryLogConfig"
      AssociateResolverRule = "route53resolver:AssociateResolverRule"
      CreateFirewallDomainList = "route53resolver:CreateFirewallDomainList"
      CreateFirewallRule = "route53resolver:CreateFirewallRule"
      CreateFirewallRuleGroup = "route53resolver:CreateFirewallRuleGroup"
      CreateOutpostResolver = "route53resolver:CreateOutpostResolver"
      CreateResolverEndpoint = "route53resolver:CreateResolverEndpoint"
      CreateResolverQueryLogConfig = "route53resolver:CreateResolverQueryLogConfig"
      CreateResolverRule = "route53resolver:CreateResolverRule"
      DeleteFirewallDomainList = "route53resolver:DeleteFirewallDomainList"
      DeleteFirewallRule = "route53resolver:DeleteFirewallRule"
      DeleteFirewallRuleGroup = "route53resolver:DeleteFirewallRuleGroup"
      DeleteOutpostResolver = "route53resolver:DeleteOutpostResolver"
      DeleteResolverEndpoint = "route53resolver:DeleteResolverEndpoint"
      DeleteResolverQueryLogConfig = "route53resolver:DeleteResolverQueryLogConfig"
      DeleteResolverRule = "route53resolver:DeleteResolverRule"
      DisassociateFirewallRuleGroup = "route53resolver:DisassociateFirewallRuleGroup"
      DisassociateResolverEndpointIpAddress = "route53resolver:DisassociateResolverEndpointIpAddress"
      DisassociateResolverQueryLogConfig = "route53resolver:DisassociateResolverQueryLogConfig"
      DisassociateResolverRule = "route53resolver:DisassociateResolverRule"
      GetFirewallConfig = "route53resolver:GetFirewallConfig"
      GetFirewallDomainList = "route53resolver:GetFirewallDomainList"
      GetFirewallRuleGroup = "route53resolver:GetFirewallRuleGroup"
      GetFirewallRuleGroupAssociation = "route53resolver:GetFirewallRuleGroupAssociation"
      GetFirewallRuleGroupPolicy = "route53resolver:GetFirewallRuleGroupPolicy"
      GetOutpostResolver = "route53resolver:GetOutpostResolver"
      GetResolverConfig = "route53resolver:GetResolverConfig"
      GetResolverDnssecConfig = "route53resolver:GetResolverDnssecConfig"
      GetResolverEndpoint = "route53resolver:GetResolverEndpoint"
      GetResolverQueryLogConfig = "route53resolver:GetResolverQueryLogConfig"
      GetResolverQueryLogConfigAssociation = "route53resolver:GetResolverQueryLogConfigAssociation"
      GetResolverQueryLogConfigPolicy = "route53resolver:GetResolverQueryLogConfigPolicy"
      GetResolverRule = "route53resolver:GetResolverRule"
      GetResolverRuleAssociation = "route53resolver:GetResolverRuleAssociation"
      GetResolverRulePolicy = "route53resolver:GetResolverRulePolicy"
      ImportFirewallDomains = "route53resolver:ImportFirewallDomains"
      ListFirewallConfigs = "route53resolver:ListFirewallConfigs"
      ListFirewallDomainLists = "route53resolver:ListFirewallDomainLists"
      ListFirewallDomains = "route53resolver:ListFirewallDomains"
      ListFirewallRuleGroupAssociations = "route53resolver:ListFirewallRuleGroupAssociations"
      ListFirewallRuleGroups = "route53resolver:ListFirewallRuleGroups"
      ListFirewallRules = "route53resolver:ListFirewallRules"
      ListOutpostResolvers = "route53resolver:ListOutpostResolvers"
      ListResolverConfigs = "route53resolver:ListResolverConfigs"
      ListResolverDnssecConfigs = "route53resolver:ListResolverDnssecConfigs"
      ListResolverEndpointIpAddresses = "route53resolver:ListResolverEndpointIpAddresses"
      ListResolverEndpoints = "route53resolver:ListResolverEndpoints"
      ListResolverQueryLogConfigAssociations = "route53resolver:ListResolverQueryLogConfigAssociations"
      ListResolverQueryLogConfigs = "route53resolver:ListResolverQueryLogConfigs"
      ListResolverRuleAssociations = "route53resolver:ListResolverRuleAssociations"
      ListResolverRules = "route53resolver:ListResolverRules"
      ListTagsForResource = "route53resolver:ListTagsForResource"
      PutFirewallRuleGroupPolicy = "route53resolver:PutFirewallRuleGroupPolicy"
      PutResolverQueryLogConfigPolicy = "route53resolver:PutResolverQueryLogConfigPolicy"
      PutResolverRulePolicy = "route53resolver:PutResolverRulePolicy"
      TagResource = "route53resolver:TagResource"
      UntagResource = "route53resolver:UntagResource"
      UpdateFirewallConfig = "route53resolver:UpdateFirewallConfig"
      UpdateFirewallDomains = "route53resolver:UpdateFirewallDomains"
      UpdateFirewallRule = "route53resolver:UpdateFirewallRule"
      UpdateFirewallRuleGroupAssociation = "route53resolver:UpdateFirewallRuleGroupAssociation"
      UpdateOutpostResolver = "route53resolver:UpdateOutpostResolver"
      UpdateResolverConfig = "route53resolver:UpdateResolverConfig"
      UpdateResolverDnssecConfig = "route53resolver:UpdateResolverDnssecConfig"
      UpdateResolverEndpoint = "route53resolver:UpdateResolverEndpoint"
      UpdateResolverRule = "route53resolver:UpdateResolverRule"
    }
    rum = {
      AllActions = "rum:*"
      BatchCreateRumMetricDefinitions = "rum:BatchCreateRumMetricDefinitions"
      BatchDeleteRumMetricDefinitions = "rum:BatchDeleteRumMetricDefinitions"
      BatchGetRumMetricDefinitions = "rum:BatchGetRumMetricDefinitions"
      CreateAppMonitor = "rum:CreateAppMonitor"
      DeleteAppMonitor = "rum:DeleteAppMonitor"
      DeleteRumMetricsDestination = "rum:DeleteRumMetricsDestination"
      GetAppMonitor = "rum:GetAppMonitor"
      GetAppMonitorData = "rum:GetAppMonitorData"
      ListAppMonitors = "rum:ListAppMonitors"
      ListRumMetricsDestinations = "rum:ListRumMetricsDestinations"
      ListTagsForResource = "rum:ListTagsForResource"
      PutRumEvents = "rum:PutRumEvents"
      PutRumMetricsDestination = "rum:PutRumMetricsDestination"
      TagResource = "rum:TagResource"
      UntagResource = "rum:UntagResource"
      UpdateAppMonitor = "rum:UpdateAppMonitor"
      UpdateRumMetricDefinition = "rum:UpdateRumMetricDefinition"
    }
    s3-object-lambda = {
      AllActions = "s3-object-lambda:*"
      AbortMultipartUpload = "s3-object-lambda:AbortMultipartUpload"
      DeleteObject = "s3-object-lambda:DeleteObject"
      DeleteObjectTagging = "s3-object-lambda:DeleteObjectTagging"
      DeleteObjectVersion = "s3-object-lambda:DeleteObjectVersion"
      DeleteObjectVersionTagging = "s3-object-lambda:DeleteObjectVersionTagging"
      GetObject = "s3-object-lambda:GetObject"
      GetObjectAcl = "s3-object-lambda:GetObjectAcl"
      GetObjectLegalHold = "s3-object-lambda:GetObjectLegalHold"
      GetObjectRetention = "s3-object-lambda:GetObjectRetention"
      GetObjectTagging = "s3-object-lambda:GetObjectTagging"
      GetObjectVersion = "s3-object-lambda:GetObjectVersion"
      GetObjectVersionAcl = "s3-object-lambda:GetObjectVersionAcl"
      GetObjectVersionTagging = "s3-object-lambda:GetObjectVersionTagging"
      ListBucket = "s3-object-lambda:ListBucket"
      ListBucketMultipartUploads = "s3-object-lambda:ListBucketMultipartUploads"
      ListBucketVersions = "s3-object-lambda:ListBucketVersions"
      ListMultipartUploadParts = "s3-object-lambda:ListMultipartUploadParts"
      PutObject = "s3-object-lambda:PutObject"
      PutObjectAcl = "s3-object-lambda:PutObjectAcl"
      PutObjectLegalHold = "s3-object-lambda:PutObjectLegalHold"
      PutObjectRetention = "s3-object-lambda:PutObjectRetention"
      PutObjectTagging = "s3-object-lambda:PutObjectTagging"
      PutObjectVersionAcl = "s3-object-lambda:PutObjectVersionAcl"
      PutObjectVersionTagging = "s3-object-lambda:PutObjectVersionTagging"
      RestoreObject = "s3-object-lambda:RestoreObject"
      WriteGetObjectResponse = "s3-object-lambda:WriteGetObjectResponse"
    }
    s3-outposts = {
      AllActions = "s3-outposts:*"
      AbortMultipartUpload = "s3-outposts:AbortMultipartUpload"
      CreateAccessPoint = "s3-outposts:CreateAccessPoint"
      CreateBucket = "s3-outposts:CreateBucket"
      CreateEndpoint = "s3-outposts:CreateEndpoint"
      DeleteAccessPoint = "s3-outposts:DeleteAccessPoint"
      DeleteAccessPointPolicy = "s3-outposts:DeleteAccessPointPolicy"
      DeleteBucket = "s3-outposts:DeleteBucket"
      DeleteBucketPolicy = "s3-outposts:DeleteBucketPolicy"
      DeleteEndpoint = "s3-outposts:DeleteEndpoint"
      DeleteObject = "s3-outposts:DeleteObject"
      DeleteObjectTagging = "s3-outposts:DeleteObjectTagging"
      DeleteObjectVersion = "s3-outposts:DeleteObjectVersion"
      DeleteObjectVersionTagging = "s3-outposts:DeleteObjectVersionTagging"
      GetAccessPoint = "s3-outposts:GetAccessPoint"
      GetAccessPointPolicy = "s3-outposts:GetAccessPointPolicy"
      GetBucket = "s3-outposts:GetBucket"
      GetBucketPolicy = "s3-outposts:GetBucketPolicy"
      GetBucketTagging = "s3-outposts:GetBucketTagging"
      GetBucketVersioning = "s3-outposts:GetBucketVersioning"
      GetLifecycleConfiguration = "s3-outposts:GetLifecycleConfiguration"
      GetObject = "s3-outposts:GetObject"
      GetObjectTagging = "s3-outposts:GetObjectTagging"
      GetObjectVersion = "s3-outposts:GetObjectVersion"
      GetObjectVersionForReplication = "s3-outposts:GetObjectVersionForReplication"
      GetObjectVersionTagging = "s3-outposts:GetObjectVersionTagging"
      GetReplicationConfiguration = "s3-outposts:GetReplicationConfiguration"
      ListAccessPoints = "s3-outposts:ListAccessPoints"
      ListBucket = "s3-outposts:ListBucket"
      ListBucketMultipartUploads = "s3-outposts:ListBucketMultipartUploads"
      ListBucketVersions = "s3-outposts:ListBucketVersions"
      ListEndpoints = "s3-outposts:ListEndpoints"
      ListMultipartUploadParts = "s3-outposts:ListMultipartUploadParts"
      ListOutpostsWithS3 = "s3-outposts:ListOutpostsWithS3"
      ListRegionalBuckets = "s3-outposts:ListRegionalBuckets"
      ListSharedEndpoints = "s3-outposts:ListSharedEndpoints"
      PutAccessPointPolicy = "s3-outposts:PutAccessPointPolicy"
      PutBucketPolicy = "s3-outposts:PutBucketPolicy"
      PutBucketTagging = "s3-outposts:PutBucketTagging"
      PutBucketVersioning = "s3-outposts:PutBucketVersioning"
      PutLifecycleConfiguration = "s3-outposts:PutLifecycleConfiguration"
      PutObject = "s3-outposts:PutObject"
      PutObjectAcl = "s3-outposts:PutObjectAcl"
      PutObjectTagging = "s3-outposts:PutObjectTagging"
      PutObjectVersionTagging = "s3-outposts:PutObjectVersionTagging"
      PutReplicationConfiguration = "s3-outposts:PutReplicationConfiguration"
      ReplicateDelete = "s3-outposts:ReplicateDelete"
      ReplicateObject = "s3-outposts:ReplicateObject"
      ReplicateTags = "s3-outposts:ReplicateTags"
    }
    s3 = {
      AllActions = "s3:*"
      AbortMultipartUpload = "s3:AbortMultipartUpload"
      AssociateAccessGrantsIdentityCenter = "s3:AssociateAccessGrantsIdentityCenter"
      BypassGovernanceRetention = "s3:BypassGovernanceRetention"
      CreateAccessGrant = "s3:CreateAccessGrant"
      CreateAccessGrantsInstance = "s3:CreateAccessGrantsInstance"
      CreateAccessGrantsLocation = "s3:CreateAccessGrantsLocation"
      CreateAccessPoint = "s3:CreateAccessPoint"
      CreateAccessPointForObjectLambda = "s3:CreateAccessPointForObjectLambda"
      CreateBucket = "s3:CreateBucket"
      CreateJob = "s3:CreateJob"
      CreateMultiRegionAccessPoint = "s3:CreateMultiRegionAccessPoint"
      CreateStorageLensGroup = "s3:CreateStorageLensGroup"
      DeleteAccessGrant = "s3:DeleteAccessGrant"
      DeleteAccessGrantsInstance = "s3:DeleteAccessGrantsInstance"
      DeleteAccessGrantsInstanceResourcePolicy = "s3:DeleteAccessGrantsInstanceResourcePolicy"
      DeleteAccessGrantsLocation = "s3:DeleteAccessGrantsLocation"
      DeleteAccessPoint = "s3:DeleteAccessPoint"
      DeleteAccessPointForObjectLambda = "s3:DeleteAccessPointForObjectLambda"
      DeleteAccessPointPolicy = "s3:DeleteAccessPointPolicy"
      DeleteAccessPointPolicyForObjectLambda = "s3:DeleteAccessPointPolicyForObjectLambda"
      DeleteBucket = "s3:DeleteBucket"
      DeleteBucketPolicy = "s3:DeleteBucketPolicy"
      DeleteBucketWebsite = "s3:DeleteBucketWebsite"
      DeleteJobTagging = "s3:DeleteJobTagging"
      DeleteMultiRegionAccessPoint = "s3:DeleteMultiRegionAccessPoint"
      DeleteObject = "s3:DeleteObject"
      DeleteObjectTagging = "s3:DeleteObjectTagging"
      DeleteObjectVersion = "s3:DeleteObjectVersion"
      DeleteObjectVersionTagging = "s3:DeleteObjectVersionTagging"
      DeleteStorageLensConfiguration = "s3:DeleteStorageLensConfiguration"
      DeleteStorageLensConfigurationTagging = "s3:DeleteStorageLensConfigurationTagging"
      DeleteStorageLensGroup = "s3:DeleteStorageLensGroup"
      DescribeJob = "s3:DescribeJob"
      DescribeMultiRegionAccessPointOperation = "s3:DescribeMultiRegionAccessPointOperation"
      DissociateAccessGrantsIdentityCenter = "s3:DissociateAccessGrantsIdentityCenter"
      GetAccelerateConfiguration = "s3:GetAccelerateConfiguration"
      GetAccessGrant = "s3:GetAccessGrant"
      GetAccessGrantsInstance = "s3:GetAccessGrantsInstance"
      GetAccessGrantsInstanceForPrefix = "s3:GetAccessGrantsInstanceForPrefix"
      GetAccessGrantsInstanceResourcePolicy = "s3:GetAccessGrantsInstanceResourcePolicy"
      GetAccessGrantsLocation = "s3:GetAccessGrantsLocation"
      GetAccessPoint = "s3:GetAccessPoint"
      GetAccessPointConfigurationForObjectLambda = "s3:GetAccessPointConfigurationForObjectLambda"
      GetAccessPointForObjectLambda = "s3:GetAccessPointForObjectLambda"
      GetAccessPointPolicy = "s3:GetAccessPointPolicy"
      GetAccessPointPolicyForObjectLambda = "s3:GetAccessPointPolicyForObjectLambda"
      GetAccessPointPolicyStatus = "s3:GetAccessPointPolicyStatus"
      GetAccessPointPolicyStatusForObjectLambda = "s3:GetAccessPointPolicyStatusForObjectLambda"
      GetAccountPublicAccessBlock = "s3:GetAccountPublicAccessBlock"
      GetAnalyticsConfiguration = "s3:GetAnalyticsConfiguration"
      GetBucketAcl = "s3:GetBucketAcl"
      GetBucketCORS = "s3:GetBucketCORS"
      GetBucketLocation = "s3:GetBucketLocation"
      GetBucketLogging = "s3:GetBucketLogging"
      GetBucketNotification = "s3:GetBucketNotification"
      GetBucketObjectLockConfiguration = "s3:GetBucketObjectLockConfiguration"
      GetBucketOwnershipControls = "s3:GetBucketOwnershipControls"
      GetBucketPolicy = "s3:GetBucketPolicy"
      GetBucketPolicyStatus = "s3:GetBucketPolicyStatus"
      GetBucketPublicAccessBlock = "s3:GetBucketPublicAccessBlock"
      GetBucketRequestPayment = "s3:GetBucketRequestPayment"
      GetBucketTagging = "s3:GetBucketTagging"
      GetBucketVersioning = "s3:GetBucketVersioning"
      GetBucketWebsite = "s3:GetBucketWebsite"
      GetDataAccess = "s3:GetDataAccess"
      GetEncryptionConfiguration = "s3:GetEncryptionConfiguration"
      GetIntelligentTieringConfiguration = "s3:GetIntelligentTieringConfiguration"
      GetInventoryConfiguration = "s3:GetInventoryConfiguration"
      GetJobTagging = "s3:GetJobTagging"
      GetLifecycleConfiguration = "s3:GetLifecycleConfiguration"
      GetMetricsConfiguration = "s3:GetMetricsConfiguration"
      GetMultiRegionAccessPoint = "s3:GetMultiRegionAccessPoint"
      GetMultiRegionAccessPointPolicy = "s3:GetMultiRegionAccessPointPolicy"
      GetMultiRegionAccessPointPolicyStatus = "s3:GetMultiRegionAccessPointPolicyStatus"
      GetMultiRegionAccessPointRoutes = "s3:GetMultiRegionAccessPointRoutes"
      GetObject = "s3:GetObject"
      GetObjectAcl = "s3:GetObjectAcl"
      GetObjectAttributes = "s3:GetObjectAttributes"
      GetObjectLegalHold = "s3:GetObjectLegalHold"
      GetObjectRetention = "s3:GetObjectRetention"
      GetObjectTagging = "s3:GetObjectTagging"
      GetObjectTorrent = "s3:GetObjectTorrent"
      GetObjectVersion = "s3:GetObjectVersion"
      GetObjectVersionAcl = "s3:GetObjectVersionAcl"
      GetObjectVersionAttributes = "s3:GetObjectVersionAttributes"
      GetObjectVersionForReplication = "s3:GetObjectVersionForReplication"
      GetObjectVersionTagging = "s3:GetObjectVersionTagging"
      GetObjectVersionTorrent = "s3:GetObjectVersionTorrent"
      GetReplicationConfiguration = "s3:GetReplicationConfiguration"
      GetStorageLensConfiguration = "s3:GetStorageLensConfiguration"
      GetStorageLensConfigurationTagging = "s3:GetStorageLensConfigurationTagging"
      GetStorageLensDashboard = "s3:GetStorageLensDashboard"
      GetStorageLensGroup = "s3:GetStorageLensGroup"
      InitiateReplication = "s3:InitiateReplication"
      ListAccessGrants = "s3:ListAccessGrants"
      ListAccessGrantsInstances = "s3:ListAccessGrantsInstances"
      ListAccessGrantsLocations = "s3:ListAccessGrantsLocations"
      ListAccessPoints = "s3:ListAccessPoints"
      ListAccessPointsForObjectLambda = "s3:ListAccessPointsForObjectLambda"
      ListAllMyBuckets = "s3:ListAllMyBuckets"
      ListBucket = "s3:ListBucket"
      ListBucketMultipartUploads = "s3:ListBucketMultipartUploads"
      ListBucketVersions = "s3:ListBucketVersions"
      ListJobs = "s3:ListJobs"
      ListMultiRegionAccessPoints = "s3:ListMultiRegionAccessPoints"
      ListMultipartUploadParts = "s3:ListMultipartUploadParts"
      ListStorageLensConfigurations = "s3:ListStorageLensConfigurations"
      ListStorageLensGroups = "s3:ListStorageLensGroups"
      ListTagsForResource = "s3:ListTagsForResource"
      ObjectOwnerOverrideToBucketOwner = "s3:ObjectOwnerOverrideToBucketOwner"
      PauseReplication = "s3:PauseReplication"
      PutAccelerateConfiguration = "s3:PutAccelerateConfiguration"
      PutAccessGrantsInstanceResourcePolicy = "s3:PutAccessGrantsInstanceResourcePolicy"
      PutAccessPointConfigurationForObjectLambda = "s3:PutAccessPointConfigurationForObjectLambda"
      PutAccessPointPolicy = "s3:PutAccessPointPolicy"
      PutAccessPointPolicyForObjectLambda = "s3:PutAccessPointPolicyForObjectLambda"
      PutAccessPointPublicAccessBlock = "s3:PutAccessPointPublicAccessBlock"
      PutAccountPublicAccessBlock = "s3:PutAccountPublicAccessBlock"
      PutAnalyticsConfiguration = "s3:PutAnalyticsConfiguration"
      PutBucketAcl = "s3:PutBucketAcl"
      PutBucketCORS = "s3:PutBucketCORS"
      PutBucketLogging = "s3:PutBucketLogging"
      PutBucketNotification = "s3:PutBucketNotification"
      PutBucketObjectLockConfiguration = "s3:PutBucketObjectLockConfiguration"
      PutBucketOwnershipControls = "s3:PutBucketOwnershipControls"
      PutBucketPolicy = "s3:PutBucketPolicy"
      PutBucketPublicAccessBlock = "s3:PutBucketPublicAccessBlock"
      PutBucketRequestPayment = "s3:PutBucketRequestPayment"
      PutBucketTagging = "s3:PutBucketTagging"
      PutBucketVersioning = "s3:PutBucketVersioning"
      PutBucketWebsite = "s3:PutBucketWebsite"
      PutEncryptionConfiguration = "s3:PutEncryptionConfiguration"
      PutIntelligentTieringConfiguration = "s3:PutIntelligentTieringConfiguration"
      PutInventoryConfiguration = "s3:PutInventoryConfiguration"
      PutJobTagging = "s3:PutJobTagging"
      PutLifecycleConfiguration = "s3:PutLifecycleConfiguration"
      PutMetricsConfiguration = "s3:PutMetricsConfiguration"
      PutMultiRegionAccessPointPolicy = "s3:PutMultiRegionAccessPointPolicy"
      PutObject = "s3:PutObject"
      PutObjectAcl = "s3:PutObjectAcl"
      PutObjectLegalHold = "s3:PutObjectLegalHold"
      PutObjectRetention = "s3:PutObjectRetention"
      PutObjectTagging = "s3:PutObjectTagging"
      PutObjectVersionAcl = "s3:PutObjectVersionAcl"
      PutObjectVersionTagging = "s3:PutObjectVersionTagging"
      PutReplicationConfiguration = "s3:PutReplicationConfiguration"
      PutStorageLensConfiguration = "s3:PutStorageLensConfiguration"
      PutStorageLensConfigurationTagging = "s3:PutStorageLensConfigurationTagging"
      ReplicateDelete = "s3:ReplicateDelete"
      ReplicateObject = "s3:ReplicateObject"
      ReplicateTags = "s3:ReplicateTags"
      RestoreObject = "s3:RestoreObject"
      SubmitMultiRegionAccessPointRoutes = "s3:SubmitMultiRegionAccessPointRoutes"
      TagResource = "s3:TagResource"
      UntagResource = "s3:UntagResource"
      UpdateAccessGrantsLocation = "s3:UpdateAccessGrantsLocation"
      UpdateJobPriority = "s3:UpdateJobPriority"
      UpdateJobStatus = "s3:UpdateJobStatus"
      UpdateStorageLensGroup = "s3:UpdateStorageLensGroup"
    }
    s3express = {
      AllActions = "s3express:*"
      CreateBucket = "s3express:CreateBucket"
      CreateSession = "s3express:CreateSession"
      DeleteBucket = "s3express:DeleteBucket"
      DeleteBucketPolicy = "s3express:DeleteBucketPolicy"
      GetBucketPolicy = "s3express:GetBucketPolicy"
      ListAllMyDirectoryBuckets = "s3express:ListAllMyDirectoryBuckets"
      PutBucketPolicy = "s3express:PutBucketPolicy"
    }
    sagemaker-geospatial = {
      AllActions = "sagemaker-geospatial:*"
      DeleteEarthObservationJob = "sagemaker-geospatial:DeleteEarthObservationJob"
      DeleteVectorEnrichmentJob = "sagemaker-geospatial:DeleteVectorEnrichmentJob"
      ExportEarthObservationJob = "sagemaker-geospatial:ExportEarthObservationJob"
      ExportVectorEnrichmentJob = "sagemaker-geospatial:ExportVectorEnrichmentJob"
      GetEarthObservationJob = "sagemaker-geospatial:GetEarthObservationJob"
      GetRasterDataCollection = "sagemaker-geospatial:GetRasterDataCollection"
      GetTile = "sagemaker-geospatial:GetTile"
      GetVectorEnrichmentJob = "sagemaker-geospatial:GetVectorEnrichmentJob"
      ListEarthObservationJobs = "sagemaker-geospatial:ListEarthObservationJobs"
      ListRasterDataCollections = "sagemaker-geospatial:ListRasterDataCollections"
      ListTagsForResource = "sagemaker-geospatial:ListTagsForResource"
      ListVectorEnrichmentJobs = "sagemaker-geospatial:ListVectorEnrichmentJobs"
      SearchRasterDataCollection = "sagemaker-geospatial:SearchRasterDataCollection"
      StartEarthObservationJob = "sagemaker-geospatial:StartEarthObservationJob"
      StartVectorEnrichmentJob = "sagemaker-geospatial:StartVectorEnrichmentJob"
      StopEarthObservationJob = "sagemaker-geospatial:StopEarthObservationJob"
      StopVectorEnrichmentJob = "sagemaker-geospatial:StopVectorEnrichmentJob"
      TagResource = "sagemaker-geospatial:TagResource"
      UntagResource = "sagemaker-geospatial:UntagResource"
    }
    sagemaker-groundtruth-synthetic = {
      AllActions = "sagemaker-groundtruth-synthetic:*"
      CreateProject = "sagemaker-groundtruth-synthetic:CreateProject"
      DeleteProject = "sagemaker-groundtruth-synthetic:DeleteProject"
      GetAccountDetails = "sagemaker-groundtruth-synthetic:GetAccountDetails"
      GetBatch = "sagemaker-groundtruth-synthetic:GetBatch"
      GetProject = "sagemaker-groundtruth-synthetic:GetProject"
      ListBatchDataTransfers = "sagemaker-groundtruth-synthetic:ListBatchDataTransfers"
      ListBatchSummaries = "sagemaker-groundtruth-synthetic:ListBatchSummaries"
      ListProjectDataTransfers = "sagemaker-groundtruth-synthetic:ListProjectDataTransfers"
      ListProjectSummaries = "sagemaker-groundtruth-synthetic:ListProjectSummaries"
      StartBatchDataTransfer = "sagemaker-groundtruth-synthetic:StartBatchDataTransfer"
      StartProjectDataTransfer = "sagemaker-groundtruth-synthetic:StartProjectDataTransfer"
      UpdateBatch = "sagemaker-groundtruth-synthetic:UpdateBatch"
    }
    sagemaker = {
      AllActions = "sagemaker:*"
      AddAssociation = "sagemaker:AddAssociation"
      AddTags = "sagemaker:AddTags"
      AssociateTrialComponent = "sagemaker:AssociateTrialComponent"
      BatchDescribeModelPackage = "sagemaker:BatchDescribeModelPackage"
      BatchGetMetrics = "sagemaker:BatchGetMetrics"
      BatchGetRecord = "sagemaker:BatchGetRecord"
      BatchPutMetrics = "sagemaker:BatchPutMetrics"
      CreateAction = "sagemaker:CreateAction"
      CreateAlgorithm = "sagemaker:CreateAlgorithm"
      CreateApp = "sagemaker:CreateApp"
      CreateAppImageConfig = "sagemaker:CreateAppImageConfig"
      CreateArtifact = "sagemaker:CreateArtifact"
      CreateAutoMLJob = "sagemaker:CreateAutoMLJob"
      CreateAutoMLJobV2 = "sagemaker:CreateAutoMLJobV2"
      CreateCluster = "sagemaker:CreateCluster"
      CreateCodeRepository = "sagemaker:CreateCodeRepository"
      CreateCompilationJob = "sagemaker:CreateCompilationJob"
      CreateContext = "sagemaker:CreateContext"
      CreateDataQualityJobDefinition = "sagemaker:CreateDataQualityJobDefinition"
      CreateDeviceFleet = "sagemaker:CreateDeviceFleet"
      CreateDomain = "sagemaker:CreateDomain"
      CreateEdgeDeploymentPlan = "sagemaker:CreateEdgeDeploymentPlan"
      CreateEdgeDeploymentStage = "sagemaker:CreateEdgeDeploymentStage"
      CreateEdgePackagingJob = "sagemaker:CreateEdgePackagingJob"
      CreateEndpoint = "sagemaker:CreateEndpoint"
      CreateEndpointConfig = "sagemaker:CreateEndpointConfig"
      CreateExperiment = "sagemaker:CreateExperiment"
      CreateFeatureGroup = "sagemaker:CreateFeatureGroup"
      CreateFlowDefinition = "sagemaker:CreateFlowDefinition"
      CreateHub = "sagemaker:CreateHub"
      CreateHumanTaskUi = "sagemaker:CreateHumanTaskUi"
      CreateHyperParameterTuningJob = "sagemaker:CreateHyperParameterTuningJob"
      CreateImage = "sagemaker:CreateImage"
      CreateImageVersion = "sagemaker:CreateImageVersion"
      CreateInferenceComponent = "sagemaker:CreateInferenceComponent"
      CreateInferenceExperiment = "sagemaker:CreateInferenceExperiment"
      CreateInferenceRecommendationsJob = "sagemaker:CreateInferenceRecommendationsJob"
      CreateLabelingJob = "sagemaker:CreateLabelingJob"
      CreateLineageGroupPolicy = "sagemaker:CreateLineageGroupPolicy"
      CreateModel = "sagemaker:CreateModel"
      CreateModelBiasJobDefinition = "sagemaker:CreateModelBiasJobDefinition"
      CreateModelCard = "sagemaker:CreateModelCard"
      CreateModelCardExportJob = "sagemaker:CreateModelCardExportJob"
      CreateModelExplainabilityJobDefinition = "sagemaker:CreateModelExplainabilityJobDefinition"
      CreateModelPackage = "sagemaker:CreateModelPackage"
      CreateModelPackageGroup = "sagemaker:CreateModelPackageGroup"
      CreateModelQualityJobDefinition = "sagemaker:CreateModelQualityJobDefinition"
      CreateMonitoringSchedule = "sagemaker:CreateMonitoringSchedule"
      CreateNotebookInstance = "sagemaker:CreateNotebookInstance"
      CreateNotebookInstanceLifecycleConfig = "sagemaker:CreateNotebookInstanceLifecycleConfig"
      CreatePipeline = "sagemaker:CreatePipeline"
      CreatePresignedDomainUrl = "sagemaker:CreatePresignedDomainUrl"
      CreatePresignedNotebookInstanceUrl = "sagemaker:CreatePresignedNotebookInstanceUrl"
      CreateProcessingJob = "sagemaker:CreateProcessingJob"
      CreateProject = "sagemaker:CreateProject"
      CreateSharedModel = "sagemaker:CreateSharedModel"
      CreateSpace = "sagemaker:CreateSpace"
      CreateStudioLifecycleConfig = "sagemaker:CreateStudioLifecycleConfig"
      CreateTrainingJob = "sagemaker:CreateTrainingJob"
      CreateTransformJob = "sagemaker:CreateTransformJob"
      CreateTrial = "sagemaker:CreateTrial"
      CreateTrialComponent = "sagemaker:CreateTrialComponent"
      CreateUserProfile = "sagemaker:CreateUserProfile"
      CreateWorkforce = "sagemaker:CreateWorkforce"
      CreateWorkteam = "sagemaker:CreateWorkteam"
      DeleteAction = "sagemaker:DeleteAction"
      DeleteAlgorithm = "sagemaker:DeleteAlgorithm"
      DeleteApp = "sagemaker:DeleteApp"
      DeleteAppImageConfig = "sagemaker:DeleteAppImageConfig"
      DeleteArtifact = "sagemaker:DeleteArtifact"
      DeleteAssociation = "sagemaker:DeleteAssociation"
      DeleteCluster = "sagemaker:DeleteCluster"
      DeleteCodeRepository = "sagemaker:DeleteCodeRepository"
      DeleteCompilationJob = "sagemaker:DeleteCompilationJob"
      DeleteContext = "sagemaker:DeleteContext"
      DeleteDataQualityJobDefinition = "sagemaker:DeleteDataQualityJobDefinition"
      DeleteDeviceFleet = "sagemaker:DeleteDeviceFleet"
      DeleteDomain = "sagemaker:DeleteDomain"
      DeleteEdgeDeploymentPlan = "sagemaker:DeleteEdgeDeploymentPlan"
      DeleteEdgeDeploymentStage = "sagemaker:DeleteEdgeDeploymentStage"
      DeleteEndpoint = "sagemaker:DeleteEndpoint"
      DeleteEndpointConfig = "sagemaker:DeleteEndpointConfig"
      DeleteExperiment = "sagemaker:DeleteExperiment"
      DeleteFeatureGroup = "sagemaker:DeleteFeatureGroup"
      DeleteFlowDefinition = "sagemaker:DeleteFlowDefinition"
      DeleteHub = "sagemaker:DeleteHub"
      DeleteHubContent = "sagemaker:DeleteHubContent"
      DeleteHumanLoop = "sagemaker:DeleteHumanLoop"
      DeleteHumanTaskUi = "sagemaker:DeleteHumanTaskUi"
      DeleteHyperParameterTuningJob = "sagemaker:DeleteHyperParameterTuningJob"
      DeleteImage = "sagemaker:DeleteImage"
      DeleteImageVersion = "sagemaker:DeleteImageVersion"
      DeleteInferenceComponent = "sagemaker:DeleteInferenceComponent"
      DeleteInferenceExperiment = "sagemaker:DeleteInferenceExperiment"
      DeleteLineageGroupPolicy = "sagemaker:DeleteLineageGroupPolicy"
      DeleteModel = "sagemaker:DeleteModel"
      DeleteModelBiasJobDefinition = "sagemaker:DeleteModelBiasJobDefinition"
      DeleteModelCard = "sagemaker:DeleteModelCard"
      DeleteModelExplainabilityJobDefinition = "sagemaker:DeleteModelExplainabilityJobDefinition"
      DeleteModelPackage = "sagemaker:DeleteModelPackage"
      DeleteModelPackageGroup = "sagemaker:DeleteModelPackageGroup"
      DeleteModelPackageGroupPolicy = "sagemaker:DeleteModelPackageGroupPolicy"
      DeleteModelQualityJobDefinition = "sagemaker:DeleteModelQualityJobDefinition"
      DeleteMonitoringSchedule = "sagemaker:DeleteMonitoringSchedule"
      DeleteNotebookInstance = "sagemaker:DeleteNotebookInstance"
      DeleteNotebookInstanceLifecycleConfig = "sagemaker:DeleteNotebookInstanceLifecycleConfig"
      DeletePipeline = "sagemaker:DeletePipeline"
      DeleteProject = "sagemaker:DeleteProject"
      DeleteRecord = "sagemaker:DeleteRecord"
      DeleteResourcePolicy = "sagemaker:DeleteResourcePolicy"
      DeleteSpace = "sagemaker:DeleteSpace"
      DeleteStudioLifecycleConfig = "sagemaker:DeleteStudioLifecycleConfig"
      DeleteTags = "sagemaker:DeleteTags"
      DeleteTrial = "sagemaker:DeleteTrial"
      DeleteTrialComponent = "sagemaker:DeleteTrialComponent"
      DeleteUserProfile = "sagemaker:DeleteUserProfile"
      DeleteWorkforce = "sagemaker:DeleteWorkforce"
      DeleteWorkteam = "sagemaker:DeleteWorkteam"
      DeregisterDevices = "sagemaker:DeregisterDevices"
      DescribeAction = "sagemaker:DescribeAction"
      DescribeAlgorithm = "sagemaker:DescribeAlgorithm"
      DescribeApp = "sagemaker:DescribeApp"
      DescribeAppImageConfig = "sagemaker:DescribeAppImageConfig"
      DescribeArtifact = "sagemaker:DescribeArtifact"
      DescribeAutoMLJob = "sagemaker:DescribeAutoMLJob"
      DescribeAutoMLJobV2 = "sagemaker:DescribeAutoMLJobV2"
      DescribeCluster = "sagemaker:DescribeCluster"
      DescribeClusterNode = "sagemaker:DescribeClusterNode"
      DescribeCodeRepository = "sagemaker:DescribeCodeRepository"
      DescribeCompilationJob = "sagemaker:DescribeCompilationJob"
      DescribeContext = "sagemaker:DescribeContext"
      DescribeDataQualityJobDefinition = "sagemaker:DescribeDataQualityJobDefinition"
      DescribeDevice = "sagemaker:DescribeDevice"
      DescribeDeviceFleet = "sagemaker:DescribeDeviceFleet"
      DescribeDomain = "sagemaker:DescribeDomain"
      DescribeEdgeDeploymentPlan = "sagemaker:DescribeEdgeDeploymentPlan"
      DescribeEdgePackagingJob = "sagemaker:DescribeEdgePackagingJob"
      DescribeEndpoint = "sagemaker:DescribeEndpoint"
      DescribeEndpointConfig = "sagemaker:DescribeEndpointConfig"
      DescribeExperiment = "sagemaker:DescribeExperiment"
      DescribeFeatureGroup = "sagemaker:DescribeFeatureGroup"
      DescribeFeatureMetadata = "sagemaker:DescribeFeatureMetadata"
      DescribeFlowDefinition = "sagemaker:DescribeFlowDefinition"
      DescribeHub = "sagemaker:DescribeHub"
      DescribeHubContent = "sagemaker:DescribeHubContent"
      DescribeHumanLoop = "sagemaker:DescribeHumanLoop"
      DescribeHumanTaskUi = "sagemaker:DescribeHumanTaskUi"
      DescribeHyperParameterTuningJob = "sagemaker:DescribeHyperParameterTuningJob"
      DescribeImage = "sagemaker:DescribeImage"
      DescribeImageVersion = "sagemaker:DescribeImageVersion"
      DescribeInferenceComponent = "sagemaker:DescribeInferenceComponent"
      DescribeInferenceExperiment = "sagemaker:DescribeInferenceExperiment"
      DescribeInferenceRecommendationsJob = "sagemaker:DescribeInferenceRecommendationsJob"
      DescribeLabelingJob = "sagemaker:DescribeLabelingJob"
      DescribeLineageGroup = "sagemaker:DescribeLineageGroup"
      DescribeModel = "sagemaker:DescribeModel"
      DescribeModelBiasJobDefinition = "sagemaker:DescribeModelBiasJobDefinition"
      DescribeModelCard = "sagemaker:DescribeModelCard"
      DescribeModelCardExportJob = "sagemaker:DescribeModelCardExportJob"
      DescribeModelExplainabilityJobDefinition = "sagemaker:DescribeModelExplainabilityJobDefinition"
      DescribeModelPackage = "sagemaker:DescribeModelPackage"
      DescribeModelPackageGroup = "sagemaker:DescribeModelPackageGroup"
      DescribeModelQualityJobDefinition = "sagemaker:DescribeModelQualityJobDefinition"
      DescribeMonitoringSchedule = "sagemaker:DescribeMonitoringSchedule"
      DescribeNotebookInstance = "sagemaker:DescribeNotebookInstance"
      DescribeNotebookInstanceLifecycleConfig = "sagemaker:DescribeNotebookInstanceLifecycleConfig"
      DescribePipeline = "sagemaker:DescribePipeline"
      DescribePipelineDefinitionForExecution = "sagemaker:DescribePipelineDefinitionForExecution"
      DescribePipelineExecution = "sagemaker:DescribePipelineExecution"
      DescribeProcessingJob = "sagemaker:DescribeProcessingJob"
      DescribeProject = "sagemaker:DescribeProject"
      DescribeSharedModel = "sagemaker:DescribeSharedModel"
      DescribeSpace = "sagemaker:DescribeSpace"
      DescribeStudioLifecycleConfig = "sagemaker:DescribeStudioLifecycleConfig"
      DescribeSubscribedWorkteam = "sagemaker:DescribeSubscribedWorkteam"
      DescribeTrainingJob = "sagemaker:DescribeTrainingJob"
      DescribeTransformJob = "sagemaker:DescribeTransformJob"
      DescribeTrial = "sagemaker:DescribeTrial"
      DescribeTrialComponent = "sagemaker:DescribeTrialComponent"
      DescribeUserProfile = "sagemaker:DescribeUserProfile"
      DescribeWorkforce = "sagemaker:DescribeWorkforce"
      DescribeWorkteam = "sagemaker:DescribeWorkteam"
      DisableSagemakerServicecatalogPortfolio = "sagemaker:DisableSagemakerServicecatalogPortfolio"
      DisassociateTrialComponent = "sagemaker:DisassociateTrialComponent"
      EnableSagemakerServicecatalogPortfolio = "sagemaker:EnableSagemakerServicecatalogPortfolio"
      GetDeployments = "sagemaker:GetDeployments"
      GetDeviceFleetReport = "sagemaker:GetDeviceFleetReport"
      GetDeviceRegistration = "sagemaker:GetDeviceRegistration"
      GetLineageGroupPolicy = "sagemaker:GetLineageGroupPolicy"
      GetModelPackageGroupPolicy = "sagemaker:GetModelPackageGroupPolicy"
      GetRecord = "sagemaker:GetRecord"
      GetResourcePolicy = "sagemaker:GetResourcePolicy"
      GetSagemakerServicecatalogPortfolioStatus = "sagemaker:GetSagemakerServicecatalogPortfolioStatus"
      GetScalingConfigurationRecommendation = "sagemaker:GetScalingConfigurationRecommendation"
      GetSearchSuggestions = "sagemaker:GetSearchSuggestions"
      ImportHubContent = "sagemaker:ImportHubContent"
      InvokeEndpoint = "sagemaker:InvokeEndpoint"
      InvokeEndpointAsync = "sagemaker:InvokeEndpointAsync"
      InvokeEndpointWithResponseStream = "sagemaker:InvokeEndpointWithResponseStream"
      ListActions = "sagemaker:ListActions"
      ListAlgorithms = "sagemaker:ListAlgorithms"
      ListAliases = "sagemaker:ListAliases"
      ListAppImageConfigs = "sagemaker:ListAppImageConfigs"
      ListApps = "sagemaker:ListApps"
      ListArtifacts = "sagemaker:ListArtifacts"
      ListAssociations = "sagemaker:ListAssociations"
      ListAutoMLJobs = "sagemaker:ListAutoMLJobs"
      ListCandidatesForAutoMLJob = "sagemaker:ListCandidatesForAutoMLJob"
      ListClusterNodes = "sagemaker:ListClusterNodes"
      ListClusters = "sagemaker:ListClusters"
      ListCodeRepositories = "sagemaker:ListCodeRepositories"
      ListCompilationJobs = "sagemaker:ListCompilationJobs"
      ListContexts = "sagemaker:ListContexts"
      ListDataQualityJobDefinitions = "sagemaker:ListDataQualityJobDefinitions"
      ListDeviceFleets = "sagemaker:ListDeviceFleets"
      ListDevices = "sagemaker:ListDevices"
      ListDomains = "sagemaker:ListDomains"
      ListEdgeDeploymentPlans = "sagemaker:ListEdgeDeploymentPlans"
      ListEdgePackagingJobs = "sagemaker:ListEdgePackagingJobs"
      ListEndpointConfigs = "sagemaker:ListEndpointConfigs"
      ListEndpoints = "sagemaker:ListEndpoints"
      ListExperiments = "sagemaker:ListExperiments"
      ListFeatureGroups = "sagemaker:ListFeatureGroups"
      ListFlowDefinitions = "sagemaker:ListFlowDefinitions"
      ListHubContentVersions = "sagemaker:ListHubContentVersions"
      ListHubContents = "sagemaker:ListHubContents"
      ListHubs = "sagemaker:ListHubs"
      ListHumanLoops = "sagemaker:ListHumanLoops"
      ListHumanTaskUis = "sagemaker:ListHumanTaskUis"
      ListHyperParameterTuningJobs = "sagemaker:ListHyperParameterTuningJobs"
      ListImageVersions = "sagemaker:ListImageVersions"
      ListImages = "sagemaker:ListImages"
      ListInferenceComponents = "sagemaker:ListInferenceComponents"
      ListInferenceExperiments = "sagemaker:ListInferenceExperiments"
      ListInferenceRecommendationsJobSteps = "sagemaker:ListInferenceRecommendationsJobSteps"
      ListInferenceRecommendationsJobs = "sagemaker:ListInferenceRecommendationsJobs"
      ListLabelingJobs = "sagemaker:ListLabelingJobs"
      ListLabelingJobsForWorkteam = "sagemaker:ListLabelingJobsForWorkteam"
      ListLineageGroups = "sagemaker:ListLineageGroups"
      ListModelBiasJobDefinitions = "sagemaker:ListModelBiasJobDefinitions"
      ListModelCardExportJobs = "sagemaker:ListModelCardExportJobs"
      ListModelCardVersions = "sagemaker:ListModelCardVersions"
      ListModelCards = "sagemaker:ListModelCards"
      ListModelExplainabilityJobDefinitions = "sagemaker:ListModelExplainabilityJobDefinitions"
      ListModelMetadata = "sagemaker:ListModelMetadata"
      ListModelPackageGroups = "sagemaker:ListModelPackageGroups"
      ListModelPackages = "sagemaker:ListModelPackages"
      ListModelQualityJobDefinitions = "sagemaker:ListModelQualityJobDefinitions"
      ListModels = "sagemaker:ListModels"
      ListMonitoringAlertHistory = "sagemaker:ListMonitoringAlertHistory"
      ListMonitoringAlerts = "sagemaker:ListMonitoringAlerts"
      ListMonitoringExecutions = "sagemaker:ListMonitoringExecutions"
      ListMonitoringSchedules = "sagemaker:ListMonitoringSchedules"
      ListNotebookInstanceLifecycleConfigs = "sagemaker:ListNotebookInstanceLifecycleConfigs"
      ListNotebookInstances = "sagemaker:ListNotebookInstances"
      ListPipelineExecutionSteps = "sagemaker:ListPipelineExecutionSteps"
      ListPipelineExecutions = "sagemaker:ListPipelineExecutions"
      ListPipelineParametersForExecution = "sagemaker:ListPipelineParametersForExecution"
      ListPipelines = "sagemaker:ListPipelines"
      ListProcessingJobs = "sagemaker:ListProcessingJobs"
      ListProjects = "sagemaker:ListProjects"
      ListResourceCatalogs = "sagemaker:ListResourceCatalogs"
      ListSharedModelEvents = "sagemaker:ListSharedModelEvents"
      ListSharedModelVersions = "sagemaker:ListSharedModelVersions"
      ListSharedModels = "sagemaker:ListSharedModels"
      ListSpaces = "sagemaker:ListSpaces"
      ListStageDevices = "sagemaker:ListStageDevices"
      ListStudioLifecycleConfigs = "sagemaker:ListStudioLifecycleConfigs"
      ListSubscribedWorkteams = "sagemaker:ListSubscribedWorkteams"
      ListTags = "sagemaker:ListTags"
      ListTrainingJobs = "sagemaker:ListTrainingJobs"
      ListTrainingJobsForHyperParameterTuningJob = "sagemaker:ListTrainingJobsForHyperParameterTuningJob"
      ListTransformJobs = "sagemaker:ListTransformJobs"
      ListTrialComponents = "sagemaker:ListTrialComponents"
      ListTrials = "sagemaker:ListTrials"
      ListUserProfiles = "sagemaker:ListUserProfiles"
      ListWorkforces = "sagemaker:ListWorkforces"
      ListWorkteams = "sagemaker:ListWorkteams"
      PutLineageGroupPolicy = "sagemaker:PutLineageGroupPolicy"
      PutModelPackageGroupPolicy = "sagemaker:PutModelPackageGroupPolicy"
      PutRecord = "sagemaker:PutRecord"
      PutResourcePolicy = "sagemaker:PutResourcePolicy"
      QueryLineage = "sagemaker:QueryLineage"
      RegisterDevices = "sagemaker:RegisterDevices"
      RenderUiTemplate = "sagemaker:RenderUiTemplate"
      RetryPipelineExecution = "sagemaker:RetryPipelineExecution"
      Search = "sagemaker:Search"
      SendHeartbeat = "sagemaker:SendHeartbeat"
      SendPipelineExecutionStepFailure = "sagemaker:SendPipelineExecutionStepFailure"
      SendPipelineExecutionStepSuccess = "sagemaker:SendPipelineExecutionStepSuccess"
      SendSharedModelEvent = "sagemaker:SendSharedModelEvent"
      StartEdgeDeploymentStage = "sagemaker:StartEdgeDeploymentStage"
      StartHumanLoop = "sagemaker:StartHumanLoop"
      StartInferenceExperiment = "sagemaker:StartInferenceExperiment"
      StartMonitoringSchedule = "sagemaker:StartMonitoringSchedule"
      StartNotebookInstance = "sagemaker:StartNotebookInstance"
      StartPipelineExecution = "sagemaker:StartPipelineExecution"
      StopAutoMLJob = "sagemaker:StopAutoMLJob"
      StopCompilationJob = "sagemaker:StopCompilationJob"
      StopEdgeDeploymentStage = "sagemaker:StopEdgeDeploymentStage"
      StopEdgePackagingJob = "sagemaker:StopEdgePackagingJob"
      StopHumanLoop = "sagemaker:StopHumanLoop"
      StopHyperParameterTuningJob = "sagemaker:StopHyperParameterTuningJob"
      StopInferenceExperiment = "sagemaker:StopInferenceExperiment"
      StopInferenceRecommendationsJob = "sagemaker:StopInferenceRecommendationsJob"
      StopLabelingJob = "sagemaker:StopLabelingJob"
      StopMonitoringSchedule = "sagemaker:StopMonitoringSchedule"
      StopNotebookInstance = "sagemaker:StopNotebookInstance"
      StopPipelineExecution = "sagemaker:StopPipelineExecution"
      StopProcessingJob = "sagemaker:StopProcessingJob"
      StopTrainingJob = "sagemaker:StopTrainingJob"
      StopTransformJob = "sagemaker:StopTransformJob"
      UpdateAction = "sagemaker:UpdateAction"
      UpdateAppImageConfig = "sagemaker:UpdateAppImageConfig"
      UpdateArtifact = "sagemaker:UpdateArtifact"
      UpdateCluster = "sagemaker:UpdateCluster"
      UpdateClusterSoftware = "sagemaker:UpdateClusterSoftware"
      UpdateCodeRepository = "sagemaker:UpdateCodeRepository"
      UpdateContext = "sagemaker:UpdateContext"
      UpdateDeviceFleet = "sagemaker:UpdateDeviceFleet"
      UpdateDevices = "sagemaker:UpdateDevices"
      UpdateDomain = "sagemaker:UpdateDomain"
      UpdateEndpoint = "sagemaker:UpdateEndpoint"
      UpdateEndpointWeightsAndCapacities = "sagemaker:UpdateEndpointWeightsAndCapacities"
      UpdateExperiment = "sagemaker:UpdateExperiment"
      UpdateFeatureGroup = "sagemaker:UpdateFeatureGroup"
      UpdateFeatureMetadata = "sagemaker:UpdateFeatureMetadata"
      UpdateHub = "sagemaker:UpdateHub"
      UpdateImage = "sagemaker:UpdateImage"
      UpdateImageVersion = "sagemaker:UpdateImageVersion"
      UpdateInferenceComponent = "sagemaker:UpdateInferenceComponent"
      UpdateInferenceComponentRuntimeConfig = "sagemaker:UpdateInferenceComponentRuntimeConfig"
      UpdateInferenceExperiment = "sagemaker:UpdateInferenceExperiment"
      UpdateModelCard = "sagemaker:UpdateModelCard"
      UpdateModelPackage = "sagemaker:UpdateModelPackage"
      UpdateMonitoringAlert = "sagemaker:UpdateMonitoringAlert"
      UpdateMonitoringSchedule = "sagemaker:UpdateMonitoringSchedule"
      UpdateNotebookInstance = "sagemaker:UpdateNotebookInstance"
      UpdateNotebookInstanceLifecycleConfig = "sagemaker:UpdateNotebookInstanceLifecycleConfig"
      UpdatePipeline = "sagemaker:UpdatePipeline"
      UpdatePipelineExecution = "sagemaker:UpdatePipelineExecution"
      UpdateProject = "sagemaker:UpdateProject"
      UpdateSharedModel = "sagemaker:UpdateSharedModel"
      UpdateSpace = "sagemaker:UpdateSpace"
      UpdateTrainingJob = "sagemaker:UpdateTrainingJob"
      UpdateTrial = "sagemaker:UpdateTrial"
      UpdateTrialComponent = "sagemaker:UpdateTrialComponent"
      UpdateUserProfile = "sagemaker:UpdateUserProfile"
      UpdateWorkforce = "sagemaker:UpdateWorkforce"
      UpdateWorkteam = "sagemaker:UpdateWorkteam"
    }
    savingsplans = {
      AllActions = "savingsplans:*"
      CreateSavingsPlan = "savingsplans:CreateSavingsPlan"
      DeleteQueuedSavingsPlan = "savingsplans:DeleteQueuedSavingsPlan"
      DescribeSavingsPlanRates = "savingsplans:DescribeSavingsPlanRates"
      DescribeSavingsPlans = "savingsplans:DescribeSavingsPlans"
      DescribeSavingsPlansOfferingRates = "savingsplans:DescribeSavingsPlansOfferingRates"
      DescribeSavingsPlansOfferings = "savingsplans:DescribeSavingsPlansOfferings"
      ListTagsForResource = "savingsplans:ListTagsForResource"
      ReturnSavingsPlan = "savingsplans:ReturnSavingsPlan"
      TagResource = "savingsplans:TagResource"
      UntagResource = "savingsplans:UntagResource"
    }
    scheduler = {
      AllActions = "scheduler:*"
      CreateSchedule = "scheduler:CreateSchedule"
      CreateScheduleGroup = "scheduler:CreateScheduleGroup"
      DeleteSchedule = "scheduler:DeleteSchedule"
      DeleteScheduleGroup = "scheduler:DeleteScheduleGroup"
      GetSchedule = "scheduler:GetSchedule"
      GetScheduleGroup = "scheduler:GetScheduleGroup"
      ListScheduleGroups = "scheduler:ListScheduleGroups"
      ListSchedules = "scheduler:ListSchedules"
      ListTagsForResource = "scheduler:ListTagsForResource"
      TagResource = "scheduler:TagResource"
      UntagResource = "scheduler:UntagResource"
      UpdateSchedule = "scheduler:UpdateSchedule"
    }
    schemas = {
      AllActions = "schemas:*"
      CreateDiscoverer = "schemas:CreateDiscoverer"
      CreateRegistry = "schemas:CreateRegistry"
      CreateSchema = "schemas:CreateSchema"
      DeleteDiscoverer = "schemas:DeleteDiscoverer"
      DeleteRegistry = "schemas:DeleteRegistry"
      DeleteResourcePolicy = "schemas:DeleteResourcePolicy"
      DeleteSchema = "schemas:DeleteSchema"
      DeleteSchemaVersion = "schemas:DeleteSchemaVersion"
      DescribeCodeBinding = "schemas:DescribeCodeBinding"
      DescribeDiscoverer = "schemas:DescribeDiscoverer"
      DescribeRegistry = "schemas:DescribeRegistry"
      DescribeSchema = "schemas:DescribeSchema"
      ExportSchema = "schemas:ExportSchema"
      GetCodeBindingSource = "schemas:GetCodeBindingSource"
      GetDiscoveredSchema = "schemas:GetDiscoveredSchema"
      GetResourcePolicy = "schemas:GetResourcePolicy"
      ListDiscoverers = "schemas:ListDiscoverers"
      ListRegistries = "schemas:ListRegistries"
      ListSchemaVersions = "schemas:ListSchemaVersions"
      ListSchemas = "schemas:ListSchemas"
      ListTagsForResource = "schemas:ListTagsForResource"
      PutCodeBinding = "schemas:PutCodeBinding"
      PutResourcePolicy = "schemas:PutResourcePolicy"
      SearchSchemas = "schemas:SearchSchemas"
      StartDiscoverer = "schemas:StartDiscoverer"
      StopDiscoverer = "schemas:StopDiscoverer"
      TagResource = "schemas:TagResource"
      UntagResource = "schemas:UntagResource"
      UpdateDiscoverer = "schemas:UpdateDiscoverer"
      UpdateRegistry = "schemas:UpdateRegistry"
      UpdateSchema = "schemas:UpdateSchema"
    }
    scn = {
      AllActions = "scn:*"
      AssignAdminPermissionsToUser = "scn:AssignAdminPermissionsToUser"
      CreateBillOfMaterialsImportJob = "scn:CreateBillOfMaterialsImportJob"
      CreateInstance = "scn:CreateInstance"
      CreateSSOApplication = "scn:CreateSSOApplication"
      DeleteInstance = "scn:DeleteInstance"
      DeleteSSOApplication = "scn:DeleteSSOApplication"
      DescribeInstance = "scn:DescribeInstance"
      GetBillOfMaterialsImportJob = "scn:GetBillOfMaterialsImportJob"
      ListAdminUsers = "scn:ListAdminUsers"
      ListInstances = "scn:ListInstances"
      ListTagsForResource = "scn:ListTagsForResource"
      RemoveAdminPermissionsForUser = "scn:RemoveAdminPermissionsForUser"
      SendDataIntegrationEvent = "scn:SendDataIntegrationEvent"
      TagResource = "scn:TagResource"
      UntagResource = "scn:UntagResource"
      UpdateInstance = "scn:UpdateInstance"
    }
    sdb = {
      AllActions = "sdb:*"
      BatchDeleteAttributes = "sdb:BatchDeleteAttributes"
      BatchPutAttributes = "sdb:BatchPutAttributes"
      CreateDomain = "sdb:CreateDomain"
      DeleteAttributes = "sdb:DeleteAttributes"
      DeleteDomain = "sdb:DeleteDomain"
      DomainMetadata = "sdb:DomainMetadata"
      GetAttributes = "sdb:GetAttributes"
      ListDomains = "sdb:ListDomains"
      PutAttributes = "sdb:PutAttributes"
      Select = "sdb:Select"
    }
    secretsmanager = {
      AllActions = "secretsmanager:*"
      BatchGetSecretValue = "secretsmanager:BatchGetSecretValue"
      CancelRotateSecret = "secretsmanager:CancelRotateSecret"
      CreateSecret = "secretsmanager:CreateSecret"
      DeleteResourcePolicy = "secretsmanager:DeleteResourcePolicy"
      DeleteSecret = "secretsmanager:DeleteSecret"
      DescribeSecret = "secretsmanager:DescribeSecret"
      GetRandomPassword = "secretsmanager:GetRandomPassword"
      GetResourcePolicy = "secretsmanager:GetResourcePolicy"
      GetSecretValue = "secretsmanager:GetSecretValue"
      ListSecretVersionIds = "secretsmanager:ListSecretVersionIds"
      ListSecrets = "secretsmanager:ListSecrets"
      PutResourcePolicy = "secretsmanager:PutResourcePolicy"
      PutSecretValue = "secretsmanager:PutSecretValue"
      RemoveRegionsFromReplication = "secretsmanager:RemoveRegionsFromReplication"
      ReplicateSecretToRegions = "secretsmanager:ReplicateSecretToRegions"
      RestoreSecret = "secretsmanager:RestoreSecret"
      RotateSecret = "secretsmanager:RotateSecret"
      StopReplicationToReplica = "secretsmanager:StopReplicationToReplica"
      TagResource = "secretsmanager:TagResource"
      UntagResource = "secretsmanager:UntagResource"
      UpdateSecret = "secretsmanager:UpdateSecret"
      UpdateSecretVersionStage = "secretsmanager:UpdateSecretVersionStage"
      ValidateResourcePolicy = "secretsmanager:ValidateResourcePolicy"
    }
    securityhub = {
      AllActions = "securityhub:*"
      AcceptAdministratorInvitation = "securityhub:AcceptAdministratorInvitation"
      AcceptInvitation = "securityhub:AcceptInvitation"
      BatchDeleteAutomationRules = "securityhub:BatchDeleteAutomationRules"
      BatchDisableStandards = "securityhub:BatchDisableStandards"
      BatchEnableStandards = "securityhub:BatchEnableStandards"
      BatchGetAutomationRules = "securityhub:BatchGetAutomationRules"
      BatchGetConfigurationPolicyAssociations = "securityhub:BatchGetConfigurationPolicyAssociations"
      BatchGetControlEvaluations = "securityhub:BatchGetControlEvaluations"
      BatchGetSecurityControls = "securityhub:BatchGetSecurityControls"
      BatchGetStandardsControlAssociations = "securityhub:BatchGetStandardsControlAssociations"
      BatchImportFindings = "securityhub:BatchImportFindings"
      BatchUpdateAutomationRules = "securityhub:BatchUpdateAutomationRules"
      BatchUpdateFindings = "securityhub:BatchUpdateFindings"
      BatchUpdateStandardsControlAssociations = "securityhub:BatchUpdateStandardsControlAssociations"
      CreateActionTarget = "securityhub:CreateActionTarget"
      CreateAutomationRule = "securityhub:CreateAutomationRule"
      CreateConfigurationPolicy = "securityhub:CreateConfigurationPolicy"
      CreateFindingAggregator = "securityhub:CreateFindingAggregator"
      CreateInsight = "securityhub:CreateInsight"
      CreateMembers = "securityhub:CreateMembers"
      DeclineInvitations = "securityhub:DeclineInvitations"
      DeleteActionTarget = "securityhub:DeleteActionTarget"
      DeleteConfigurationPolicy = "securityhub:DeleteConfigurationPolicy"
      DeleteFindingAggregator = "securityhub:DeleteFindingAggregator"
      DeleteInsight = "securityhub:DeleteInsight"
      DeleteInvitations = "securityhub:DeleteInvitations"
      DeleteMembers = "securityhub:DeleteMembers"
      DescribeActionTargets = "securityhub:DescribeActionTargets"
      DescribeHub = "securityhub:DescribeHub"
      DescribeOrganizationConfiguration = "securityhub:DescribeOrganizationConfiguration"
      DescribeProducts = "securityhub:DescribeProducts"
      DescribeStandards = "securityhub:DescribeStandards"
      DescribeStandardsControls = "securityhub:DescribeStandardsControls"
      DisableImportFindingsForProduct = "securityhub:DisableImportFindingsForProduct"
      DisableOrganizationAdminAccount = "securityhub:DisableOrganizationAdminAccount"
      DisableSecurityHub = "securityhub:DisableSecurityHub"
      DisassociateFromAdministratorAccount = "securityhub:DisassociateFromAdministratorAccount"
      DisassociateFromMasterAccount = "securityhub:DisassociateFromMasterAccount"
      DisassociateMembers = "securityhub:DisassociateMembers"
      EnableImportFindingsForProduct = "securityhub:EnableImportFindingsForProduct"
      EnableOrganizationAdminAccount = "securityhub:EnableOrganizationAdminAccount"
      EnableSecurityHub = "securityhub:EnableSecurityHub"
      GetAdhocInsightResults = "securityhub:GetAdhocInsightResults"
      GetAdministratorAccount = "securityhub:GetAdministratorAccount"
      GetConfigurationPolicy = "securityhub:GetConfigurationPolicy"
      GetConfigurationPolicyAssociation = "securityhub:GetConfigurationPolicyAssociation"
      GetControlFindingSummary = "securityhub:GetControlFindingSummary"
      GetEnabledStandards = "securityhub:GetEnabledStandards"
      GetFindingAggregator = "securityhub:GetFindingAggregator"
      GetFindingHistory = "securityhub:GetFindingHistory"
      GetFindings = "securityhub:GetFindings"
      GetFreeTrialEndDate = "securityhub:GetFreeTrialEndDate"
      GetFreeTrialUsage = "securityhub:GetFreeTrialUsage"
      GetInsightFindingTrend = "securityhub:GetInsightFindingTrend"
      GetInsightResults = "securityhub:GetInsightResults"
      GetInsights = "securityhub:GetInsights"
      GetInvitationsCount = "securityhub:GetInvitationsCount"
      GetMasterAccount = "securityhub:GetMasterAccount"
      GetMembers = "securityhub:GetMembers"
      GetSecurityControlDefinition = "securityhub:GetSecurityControlDefinition"
      GetUsage = "securityhub:GetUsage"
      InviteMembers = "securityhub:InviteMembers"
      ListAutomationRules = "securityhub:ListAutomationRules"
      ListConfigurationPolicies = "securityhub:ListConfigurationPolicies"
      ListConfigurationPolicyAssociations = "securityhub:ListConfigurationPolicyAssociations"
      ListControlEvaluationSummaries = "securityhub:ListControlEvaluationSummaries"
      ListEnabledProductsForImport = "securityhub:ListEnabledProductsForImport"
      ListFindingAggregators = "securityhub:ListFindingAggregators"
      ListInvitations = "securityhub:ListInvitations"
      ListMembers = "securityhub:ListMembers"
      ListOrganizationAdminAccounts = "securityhub:ListOrganizationAdminAccounts"
      ListSecurityControlDefinitions = "securityhub:ListSecurityControlDefinitions"
      ListStandardsControlAssociations = "securityhub:ListStandardsControlAssociations"
      ListTagsForResource = "securityhub:ListTagsForResource"
      SendFindingEvents = "securityhub:SendFindingEvents"
      SendInsightEvents = "securityhub:SendInsightEvents"
      StartConfigurationPolicyAssociation = "securityhub:StartConfigurationPolicyAssociation"
      StartConfigurationPolicyDisassociation = "securityhub:StartConfigurationPolicyDisassociation"
      TagResource = "securityhub:TagResource"
      UntagResource = "securityhub:UntagResource"
      UpdateActionTarget = "securityhub:UpdateActionTarget"
      UpdateConfigurationPolicy = "securityhub:UpdateConfigurationPolicy"
      UpdateFindingAggregator = "securityhub:UpdateFindingAggregator"
      UpdateFindings = "securityhub:UpdateFindings"
      UpdateInsight = "securityhub:UpdateInsight"
      UpdateOrganizationConfiguration = "securityhub:UpdateOrganizationConfiguration"
      UpdateSecurityControl = "securityhub:UpdateSecurityControl"
      UpdateSecurityHubConfiguration = "securityhub:UpdateSecurityHubConfiguration"
      UpdateStandardsControl = "securityhub:UpdateStandardsControl"
    }
    securitylake = {
      AllActions = "securitylake:*"
      CreateAwsLogSource = "securitylake:CreateAwsLogSource"
      CreateCustomLogSource = "securitylake:CreateCustomLogSource"
      CreateDataLake = "securitylake:CreateDataLake"
      CreateDataLakeExceptionSubscription = "securitylake:CreateDataLakeExceptionSubscription"
      CreateDataLakeOrganizationConfiguration = "securitylake:CreateDataLakeOrganizationConfiguration"
      CreateSubscriber = "securitylake:CreateSubscriber"
      CreateSubscriberNotification = "securitylake:CreateSubscriberNotification"
      DeleteAwsLogSource = "securitylake:DeleteAwsLogSource"
      DeleteCustomLogSource = "securitylake:DeleteCustomLogSource"
      DeleteDataLake = "securitylake:DeleteDataLake"
      DeleteDataLakeExceptionSubscription = "securitylake:DeleteDataLakeExceptionSubscription"
      DeleteDataLakeOrganizationConfiguration = "securitylake:DeleteDataLakeOrganizationConfiguration"
      DeleteSubscriber = "securitylake:DeleteSubscriber"
      DeleteSubscriberNotification = "securitylake:DeleteSubscriberNotification"
      DeregisterDataLakeDelegatedAdministrator = "securitylake:DeregisterDataLakeDelegatedAdministrator"
      GetDataLakeExceptionSubscription = "securitylake:GetDataLakeExceptionSubscription"
      GetDataLakeOrganizationConfiguration = "securitylake:GetDataLakeOrganizationConfiguration"
      GetDataLakeSources = "securitylake:GetDataLakeSources"
      GetSubscriber = "securitylake:GetSubscriber"
      ListDataLakeExceptions = "securitylake:ListDataLakeExceptions"
      ListDataLakes = "securitylake:ListDataLakes"
      ListLogSources = "securitylake:ListLogSources"
      ListSubscribers = "securitylake:ListSubscribers"
      ListTagsForResource = "securitylake:ListTagsForResource"
      RegisterDataLakeDelegatedAdministrator = "securitylake:RegisterDataLakeDelegatedAdministrator"
      TagResource = "securitylake:TagResource"
      UntagResource = "securitylake:UntagResource"
      UpdateDataLake = "securitylake:UpdateDataLake"
      UpdateDataLakeExceptionSubscription = "securitylake:UpdateDataLakeExceptionSubscription"
      UpdateSubscriber = "securitylake:UpdateSubscriber"
      UpdateSubscriberNotification = "securitylake:UpdateSubscriberNotification"
    }
    serverlessrepo = {
      AllActions = "serverlessrepo:*"
      CreateApplication = "serverlessrepo:CreateApplication"
      CreateApplicationVersion = "serverlessrepo:CreateApplicationVersion"
      CreateCloudFormationChangeSet = "serverlessrepo:CreateCloudFormationChangeSet"
      CreateCloudFormationTemplate = "serverlessrepo:CreateCloudFormationTemplate"
      DeleteApplication = "serverlessrepo:DeleteApplication"
      GetApplication = "serverlessrepo:GetApplication"
      GetApplicationPolicy = "serverlessrepo:GetApplicationPolicy"
      GetCloudFormationTemplate = "serverlessrepo:GetCloudFormationTemplate"
      ListApplicationDependencies = "serverlessrepo:ListApplicationDependencies"
      ListApplicationVersions = "serverlessrepo:ListApplicationVersions"
      ListApplications = "serverlessrepo:ListApplications"
      PutApplicationPolicy = "serverlessrepo:PutApplicationPolicy"
      SearchApplications = "serverlessrepo:SearchApplications"
      UnshareApplication = "serverlessrepo:UnshareApplication"
      UpdateApplication = "serverlessrepo:UpdateApplication"
    }
    servicecatalog = {
      AllActions = "servicecatalog:*"
      AcceptPortfolioShare = "servicecatalog:AcceptPortfolioShare"
      AssociateAttributeGroup = "servicecatalog:AssociateAttributeGroup"
      AssociateBudgetWithResource = "servicecatalog:AssociateBudgetWithResource"
      AssociatePrincipalWithPortfolio = "servicecatalog:AssociatePrincipalWithPortfolio"
      AssociateProductWithPortfolio = "servicecatalog:AssociateProductWithPortfolio"
      AssociateResource = "servicecatalog:AssociateResource"
      AssociateServiceActionWithProvisioningArtifact = "servicecatalog:AssociateServiceActionWithProvisioningArtifact"
      AssociateTagOptionWithResource = "servicecatalog:AssociateTagOptionWithResource"
      BatchAssociateServiceActionWithProvisioningArtifact = "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact"
      BatchDisassociateServiceActionFromProvisioningArtifact = "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact"
      CopyProduct = "servicecatalog:CopyProduct"
      CreateApplication = "servicecatalog:CreateApplication"
      CreateAttributeGroup = "servicecatalog:CreateAttributeGroup"
      CreateConstraint = "servicecatalog:CreateConstraint"
      CreatePortfolio = "servicecatalog:CreatePortfolio"
      CreatePortfolioShare = "servicecatalog:CreatePortfolioShare"
      CreateProduct = "servicecatalog:CreateProduct"
      CreateProvisionedProductPlan = "servicecatalog:CreateProvisionedProductPlan"
      CreateProvisioningArtifact = "servicecatalog:CreateProvisioningArtifact"
      CreateServiceAction = "servicecatalog:CreateServiceAction"
      CreateTagOption = "servicecatalog:CreateTagOption"
      DeleteApplication = "servicecatalog:DeleteApplication"
      DeleteAttributeGroup = "servicecatalog:DeleteAttributeGroup"
      DeleteConstraint = "servicecatalog:DeleteConstraint"
      DeletePortfolio = "servicecatalog:DeletePortfolio"
      DeletePortfolioShare = "servicecatalog:DeletePortfolioShare"
      DeleteProduct = "servicecatalog:DeleteProduct"
      DeleteProvisionedProductPlan = "servicecatalog:DeleteProvisionedProductPlan"
      DeleteProvisioningArtifact = "servicecatalog:DeleteProvisioningArtifact"
      DeleteServiceAction = "servicecatalog:DeleteServiceAction"
      DeleteTagOption = "servicecatalog:DeleteTagOption"
      DescribeConstraint = "servicecatalog:DescribeConstraint"
      DescribeCopyProductStatus = "servicecatalog:DescribeCopyProductStatus"
      DescribePortfolio = "servicecatalog:DescribePortfolio"
      DescribePortfolioShareStatus = "servicecatalog:DescribePortfolioShareStatus"
      DescribePortfolioShares = "servicecatalog:DescribePortfolioShares"
      DescribeProduct = "servicecatalog:DescribeProduct"
      DescribeProductAsAdmin = "servicecatalog:DescribeProductAsAdmin"
      DescribeProductView = "servicecatalog:DescribeProductView"
      DescribeProvisionedProduct = "servicecatalog:DescribeProvisionedProduct"
      DescribeProvisionedProductPlan = "servicecatalog:DescribeProvisionedProductPlan"
      DescribeProvisioningArtifact = "servicecatalog:DescribeProvisioningArtifact"
      DescribeProvisioningParameters = "servicecatalog:DescribeProvisioningParameters"
      DescribeRecord = "servicecatalog:DescribeRecord"
      DescribeServiceAction = "servicecatalog:DescribeServiceAction"
      DescribeServiceActionExecutionParameters = "servicecatalog:DescribeServiceActionExecutionParameters"
      DescribeTagOption = "servicecatalog:DescribeTagOption"
      DisableAWSOrganizationsAccess = "servicecatalog:DisableAWSOrganizationsAccess"
      DisassociateAttributeGroup = "servicecatalog:DisassociateAttributeGroup"
      DisassociateBudgetFromResource = "servicecatalog:DisassociateBudgetFromResource"
      DisassociatePrincipalFromPortfolio = "servicecatalog:DisassociatePrincipalFromPortfolio"
      DisassociateProductFromPortfolio = "servicecatalog:DisassociateProductFromPortfolio"
      DisassociateResource = "servicecatalog:DisassociateResource"
      DisassociateServiceActionFromProvisioningArtifact = "servicecatalog:DisassociateServiceActionFromProvisioningArtifact"
      DisassociateTagOptionFromResource = "servicecatalog:DisassociateTagOptionFromResource"
      EnableAWSOrganizationsAccess = "servicecatalog:EnableAWSOrganizationsAccess"
      ExecuteProvisionedProductPlan = "servicecatalog:ExecuteProvisionedProductPlan"
      ExecuteProvisionedProductServiceAction = "servicecatalog:ExecuteProvisionedProductServiceAction"
      GetAWSOrganizationsAccessStatus = "servicecatalog:GetAWSOrganizationsAccessStatus"
      GetApplication = "servicecatalog:GetApplication"
      GetAssociatedResource = "servicecatalog:GetAssociatedResource"
      GetAttributeGroup = "servicecatalog:GetAttributeGroup"
      GetConfiguration = "servicecatalog:GetConfiguration"
      GetProvisionedProductOutputs = "servicecatalog:GetProvisionedProductOutputs"
      ImportAsProvisionedProduct = "servicecatalog:ImportAsProvisionedProduct"
      ListAcceptedPortfolioShares = "servicecatalog:ListAcceptedPortfolioShares"
      ListApplications = "servicecatalog:ListApplications"
      ListAssociatedAttributeGroups = "servicecatalog:ListAssociatedAttributeGroups"
      ListAssociatedResources = "servicecatalog:ListAssociatedResources"
      ListAttributeGroups = "servicecatalog:ListAttributeGroups"
      ListAttributeGroupsForApplication = "servicecatalog:ListAttributeGroupsForApplication"
      ListBudgetsForResource = "servicecatalog:ListBudgetsForResource"
      ListConstraintsForPortfolio = "servicecatalog:ListConstraintsForPortfolio"
      ListLaunchPaths = "servicecatalog:ListLaunchPaths"
      ListOrganizationPortfolioAccess = "servicecatalog:ListOrganizationPortfolioAccess"
      ListPortfolioAccess = "servicecatalog:ListPortfolioAccess"
      ListPortfolios = "servicecatalog:ListPortfolios"
      ListPortfoliosForProduct = "servicecatalog:ListPortfoliosForProduct"
      ListPrincipalsForPortfolio = "servicecatalog:ListPrincipalsForPortfolio"
      ListProvisionedProductPlans = "servicecatalog:ListProvisionedProductPlans"
      ListProvisioningArtifacts = "servicecatalog:ListProvisioningArtifacts"
      ListProvisioningArtifactsForServiceAction = "servicecatalog:ListProvisioningArtifactsForServiceAction"
      ListRecordHistory = "servicecatalog:ListRecordHistory"
      ListResourcesForTagOption = "servicecatalog:ListResourcesForTagOption"
      ListServiceActions = "servicecatalog:ListServiceActions"
      ListServiceActionsForProvisioningArtifact = "servicecatalog:ListServiceActionsForProvisioningArtifact"
      ListStackInstancesForProvisionedProduct = "servicecatalog:ListStackInstancesForProvisionedProduct"
      ListTagOptions = "servicecatalog:ListTagOptions"
      ListTagsForResource = "servicecatalog:ListTagsForResource"
      NotifyProvisionProductEngineWorkflowResult = "servicecatalog:NotifyProvisionProductEngineWorkflowResult"
      NotifyTerminateProvisionedProductEngineWorkflowResult = "servicecatalog:NotifyTerminateProvisionedProductEngineWorkflowResult"
      NotifyUpdateProvisionedProductEngineWorkflowResult = "servicecatalog:NotifyUpdateProvisionedProductEngineWorkflowResult"
      ProvisionProduct = "servicecatalog:ProvisionProduct"
      PutConfiguration = "servicecatalog:PutConfiguration"
      RejectPortfolioShare = "servicecatalog:RejectPortfolioShare"
      ScanProvisionedProducts = "servicecatalog:ScanProvisionedProducts"
      SearchProducts = "servicecatalog:SearchProducts"
      SearchProductsAsAdmin = "servicecatalog:SearchProductsAsAdmin"
      SearchProvisionedProducts = "servicecatalog:SearchProvisionedProducts"
      SyncResource = "servicecatalog:SyncResource"
      TagResource = "servicecatalog:TagResource"
      TerminateProvisionedProduct = "servicecatalog:TerminateProvisionedProduct"
      UntagResource = "servicecatalog:UntagResource"
      UpdateApplication = "servicecatalog:UpdateApplication"
      UpdateAttributeGroup = "servicecatalog:UpdateAttributeGroup"
      UpdateConstraint = "servicecatalog:UpdateConstraint"
      UpdatePortfolio = "servicecatalog:UpdatePortfolio"
      UpdatePortfolioShare = "servicecatalog:UpdatePortfolioShare"
      UpdateProduct = "servicecatalog:UpdateProduct"
      UpdateProvisionedProduct = "servicecatalog:UpdateProvisionedProduct"
      UpdateProvisionedProductProperties = "servicecatalog:UpdateProvisionedProductProperties"
      UpdateProvisioningArtifact = "servicecatalog:UpdateProvisioningArtifact"
      UpdateServiceAction = "servicecatalog:UpdateServiceAction"
      UpdateTagOption = "servicecatalog:UpdateTagOption"
    }
    servicediscovery = {
      AllActions = "servicediscovery:*"
      CreateHttpNamespace = "servicediscovery:CreateHttpNamespace"
      CreatePrivateDnsNamespace = "servicediscovery:CreatePrivateDnsNamespace"
      CreatePublicDnsNamespace = "servicediscovery:CreatePublicDnsNamespace"
      CreateService = "servicediscovery:CreateService"
      DeleteNamespace = "servicediscovery:DeleteNamespace"
      DeleteService = "servicediscovery:DeleteService"
      DeregisterInstance = "servicediscovery:DeregisterInstance"
      DiscoverInstances = "servicediscovery:DiscoverInstances"
      DiscoverInstancesRevision = "servicediscovery:DiscoverInstancesRevision"
      GetInstance = "servicediscovery:GetInstance"
      GetInstancesHealthStatus = "servicediscovery:GetInstancesHealthStatus"
      GetNamespace = "servicediscovery:GetNamespace"
      GetOperation = "servicediscovery:GetOperation"
      GetService = "servicediscovery:GetService"
      ListInstances = "servicediscovery:ListInstances"
      ListNamespaces = "servicediscovery:ListNamespaces"
      ListOperations = "servicediscovery:ListOperations"
      ListServices = "servicediscovery:ListServices"
      ListTagsForResource = "servicediscovery:ListTagsForResource"
      RegisterInstance = "servicediscovery:RegisterInstance"
      TagResource = "servicediscovery:TagResource"
      UntagResource = "servicediscovery:UntagResource"
      UpdateHttpNamespace = "servicediscovery:UpdateHttpNamespace"
      UpdateInstanceCustomHealthStatus = "servicediscovery:UpdateInstanceCustomHealthStatus"
      UpdatePrivateDnsNamespace = "servicediscovery:UpdatePrivateDnsNamespace"
      UpdatePublicDnsNamespace = "servicediscovery:UpdatePublicDnsNamespace"
      UpdateService = "servicediscovery:UpdateService"
    }
    serviceextract = {
      AllActions = "serviceextract:*"
      GetConfig = "serviceextract:GetConfig"
    }
    servicequotas = {
      AllActions = "servicequotas:*"
      AssociateServiceQuotaTemplate = "servicequotas:AssociateServiceQuotaTemplate"
      DeleteServiceQuotaIncreaseRequestFromTemplate = "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate"
      DisassociateServiceQuotaTemplate = "servicequotas:DisassociateServiceQuotaTemplate"
      GetAWSDefaultServiceQuota = "servicequotas:GetAWSDefaultServiceQuota"
      GetAssociationForServiceQuotaTemplate = "servicequotas:GetAssociationForServiceQuotaTemplate"
      GetRequestedServiceQuotaChange = "servicequotas:GetRequestedServiceQuotaChange"
      GetServiceQuota = "servicequotas:GetServiceQuota"
      GetServiceQuotaIncreaseRequestFromTemplate = "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate"
      ListAWSDefaultServiceQuotas = "servicequotas:ListAWSDefaultServiceQuotas"
      ListRequestedServiceQuotaChangeHistory = "servicequotas:ListRequestedServiceQuotaChangeHistory"
      ListRequestedServiceQuotaChangeHistoryByQuota = "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota"
      ListServiceQuotaIncreaseRequestsInTemplate = "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate"
      ListServiceQuotas = "servicequotas:ListServiceQuotas"
      ListServices = "servicequotas:ListServices"
      ListTagsForResource = "servicequotas:ListTagsForResource"
      PutServiceQuotaIncreaseRequestIntoTemplate = "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate"
      RequestServiceQuotaIncrease = "servicequotas:RequestServiceQuotaIncrease"
      TagResource = "servicequotas:TagResource"
      UntagResource = "servicequotas:UntagResource"
    }
    ses = {
      AllActions = "ses:*"
      BatchGetMetricData = "ses:BatchGetMetricData"
      CancelExportJob = "ses:CancelExportJob"
      CloneReceiptRuleSet = "ses:CloneReceiptRuleSet"
      CreateAddonInstance = "ses:CreateAddonInstance"
      CreateAddonSubscription = "ses:CreateAddonSubscription"
      CreateArchive = "ses:CreateArchive"
      CreateConfigurationSet = "ses:CreateConfigurationSet"
      CreateConfigurationSetEventDestination = "ses:CreateConfigurationSetEventDestination"
      CreateConfigurationSetTrackingOptions = "ses:CreateConfigurationSetTrackingOptions"
      CreateContact = "ses:CreateContact"
      CreateContactList = "ses:CreateContactList"
      CreateCustomVerificationEmailTemplate = "ses:CreateCustomVerificationEmailTemplate"
      CreateDedicatedIpPool = "ses:CreateDedicatedIpPool"
      CreateDeliverabilityTestReport = "ses:CreateDeliverabilityTestReport"
      CreateEmailIdentity = "ses:CreateEmailIdentity"
      CreateEmailIdentityPolicy = "ses:CreateEmailIdentityPolicy"
      CreateEmailTemplate = "ses:CreateEmailTemplate"
      CreateExportJob = "ses:CreateExportJob"
      CreateImportJob = "ses:CreateImportJob"
      CreateIngressPoint = "ses:CreateIngressPoint"
      CreateReceiptFilter = "ses:CreateReceiptFilter"
      CreateReceiptRule = "ses:CreateReceiptRule"
      CreateReceiptRuleSet = "ses:CreateReceiptRuleSet"
      CreateRelay = "ses:CreateRelay"
      CreateRuleSet = "ses:CreateRuleSet"
      CreateTemplate = "ses:CreateTemplate"
      CreateTrafficPolicy = "ses:CreateTrafficPolicy"
      DeleteAddonInstance = "ses:DeleteAddonInstance"
      DeleteAddonSubscription = "ses:DeleteAddonSubscription"
      DeleteArchive = "ses:DeleteArchive"
      DeleteConfigurationSet = "ses:DeleteConfigurationSet"
      DeleteConfigurationSetEventDestination = "ses:DeleteConfigurationSetEventDestination"
      DeleteConfigurationSetTrackingOptions = "ses:DeleteConfigurationSetTrackingOptions"
      DeleteContact = "ses:DeleteContact"
      DeleteContactList = "ses:DeleteContactList"
      DeleteCustomVerificationEmailTemplate = "ses:DeleteCustomVerificationEmailTemplate"
      DeleteDedicatedIpPool = "ses:DeleteDedicatedIpPool"
      DeleteEmailIdentity = "ses:DeleteEmailIdentity"
      DeleteEmailIdentityPolicy = "ses:DeleteEmailIdentityPolicy"
      DeleteEmailTemplate = "ses:DeleteEmailTemplate"
      DeleteIdentity = "ses:DeleteIdentity"
      DeleteIdentityPolicy = "ses:DeleteIdentityPolicy"
      DeleteIngressPoint = "ses:DeleteIngressPoint"
      DeleteReceiptFilter = "ses:DeleteReceiptFilter"
      DeleteReceiptRule = "ses:DeleteReceiptRule"
      DeleteReceiptRuleSet = "ses:DeleteReceiptRuleSet"
      DeleteRelay = "ses:DeleteRelay"
      DeleteRuleSet = "ses:DeleteRuleSet"
      DeleteSuppressedDestination = "ses:DeleteSuppressedDestination"
      DeleteTemplate = "ses:DeleteTemplate"
      DeleteTrafficPolicy = "ses:DeleteTrafficPolicy"
      DeleteVerifiedEmailAddress = "ses:DeleteVerifiedEmailAddress"
      DescribeActiveReceiptRuleSet = "ses:DescribeActiveReceiptRuleSet"
      DescribeConfigurationSet = "ses:DescribeConfigurationSet"
      DescribeReceiptRule = "ses:DescribeReceiptRule"
      DescribeReceiptRuleSet = "ses:DescribeReceiptRuleSet"
      GetAccount = "ses:GetAccount"
      GetAccountSendingEnabled = "ses:GetAccountSendingEnabled"
      GetAddonInstance = "ses:GetAddonInstance"
      GetAddonSubscription = "ses:GetAddonSubscription"
      GetArchive = "ses:GetArchive"
      GetArchiveExport = "ses:GetArchiveExport"
      GetArchiveMessage = "ses:GetArchiveMessage"
      GetArchiveMessageContent = "ses:GetArchiveMessageContent"
      GetArchiveSearch = "ses:GetArchiveSearch"
      GetArchiveSearchResults = "ses:GetArchiveSearchResults"
      GetBlacklistReports = "ses:GetBlacklistReports"
      GetConfigurationSet = "ses:GetConfigurationSet"
      GetConfigurationSetEventDestinations = "ses:GetConfigurationSetEventDestinations"
      GetContact = "ses:GetContact"
      GetContactList = "ses:GetContactList"
      GetCustomVerificationEmailTemplate = "ses:GetCustomVerificationEmailTemplate"
      GetDedicatedIp = "ses:GetDedicatedIp"
      GetDedicatedIpPool = "ses:GetDedicatedIpPool"
      GetDedicatedIps = "ses:GetDedicatedIps"
      GetDeliverabilityDashboardOptions = "ses:GetDeliverabilityDashboardOptions"
      GetDeliverabilityTestReport = "ses:GetDeliverabilityTestReport"
      GetDomainDeliverabilityCampaign = "ses:GetDomainDeliverabilityCampaign"
      GetDomainStatisticsReport = "ses:GetDomainStatisticsReport"
      GetEmailIdentity = "ses:GetEmailIdentity"
      GetEmailIdentityPolicies = "ses:GetEmailIdentityPolicies"
      GetEmailTemplate = "ses:GetEmailTemplate"
      GetExportJob = "ses:GetExportJob"
      GetIdentityDkimAttributes = "ses:GetIdentityDkimAttributes"
      GetIdentityMailFromDomainAttributes = "ses:GetIdentityMailFromDomainAttributes"
      GetIdentityNotificationAttributes = "ses:GetIdentityNotificationAttributes"
      GetIdentityPolicies = "ses:GetIdentityPolicies"
      GetIdentityVerificationAttributes = "ses:GetIdentityVerificationAttributes"
      GetImportJob = "ses:GetImportJob"
      GetIngressPoint = "ses:GetIngressPoint"
      GetMessageInsights = "ses:GetMessageInsights"
      GetRelay = "ses:GetRelay"
      GetRuleSet = "ses:GetRuleSet"
      GetSendQuota = "ses:GetSendQuota"
      GetSendStatistics = "ses:GetSendStatistics"
      GetSuppressedDestination = "ses:GetSuppressedDestination"
      GetTemplate = "ses:GetTemplate"
      GetTrafficPolicy = "ses:GetTrafficPolicy"
      ListAddonInstances = "ses:ListAddonInstances"
      ListAddonSubscriptions = "ses:ListAddonSubscriptions"
      ListArchiveExports = "ses:ListArchiveExports"
      ListArchiveSearches = "ses:ListArchiveSearches"
      ListArchives = "ses:ListArchives"
      ListConfigurationSets = "ses:ListConfigurationSets"
      ListContactLists = "ses:ListContactLists"
      ListContacts = "ses:ListContacts"
      ListCustomVerificationEmailTemplates = "ses:ListCustomVerificationEmailTemplates"
      ListDedicatedIpPools = "ses:ListDedicatedIpPools"
      ListDeliverabilityTestReports = "ses:ListDeliverabilityTestReports"
      ListDomainDeliverabilityCampaigns = "ses:ListDomainDeliverabilityCampaigns"
      ListEmailIdentities = "ses:ListEmailIdentities"
      ListEmailTemplates = "ses:ListEmailTemplates"
      ListExportJobs = "ses:ListExportJobs"
      ListIdentities = "ses:ListIdentities"
      ListIdentityPolicies = "ses:ListIdentityPolicies"
      ListImportJobs = "ses:ListImportJobs"
      ListIngressPoints = "ses:ListIngressPoints"
      ListReceiptFilters = "ses:ListReceiptFilters"
      ListReceiptRuleSets = "ses:ListReceiptRuleSets"
      ListRecommendations = "ses:ListRecommendations"
      ListRelays = "ses:ListRelays"
      ListRuleSets = "ses:ListRuleSets"
      ListSuppressedDestinations = "ses:ListSuppressedDestinations"
      ListTagsForResource = "ses:ListTagsForResource"
      ListTemplates = "ses:ListTemplates"
      ListTrafficPolicies = "ses:ListTrafficPolicies"
      ListVerifiedEmailAddresses = "ses:ListVerifiedEmailAddresses"
      PutAccountDedicatedIpWarmupAttributes = "ses:PutAccountDedicatedIpWarmupAttributes"
      PutAccountDetails = "ses:PutAccountDetails"
      PutAccountSendingAttributes = "ses:PutAccountSendingAttributes"
      PutAccountSuppressionAttributes = "ses:PutAccountSuppressionAttributes"
      PutAccountVdmAttributes = "ses:PutAccountVdmAttributes"
      PutConfigurationSetDeliveryOptions = "ses:PutConfigurationSetDeliveryOptions"
      PutConfigurationSetReputationOptions = "ses:PutConfigurationSetReputationOptions"
      PutConfigurationSetSendingOptions = "ses:PutConfigurationSetSendingOptions"
      PutConfigurationSetSuppressionOptions = "ses:PutConfigurationSetSuppressionOptions"
      PutConfigurationSetTrackingOptions = "ses:PutConfigurationSetTrackingOptions"
      PutConfigurationSetVdmOptions = "ses:PutConfigurationSetVdmOptions"
      PutDedicatedIpInPool = "ses:PutDedicatedIpInPool"
      PutDedicatedIpPoolScalingAttributes = "ses:PutDedicatedIpPoolScalingAttributes"
      PutDedicatedIpWarmupAttributes = "ses:PutDedicatedIpWarmupAttributes"
      PutDeliverabilityDashboardOption = "ses:PutDeliverabilityDashboardOption"
      PutEmailIdentityConfigurationSetAttributes = "ses:PutEmailIdentityConfigurationSetAttributes"
      PutEmailIdentityDkimAttributes = "ses:PutEmailIdentityDkimAttributes"
      PutEmailIdentityDkimSigningAttributes = "ses:PutEmailIdentityDkimSigningAttributes"
      PutEmailIdentityFeedbackAttributes = "ses:PutEmailIdentityFeedbackAttributes"
      PutEmailIdentityMailFromAttributes = "ses:PutEmailIdentityMailFromAttributes"
      PutIdentityPolicy = "ses:PutIdentityPolicy"
      PutSuppressedDestination = "ses:PutSuppressedDestination"
      ReorderReceiptRuleSet = "ses:ReorderReceiptRuleSet"
      SendBounce = "ses:SendBounce"
      SendBulkEmail = "ses:SendBulkEmail"
      SendBulkTemplatedEmail = "ses:SendBulkTemplatedEmail"
      SendCustomVerificationEmail = "ses:SendCustomVerificationEmail"
      SendEmail = "ses:SendEmail"
      SendRawEmail = "ses:SendRawEmail"
      SendTemplatedEmail = "ses:SendTemplatedEmail"
      SetActiveReceiptRuleSet = "ses:SetActiveReceiptRuleSet"
      SetIdentityDkimEnabled = "ses:SetIdentityDkimEnabled"
      SetIdentityFeedbackForwardingEnabled = "ses:SetIdentityFeedbackForwardingEnabled"
      SetIdentityHeadersInNotificationsEnabled = "ses:SetIdentityHeadersInNotificationsEnabled"
      SetIdentityMailFromDomain = "ses:SetIdentityMailFromDomain"
      SetIdentityNotificationTopic = "ses:SetIdentityNotificationTopic"
      SetReceiptRulePosition = "ses:SetReceiptRulePosition"
      StartArchiveExport = "ses:StartArchiveExport"
      StartArchiveSearch = "ses:StartArchiveSearch"
      StopArchiveExport = "ses:StopArchiveExport"
      StopArchiveSearch = "ses:StopArchiveSearch"
      TagResource = "ses:TagResource"
      TestRenderEmailTemplate = "ses:TestRenderEmailTemplate"
      TestRenderTemplate = "ses:TestRenderTemplate"
      UntagResource = "ses:UntagResource"
      UpdateAccountSendingEnabled = "ses:UpdateAccountSendingEnabled"
      UpdateArchive = "ses:UpdateArchive"
      UpdateConfigurationSetEventDestination = "ses:UpdateConfigurationSetEventDestination"
      UpdateConfigurationSetReputationMetricsEnabled = "ses:UpdateConfigurationSetReputationMetricsEnabled"
      UpdateConfigurationSetSendingEnabled = "ses:UpdateConfigurationSetSendingEnabled"
      UpdateConfigurationSetTrackingOptions = "ses:UpdateConfigurationSetTrackingOptions"
      UpdateContact = "ses:UpdateContact"
      UpdateContactList = "ses:UpdateContactList"
      UpdateCustomVerificationEmailTemplate = "ses:UpdateCustomVerificationEmailTemplate"
      UpdateEmailIdentityPolicy = "ses:UpdateEmailIdentityPolicy"
      UpdateEmailTemplate = "ses:UpdateEmailTemplate"
      UpdateIngressPoint = "ses:UpdateIngressPoint"
      UpdateReceiptRule = "ses:UpdateReceiptRule"
      UpdateRelay = "ses:UpdateRelay"
      UpdateRuleSet = "ses:UpdateRuleSet"
      UpdateTemplate = "ses:UpdateTemplate"
      UpdateTrafficPolicy = "ses:UpdateTrafficPolicy"
      VerifyDomainDkim = "ses:VerifyDomainDkim"
      VerifyDomainIdentity = "ses:VerifyDomainIdentity"
      VerifyEmailAddress = "ses:VerifyEmailAddress"
      VerifyEmailIdentity = "ses:VerifyEmailIdentity"
    }
    shield = {
      AllActions = "shield:*"
      AssociateDRTLogBucket = "shield:AssociateDRTLogBucket"
      AssociateDRTRole = "shield:AssociateDRTRole"
      AssociateHealthCheck = "shield:AssociateHealthCheck"
      AssociateProactiveEngagementDetails = "shield:AssociateProactiveEngagementDetails"
      CreateProtection = "shield:CreateProtection"
      CreateProtectionGroup = "shield:CreateProtectionGroup"
      CreateSubscription = "shield:CreateSubscription"
      DeleteProtection = "shield:DeleteProtection"
      DeleteProtectionGroup = "shield:DeleteProtectionGroup"
      DeleteSubscription = "shield:DeleteSubscription"
      DescribeAttack = "shield:DescribeAttack"
      DescribeAttackStatistics = "shield:DescribeAttackStatistics"
      DescribeDRTAccess = "shield:DescribeDRTAccess"
      DescribeEmergencyContactSettings = "shield:DescribeEmergencyContactSettings"
      DescribeProtection = "shield:DescribeProtection"
      DescribeProtectionGroup = "shield:DescribeProtectionGroup"
      DescribeSubscription = "shield:DescribeSubscription"
      DisableApplicationLayerAutomaticResponse = "shield:DisableApplicationLayerAutomaticResponse"
      DisableProactiveEngagement = "shield:DisableProactiveEngagement"
      DisassociateDRTLogBucket = "shield:DisassociateDRTLogBucket"
      DisassociateDRTRole = "shield:DisassociateDRTRole"
      DisassociateHealthCheck = "shield:DisassociateHealthCheck"
      EnableApplicationLayerAutomaticResponse = "shield:EnableApplicationLayerAutomaticResponse"
      EnableProactiveEngagement = "shield:EnableProactiveEngagement"
      GetSubscriptionState = "shield:GetSubscriptionState"
      ListAttacks = "shield:ListAttacks"
      ListProtectionGroups = "shield:ListProtectionGroups"
      ListProtections = "shield:ListProtections"
      ListResourcesInProtectionGroup = "shield:ListResourcesInProtectionGroup"
      ListTagsForResource = "shield:ListTagsForResource"
      TagResource = "shield:TagResource"
      UntagResource = "shield:UntagResource"
      UpdateApplicationLayerAutomaticResponse = "shield:UpdateApplicationLayerAutomaticResponse"
      UpdateEmergencyContactSettings = "shield:UpdateEmergencyContactSettings"
      UpdateProtectionGroup = "shield:UpdateProtectionGroup"
      UpdateSubscription = "shield:UpdateSubscription"
    }
    signer = {
      AllActions = "signer:*"
      AddProfilePermission = "signer:AddProfilePermission"
      CancelSigningProfile = "signer:CancelSigningProfile"
      DescribeSigningJob = "signer:DescribeSigningJob"
      GetRevocationStatus = "signer:GetRevocationStatus"
      GetSigningPlatform = "signer:GetSigningPlatform"
      GetSigningProfile = "signer:GetSigningProfile"
      ListProfilePermissions = "signer:ListProfilePermissions"
      ListSigningJobs = "signer:ListSigningJobs"
      ListSigningPlatforms = "signer:ListSigningPlatforms"
      ListSigningProfiles = "signer:ListSigningProfiles"
      ListTagsForResource = "signer:ListTagsForResource"
      PutSigningProfile = "signer:PutSigningProfile"
      RemoveProfilePermission = "signer:RemoveProfilePermission"
      RevokeSignature = "signer:RevokeSignature"
      RevokeSigningProfile = "signer:RevokeSigningProfile"
      SignPayload = "signer:SignPayload"
      StartSigningJob = "signer:StartSigningJob"
      TagResource = "signer:TagResource"
      UntagResource = "signer:UntagResource"
    }
    signin = {
      AllActions = "signin:*"
      CreateTrustedIdentityPropagationApplicationForConsole = "signin:CreateTrustedIdentityPropagationApplicationForConsole"
      ListTrustedIdentityPropagationApplicationsForConsole = "signin:ListTrustedIdentityPropagationApplicationsForConsole"
    }
    simspaceweaver = {
      AllActions = "simspaceweaver:*"
      CreateSnapshot = "simspaceweaver:CreateSnapshot"
      DeleteApp = "simspaceweaver:DeleteApp"
      DeleteSimulation = "simspaceweaver:DeleteSimulation"
      DescribeApp = "simspaceweaver:DescribeApp"
      DescribeSimulation = "simspaceweaver:DescribeSimulation"
      ListApps = "simspaceweaver:ListApps"
      ListSimulations = "simspaceweaver:ListSimulations"
      ListTagsForResource = "simspaceweaver:ListTagsForResource"
      StartApp = "simspaceweaver:StartApp"
      StartClock = "simspaceweaver:StartClock"
      StartSimulation = "simspaceweaver:StartSimulation"
      StopApp = "simspaceweaver:StopApp"
      StopClock = "simspaceweaver:StopClock"
      StopSimulation = "simspaceweaver:StopSimulation"
      TagResource = "simspaceweaver:TagResource"
      UntagResource = "simspaceweaver:UntagResource"
    }
    sms-voice = {
      AllActions = "sms-voice:*"
      AssociateOriginationIdentity = "sms-voice:AssociateOriginationIdentity"
      AssociateProtectConfiguration = "sms-voice:AssociateProtectConfiguration"
      CreateConfigurationSet = "sms-voice:CreateConfigurationSet"
      CreateConfigurationSetEventDestination = "sms-voice:CreateConfigurationSetEventDestination"
      CreateEventDestination = "sms-voice:CreateEventDestination"
      CreateOptOutList = "sms-voice:CreateOptOutList"
      CreatePool = "sms-voice:CreatePool"
      CreateProtectConfiguration = "sms-voice:CreateProtectConfiguration"
      CreateRegistration = "sms-voice:CreateRegistration"
      CreateRegistrationAssociation = "sms-voice:CreateRegistrationAssociation"
      CreateRegistrationAttachment = "sms-voice:CreateRegistrationAttachment"
      CreateRegistrationVersion = "sms-voice:CreateRegistrationVersion"
      CreateVerifiedDestinationNumber = "sms-voice:CreateVerifiedDestinationNumber"
      DeleteAccountDefaultProtectConfiguration = "sms-voice:DeleteAccountDefaultProtectConfiguration"
      DeleteConfigurationSet = "sms-voice:DeleteConfigurationSet"
      DeleteConfigurationSetEventDestination = "sms-voice:DeleteConfigurationSetEventDestination"
      DeleteDefaultMessageType = "sms-voice:DeleteDefaultMessageType"
      DeleteDefaultSenderId = "sms-voice:DeleteDefaultSenderId"
      DeleteEventDestination = "sms-voice:DeleteEventDestination"
      DeleteKeyword = "sms-voice:DeleteKeyword"
      DeleteMediaMessageSpendLimitOverride = "sms-voice:DeleteMediaMessageSpendLimitOverride"
      DeleteOptOutList = "sms-voice:DeleteOptOutList"
      DeleteOptedOutNumber = "sms-voice:DeleteOptedOutNumber"
      DeletePool = "sms-voice:DeletePool"
      DeleteProtectConfiguration = "sms-voice:DeleteProtectConfiguration"
      DeleteRegistration = "sms-voice:DeleteRegistration"
      DeleteRegistrationAttachment = "sms-voice:DeleteRegistrationAttachment"
      DeleteRegistrationFieldValue = "sms-voice:DeleteRegistrationFieldValue"
      DeleteTextMessageSpendLimitOverride = "sms-voice:DeleteTextMessageSpendLimitOverride"
      DeleteVerifiedDestinationNumber = "sms-voice:DeleteVerifiedDestinationNumber"
      DeleteVoiceMessageSpendLimitOverride = "sms-voice:DeleteVoiceMessageSpendLimitOverride"
      DescribeAccountAttributes = "sms-voice:DescribeAccountAttributes"
      DescribeAccountLimits = "sms-voice:DescribeAccountLimits"
      DescribeConfigurationSets = "sms-voice:DescribeConfigurationSets"
      DescribeKeywords = "sms-voice:DescribeKeywords"
      DescribeOptOutLists = "sms-voice:DescribeOptOutLists"
      DescribeOptedOutNumbers = "sms-voice:DescribeOptedOutNumbers"
      DescribePhoneNumbers = "sms-voice:DescribePhoneNumbers"
      DescribePools = "sms-voice:DescribePools"
      DescribeProtectConfigurations = "sms-voice:DescribeProtectConfigurations"
      DescribeRegistrationAttachments = "sms-voice:DescribeRegistrationAttachments"
      DescribeRegistrationFieldDefinitions = "sms-voice:DescribeRegistrationFieldDefinitions"
      DescribeRegistrationFieldValues = "sms-voice:DescribeRegistrationFieldValues"
      DescribeRegistrationSectionDefinitions = "sms-voice:DescribeRegistrationSectionDefinitions"
      DescribeRegistrationTypeDefinitions = "sms-voice:DescribeRegistrationTypeDefinitions"
      DescribeRegistrationVersions = "sms-voice:DescribeRegistrationVersions"
      DescribeRegistrations = "sms-voice:DescribeRegistrations"
      DescribeSenderIds = "sms-voice:DescribeSenderIds"
      DescribeSpendLimits = "sms-voice:DescribeSpendLimits"
      DescribeVerifiedDestinationNumbers = "sms-voice:DescribeVerifiedDestinationNumbers"
      DisassociateOriginationIdentity = "sms-voice:DisassociateOriginationIdentity"
      DisassociateProtectConfiguration = "sms-voice:DisassociateProtectConfiguration"
      DiscardRegistrationVersion = "sms-voice:DiscardRegistrationVersion"
      GetConfigurationSetEventDestinations = "sms-voice:GetConfigurationSetEventDestinations"
      GetProtectConfigurationCountryRuleSet = "sms-voice:GetProtectConfigurationCountryRuleSet"
      ListConfigurationSets = "sms-voice:ListConfigurationSets"
      ListPoolOriginationIdentities = "sms-voice:ListPoolOriginationIdentities"
      ListRegistrationAssociations = "sms-voice:ListRegistrationAssociations"
      ListTagsForResource = "sms-voice:ListTagsForResource"
      PutKeyword = "sms-voice:PutKeyword"
      PutOptedOutNumber = "sms-voice:PutOptedOutNumber"
      PutRegistrationFieldValue = "sms-voice:PutRegistrationFieldValue"
      ReleasePhoneNumber = "sms-voice:ReleasePhoneNumber"
      ReleaseSenderId = "sms-voice:ReleaseSenderId"
      RequestPhoneNumber = "sms-voice:RequestPhoneNumber"
      RequestSenderId = "sms-voice:RequestSenderId"
      SendDestinationNumberVerificationCode = "sms-voice:SendDestinationNumberVerificationCode"
      SendMediaMessage = "sms-voice:SendMediaMessage"
      SendTextMessage = "sms-voice:SendTextMessage"
      SendVoiceMessage = "sms-voice:SendVoiceMessage"
      SetAccountDefaultProtectConfiguration = "sms-voice:SetAccountDefaultProtectConfiguration"
      SetDefaultMessageType = "sms-voice:SetDefaultMessageType"
      SetDefaultSenderId = "sms-voice:SetDefaultSenderId"
      SetMediaMessageSpendLimitOverride = "sms-voice:SetMediaMessageSpendLimitOverride"
      SetTextMessageSpendLimitOverride = "sms-voice:SetTextMessageSpendLimitOverride"
      SetVoiceMessageSpendLimitOverride = "sms-voice:SetVoiceMessageSpendLimitOverride"
      SubmitRegistrationVersion = "sms-voice:SubmitRegistrationVersion"
      TagResource = "sms-voice:TagResource"
      UntagResource = "sms-voice:UntagResource"
      UpdateConfigurationSetEventDestination = "sms-voice:UpdateConfigurationSetEventDestination"
      UpdateEventDestination = "sms-voice:UpdateEventDestination"
      UpdatePhoneNumber = "sms-voice:UpdatePhoneNumber"
      UpdatePool = "sms-voice:UpdatePool"
      UpdateProtectConfiguration = "sms-voice:UpdateProtectConfiguration"
      UpdateProtectConfigurationCountryRuleSet = "sms-voice:UpdateProtectConfigurationCountryRuleSet"
      UpdateSenderId = "sms-voice:UpdateSenderId"
      VerifyDestinationNumber = "sms-voice:VerifyDestinationNumber"
    }
    sms = {
      AllActions = "sms:*"
      CreateApp = "sms:CreateApp"
      CreateReplicationJob = "sms:CreateReplicationJob"
      DeleteApp = "sms:DeleteApp"
      DeleteAppLaunchConfiguration = "sms:DeleteAppLaunchConfiguration"
      DeleteAppReplicationConfiguration = "sms:DeleteAppReplicationConfiguration"
      DeleteAppValidationConfiguration = "sms:DeleteAppValidationConfiguration"
      DeleteReplicationJob = "sms:DeleteReplicationJob"
      DeleteServerCatalog = "sms:DeleteServerCatalog"
      DisassociateConnector = "sms:DisassociateConnector"
      GenerateChangeSet = "sms:GenerateChangeSet"
      GenerateTemplate = "sms:GenerateTemplate"
      GetApp = "sms:GetApp"
      GetAppLaunchConfiguration = "sms:GetAppLaunchConfiguration"
      GetAppReplicationConfiguration = "sms:GetAppReplicationConfiguration"
      GetAppValidationConfiguration = "sms:GetAppValidationConfiguration"
      GetAppValidationOutput = "sms:GetAppValidationOutput"
      GetConnectors = "sms:GetConnectors"
      GetMessages = "sms:GetMessages"
      GetReplicationJobs = "sms:GetReplicationJobs"
      GetReplicationRuns = "sms:GetReplicationRuns"
      GetServers = "sms:GetServers"
      ImportAppCatalog = "sms:ImportAppCatalog"
      ImportServerCatalog = "sms:ImportServerCatalog"
      LaunchApp = "sms:LaunchApp"
      ListApps = "sms:ListApps"
      NotifyAppValidationOutput = "sms:NotifyAppValidationOutput"
      PutAppLaunchConfiguration = "sms:PutAppLaunchConfiguration"
      PutAppReplicationConfiguration = "sms:PutAppReplicationConfiguration"
      PutAppValidationConfiguration = "sms:PutAppValidationConfiguration"
      SendMessage = "sms:SendMessage"
      StartAppReplication = "sms:StartAppReplication"
      StartOnDemandAppReplication = "sms:StartOnDemandAppReplication"
      StartOnDemandReplicationRun = "sms:StartOnDemandReplicationRun"
      StopAppReplication = "sms:StopAppReplication"
      TerminateApp = "sms:TerminateApp"
      UpdateApp = "sms:UpdateApp"
      UpdateReplicationJob = "sms:UpdateReplicationJob"
    }
    snow-device-management = {
      AllActions = "snow-device-management:*"
      CancelTask = "snow-device-management:CancelTask"
      CreateTask = "snow-device-management:CreateTask"
      DescribeDevice = "snow-device-management:DescribeDevice"
      DescribeDeviceEc2Instances = "snow-device-management:DescribeDeviceEc2Instances"
      DescribeExecution = "snow-device-management:DescribeExecution"
      DescribeTask = "snow-device-management:DescribeTask"
      ListDeviceResources = "snow-device-management:ListDeviceResources"
      ListDevices = "snow-device-management:ListDevices"
      ListExecutions = "snow-device-management:ListExecutions"
      ListTagsForResource = "snow-device-management:ListTagsForResource"
      ListTasks = "snow-device-management:ListTasks"
      TagResource = "snow-device-management:TagResource"
      UntagResource = "snow-device-management:UntagResource"
    }
    snowball = {
      AllActions = "snowball:*"
      CancelCluster = "snowball:CancelCluster"
      CancelJob = "snowball:CancelJob"
      CreateAddress = "snowball:CreateAddress"
      CreateCluster = "snowball:CreateCluster"
      CreateJob = "snowball:CreateJob"
      CreateLongTermPricing = "snowball:CreateLongTermPricing"
      CreateReturnShippingLabel = "snowball:CreateReturnShippingLabel"
      DescribeAddress = "snowball:DescribeAddress"
      DescribeAddresses = "snowball:DescribeAddresses"
      DescribeCluster = "snowball:DescribeCluster"
      DescribeJob = "snowball:DescribeJob"
      DescribeReturnShippingLabel = "snowball:DescribeReturnShippingLabel"
      GetJobManifest = "snowball:GetJobManifest"
      GetJobUnlockCode = "snowball:GetJobUnlockCode"
      GetSnowballUsage = "snowball:GetSnowballUsage"
      GetSoftwareUpdates = "snowball:GetSoftwareUpdates"
      ListClusterJobs = "snowball:ListClusterJobs"
      ListClusters = "snowball:ListClusters"
      ListCompatibleImages = "snowball:ListCompatibleImages"
      ListJobs = "snowball:ListJobs"
      ListLongTermPricing = "snowball:ListLongTermPricing"
      ListPickupLocations = "snowball:ListPickupLocations"
      ListServiceVersions = "snowball:ListServiceVersions"
      UpdateCluster = "snowball:UpdateCluster"
      UpdateJob = "snowball:UpdateJob"
      UpdateJobShipmentState = "snowball:UpdateJobShipmentState"
      UpdateLongTermPricing = "snowball:UpdateLongTermPricing"
    }
    sns = {
      AllActions = "sns:*"
      AddPermission = "sns:AddPermission"
      CheckIfPhoneNumberIsOptedOut = "sns:CheckIfPhoneNumberIsOptedOut"
      ConfirmSubscription = "sns:ConfirmSubscription"
      CreatePlatformApplication = "sns:CreatePlatformApplication"
      CreatePlatformEndpoint = "sns:CreatePlatformEndpoint"
      CreateSMSSandboxPhoneNumber = "sns:CreateSMSSandboxPhoneNumber"
      CreateTopic = "sns:CreateTopic"
      DeleteEndpoint = "sns:DeleteEndpoint"
      DeletePlatformApplication = "sns:DeletePlatformApplication"
      DeleteSMSSandboxPhoneNumber = "sns:DeleteSMSSandboxPhoneNumber"
      DeleteTopic = "sns:DeleteTopic"
      GetDataProtectionPolicy = "sns:GetDataProtectionPolicy"
      GetEndpointAttributes = "sns:GetEndpointAttributes"
      GetPlatformApplicationAttributes = "sns:GetPlatformApplicationAttributes"
      GetSMSAttributes = "sns:GetSMSAttributes"
      GetSMSSandboxAccountStatus = "sns:GetSMSSandboxAccountStatus"
      GetSubscriptionAttributes = "sns:GetSubscriptionAttributes"
      GetTopicAttributes = "sns:GetTopicAttributes"
      ListEndpointsByPlatformApplication = "sns:ListEndpointsByPlatformApplication"
      ListOriginationNumbers = "sns:ListOriginationNumbers"
      ListPhoneNumbersOptedOut = "sns:ListPhoneNumbersOptedOut"
      ListPlatformApplications = "sns:ListPlatformApplications"
      ListSMSSandboxPhoneNumbers = "sns:ListSMSSandboxPhoneNumbers"
      ListSubscriptions = "sns:ListSubscriptions"
      ListSubscriptionsByTopic = "sns:ListSubscriptionsByTopic"
      ListTagsForResource = "sns:ListTagsForResource"
      ListTopics = "sns:ListTopics"
      OptInPhoneNumber = "sns:OptInPhoneNumber"
      Publish = "sns:Publish"
      PutDataProtectionPolicy = "sns:PutDataProtectionPolicy"
      RemovePermission = "sns:RemovePermission"
      SetEndpointAttributes = "sns:SetEndpointAttributes"
      SetPlatformApplicationAttributes = "sns:SetPlatformApplicationAttributes"
      SetSMSAttributes = "sns:SetSMSAttributes"
      SetSubscriptionAttributes = "sns:SetSubscriptionAttributes"
      SetTopicAttributes = "sns:SetTopicAttributes"
      Subscribe = "sns:Subscribe"
      TagResource = "sns:TagResource"
      Unsubscribe = "sns:Unsubscribe"
      UntagResource = "sns:UntagResource"
      VerifySMSSandboxPhoneNumber = "sns:VerifySMSSandboxPhoneNumber"
    }
    sqlworkbench = {
      AllActions = "sqlworkbench:*"
      AssociateConnectionWithChart = "sqlworkbench:AssociateConnectionWithChart"
      AssociateConnectionWithTab = "sqlworkbench:AssociateConnectionWithTab"
      AssociateNotebookWithTab = "sqlworkbench:AssociateNotebookWithTab"
      AssociateQueryWithTab = "sqlworkbench:AssociateQueryWithTab"
      BatchDeleteFolder = "sqlworkbench:BatchDeleteFolder"
      BatchGetNotebookCell = "sqlworkbench:BatchGetNotebookCell"
      CreateAccount = "sqlworkbench:CreateAccount"
      CreateChart = "sqlworkbench:CreateChart"
      CreateConnection = "sqlworkbench:CreateConnection"
      CreateFolder = "sqlworkbench:CreateFolder"
      CreateNotebook = "sqlworkbench:CreateNotebook"
      CreateNotebookCell = "sqlworkbench:CreateNotebookCell"
      CreateNotebookFromVersion = "sqlworkbench:CreateNotebookFromVersion"
      CreateNotebookVersion = "sqlworkbench:CreateNotebookVersion"
      CreateSavedQuery = "sqlworkbench:CreateSavedQuery"
      DeleteChart = "sqlworkbench:DeleteChart"
      DeleteConnection = "sqlworkbench:DeleteConnection"
      DeleteNotebook = "sqlworkbench:DeleteNotebook"
      DeleteNotebookCell = "sqlworkbench:DeleteNotebookCell"
      DeleteNotebookVersion = "sqlworkbench:DeleteNotebookVersion"
      DeleteSavedQuery = "sqlworkbench:DeleteSavedQuery"
      DeleteTab = "sqlworkbench:DeleteTab"
      DriverExecute = "sqlworkbench:DriverExecute"
      DuplicateNotebook = "sqlworkbench:DuplicateNotebook"
      ExportNotebook = "sqlworkbench:ExportNotebook"
      GenerateSession = "sqlworkbench:GenerateSession"
      GetAccountInfo = "sqlworkbench:GetAccountInfo"
      GetAccountSettings = "sqlworkbench:GetAccountSettings"
      GetAutocompletionMetadata = "sqlworkbench:GetAutocompletionMetadata"
      GetAutocompletionResource = "sqlworkbench:GetAutocompletionResource"
      GetChart = "sqlworkbench:GetChart"
      GetConnection = "sqlworkbench:GetConnection"
      GetNotebook = "sqlworkbench:GetNotebook"
      GetNotebookVersion = "sqlworkbench:GetNotebookVersion"
      GetQSqlRecommendations = "sqlworkbench:GetQSqlRecommendations"
      GetQueryExecutionHistory = "sqlworkbench:GetQueryExecutionHistory"
      GetSavedQuery = "sqlworkbench:GetSavedQuery"
      GetSchemaInference = "sqlworkbench:GetSchemaInference"
      GetUserInfo = "sqlworkbench:GetUserInfo"
      GetUserWorkspaceSettings = "sqlworkbench:GetUserWorkspaceSettings"
      ImportNotebook = "sqlworkbench:ImportNotebook"
      ListConnections = "sqlworkbench:ListConnections"
      ListDatabases = "sqlworkbench:ListDatabases"
      ListFiles = "sqlworkbench:ListFiles"
      ListNotebookVersions = "sqlworkbench:ListNotebookVersions"
      ListNotebooks = "sqlworkbench:ListNotebooks"
      ListQueryExecutionHistory = "sqlworkbench:ListQueryExecutionHistory"
      ListRedshiftClusters = "sqlworkbench:ListRedshiftClusters"
      ListSampleDatabases = "sqlworkbench:ListSampleDatabases"
      ListSavedQueryVersions = "sqlworkbench:ListSavedQueryVersions"
      ListTabs = "sqlworkbench:ListTabs"
      ListTaggedResources = "sqlworkbench:ListTaggedResources"
      ListTagsForResource = "sqlworkbench:ListTagsForResource"
      PutTab = "sqlworkbench:PutTab"
      PutUserWorkspaceSettings = "sqlworkbench:PutUserWorkspaceSettings"
      RestoreNotebookVersion = "sqlworkbench:RestoreNotebookVersion"
      TagResource = "sqlworkbench:TagResource"
      UntagResource = "sqlworkbench:UntagResource"
      UpdateAccountConnectionSettings = "sqlworkbench:UpdateAccountConnectionSettings"
      UpdateAccountExportSettings = "sqlworkbench:UpdateAccountExportSettings"
      UpdateAccountGeneralSettings = "sqlworkbench:UpdateAccountGeneralSettings"
      UpdateAccountQSqlSettings = "sqlworkbench:UpdateAccountQSqlSettings"
      UpdateChart = "sqlworkbench:UpdateChart"
      UpdateConnection = "sqlworkbench:UpdateConnection"
      UpdateFileFolder = "sqlworkbench:UpdateFileFolder"
      UpdateFolder = "sqlworkbench:UpdateFolder"
      UpdateNotebook = "sqlworkbench:UpdateNotebook"
      UpdateNotebookCellContent = "sqlworkbench:UpdateNotebookCellContent"
      UpdateNotebookCellLayout = "sqlworkbench:UpdateNotebookCellLayout"
      UpdateSavedQuery = "sqlworkbench:UpdateSavedQuery"
    }
    sqs = {
      AllActions = "sqs:*"
      AddPermission = "sqs:AddPermission"
      CancelMessageMoveTask = "sqs:CancelMessageMoveTask"
      ChangeMessageVisibility = "sqs:ChangeMessageVisibility"
      CreateQueue = "sqs:CreateQueue"
      DeleteMessage = "sqs:DeleteMessage"
      DeleteQueue = "sqs:DeleteQueue"
      GetQueueAttributes = "sqs:GetQueueAttributes"
      GetQueueUrl = "sqs:GetQueueUrl"
      ListDeadLetterSourceQueues = "sqs:ListDeadLetterSourceQueues"
      ListMessageMoveTasks = "sqs:ListMessageMoveTasks"
      ListQueueTags = "sqs:ListQueueTags"
      ListQueues = "sqs:ListQueues"
      PurgeQueue = "sqs:PurgeQueue"
      ReceiveMessage = "sqs:ReceiveMessage"
      RemovePermission = "sqs:RemovePermission"
      SendMessage = "sqs:SendMessage"
      SetQueueAttributes = "sqs:SetQueueAttributes"
      StartMessageMoveTask = "sqs:StartMessageMoveTask"
      TagQueue = "sqs:TagQueue"
      UntagQueue = "sqs:UntagQueue"
    }
    ssm-contacts = {
      AllActions = "ssm-contacts:*"
      AcceptPage = "ssm-contacts:AcceptPage"
      ActivateContactChannel = "ssm-contacts:ActivateContactChannel"
      AssociateContact = "ssm-contacts:AssociateContact"
      CreateContact = "ssm-contacts:CreateContact"
      CreateContactChannel = "ssm-contacts:CreateContactChannel"
      CreateRotation = "ssm-contacts:CreateRotation"
      CreateRotationOverride = "ssm-contacts:CreateRotationOverride"
      DeactivateContactChannel = "ssm-contacts:DeactivateContactChannel"
      DeleteContact = "ssm-contacts:DeleteContact"
      DeleteContactChannel = "ssm-contacts:DeleteContactChannel"
      DeleteRotation = "ssm-contacts:DeleteRotation"
      DeleteRotationOverride = "ssm-contacts:DeleteRotationOverride"
      DescribeEngagement = "ssm-contacts:DescribeEngagement"
      DescribePage = "ssm-contacts:DescribePage"
      GetContact = "ssm-contacts:GetContact"
      GetContactChannel = "ssm-contacts:GetContactChannel"
      GetContactPolicy = "ssm-contacts:GetContactPolicy"
      GetRotation = "ssm-contacts:GetRotation"
      GetRotationOverride = "ssm-contacts:GetRotationOverride"
      ListContactChannels = "ssm-contacts:ListContactChannels"
      ListContacts = "ssm-contacts:ListContacts"
      ListEngagements = "ssm-contacts:ListEngagements"
      ListPageReceipts = "ssm-contacts:ListPageReceipts"
      ListPageResolutions = "ssm-contacts:ListPageResolutions"
      ListPagesByContact = "ssm-contacts:ListPagesByContact"
      ListPagesByEngagement = "ssm-contacts:ListPagesByEngagement"
      ListPreviewRotationShifts = "ssm-contacts:ListPreviewRotationShifts"
      ListRotationOverrides = "ssm-contacts:ListRotationOverrides"
      ListRotationShifts = "ssm-contacts:ListRotationShifts"
      ListRotations = "ssm-contacts:ListRotations"
      ListTagsForResource = "ssm-contacts:ListTagsForResource"
      PutContactPolicy = "ssm-contacts:PutContactPolicy"
      SendActivationCode = "ssm-contacts:SendActivationCode"
      StartEngagement = "ssm-contacts:StartEngagement"
      StopEngagement = "ssm-contacts:StopEngagement"
      TagResource = "ssm-contacts:TagResource"
      UntagResource = "ssm-contacts:UntagResource"
      UpdateContact = "ssm-contacts:UpdateContact"
      UpdateContactChannel = "ssm-contacts:UpdateContactChannel"
      UpdateRotation = "ssm-contacts:UpdateRotation"
    }
    ssm-guiconnect = {
      AllActions = "ssm-guiconnect:*"
      CancelConnection = "ssm-guiconnect:CancelConnection"
      GetConnection = "ssm-guiconnect:GetConnection"
      StartConnection = "ssm-guiconnect:StartConnection"
    }
    ssm-incidents = {
      AllActions = "ssm-incidents:*"
      BatchGetIncidentFindings = "ssm-incidents:BatchGetIncidentFindings"
      CreateReplicationSet = "ssm-incidents:CreateReplicationSet"
      CreateResponsePlan = "ssm-incidents:CreateResponsePlan"
      CreateTimelineEvent = "ssm-incidents:CreateTimelineEvent"
      DeleteIncidentRecord = "ssm-incidents:DeleteIncidentRecord"
      DeleteReplicationSet = "ssm-incidents:DeleteReplicationSet"
      DeleteResourcePolicy = "ssm-incidents:DeleteResourcePolicy"
      DeleteResponsePlan = "ssm-incidents:DeleteResponsePlan"
      DeleteTimelineEvent = "ssm-incidents:DeleteTimelineEvent"
      GetIncidentRecord = "ssm-incidents:GetIncidentRecord"
      GetReplicationSet = "ssm-incidents:GetReplicationSet"
      GetResourcePolicies = "ssm-incidents:GetResourcePolicies"
      GetResponsePlan = "ssm-incidents:GetResponsePlan"
      GetTimelineEvent = "ssm-incidents:GetTimelineEvent"
      ListIncidentFindings = "ssm-incidents:ListIncidentFindings"
      ListIncidentRecords = "ssm-incidents:ListIncidentRecords"
      ListRelatedItems = "ssm-incidents:ListRelatedItems"
      ListReplicationSets = "ssm-incidents:ListReplicationSets"
      ListResponsePlans = "ssm-incidents:ListResponsePlans"
      ListTagsForResource = "ssm-incidents:ListTagsForResource"
      ListTimelineEvents = "ssm-incidents:ListTimelineEvents"
      PutResourcePolicy = "ssm-incidents:PutResourcePolicy"
      StartIncident = "ssm-incidents:StartIncident"
      TagResource = "ssm-incidents:TagResource"
      UntagResource = "ssm-incidents:UntagResource"
      UpdateDeletionProtection = "ssm-incidents:UpdateDeletionProtection"
      UpdateIncidentRecord = "ssm-incidents:UpdateIncidentRecord"
      UpdateRelatedItems = "ssm-incidents:UpdateRelatedItems"
      UpdateReplicationSet = "ssm-incidents:UpdateReplicationSet"
      UpdateResponsePlan = "ssm-incidents:UpdateResponsePlan"
      UpdateTimelineEvent = "ssm-incidents:UpdateTimelineEvent"
    }
    ssm-sap = {
      AllActions = "ssm-sap:*"
      BackupDatabase = "ssm-sap:BackupDatabase"
      DeleteResourcePermission = "ssm-sap:DeleteResourcePermission"
      DeregisterApplication = "ssm-sap:DeregisterApplication"
      GetApplication = "ssm-sap:GetApplication"
      GetComponent = "ssm-sap:GetComponent"
      GetDatabase = "ssm-sap:GetDatabase"
      GetOperation = "ssm-sap:GetOperation"
      GetResourcePermission = "ssm-sap:GetResourcePermission"
      ListApplications = "ssm-sap:ListApplications"
      ListComponents = "ssm-sap:ListComponents"
      ListDatabases = "ssm-sap:ListDatabases"
      ListOperationEvents = "ssm-sap:ListOperationEvents"
      ListOperations = "ssm-sap:ListOperations"
      ListTagsForResource = "ssm-sap:ListTagsForResource"
      PutResourcePermission = "ssm-sap:PutResourcePermission"
      RegisterApplication = "ssm-sap:RegisterApplication"
      RestoreDatabase = "ssm-sap:RestoreDatabase"
      StartApplication = "ssm-sap:StartApplication"
      StartApplicationRefresh = "ssm-sap:StartApplicationRefresh"
      StopApplication = "ssm-sap:StopApplication"
      TagResource = "ssm-sap:TagResource"
      UntagResource = "ssm-sap:UntagResource"
      UpdateApplicationSettings = "ssm-sap:UpdateApplicationSettings"
      UpdateHANABackupSettings = "ssm-sap:UpdateHANABackupSettings"
    }
    ssm = {
      AllActions = "ssm:*"
      AddTagsToResource = "ssm:AddTagsToResource"
      AssociateOpsItemRelatedItem = "ssm:AssociateOpsItemRelatedItem"
      CancelCommand = "ssm:CancelCommand"
      CancelMaintenanceWindowExecution = "ssm:CancelMaintenanceWindowExecution"
      CreateActivation = "ssm:CreateActivation"
      CreateAssociation = "ssm:CreateAssociation"
      CreateAssociationBatch = "ssm:CreateAssociationBatch"
      CreateDocument = "ssm:CreateDocument"
      CreateMaintenanceWindow = "ssm:CreateMaintenanceWindow"
      CreateOpsItem = "ssm:CreateOpsItem"
      CreateOpsMetadata = "ssm:CreateOpsMetadata"
      CreatePatchBaseline = "ssm:CreatePatchBaseline"
      CreateResourceDataSync = "ssm:CreateResourceDataSync"
      DeleteActivation = "ssm:DeleteActivation"
      DeleteAssociation = "ssm:DeleteAssociation"
      DeleteDocument = "ssm:DeleteDocument"
      DeleteInventory = "ssm:DeleteInventory"
      DeleteMaintenanceWindow = "ssm:DeleteMaintenanceWindow"
      DeleteOpsItem = "ssm:DeleteOpsItem"
      DeleteOpsMetadata = "ssm:DeleteOpsMetadata"
      DeleteParameter = "ssm:DeleteParameter"
      DeleteParameters = "ssm:DeleteParameters"
      DeletePatchBaseline = "ssm:DeletePatchBaseline"
      DeleteResourceDataSync = "ssm:DeleteResourceDataSync"
      DeleteResourcePolicy = "ssm:DeleteResourcePolicy"
      DeregisterManagedInstance = "ssm:DeregisterManagedInstance"
      DeregisterPatchBaselineForPatchGroup = "ssm:DeregisterPatchBaselineForPatchGroup"
      DeregisterTargetFromMaintenanceWindow = "ssm:DeregisterTargetFromMaintenanceWindow"
      DeregisterTaskFromMaintenanceWindow = "ssm:DeregisterTaskFromMaintenanceWindow"
      DescribeActivations = "ssm:DescribeActivations"
      DescribeAssociation = "ssm:DescribeAssociation"
      DescribeAssociationExecutionTargets = "ssm:DescribeAssociationExecutionTargets"
      DescribeAssociationExecutions = "ssm:DescribeAssociationExecutions"
      DescribeAutomationExecutions = "ssm:DescribeAutomationExecutions"
      DescribeAutomationStepExecutions = "ssm:DescribeAutomationStepExecutions"
      DescribeAvailablePatches = "ssm:DescribeAvailablePatches"
      DescribeDocument = "ssm:DescribeDocument"
      DescribeDocumentParameters = "ssm:DescribeDocumentParameters"
      DescribeDocumentPermission = "ssm:DescribeDocumentPermission"
      DescribeEffectiveInstanceAssociations = "ssm:DescribeEffectiveInstanceAssociations"
      DescribeEffectivePatchesForPatchBaseline = "ssm:DescribeEffectivePatchesForPatchBaseline"
      DescribeInstanceAssociationsStatus = "ssm:DescribeInstanceAssociationsStatus"
      DescribeInstanceInformation = "ssm:DescribeInstanceInformation"
      DescribeInstancePatchStates = "ssm:DescribeInstancePatchStates"
      DescribeInstancePatchStatesForPatchGroup = "ssm:DescribeInstancePatchStatesForPatchGroup"
      DescribeInstancePatches = "ssm:DescribeInstancePatches"
      DescribeInstanceProperties = "ssm:DescribeInstanceProperties"
      DescribeInventoryDeletions = "ssm:DescribeInventoryDeletions"
      DescribeMaintenanceWindowExecutionTaskInvocations = "ssm:DescribeMaintenanceWindowExecutionTaskInvocations"
      DescribeMaintenanceWindowExecutionTasks = "ssm:DescribeMaintenanceWindowExecutionTasks"
      DescribeMaintenanceWindowExecutions = "ssm:DescribeMaintenanceWindowExecutions"
      DescribeMaintenanceWindowSchedule = "ssm:DescribeMaintenanceWindowSchedule"
      DescribeMaintenanceWindowTargets = "ssm:DescribeMaintenanceWindowTargets"
      DescribeMaintenanceWindowTasks = "ssm:DescribeMaintenanceWindowTasks"
      DescribeMaintenanceWindows = "ssm:DescribeMaintenanceWindows"
      DescribeMaintenanceWindowsForTarget = "ssm:DescribeMaintenanceWindowsForTarget"
      DescribeOpsItems = "ssm:DescribeOpsItems"
      DescribeParameters = "ssm:DescribeParameters"
      DescribePatchBaselines = "ssm:DescribePatchBaselines"
      DescribePatchGroupState = "ssm:DescribePatchGroupState"
      DescribePatchGroups = "ssm:DescribePatchGroups"
      DescribePatchProperties = "ssm:DescribePatchProperties"
      DescribeSessions = "ssm:DescribeSessions"
      DisassociateOpsItemRelatedItem = "ssm:DisassociateOpsItemRelatedItem"
      GetAutomationExecution = "ssm:GetAutomationExecution"
      GetCalendar = "ssm:GetCalendar"
      GetCalendarState = "ssm:GetCalendarState"
      GetCommandInvocation = "ssm:GetCommandInvocation"
      GetConnectionStatus = "ssm:GetConnectionStatus"
      GetDefaultPatchBaseline = "ssm:GetDefaultPatchBaseline"
      GetDeployablePatchSnapshotForInstance = "ssm:GetDeployablePatchSnapshotForInstance"
      GetDocument = "ssm:GetDocument"
      GetInventory = "ssm:GetInventory"
      GetInventorySchema = "ssm:GetInventorySchema"
      GetMaintenanceWindow = "ssm:GetMaintenanceWindow"
      GetMaintenanceWindowExecution = "ssm:GetMaintenanceWindowExecution"
      GetMaintenanceWindowExecutionTask = "ssm:GetMaintenanceWindowExecutionTask"
      GetMaintenanceWindowExecutionTaskInvocation = "ssm:GetMaintenanceWindowExecutionTaskInvocation"
      GetMaintenanceWindowTask = "ssm:GetMaintenanceWindowTask"
      GetManifest = "ssm:GetManifest"
      GetOpsItem = "ssm:GetOpsItem"
      GetOpsMetadata = "ssm:GetOpsMetadata"
      GetOpsSummary = "ssm:GetOpsSummary"
      GetParameter = "ssm:GetParameter"
      GetParameterHistory = "ssm:GetParameterHistory"
      GetParameters = "ssm:GetParameters"
      GetParametersByPath = "ssm:GetParametersByPath"
      GetPatchBaseline = "ssm:GetPatchBaseline"
      GetPatchBaselineForPatchGroup = "ssm:GetPatchBaselineForPatchGroup"
      GetResourcePolicies = "ssm:GetResourcePolicies"
      GetServiceSetting = "ssm:GetServiceSetting"
      LabelParameterVersion = "ssm:LabelParameterVersion"
      ListAssociationVersions = "ssm:ListAssociationVersions"
      ListAssociations = "ssm:ListAssociations"
      ListCommandInvocations = "ssm:ListCommandInvocations"
      ListCommands = "ssm:ListCommands"
      ListComplianceItems = "ssm:ListComplianceItems"
      ListComplianceSummaries = "ssm:ListComplianceSummaries"
      ListDocumentMetadataHistory = "ssm:ListDocumentMetadataHistory"
      ListDocumentVersions = "ssm:ListDocumentVersions"
      ListDocuments = "ssm:ListDocuments"
      ListInstanceAssociations = "ssm:ListInstanceAssociations"
      ListInventoryEntries = "ssm:ListInventoryEntries"
      ListOpsItemEvents = "ssm:ListOpsItemEvents"
      ListOpsItemRelatedItems = "ssm:ListOpsItemRelatedItems"
      ListOpsMetadata = "ssm:ListOpsMetadata"
      ListResourceComplianceSummaries = "ssm:ListResourceComplianceSummaries"
      ListResourceDataSync = "ssm:ListResourceDataSync"
      ListTagsForResource = "ssm:ListTagsForResource"
      ModifyDocumentPermission = "ssm:ModifyDocumentPermission"
      PutCalendar = "ssm:PutCalendar"
      PutComplianceItems = "ssm:PutComplianceItems"
      PutConfigurePackageResult = "ssm:PutConfigurePackageResult"
      PutInventory = "ssm:PutInventory"
      PutParameter = "ssm:PutParameter"
      PutResourcePolicy = "ssm:PutResourcePolicy"
      RegisterDefaultPatchBaseline = "ssm:RegisterDefaultPatchBaseline"
      RegisterManagedInstance = "ssm:RegisterManagedInstance"
      RegisterPatchBaselineForPatchGroup = "ssm:RegisterPatchBaselineForPatchGroup"
      RegisterTargetWithMaintenanceWindow = "ssm:RegisterTargetWithMaintenanceWindow"
      RegisterTaskWithMaintenanceWindow = "ssm:RegisterTaskWithMaintenanceWindow"
      RemoveTagsFromResource = "ssm:RemoveTagsFromResource"
      ResetServiceSetting = "ssm:ResetServiceSetting"
      ResumeSession = "ssm:ResumeSession"
      SendAutomationSignal = "ssm:SendAutomationSignal"
      SendCommand = "ssm:SendCommand"
      StartAssociationsOnce = "ssm:StartAssociationsOnce"
      StartAutomationExecution = "ssm:StartAutomationExecution"
      StartChangeRequestExecution = "ssm:StartChangeRequestExecution"
      StartSession = "ssm:StartSession"
      StopAutomationExecution = "ssm:StopAutomationExecution"
      TerminateSession = "ssm:TerminateSession"
      UnlabelParameterVersion = "ssm:UnlabelParameterVersion"
      UpdateAssociation = "ssm:UpdateAssociation"
      UpdateAssociationStatus = "ssm:UpdateAssociationStatus"
      UpdateDocument = "ssm:UpdateDocument"
      UpdateDocumentDefaultVersion = "ssm:UpdateDocumentDefaultVersion"
      UpdateDocumentMetadata = "ssm:UpdateDocumentMetadata"
      UpdateInstanceAssociationStatus = "ssm:UpdateInstanceAssociationStatus"
      UpdateInstanceInformation = "ssm:UpdateInstanceInformation"
      UpdateMaintenanceWindow = "ssm:UpdateMaintenanceWindow"
      UpdateMaintenanceWindowTarget = "ssm:UpdateMaintenanceWindowTarget"
      UpdateMaintenanceWindowTask = "ssm:UpdateMaintenanceWindowTask"
      UpdateManagedInstanceRole = "ssm:UpdateManagedInstanceRole"
      UpdateOpsItem = "ssm:UpdateOpsItem"
      UpdateOpsMetadata = "ssm:UpdateOpsMetadata"
      UpdatePatchBaseline = "ssm:UpdatePatchBaseline"
      UpdateResourceDataSync = "ssm:UpdateResourceDataSync"
      UpdateServiceSetting = "ssm:UpdateServiceSetting"
    }
    ssmmessages = {
      AllActions = "ssmmessages:*"
      CreateControlChannel = "ssmmessages:CreateControlChannel"
      CreateDataChannel = "ssmmessages:CreateDataChannel"
      OpenControlChannel = "ssmmessages:OpenControlChannel"
      OpenDataChannel = "ssmmessages:OpenDataChannel"
    }
    sso-directory = {
      AllActions = "sso-directory:*"
      AddMemberToGroup = "sso-directory:AddMemberToGroup"
      CompleteVirtualMfaDeviceRegistration = "sso-directory:CompleteVirtualMfaDeviceRegistration"
      CompleteWebAuthnDeviceRegistration = "sso-directory:CompleteWebAuthnDeviceRegistration"
      CreateAlias = "sso-directory:CreateAlias"
      CreateBearerToken = "sso-directory:CreateBearerToken"
      CreateExternalIdPConfigurationForDirectory = "sso-directory:CreateExternalIdPConfigurationForDirectory"
      CreateGroup = "sso-directory:CreateGroup"
      CreateProvisioningTenant = "sso-directory:CreateProvisioningTenant"
      CreateUser = "sso-directory:CreateUser"
      DeleteBearerToken = "sso-directory:DeleteBearerToken"
      DeleteExternalIdPCertificate = "sso-directory:DeleteExternalIdPCertificate"
      DeleteExternalIdPConfigurationForDirectory = "sso-directory:DeleteExternalIdPConfigurationForDirectory"
      DeleteGroup = "sso-directory:DeleteGroup"
      DeleteMfaDeviceForUser = "sso-directory:DeleteMfaDeviceForUser"
      DeleteProvisioningTenant = "sso-directory:DeleteProvisioningTenant"
      DeleteUser = "sso-directory:DeleteUser"
      DescribeDirectory = "sso-directory:DescribeDirectory"
      DescribeGroup = "sso-directory:DescribeGroup"
      DescribeGroups = "sso-directory:DescribeGroups"
      DescribeProvisioningTenant = "sso-directory:DescribeProvisioningTenant"
      DescribeUser = "sso-directory:DescribeUser"
      DescribeUserByUniqueAttribute = "sso-directory:DescribeUserByUniqueAttribute"
      DescribeUsers = "sso-directory:DescribeUsers"
      DisableExternalIdPConfigurationForDirectory = "sso-directory:DisableExternalIdPConfigurationForDirectory"
      DisableUser = "sso-directory:DisableUser"
      EnableExternalIdPConfigurationForDirectory = "sso-directory:EnableExternalIdPConfigurationForDirectory"
      EnableUser = "sso-directory:EnableUser"
      GetAWSSPConfigurationForDirectory = "sso-directory:GetAWSSPConfigurationForDirectory"
      GetUserPoolInfo = "sso-directory:GetUserPoolInfo"
      ImportExternalIdPCertificate = "sso-directory:ImportExternalIdPCertificate"
      IsMemberInGroup = "sso-directory:IsMemberInGroup"
      ListBearerTokens = "sso-directory:ListBearerTokens"
      ListExternalIdPCertificates = "sso-directory:ListExternalIdPCertificates"
      ListExternalIdPConfigurationsForDirectory = "sso-directory:ListExternalIdPConfigurationsForDirectory"
      ListGroupsForMember = "sso-directory:ListGroupsForMember"
      ListGroupsForUser = "sso-directory:ListGroupsForUser"
      ListMembersInGroup = "sso-directory:ListMembersInGroup"
      ListMfaDevicesForUser = "sso-directory:ListMfaDevicesForUser"
      ListProvisioningTenants = "sso-directory:ListProvisioningTenants"
      RemoveMemberFromGroup = "sso-directory:RemoveMemberFromGroup"
      SearchGroups = "sso-directory:SearchGroups"
      SearchUsers = "sso-directory:SearchUsers"
      StartVirtualMfaDeviceRegistration = "sso-directory:StartVirtualMfaDeviceRegistration"
      StartWebAuthnDeviceRegistration = "sso-directory:StartWebAuthnDeviceRegistration"
      UpdateExternalIdPConfigurationForDirectory = "sso-directory:UpdateExternalIdPConfigurationForDirectory"
      UpdateGroup = "sso-directory:UpdateGroup"
      UpdateGroupDisplayName = "sso-directory:UpdateGroupDisplayName"
      UpdateMfaDeviceForUser = "sso-directory:UpdateMfaDeviceForUser"
      UpdatePassword = "sso-directory:UpdatePassword"
      UpdateUser = "sso-directory:UpdateUser"
      UpdateUserName = "sso-directory:UpdateUserName"
      VerifyEmail = "sso-directory:VerifyEmail"
    }
    sso-oauth = {
      AllActions = "sso-oauth:*"
      CreateTokenWithIAM = "sso-oauth:CreateTokenWithIAM"
    }
    sso = {
      AllActions = "sso:*"
      AssociateDirectory = "sso:AssociateDirectory"
      AssociateProfile = "sso:AssociateProfile"
      AttachCustomerManagedPolicyReferenceToPermissionSet = "sso:AttachCustomerManagedPolicyReferenceToPermissionSet"
      AttachManagedPolicyToPermissionSet = "sso:AttachManagedPolicyToPermissionSet"
      CreateAccountAssignment = "sso:CreateAccountAssignment"
      CreateApplication = "sso:CreateApplication"
      CreateApplicationAssignment = "sso:CreateApplicationAssignment"
      CreateApplicationInstance = "sso:CreateApplicationInstance"
      CreateApplicationInstanceCertificate = "sso:CreateApplicationInstanceCertificate"
      CreateInstance = "sso:CreateInstance"
      CreateInstanceAccessControlAttributeConfiguration = "sso:CreateInstanceAccessControlAttributeConfiguration"
      CreateManagedApplicationInstance = "sso:CreateManagedApplicationInstance"
      CreatePermissionSet = "sso:CreatePermissionSet"
      CreateProfile = "sso:CreateProfile"
      CreateTrust = "sso:CreateTrust"
      CreateTrustedTokenIssuer = "sso:CreateTrustedTokenIssuer"
      DeleteAccountAssignment = "sso:DeleteAccountAssignment"
      DeleteApplication = "sso:DeleteApplication"
      DeleteApplicationAccessScope = "sso:DeleteApplicationAccessScope"
      DeleteApplicationAssignment = "sso:DeleteApplicationAssignment"
      DeleteApplicationAuthenticationMethod = "sso:DeleteApplicationAuthenticationMethod"
      DeleteApplicationGrant = "sso:DeleteApplicationGrant"
      DeleteApplicationInstance = "sso:DeleteApplicationInstance"
      DeleteApplicationInstanceCertificate = "sso:DeleteApplicationInstanceCertificate"
      DeleteInlinePolicyFromPermissionSet = "sso:DeleteInlinePolicyFromPermissionSet"
      DeleteInstance = "sso:DeleteInstance"
      DeleteInstanceAccessControlAttributeConfiguration = "sso:DeleteInstanceAccessControlAttributeConfiguration"
      DeleteManagedApplicationInstance = "sso:DeleteManagedApplicationInstance"
      DeletePermissionSet = "sso:DeletePermissionSet"
      DeletePermissionsBoundaryFromPermissionSet = "sso:DeletePermissionsBoundaryFromPermissionSet"
      DeletePermissionsPolicy = "sso:DeletePermissionsPolicy"
      DeleteProfile = "sso:DeleteProfile"
      DeleteTrustedTokenIssuer = "sso:DeleteTrustedTokenIssuer"
      DescribeAccountAssignmentCreationStatus = "sso:DescribeAccountAssignmentCreationStatus"
      DescribeAccountAssignmentDeletionStatus = "sso:DescribeAccountAssignmentDeletionStatus"
      DescribeApplication = "sso:DescribeApplication"
      DescribeApplicationAssignment = "sso:DescribeApplicationAssignment"
      DescribeApplicationProvider = "sso:DescribeApplicationProvider"
      DescribeDirectories = "sso:DescribeDirectories"
      DescribeInstance = "sso:DescribeInstance"
      DescribeInstanceAccessControlAttributeConfiguration = "sso:DescribeInstanceAccessControlAttributeConfiguration"
      DescribePermissionSet = "sso:DescribePermissionSet"
      DescribePermissionSetProvisioningStatus = "sso:DescribePermissionSetProvisioningStatus"
      DescribePermissionsPolicies = "sso:DescribePermissionsPolicies"
      DescribeRegisteredRegions = "sso:DescribeRegisteredRegions"
      DescribeTrustedTokenIssuer = "sso:DescribeTrustedTokenIssuer"
      DescribeTrusts = "sso:DescribeTrusts"
      DetachCustomerManagedPolicyReferenceFromPermissionSet = "sso:DetachCustomerManagedPolicyReferenceFromPermissionSet"
      DetachManagedPolicyFromPermissionSet = "sso:DetachManagedPolicyFromPermissionSet"
      DisassociateDirectory = "sso:DisassociateDirectory"
      DisassociateProfile = "sso:DisassociateProfile"
      GetApplicationAccessScope = "sso:GetApplicationAccessScope"
      GetApplicationAssignmentConfiguration = "sso:GetApplicationAssignmentConfiguration"
      GetApplicationAuthenticationMethod = "sso:GetApplicationAuthenticationMethod"
      GetApplicationGrant = "sso:GetApplicationGrant"
      GetApplicationInstance = "sso:GetApplicationInstance"
      GetApplicationTemplate = "sso:GetApplicationTemplate"
      GetInlinePolicyForPermissionSet = "sso:GetInlinePolicyForPermissionSet"
      GetManagedApplicationInstance = "sso:GetManagedApplicationInstance"
      GetMfaDeviceManagementForDirectory = "sso:GetMfaDeviceManagementForDirectory"
      GetPermissionSet = "sso:GetPermissionSet"
      GetPermissionsBoundaryForPermissionSet = "sso:GetPermissionsBoundaryForPermissionSet"
      GetPermissionsPolicy = "sso:GetPermissionsPolicy"
      GetProfile = "sso:GetProfile"
      GetSSOStatus = "sso:GetSSOStatus"
      GetSharedSsoConfiguration = "sso:GetSharedSsoConfiguration"
      GetSsoConfiguration = "sso:GetSsoConfiguration"
      GetTrust = "sso:GetTrust"
      ImportApplicationInstanceServiceProviderMetadata = "sso:ImportApplicationInstanceServiceProviderMetadata"
      ListAccountAssignmentCreationStatus = "sso:ListAccountAssignmentCreationStatus"
      ListAccountAssignmentDeletionStatus = "sso:ListAccountAssignmentDeletionStatus"
      ListAccountAssignments = "sso:ListAccountAssignments"
      ListAccountAssignmentsForPrincipal = "sso:ListAccountAssignmentsForPrincipal"
      ListAccountsForProvisionedPermissionSet = "sso:ListAccountsForProvisionedPermissionSet"
      ListApplicationAccessScopes = "sso:ListApplicationAccessScopes"
      ListApplicationAssignments = "sso:ListApplicationAssignments"
      ListApplicationAssignmentsForPrincipal = "sso:ListApplicationAssignmentsForPrincipal"
      ListApplicationAuthenticationMethods = "sso:ListApplicationAuthenticationMethods"
      ListApplicationGrants = "sso:ListApplicationGrants"
      ListApplicationInstanceCertificates = "sso:ListApplicationInstanceCertificates"
      ListApplicationInstances = "sso:ListApplicationInstances"
      ListApplicationProviders = "sso:ListApplicationProviders"
      ListApplicationTemplates = "sso:ListApplicationTemplates"
      ListApplications = "sso:ListApplications"
      ListCustomerManagedPolicyReferencesInPermissionSet = "sso:ListCustomerManagedPolicyReferencesInPermissionSet"
      ListDirectoryAssociations = "sso:ListDirectoryAssociations"
      ListInstances = "sso:ListInstances"
      ListManagedPoliciesInPermissionSet = "sso:ListManagedPoliciesInPermissionSet"
      ListPermissionSetProvisioningStatus = "sso:ListPermissionSetProvisioningStatus"
      ListPermissionSets = "sso:ListPermissionSets"
      ListPermissionSetsProvisionedToAccount = "sso:ListPermissionSetsProvisionedToAccount"
      ListProfileAssociations = "sso:ListProfileAssociations"
      ListProfiles = "sso:ListProfiles"
      ListTagsForResource = "sso:ListTagsForResource"
      ListTrustedTokenIssuers = "sso:ListTrustedTokenIssuers"
      ProvisionPermissionSet = "sso:ProvisionPermissionSet"
      PutApplicationAccessScope = "sso:PutApplicationAccessScope"
      PutApplicationAssignmentConfiguration = "sso:PutApplicationAssignmentConfiguration"
      PutApplicationAuthenticationMethod = "sso:PutApplicationAuthenticationMethod"
      PutApplicationGrant = "sso:PutApplicationGrant"
      PutInlinePolicyToPermissionSet = "sso:PutInlinePolicyToPermissionSet"
      PutMfaDeviceManagementForDirectory = "sso:PutMfaDeviceManagementForDirectory"
      PutPermissionsBoundaryToPermissionSet = "sso:PutPermissionsBoundaryToPermissionSet"
      PutPermissionsPolicy = "sso:PutPermissionsPolicy"
      SearchGroups = "sso:SearchGroups"
      SearchUsers = "sso:SearchUsers"
      StartSSO = "sso:StartSSO"
      TagResource = "sso:TagResource"
      UntagResource = "sso:UntagResource"
      UpdateApplication = "sso:UpdateApplication"
      UpdateApplicationInstanceActiveCertificate = "sso:UpdateApplicationInstanceActiveCertificate"
      UpdateApplicationInstanceDisplayData = "sso:UpdateApplicationInstanceDisplayData"
      UpdateApplicationInstanceResponseConfiguration = "sso:UpdateApplicationInstanceResponseConfiguration"
      UpdateApplicationInstanceResponseSchemaConfiguration = "sso:UpdateApplicationInstanceResponseSchemaConfiguration"
      UpdateApplicationInstanceSecurityConfiguration = "sso:UpdateApplicationInstanceSecurityConfiguration"
      UpdateApplicationInstanceServiceProviderConfiguration = "sso:UpdateApplicationInstanceServiceProviderConfiguration"
      UpdateApplicationInstanceStatus = "sso:UpdateApplicationInstanceStatus"
      UpdateDirectoryAssociation = "sso:UpdateDirectoryAssociation"
      UpdateInstance = "sso:UpdateInstance"
      UpdateInstanceAccessControlAttributeConfiguration = "sso:UpdateInstanceAccessControlAttributeConfiguration"
      UpdateManagedApplicationInstanceStatus = "sso:UpdateManagedApplicationInstanceStatus"
      UpdatePermissionSet = "sso:UpdatePermissionSet"
      UpdateProfile = "sso:UpdateProfile"
      UpdateSSOConfiguration = "sso:UpdateSSOConfiguration"
      UpdateTrust = "sso:UpdateTrust"
      UpdateTrustedTokenIssuer = "sso:UpdateTrustedTokenIssuer"
    }
    states = {
      AllActions = "states:*"
      CreateActivity = "states:CreateActivity"
      CreateStateMachine = "states:CreateStateMachine"
      CreateStateMachineAlias = "states:CreateStateMachineAlias"
      DeleteActivity = "states:DeleteActivity"
      DeleteStateMachine = "states:DeleteStateMachine"
      DeleteStateMachineAlias = "states:DeleteStateMachineAlias"
      DeleteStateMachineVersion = "states:DeleteStateMachineVersion"
      DescribeActivity = "states:DescribeActivity"
      DescribeExecution = "states:DescribeExecution"
      DescribeMapRun = "states:DescribeMapRun"
      DescribeStateMachine = "states:DescribeStateMachine"
      DescribeStateMachineAlias = "states:DescribeStateMachineAlias"
      DescribeStateMachineForExecution = "states:DescribeStateMachineForExecution"
      GetActivityTask = "states:GetActivityTask"
      GetExecutionHistory = "states:GetExecutionHistory"
      InvokeHTTPEndpoint = "states:InvokeHTTPEndpoint"
      ListActivities = "states:ListActivities"
      ListExecutions = "states:ListExecutions"
      ListMapRuns = "states:ListMapRuns"
      ListStateMachineAliases = "states:ListStateMachineAliases"
      ListStateMachineVersions = "states:ListStateMachineVersions"
      ListStateMachines = "states:ListStateMachines"
      ListTagsForResource = "states:ListTagsForResource"
      PublishStateMachineVersion = "states:PublishStateMachineVersion"
      RedriveExecution = "states:RedriveExecution"
      RevealSecrets = "states:RevealSecrets"
      SendTaskFailure = "states:SendTaskFailure"
      SendTaskHeartbeat = "states:SendTaskHeartbeat"
      SendTaskSuccess = "states:SendTaskSuccess"
      StartExecution = "states:StartExecution"
      StartSyncExecution = "states:StartSyncExecution"
      StopExecution = "states:StopExecution"
      TagResource = "states:TagResource"
      TestState = "states:TestState"
      UntagResource = "states:UntagResource"
      UpdateMapRun = "states:UpdateMapRun"
      UpdateStateMachine = "states:UpdateStateMachine"
      UpdateStateMachineAlias = "states:UpdateStateMachineAlias"
      ValidateStateMachineDefinition = "states:ValidateStateMachineDefinition"
    }
    storagegateway = {
      AllActions = "storagegateway:*"
      ActivateGateway = "storagegateway:ActivateGateway"
      AddCache = "storagegateway:AddCache"
      AddTagsToResource = "storagegateway:AddTagsToResource"
      AddUploadBuffer = "storagegateway:AddUploadBuffer"
      AddWorkingStorage = "storagegateway:AddWorkingStorage"
      AssignTapePool = "storagegateway:AssignTapePool"
      AssociateFileSystem = "storagegateway:AssociateFileSystem"
      AttachVolume = "storagegateway:AttachVolume"
      BypassGovernanceRetention = "storagegateway:BypassGovernanceRetention"
      CancelArchival = "storagegateway:CancelArchival"
      CancelRetrieval = "storagegateway:CancelRetrieval"
      CreateCachediSCSIVolume = "storagegateway:CreateCachediSCSIVolume"
      CreateNFSFileShare = "storagegateway:CreateNFSFileShare"
      CreateSMBFileShare = "storagegateway:CreateSMBFileShare"
      CreateSnapshot = "storagegateway:CreateSnapshot"
      CreateSnapshotFromVolumeRecoveryPoint = "storagegateway:CreateSnapshotFromVolumeRecoveryPoint"
      CreateStorediSCSIVolume = "storagegateway:CreateStorediSCSIVolume"
      CreateTapePool = "storagegateway:CreateTapePool"
      CreateTapeWithBarcode = "storagegateway:CreateTapeWithBarcode"
      CreateTapes = "storagegateway:CreateTapes"
      DeleteAutomaticTapeCreationPolicy = "storagegateway:DeleteAutomaticTapeCreationPolicy"
      DeleteBandwidthRateLimit = "storagegateway:DeleteBandwidthRateLimit"
      DeleteChapCredentials = "storagegateway:DeleteChapCredentials"
      DeleteFileShare = "storagegateway:DeleteFileShare"
      DeleteGateway = "storagegateway:DeleteGateway"
      DeleteSnapshotSchedule = "storagegateway:DeleteSnapshotSchedule"
      DeleteTape = "storagegateway:DeleteTape"
      DeleteTapeArchive = "storagegateway:DeleteTapeArchive"
      DeleteTapePool = "storagegateway:DeleteTapePool"
      DeleteVolume = "storagegateway:DeleteVolume"
      DescribeAvailabilityMonitorTest = "storagegateway:DescribeAvailabilityMonitorTest"
      DescribeBandwidthRateLimit = "storagegateway:DescribeBandwidthRateLimit"
      DescribeBandwidthRateLimitSchedule = "storagegateway:DescribeBandwidthRateLimitSchedule"
      DescribeCache = "storagegateway:DescribeCache"
      DescribeCachediSCSIVolumes = "storagegateway:DescribeCachediSCSIVolumes"
      DescribeChapCredentials = "storagegateway:DescribeChapCredentials"
      DescribeFileSystemAssociations = "storagegateway:DescribeFileSystemAssociations"
      DescribeGatewayInformation = "storagegateway:DescribeGatewayInformation"
      DescribeMaintenanceStartTime = "storagegateway:DescribeMaintenanceStartTime"
      DescribeNFSFileShares = "storagegateway:DescribeNFSFileShares"
      DescribeSMBFileShares = "storagegateway:DescribeSMBFileShares"
      DescribeSMBSettings = "storagegateway:DescribeSMBSettings"
      DescribeSnapshotSchedule = "storagegateway:DescribeSnapshotSchedule"
      DescribeStorediSCSIVolumes = "storagegateway:DescribeStorediSCSIVolumes"
      DescribeTapeArchives = "storagegateway:DescribeTapeArchives"
      DescribeTapeRecoveryPoints = "storagegateway:DescribeTapeRecoveryPoints"
      DescribeTapes = "storagegateway:DescribeTapes"
      DescribeUploadBuffer = "storagegateway:DescribeUploadBuffer"
      DescribeVTLDevices = "storagegateway:DescribeVTLDevices"
      DescribeWorkingStorage = "storagegateway:DescribeWorkingStorage"
      DetachVolume = "storagegateway:DetachVolume"
      DisableGateway = "storagegateway:DisableGateway"
      DisassociateFileSystem = "storagegateway:DisassociateFileSystem"
      JoinDomain = "storagegateway:JoinDomain"
      ListAutomaticTapeCreationPolicies = "storagegateway:ListAutomaticTapeCreationPolicies"
      ListFileShares = "storagegateway:ListFileShares"
      ListFileSystemAssociations = "storagegateway:ListFileSystemAssociations"
      ListGateways = "storagegateway:ListGateways"
      ListLocalDisks = "storagegateway:ListLocalDisks"
      ListTagsForResource = "storagegateway:ListTagsForResource"
      ListTapePools = "storagegateway:ListTapePools"
      ListTapes = "storagegateway:ListTapes"
      ListVolumeInitiators = "storagegateway:ListVolumeInitiators"
      ListVolumeRecoveryPoints = "storagegateway:ListVolumeRecoveryPoints"
      ListVolumes = "storagegateway:ListVolumes"
      NotifyWhenUploaded = "storagegateway:NotifyWhenUploaded"
      RefreshCache = "storagegateway:RefreshCache"
      RemoveTagsFromResource = "storagegateway:RemoveTagsFromResource"
      ResetCache = "storagegateway:ResetCache"
      RetrieveTapeArchive = "storagegateway:RetrieveTapeArchive"
      RetrieveTapeRecoveryPoint = "storagegateway:RetrieveTapeRecoveryPoint"
      SetLocalConsolePassword = "storagegateway:SetLocalConsolePassword"
      SetSMBGuestPassword = "storagegateway:SetSMBGuestPassword"
      ShutdownGateway = "storagegateway:ShutdownGateway"
      StartAvailabilityMonitorTest = "storagegateway:StartAvailabilityMonitorTest"
      StartGateway = "storagegateway:StartGateway"
      UpdateAutomaticTapeCreationPolicy = "storagegateway:UpdateAutomaticTapeCreationPolicy"
      UpdateBandwidthRateLimit = "storagegateway:UpdateBandwidthRateLimit"
      UpdateBandwidthRateLimitSchedule = "storagegateway:UpdateBandwidthRateLimitSchedule"
      UpdateChapCredentials = "storagegateway:UpdateChapCredentials"
      UpdateFileSystemAssociation = "storagegateway:UpdateFileSystemAssociation"
      UpdateGatewayInformation = "storagegateway:UpdateGatewayInformation"
      UpdateGatewaySoftwareNow = "storagegateway:UpdateGatewaySoftwareNow"
      UpdateMaintenanceStartTime = "storagegateway:UpdateMaintenanceStartTime"
      UpdateNFSFileShare = "storagegateway:UpdateNFSFileShare"
      UpdateSMBFileShare = "storagegateway:UpdateSMBFileShare"
      UpdateSMBFileShareVisibility = "storagegateway:UpdateSMBFileShareVisibility"
      UpdateSMBLocalGroups = "storagegateway:UpdateSMBLocalGroups"
      UpdateSMBSecurityStrategy = "storagegateway:UpdateSMBSecurityStrategy"
      UpdateSnapshotSchedule = "storagegateway:UpdateSnapshotSchedule"
      UpdateVTLDeviceType = "storagegateway:UpdateVTLDeviceType"
    }
    sts = {
      AllActions = "sts:*"
      AssumeRole = "sts:AssumeRole"
      AssumeRoleWithSAML = "sts:AssumeRoleWithSAML"
      AssumeRoleWithWebIdentity = "sts:AssumeRoleWithWebIdentity"
      DecodeAuthorizationMessage = "sts:DecodeAuthorizationMessage"
      GetAccessKeyInfo = "sts:GetAccessKeyInfo"
      GetCallerIdentity = "sts:GetCallerIdentity"
      GetFederationToken = "sts:GetFederationToken"
      GetServiceBearerToken = "sts:GetServiceBearerToken"
      GetSessionToken = "sts:GetSessionToken"
      SetContext = "sts:SetContext"
      SetSourceIdentity = "sts:SetSourceIdentity"
      TagSession = "sts:TagSession"
    }
    support = {
      AllActions = "support:*"
      AddAttachmentsToSet = "support:AddAttachmentsToSet"
      AddCommunicationToCase = "support:AddCommunicationToCase"
      CreateCase = "support:CreateCase"
      DescribeAttachment = "support:DescribeAttachment"
      DescribeCaseAttributes = "support:DescribeCaseAttributes"
      DescribeCases = "support:DescribeCases"
      DescribeCommunication = "support:DescribeCommunication"
      DescribeCommunications = "support:DescribeCommunications"
      DescribeCreateCaseOptions = "support:DescribeCreateCaseOptions"
      DescribeIssueTypes = "support:DescribeIssueTypes"
      DescribeServices = "support:DescribeServices"
      DescribeSeverityLevels = "support:DescribeSeverityLevels"
      DescribeSupportLevel = "support:DescribeSupportLevel"
      DescribeSupportedLanguages = "support:DescribeSupportedLanguages"
      DescribeTrustedAdvisorCheckRefreshStatuses = "support:DescribeTrustedAdvisorCheckRefreshStatuses"
      DescribeTrustedAdvisorCheckResult = "support:DescribeTrustedAdvisorCheckResult"
      DescribeTrustedAdvisorCheckSummaries = "support:DescribeTrustedAdvisorCheckSummaries"
      DescribeTrustedAdvisorChecks = "support:DescribeTrustedAdvisorChecks"
      InitiateCallForCase = "support:InitiateCallForCase"
      InitiateChatForCase = "support:InitiateChatForCase"
      PutCaseAttributes = "support:PutCaseAttributes"
      RateCaseCommunication = "support:RateCaseCommunication"
      RefreshTrustedAdvisorCheck = "support:RefreshTrustedAdvisorCheck"
      ResolveCase = "support:ResolveCase"
      SearchForCases = "support:SearchForCases"
    }
    supportapp = {
      AllActions = "supportapp:*"
      CreateSlackChannelConfiguration = "supportapp:CreateSlackChannelConfiguration"
      DeleteAccountAlias = "supportapp:DeleteAccountAlias"
      DeleteSlackChannelConfiguration = "supportapp:DeleteSlackChannelConfiguration"
      DeleteSlackWorkspaceConfiguration = "supportapp:DeleteSlackWorkspaceConfiguration"
      DescribeSlackChannels = "supportapp:DescribeSlackChannels"
      GetAccountAlias = "supportapp:GetAccountAlias"
      GetSlackOauthParameters = "supportapp:GetSlackOauthParameters"
      ListSlackChannelConfigurations = "supportapp:ListSlackChannelConfigurations"
      ListSlackWorkspaceConfigurations = "supportapp:ListSlackWorkspaceConfigurations"
      PutAccountAlias = "supportapp:PutAccountAlias"
      RedeemSlackOauthCode = "supportapp:RedeemSlackOauthCode"
      RegisterSlackWorkspaceForOrganization = "supportapp:RegisterSlackWorkspaceForOrganization"
      UpdateSlackChannelConfiguration = "supportapp:UpdateSlackChannelConfiguration"
    }
    supportplans = {
      AllActions = "supportplans:*"
      CreateSupportPlanSchedule = "supportplans:CreateSupportPlanSchedule"
      GetSupportPlan = "supportplans:GetSupportPlan"
      GetSupportPlanUpdateStatus = "supportplans:GetSupportPlanUpdateStatus"
      StartSupportPlanUpdate = "supportplans:StartSupportPlanUpdate"
    }
    supportrecommendations = {
      AllActions = "supportrecommendations:*"
      GetSupportTroubleshootingResponse = "supportrecommendations:GetSupportTroubleshootingResponse"
      StartSupportTroubleshooting = "supportrecommendations:StartSupportTroubleshooting"
    }
    sustainability = {
      AllActions = "sustainability:*"
      GetCarbonFootprintSummary = "sustainability:GetCarbonFootprintSummary"
    }
    swf = {
      AllActions = "swf:*"
      CancelTimer = "swf:CancelTimer"
      CancelWorkflowExecution = "swf:CancelWorkflowExecution"
      CompleteWorkflowExecution = "swf:CompleteWorkflowExecution"
      ContinueAsNewWorkflowExecution = "swf:ContinueAsNewWorkflowExecution"
      CountClosedWorkflowExecutions = "swf:CountClosedWorkflowExecutions"
      CountOpenWorkflowExecutions = "swf:CountOpenWorkflowExecutions"
      CountPendingActivityTasks = "swf:CountPendingActivityTasks"
      CountPendingDecisionTasks = "swf:CountPendingDecisionTasks"
      DeleteActivityType = "swf:DeleteActivityType"
      DeleteWorkflowType = "swf:DeleteWorkflowType"
      DeprecateActivityType = "swf:DeprecateActivityType"
      DeprecateDomain = "swf:DeprecateDomain"
      DeprecateWorkflowType = "swf:DeprecateWorkflowType"
      DescribeActivityType = "swf:DescribeActivityType"
      DescribeDomain = "swf:DescribeDomain"
      DescribeWorkflowExecution = "swf:DescribeWorkflowExecution"
      DescribeWorkflowType = "swf:DescribeWorkflowType"
      FailWorkflowExecution = "swf:FailWorkflowExecution"
      GetWorkflowExecutionHistory = "swf:GetWorkflowExecutionHistory"
      ListActivityTypes = "swf:ListActivityTypes"
      ListClosedWorkflowExecutions = "swf:ListClosedWorkflowExecutions"
      ListDomains = "swf:ListDomains"
      ListOpenWorkflowExecutions = "swf:ListOpenWorkflowExecutions"
      ListTagsForResource = "swf:ListTagsForResource"
      ListWorkflowTypes = "swf:ListWorkflowTypes"
      PollForActivityTask = "swf:PollForActivityTask"
      PollForDecisionTask = "swf:PollForDecisionTask"
      RecordActivityTaskHeartbeat = "swf:RecordActivityTaskHeartbeat"
      RecordMarker = "swf:RecordMarker"
      RegisterActivityType = "swf:RegisterActivityType"
      RegisterDomain = "swf:RegisterDomain"
      RegisterWorkflowType = "swf:RegisterWorkflowType"
      RequestCancelActivityTask = "swf:RequestCancelActivityTask"
      RequestCancelExternalWorkflowExecution = "swf:RequestCancelExternalWorkflowExecution"
      RequestCancelWorkflowExecution = "swf:RequestCancelWorkflowExecution"
      RespondActivityTaskCanceled = "swf:RespondActivityTaskCanceled"
      RespondActivityTaskCompleted = "swf:RespondActivityTaskCompleted"
      RespondActivityTaskFailed = "swf:RespondActivityTaskFailed"
      RespondDecisionTaskCompleted = "swf:RespondDecisionTaskCompleted"
      ScheduleActivityTask = "swf:ScheduleActivityTask"
      SignalExternalWorkflowExecution = "swf:SignalExternalWorkflowExecution"
      SignalWorkflowExecution = "swf:SignalWorkflowExecution"
      StartChildWorkflowExecution = "swf:StartChildWorkflowExecution"
      StartTimer = "swf:StartTimer"
      StartWorkflowExecution = "swf:StartWorkflowExecution"
      TagResource = "swf:TagResource"
      TerminateWorkflowExecution = "swf:TerminateWorkflowExecution"
      UndeprecateActivityType = "swf:UndeprecateActivityType"
      UndeprecateDomain = "swf:UndeprecateDomain"
      UndeprecateWorkflowType = "swf:UndeprecateWorkflowType"
      UntagResource = "swf:UntagResource"
    }
    synthetics = {
      AllActions = "synthetics:*"
      AssociateResource = "synthetics:AssociateResource"
      CreateCanary = "synthetics:CreateCanary"
      CreateGroup = "synthetics:CreateGroup"
      DeleteCanary = "synthetics:DeleteCanary"
      DeleteGroup = "synthetics:DeleteGroup"
      DescribeCanaries = "synthetics:DescribeCanaries"
      DescribeCanariesLastRun = "synthetics:DescribeCanariesLastRun"
      DescribeRuntimeVersions = "synthetics:DescribeRuntimeVersions"
      DisassociateResource = "synthetics:DisassociateResource"
      GetCanary = "synthetics:GetCanary"
      GetCanaryRuns = "synthetics:GetCanaryRuns"
      GetGroup = "synthetics:GetGroup"
      ListAssociatedGroups = "synthetics:ListAssociatedGroups"
      ListGroupResources = "synthetics:ListGroupResources"
      ListGroups = "synthetics:ListGroups"
      ListTagsForResource = "synthetics:ListTagsForResource"
      StartCanary = "synthetics:StartCanary"
      StopCanary = "synthetics:StopCanary"
      TagResource = "synthetics:TagResource"
      UntagResource = "synthetics:UntagResource"
      UpdateCanary = "synthetics:UpdateCanary"
    }
    tag = {
      AllActions = "tag:*"
      DescribeReportCreation = "tag:DescribeReportCreation"
      GetComplianceSummary = "tag:GetComplianceSummary"
      GetResources = "tag:GetResources"
      GetTagKeys = "tag:GetTagKeys"
      GetTagValues = "tag:GetTagValues"
      StartReportCreation = "tag:StartReportCreation"
      TagResources = "tag:TagResources"
      UntagResources = "tag:UntagResources"
    }
    tax = {
      AllActions = "tax:*"
      BatchDeleteTaxRegistration = "tax:BatchDeleteTaxRegistration"
      BatchPutTaxRegistration = "tax:BatchPutTaxRegistration"
      DeleteTaxRegistration = "tax:DeleteTaxRegistration"
      GetExemptions = "tax:GetExemptions"
      GetTaxInfoReportingDocument = "tax:GetTaxInfoReportingDocument"
      GetTaxInheritance = "tax:GetTaxInheritance"
      GetTaxInterview = "tax:GetTaxInterview"
      GetTaxRegistration = "tax:GetTaxRegistration"
      GetTaxRegistrationDocument = "tax:GetTaxRegistrationDocument"
      ListTaxRegistrations = "tax:ListTaxRegistrations"
      PutTaxInheritance = "tax:PutTaxInheritance"
      PutTaxInterview = "tax:PutTaxInterview"
      PutTaxRegistration = "tax:PutTaxRegistration"
      UpdateExemptions = "tax:UpdateExemptions"
    }
    textract = {
      AllActions = "textract:*"
      AnalyzeDocument = "textract:AnalyzeDocument"
      AnalyzeExpense = "textract:AnalyzeExpense"
      AnalyzeID = "textract:AnalyzeID"
      CreateAdapter = "textract:CreateAdapter"
      CreateAdapterVersion = "textract:CreateAdapterVersion"
      DeleteAdapter = "textract:DeleteAdapter"
      DeleteAdapterVersion = "textract:DeleteAdapterVersion"
      DetectDocumentText = "textract:DetectDocumentText"
      GetAdapter = "textract:GetAdapter"
      GetAdapterVersion = "textract:GetAdapterVersion"
      GetDocumentAnalysis = "textract:GetDocumentAnalysis"
      GetDocumentTextDetection = "textract:GetDocumentTextDetection"
      GetExpenseAnalysis = "textract:GetExpenseAnalysis"
      GetLendingAnalysis = "textract:GetLendingAnalysis"
      GetLendingAnalysisSummary = "textract:GetLendingAnalysisSummary"
      ListAdapterVersions = "textract:ListAdapterVersions"
      ListAdapters = "textract:ListAdapters"
      ListTagsForResource = "textract:ListTagsForResource"
      StartDocumentAnalysis = "textract:StartDocumentAnalysis"
      StartDocumentTextDetection = "textract:StartDocumentTextDetection"
      StartExpenseAnalysis = "textract:StartExpenseAnalysis"
      StartLendingAnalysis = "textract:StartLendingAnalysis"
      TagResource = "textract:TagResource"
      UntagResource = "textract:UntagResource"
      UpdateAdapter = "textract:UpdateAdapter"
    }
    thinclient = {
      AllActions = "thinclient:*"
      CreateEnvironment = "thinclient:CreateEnvironment"
      DeleteDevice = "thinclient:DeleteDevice"
      DeleteEnvironment = "thinclient:DeleteEnvironment"
      DeregisterDevice = "thinclient:DeregisterDevice"
      GetDevice = "thinclient:GetDevice"
      GetEnvironment = "thinclient:GetEnvironment"
      GetSoftwareSet = "thinclient:GetSoftwareSet"
      ListDeviceSessions = "thinclient:ListDeviceSessions"
      ListDevices = "thinclient:ListDevices"
      ListEnvironments = "thinclient:ListEnvironments"
      ListSoftwareSets = "thinclient:ListSoftwareSets"
      ListTagsForResource = "thinclient:ListTagsForResource"
      TagResource = "thinclient:TagResource"
      UntagResource = "thinclient:UntagResource"
      UpdateDevice = "thinclient:UpdateDevice"
      UpdateEnvironment = "thinclient:UpdateEnvironment"
      UpdateSoftwareSet = "thinclient:UpdateSoftwareSet"
    }
    timestream-influxdb = {
      AllActions = "timestream-influxdb:*"
      CreateDbInstance = "timestream-influxdb:CreateDbInstance"
      CreateDbParameterGroup = "timestream-influxdb:CreateDbParameterGroup"
      DeleteDbInstance = "timestream-influxdb:DeleteDbInstance"
      GetDbInstance = "timestream-influxdb:GetDbInstance"
      GetDbParameterGroup = "timestream-influxdb:GetDbParameterGroup"
      ListDbInstances = "timestream-influxdb:ListDbInstances"
      ListDbParameterGroups = "timestream-influxdb:ListDbParameterGroups"
      ListTagsForResource = "timestream-influxdb:ListTagsForResource"
      TagResource = "timestream-influxdb:TagResource"
      UntagResource = "timestream-influxdb:UntagResource"
      UpdateDbInstance = "timestream-influxdb:UpdateDbInstance"
    }
    timestream = {
      AllActions = "timestream:*"
      CancelQuery = "timestream:CancelQuery"
      CreateBatchLoadTask = "timestream:CreateBatchLoadTask"
      CreateDatabase = "timestream:CreateDatabase"
      CreateScheduledQuery = "timestream:CreateScheduledQuery"
      CreateTable = "timestream:CreateTable"
      DeleteDatabase = "timestream:DeleteDatabase"
      DeleteScheduledQuery = "timestream:DeleteScheduledQuery"
      DeleteTable = "timestream:DeleteTable"
      DescribeAccountSettings = "timestream:DescribeAccountSettings"
      DescribeBatchLoadTask = "timestream:DescribeBatchLoadTask"
      DescribeDatabase = "timestream:DescribeDatabase"
      DescribeEndpoints = "timestream:DescribeEndpoints"
      DescribeScheduledQuery = "timestream:DescribeScheduledQuery"
      DescribeTable = "timestream:DescribeTable"
      ExecuteScheduledQuery = "timestream:ExecuteScheduledQuery"
      GetAwsBackupStatus = "timestream:GetAwsBackupStatus"
      GetAwsRestoreStatus = "timestream:GetAwsRestoreStatus"
      ListBatchLoadTasks = "timestream:ListBatchLoadTasks"
      ListDatabases = "timestream:ListDatabases"
      ListMeasures = "timestream:ListMeasures"
      ListScheduledQueries = "timestream:ListScheduledQueries"
      ListTables = "timestream:ListTables"
      ListTagsForResource = "timestream:ListTagsForResource"
      PrepareQuery = "timestream:PrepareQuery"
      ResumeBatchLoadTask = "timestream:ResumeBatchLoadTask"
      Select = "timestream:Select"
      SelectValues = "timestream:SelectValues"
      StartAwsBackupJob = "timestream:StartAwsBackupJob"
      StartAwsRestoreJob = "timestream:StartAwsRestoreJob"
      TagResource = "timestream:TagResource"
      Unload = "timestream:Unload"
      UntagResource = "timestream:UntagResource"
      UpdateAccountSettings = "timestream:UpdateAccountSettings"
      UpdateDatabase = "timestream:UpdateDatabase"
      UpdateScheduledQuery = "timestream:UpdateScheduledQuery"
      UpdateTable = "timestream:UpdateTable"
      WriteRecords = "timestream:WriteRecords"
    }
    tiros = {
      AllActions = "tiros:*"
      CreateQuery = "tiros:CreateQuery"
      ExtendQuery = "tiros:ExtendQuery"
      GetQueryAnswer = "tiros:GetQueryAnswer"
      GetQueryExplanation = "tiros:GetQueryExplanation"
      GetQueryExtensionAccounts = "tiros:GetQueryExtensionAccounts"
    }
    tnb = {
      AllActions = "tnb:*"
      CancelSolNetworkOperation = "tnb:CancelSolNetworkOperation"
      CreateSolFunctionPackage = "tnb:CreateSolFunctionPackage"
      CreateSolNetworkInstance = "tnb:CreateSolNetworkInstance"
      CreateSolNetworkPackage = "tnb:CreateSolNetworkPackage"
      DeleteSolFunctionPackage = "tnb:DeleteSolFunctionPackage"
      DeleteSolNetworkInstance = "tnb:DeleteSolNetworkInstance"
      DeleteSolNetworkPackage = "tnb:DeleteSolNetworkPackage"
      GetSolFunctionInstance = "tnb:GetSolFunctionInstance"
      GetSolFunctionPackage = "tnb:GetSolFunctionPackage"
      GetSolFunctionPackageContent = "tnb:GetSolFunctionPackageContent"
      GetSolFunctionPackageDescriptor = "tnb:GetSolFunctionPackageDescriptor"
      GetSolNetworkInstance = "tnb:GetSolNetworkInstance"
      GetSolNetworkOperation = "tnb:GetSolNetworkOperation"
      GetSolNetworkPackage = "tnb:GetSolNetworkPackage"
      GetSolNetworkPackageContent = "tnb:GetSolNetworkPackageContent"
      GetSolNetworkPackageDescriptor = "tnb:GetSolNetworkPackageDescriptor"
      InstantiateSolNetworkInstance = "tnb:InstantiateSolNetworkInstance"
      ListSolFunctionInstances = "tnb:ListSolFunctionInstances"
      ListSolFunctionPackages = "tnb:ListSolFunctionPackages"
      ListSolNetworkInstances = "tnb:ListSolNetworkInstances"
      ListSolNetworkOperations = "tnb:ListSolNetworkOperations"
      ListSolNetworkPackages = "tnb:ListSolNetworkPackages"
      ListTagsForResource = "tnb:ListTagsForResource"
      PutSolFunctionPackageContent = "tnb:PutSolFunctionPackageContent"
      PutSolNetworkPackageContent = "tnb:PutSolNetworkPackageContent"
      TagResource = "tnb:TagResource"
      TerminateSolNetworkInstance = "tnb:TerminateSolNetworkInstance"
      UntagResource = "tnb:UntagResource"
      UpdateSolFunctionPackage = "tnb:UpdateSolFunctionPackage"
      UpdateSolNetworkInstance = "tnb:UpdateSolNetworkInstance"
      UpdateSolNetworkPackage = "tnb:UpdateSolNetworkPackage"
      ValidateSolFunctionPackageContent = "tnb:ValidateSolFunctionPackageContent"
      ValidateSolNetworkPackageContent = "tnb:ValidateSolNetworkPackageContent"
    }
    transcribe = {
      AllActions = "transcribe:*"
      CreateCallAnalyticsCategory = "transcribe:CreateCallAnalyticsCategory"
      CreateLanguageModel = "transcribe:CreateLanguageModel"
      CreateMedicalVocabulary = "transcribe:CreateMedicalVocabulary"
      CreateVocabulary = "transcribe:CreateVocabulary"
      CreateVocabularyFilter = "transcribe:CreateVocabularyFilter"
      DeleteCallAnalyticsCategory = "transcribe:DeleteCallAnalyticsCategory"
      DeleteCallAnalyticsJob = "transcribe:DeleteCallAnalyticsJob"
      DeleteLanguageModel = "transcribe:DeleteLanguageModel"
      DeleteMedicalScribeJob = "transcribe:DeleteMedicalScribeJob"
      DeleteMedicalTranscriptionJob = "transcribe:DeleteMedicalTranscriptionJob"
      DeleteMedicalVocabulary = "transcribe:DeleteMedicalVocabulary"
      DeleteTranscriptionJob = "transcribe:DeleteTranscriptionJob"
      DeleteVocabulary = "transcribe:DeleteVocabulary"
      DeleteVocabularyFilter = "transcribe:DeleteVocabularyFilter"
      DescribeLanguageModel = "transcribe:DescribeLanguageModel"
      GetCallAnalyticsCategory = "transcribe:GetCallAnalyticsCategory"
      GetCallAnalyticsJob = "transcribe:GetCallAnalyticsJob"
      GetMedicalScribeJob = "transcribe:GetMedicalScribeJob"
      GetMedicalTranscriptionJob = "transcribe:GetMedicalTranscriptionJob"
      GetMedicalVocabulary = "transcribe:GetMedicalVocabulary"
      GetTranscriptionJob = "transcribe:GetTranscriptionJob"
      GetVocabulary = "transcribe:GetVocabulary"
      GetVocabularyFilter = "transcribe:GetVocabularyFilter"
      ListCallAnalyticsCategories = "transcribe:ListCallAnalyticsCategories"
      ListCallAnalyticsJobs = "transcribe:ListCallAnalyticsJobs"
      ListLanguageModels = "transcribe:ListLanguageModels"
      ListMedicalScribeJobs = "transcribe:ListMedicalScribeJobs"
      ListMedicalTranscriptionJobs = "transcribe:ListMedicalTranscriptionJobs"
      ListMedicalVocabularies = "transcribe:ListMedicalVocabularies"
      ListTagsForResource = "transcribe:ListTagsForResource"
      ListTranscriptionJobs = "transcribe:ListTranscriptionJobs"
      ListVocabularies = "transcribe:ListVocabularies"
      ListVocabularyFilters = "transcribe:ListVocabularyFilters"
      StartCallAnalyticsJob = "transcribe:StartCallAnalyticsJob"
      StartCallAnalyticsStreamTranscription = "transcribe:StartCallAnalyticsStreamTranscription"
      StartCallAnalyticsStreamTranscriptionWebSocket = "transcribe:StartCallAnalyticsStreamTranscriptionWebSocket"
      StartMedicalScribeJob = "transcribe:StartMedicalScribeJob"
      StartMedicalStreamTranscription = "transcribe:StartMedicalStreamTranscription"
      StartMedicalStreamTranscriptionWebSocket = "transcribe:StartMedicalStreamTranscriptionWebSocket"
      StartMedicalTranscriptionJob = "transcribe:StartMedicalTranscriptionJob"
      StartStreamTranscription = "transcribe:StartStreamTranscription"
      StartStreamTranscriptionWebSocket = "transcribe:StartStreamTranscriptionWebSocket"
      StartTranscriptionJob = "transcribe:StartTranscriptionJob"
      TagResource = "transcribe:TagResource"
      UntagResource = "transcribe:UntagResource"
      UpdateCallAnalyticsCategory = "transcribe:UpdateCallAnalyticsCategory"
      UpdateMedicalVocabulary = "transcribe:UpdateMedicalVocabulary"
      UpdateVocabulary = "transcribe:UpdateVocabulary"
      UpdateVocabularyFilter = "transcribe:UpdateVocabularyFilter"
    }
    transfer = {
      AllActions = "transfer:*"
      CreateAccess = "transfer:CreateAccess"
      CreateAgreement = "transfer:CreateAgreement"
      CreateConnector = "transfer:CreateConnector"
      CreateProfile = "transfer:CreateProfile"
      CreateServer = "transfer:CreateServer"
      CreateUser = "transfer:CreateUser"
      CreateWorkflow = "transfer:CreateWorkflow"
      DeleteAccess = "transfer:DeleteAccess"
      DeleteAgreement = "transfer:DeleteAgreement"
      DeleteCertificate = "transfer:DeleteCertificate"
      DeleteConnector = "transfer:DeleteConnector"
      DeleteHostKey = "transfer:DeleteHostKey"
      DeleteProfile = "transfer:DeleteProfile"
      DeleteServer = "transfer:DeleteServer"
      DeleteSshPublicKey = "transfer:DeleteSshPublicKey"
      DeleteUser = "transfer:DeleteUser"
      DeleteWorkflow = "transfer:DeleteWorkflow"
      DescribeAccess = "transfer:DescribeAccess"
      DescribeAgreement = "transfer:DescribeAgreement"
      DescribeCertificate = "transfer:DescribeCertificate"
      DescribeConnector = "transfer:DescribeConnector"
      DescribeExecution = "transfer:DescribeExecution"
      DescribeHostKey = "transfer:DescribeHostKey"
      DescribeProfile = "transfer:DescribeProfile"
      DescribeSecurityPolicy = "transfer:DescribeSecurityPolicy"
      DescribeServer = "transfer:DescribeServer"
      DescribeUser = "transfer:DescribeUser"
      DescribeWorkflow = "transfer:DescribeWorkflow"
      ImportCertificate = "transfer:ImportCertificate"
      ImportHostKey = "transfer:ImportHostKey"
      ImportSshPublicKey = "transfer:ImportSshPublicKey"
      ListAccesses = "transfer:ListAccesses"
      ListAgreements = "transfer:ListAgreements"
      ListCertificates = "transfer:ListCertificates"
      ListConnectors = "transfer:ListConnectors"
      ListExecutions = "transfer:ListExecutions"
      ListHostKeys = "transfer:ListHostKeys"
      ListProfiles = "transfer:ListProfiles"
      ListSecurityPolicies = "transfer:ListSecurityPolicies"
      ListServers = "transfer:ListServers"
      ListTagsForResource = "transfer:ListTagsForResource"
      ListUsers = "transfer:ListUsers"
      ListWorkflows = "transfer:ListWorkflows"
      SendWorkflowStepState = "transfer:SendWorkflowStepState"
      StartDirectoryListing = "transfer:StartDirectoryListing"
      StartFileTransfer = "transfer:StartFileTransfer"
      StartServer = "transfer:StartServer"
      StopServer = "transfer:StopServer"
      TagResource = "transfer:TagResource"
      TestConnection = "transfer:TestConnection"
      TestIdentityProvider = "transfer:TestIdentityProvider"
      UntagResource = "transfer:UntagResource"
      UpdateAccess = "transfer:UpdateAccess"
      UpdateAgreement = "transfer:UpdateAgreement"
      UpdateCertificate = "transfer:UpdateCertificate"
      UpdateConnector = "transfer:UpdateConnector"
      UpdateHostKey = "transfer:UpdateHostKey"
      UpdateProfile = "transfer:UpdateProfile"
      UpdateServer = "transfer:UpdateServer"
      UpdateUser = "transfer:UpdateUser"
    }
    translate = {
      AllActions = "translate:*"
      CreateParallelData = "translate:CreateParallelData"
      DeleteParallelData = "translate:DeleteParallelData"
      DeleteTerminology = "translate:DeleteTerminology"
      DescribeTextTranslationJob = "translate:DescribeTextTranslationJob"
      GetParallelData = "translate:GetParallelData"
      GetTerminology = "translate:GetTerminology"
      ImportTerminology = "translate:ImportTerminology"
      ListLanguages = "translate:ListLanguages"
      ListParallelData = "translate:ListParallelData"
      ListTagsForResource = "translate:ListTagsForResource"
      ListTerminologies = "translate:ListTerminologies"
      ListTextTranslationJobs = "translate:ListTextTranslationJobs"
      StartTextTranslationJob = "translate:StartTextTranslationJob"
      StopTextTranslationJob = "translate:StopTextTranslationJob"
      TagResource = "translate:TagResource"
      TranslateDocument = "translate:TranslateDocument"
      TranslateText = "translate:TranslateText"
      UntagResource = "translate:UntagResource"
      UpdateParallelData = "translate:UpdateParallelData"
    }
    trustedadvisor = {
      AllActions = "trustedadvisor:*"
      BatchUpdateRecommendationResourceExclusion = "trustedadvisor:BatchUpdateRecommendationResourceExclusion"
      CreateEngagement = "trustedadvisor:CreateEngagement"
      CreateEngagementAttachment = "trustedadvisor:CreateEngagementAttachment"
      CreateEngagementCommunication = "trustedadvisor:CreateEngagementCommunication"
      DeleteNotificationConfigurationForDelegatedAdmin = "trustedadvisor:DeleteNotificationConfigurationForDelegatedAdmin"
      DescribeAccount = "trustedadvisor:DescribeAccount"
      DescribeAccountAccess = "trustedadvisor:DescribeAccountAccess"
      DescribeCheckItems = "trustedadvisor:DescribeCheckItems"
      DescribeCheckRefreshStatuses = "trustedadvisor:DescribeCheckRefreshStatuses"
      DescribeCheckStatusHistoryChanges = "trustedadvisor:DescribeCheckStatusHistoryChanges"
      DescribeCheckSummaries = "trustedadvisor:DescribeCheckSummaries"
      DescribeChecks = "trustedadvisor:DescribeChecks"
      DescribeNotificationConfigurations = "trustedadvisor:DescribeNotificationConfigurations"
      DescribeNotificationPreferences = "trustedadvisor:DescribeNotificationPreferences"
      DescribeOrganization = "trustedadvisor:DescribeOrganization"
      DescribeOrganizationAccounts = "trustedadvisor:DescribeOrganizationAccounts"
      DescribeReports = "trustedadvisor:DescribeReports"
      DescribeRisk = "trustedadvisor:DescribeRisk"
      DescribeRiskResources = "trustedadvisor:DescribeRiskResources"
      DescribeRisks = "trustedadvisor:DescribeRisks"
      DescribeServiceMetadata = "trustedadvisor:DescribeServiceMetadata"
      DownloadRisk = "trustedadvisor:DownloadRisk"
      ExcludeCheckItems = "trustedadvisor:ExcludeCheckItems"
      GenerateReport = "trustedadvisor:GenerateReport"
      GetEngagement = "trustedadvisor:GetEngagement"
      GetEngagementAttachment = "trustedadvisor:GetEngagementAttachment"
      GetEngagementType = "trustedadvisor:GetEngagementType"
      GetOrganizationRecommendation = "trustedadvisor:GetOrganizationRecommendation"
      GetRecommendation = "trustedadvisor:GetRecommendation"
      IncludeCheckItems = "trustedadvisor:IncludeCheckItems"
      ListAccountsForParent = "trustedadvisor:ListAccountsForParent"
      ListChecks = "trustedadvisor:ListChecks"
      ListEngagementCommunications = "trustedadvisor:ListEngagementCommunications"
      ListEngagementTypes = "trustedadvisor:ListEngagementTypes"
      ListEngagements = "trustedadvisor:ListEngagements"
      ListOrganizationRecommendationAccounts = "trustedadvisor:ListOrganizationRecommendationAccounts"
      ListOrganizationRecommendationResources = "trustedadvisor:ListOrganizationRecommendationResources"
      ListOrganizationRecommendations = "trustedadvisor:ListOrganizationRecommendations"
      ListOrganizationalUnitsForParent = "trustedadvisor:ListOrganizationalUnitsForParent"
      ListRecommendationResources = "trustedadvisor:ListRecommendationResources"
      ListRecommendations = "trustedadvisor:ListRecommendations"
      ListRoots = "trustedadvisor:ListRoots"
      RefreshCheck = "trustedadvisor:RefreshCheck"
      SetAccountAccess = "trustedadvisor:SetAccountAccess"
      SetOrganizationAccess = "trustedadvisor:SetOrganizationAccess"
      UpdateEngagement = "trustedadvisor:UpdateEngagement"
      UpdateEngagementStatus = "trustedadvisor:UpdateEngagementStatus"
      UpdateNotificationConfigurations = "trustedadvisor:UpdateNotificationConfigurations"
      UpdateNotificationPreferences = "trustedadvisor:UpdateNotificationPreferences"
      UpdateOrganizationRecommendationLifecycle = "trustedadvisor:UpdateOrganizationRecommendationLifecycle"
      UpdateRecommendationLifecycle = "trustedadvisor:UpdateRecommendationLifecycle"
      UpdateRiskStatus = "trustedadvisor:UpdateRiskStatus"
    }
    ts = {
      AllActions = "ts:*"
      GetExecution = "ts:GetExecution"
      GetExecutionOutput = "ts:GetExecutionOutput"
      GetTool = "ts:GetTool"
      ListExecutions = "ts:ListExecutions"
      ListTagsForResource = "ts:ListTagsForResource"
      ListTools = "ts:ListTools"
      StartExecution = "ts:StartExecution"
      TagResource = "ts:TagResource"
      UntagResource = "ts:UntagResource"
    }
    user-subscriptions = {
      AllActions = "user-subscriptions:*"
      CreateClaim = "user-subscriptions:CreateClaim"
      DeleteClaim = "user-subscriptions:DeleteClaim"
      ListApplicationClaims = "user-subscriptions:ListApplicationClaims"
      ListClaims = "user-subscriptions:ListClaims"
      ListUserSubscriptions = "user-subscriptions:ListUserSubscriptions"
      UpdateClaim = "user-subscriptions:UpdateClaim"
    }
    vendor-insights = {
      AllActions = "vendor-insights:*"
      ActivateSecurityProfile = "vendor-insights:ActivateSecurityProfile"
      AssociateDataSource = "vendor-insights:AssociateDataSource"
      CreateDataSource = "vendor-insights:CreateDataSource"
      CreateSecurityProfile = "vendor-insights:CreateSecurityProfile"
      DeactivateSecurityProfile = "vendor-insights:DeactivateSecurityProfile"
      DeleteDataSource = "vendor-insights:DeleteDataSource"
      DisassociateDataSource = "vendor-insights:DisassociateDataSource"
      GetDataSource = "vendor-insights:GetDataSource"
      GetEntitledSecurityProfileSnapshot = "vendor-insights:GetEntitledSecurityProfileSnapshot"
      GetProfileAccessTerms = "vendor-insights:GetProfileAccessTerms"
      GetSecurityProfile = "vendor-insights:GetSecurityProfile"
      GetSecurityProfileSnapshot = "vendor-insights:GetSecurityProfileSnapshot"
      ListDataSources = "vendor-insights:ListDataSources"
      ListEntitledSecurityProfileSnapshots = "vendor-insights:ListEntitledSecurityProfileSnapshots"
      ListEntitledSecurityProfiles = "vendor-insights:ListEntitledSecurityProfiles"
      ListSecurityProfileSnapshots = "vendor-insights:ListSecurityProfileSnapshots"
      ListSecurityProfiles = "vendor-insights:ListSecurityProfiles"
      ListTagsForResource = "vendor-insights:ListTagsForResource"
      TagResource = "vendor-insights:TagResource"
      UntagResource = "vendor-insights:UntagResource"
      UpdateDataSource = "vendor-insights:UpdateDataSource"
      UpdateSecurityProfile = "vendor-insights:UpdateSecurityProfile"
      UpdateSecurityProfileSnapshotCreationConfiguration = "vendor-insights:UpdateSecurityProfileSnapshotCreationConfiguration"
      UpdateSecurityProfileSnapshotReleaseConfiguration = "vendor-insights:UpdateSecurityProfileSnapshotReleaseConfiguration"
    }
    verified-access = {
      AllActions = "verified-access:*"
      AllowVerifiedAccess = "verified-access:AllowVerifiedAccess"
    }
    verifiedpermissions = {
      AllActions = "verifiedpermissions:*"
      CreateIdentitySource = "verifiedpermissions:CreateIdentitySource"
      CreatePolicy = "verifiedpermissions:CreatePolicy"
      CreatePolicyStore = "verifiedpermissions:CreatePolicyStore"
      CreatePolicyTemplate = "verifiedpermissions:CreatePolicyTemplate"
      DeleteIdentitySource = "verifiedpermissions:DeleteIdentitySource"
      DeletePolicy = "verifiedpermissions:DeletePolicy"
      DeletePolicyStore = "verifiedpermissions:DeletePolicyStore"
      DeletePolicyTemplate = "verifiedpermissions:DeletePolicyTemplate"
      GetIdentitySource = "verifiedpermissions:GetIdentitySource"
      GetPolicy = "verifiedpermissions:GetPolicy"
      GetPolicyStore = "verifiedpermissions:GetPolicyStore"
      GetPolicyTemplate = "verifiedpermissions:GetPolicyTemplate"
      GetSchema = "verifiedpermissions:GetSchema"
      IsAuthorized = "verifiedpermissions:IsAuthorized"
      IsAuthorizedWithToken = "verifiedpermissions:IsAuthorizedWithToken"
      ListIdentitySources = "verifiedpermissions:ListIdentitySources"
      ListPolicies = "verifiedpermissions:ListPolicies"
      ListPolicyStores = "verifiedpermissions:ListPolicyStores"
      ListPolicyTemplates = "verifiedpermissions:ListPolicyTemplates"
      PutSchema = "verifiedpermissions:PutSchema"
      UpdateIdentitySource = "verifiedpermissions:UpdateIdentitySource"
      UpdatePolicy = "verifiedpermissions:UpdatePolicy"
      UpdatePolicyStore = "verifiedpermissions:UpdatePolicyStore"
      UpdatePolicyTemplate = "verifiedpermissions:UpdatePolicyTemplate"
    }
    voiceid = {
      AllActions = "voiceid:*"
      AssociateFraudster = "voiceid:AssociateFraudster"
      CreateDomain = "voiceid:CreateDomain"
      CreateWatchlist = "voiceid:CreateWatchlist"
      DeleteDomain = "voiceid:DeleteDomain"
      DeleteFraudster = "voiceid:DeleteFraudster"
      DeleteSpeaker = "voiceid:DeleteSpeaker"
      DeleteWatchlist = "voiceid:DeleteWatchlist"
      DescribeComplianceConsent = "voiceid:DescribeComplianceConsent"
      DescribeDomain = "voiceid:DescribeDomain"
      DescribeFraudster = "voiceid:DescribeFraudster"
      DescribeFraudsterRegistrationJob = "voiceid:DescribeFraudsterRegistrationJob"
      DescribeSpeaker = "voiceid:DescribeSpeaker"
      DescribeSpeakerEnrollmentJob = "voiceid:DescribeSpeakerEnrollmentJob"
      DescribeWatchlist = "voiceid:DescribeWatchlist"
      DisassociateFraudster = "voiceid:DisassociateFraudster"
      EvaluateSession = "voiceid:EvaluateSession"
      ListDomains = "voiceid:ListDomains"
      ListFraudsterRegistrationJobs = "voiceid:ListFraudsterRegistrationJobs"
      ListFraudsters = "voiceid:ListFraudsters"
      ListSpeakerEnrollmentJobs = "voiceid:ListSpeakerEnrollmentJobs"
      ListSpeakers = "voiceid:ListSpeakers"
      ListTagsForResource = "voiceid:ListTagsForResource"
      ListWatchlists = "voiceid:ListWatchlists"
      OptOutSpeaker = "voiceid:OptOutSpeaker"
      RegisterComplianceConsent = "voiceid:RegisterComplianceConsent"
      StartFraudsterRegistrationJob = "voiceid:StartFraudsterRegistrationJob"
      StartSpeakerEnrollmentJob = "voiceid:StartSpeakerEnrollmentJob"
      TagResource = "voiceid:TagResource"
      UntagResource = "voiceid:UntagResource"
      UpdateDomain = "voiceid:UpdateDomain"
      UpdateWatchlist = "voiceid:UpdateWatchlist"
    }
    vpc-lattice-svcs = {
      AllActions = "vpc-lattice-svcs:*"
      Connect = "vpc-lattice-svcs:Connect"
      Invoke = "vpc-lattice-svcs:Invoke"
    }
    vpc-lattice = {
      AllActions = "vpc-lattice:*"
      CreateAccessLogSubscription = "vpc-lattice:CreateAccessLogSubscription"
      CreateListener = "vpc-lattice:CreateListener"
      CreateRule = "vpc-lattice:CreateRule"
      CreateService = "vpc-lattice:CreateService"
      CreateServiceNetwork = "vpc-lattice:CreateServiceNetwork"
      CreateServiceNetworkServiceAssociation = "vpc-lattice:CreateServiceNetworkServiceAssociation"
      CreateServiceNetworkVpcAssociation = "vpc-lattice:CreateServiceNetworkVpcAssociation"
      CreateTargetGroup = "vpc-lattice:CreateTargetGroup"
      DeleteAccessLogSubscription = "vpc-lattice:DeleteAccessLogSubscription"
      DeleteAuthPolicy = "vpc-lattice:DeleteAuthPolicy"
      DeleteListener = "vpc-lattice:DeleteListener"
      DeleteResourcePolicy = "vpc-lattice:DeleteResourcePolicy"
      DeleteRule = "vpc-lattice:DeleteRule"
      DeleteService = "vpc-lattice:DeleteService"
      DeleteServiceNetwork = "vpc-lattice:DeleteServiceNetwork"
      DeleteServiceNetworkServiceAssociation = "vpc-lattice:DeleteServiceNetworkServiceAssociation"
      DeleteServiceNetworkVpcAssociation = "vpc-lattice:DeleteServiceNetworkVpcAssociation"
      DeleteTargetGroup = "vpc-lattice:DeleteTargetGroup"
      DeregisterTargets = "vpc-lattice:DeregisterTargets"
      GetAccessLogSubscription = "vpc-lattice:GetAccessLogSubscription"
      GetAuthPolicy = "vpc-lattice:GetAuthPolicy"
      GetListener = "vpc-lattice:GetListener"
      GetResourcePolicy = "vpc-lattice:GetResourcePolicy"
      GetRule = "vpc-lattice:GetRule"
      GetService = "vpc-lattice:GetService"
      GetServiceNetwork = "vpc-lattice:GetServiceNetwork"
      GetServiceNetworkServiceAssociation = "vpc-lattice:GetServiceNetworkServiceAssociation"
      GetServiceNetworkVpcAssociation = "vpc-lattice:GetServiceNetworkVpcAssociation"
      GetTargetGroup = "vpc-lattice:GetTargetGroup"
      ListAccessLogSubscriptions = "vpc-lattice:ListAccessLogSubscriptions"
      ListListeners = "vpc-lattice:ListListeners"
      ListRules = "vpc-lattice:ListRules"
      ListServiceNetworkServiceAssociations = "vpc-lattice:ListServiceNetworkServiceAssociations"
      ListServiceNetworkVpcAssociations = "vpc-lattice:ListServiceNetworkVpcAssociations"
      ListServiceNetworks = "vpc-lattice:ListServiceNetworks"
      ListServices = "vpc-lattice:ListServices"
      ListTagsForResource = "vpc-lattice:ListTagsForResource"
      ListTargetGroups = "vpc-lattice:ListTargetGroups"
      ListTargets = "vpc-lattice:ListTargets"
      PutAuthPolicy = "vpc-lattice:PutAuthPolicy"
      PutResourcePolicy = "vpc-lattice:PutResourcePolicy"
      RegisterTargets = "vpc-lattice:RegisterTargets"
      TagResource = "vpc-lattice:TagResource"
      UntagResource = "vpc-lattice:UntagResource"
      UpdateAccessLogSubscription = "vpc-lattice:UpdateAccessLogSubscription"
      UpdateListener = "vpc-lattice:UpdateListener"
      UpdateRule = "vpc-lattice:UpdateRule"
      UpdateService = "vpc-lattice:UpdateService"
      UpdateServiceNetwork = "vpc-lattice:UpdateServiceNetwork"
      UpdateServiceNetworkVpcAssociation = "vpc-lattice:UpdateServiceNetworkVpcAssociation"
      UpdateTargetGroup = "vpc-lattice:UpdateTargetGroup"
    }
    waf-regional = {
      AllActions = "waf-regional:*"
      AssociateWebACL = "waf-regional:AssociateWebACL"
      CreateByteMatchSet = "waf-regional:CreateByteMatchSet"
      CreateGeoMatchSet = "waf-regional:CreateGeoMatchSet"
      CreateIPSet = "waf-regional:CreateIPSet"
      CreateRateBasedRule = "waf-regional:CreateRateBasedRule"
      CreateRegexMatchSet = "waf-regional:CreateRegexMatchSet"
      CreateRegexPatternSet = "waf-regional:CreateRegexPatternSet"
      CreateRule = "waf-regional:CreateRule"
      CreateRuleGroup = "waf-regional:CreateRuleGroup"
      CreateSizeConstraintSet = "waf-regional:CreateSizeConstraintSet"
      CreateSqlInjectionMatchSet = "waf-regional:CreateSqlInjectionMatchSet"
      CreateWebACL = "waf-regional:CreateWebACL"
      CreateWebACLMigrationStack = "waf-regional:CreateWebACLMigrationStack"
      CreateXssMatchSet = "waf-regional:CreateXssMatchSet"
      DeleteByteMatchSet = "waf-regional:DeleteByteMatchSet"
      DeleteGeoMatchSet = "waf-regional:DeleteGeoMatchSet"
      DeleteIPSet = "waf-regional:DeleteIPSet"
      DeleteLoggingConfiguration = "waf-regional:DeleteLoggingConfiguration"
      DeletePermissionPolicy = "waf-regional:DeletePermissionPolicy"
      DeleteRateBasedRule = "waf-regional:DeleteRateBasedRule"
      DeleteRegexMatchSet = "waf-regional:DeleteRegexMatchSet"
      DeleteRegexPatternSet = "waf-regional:DeleteRegexPatternSet"
      DeleteRule = "waf-regional:DeleteRule"
      DeleteRuleGroup = "waf-regional:DeleteRuleGroup"
      DeleteSizeConstraintSet = "waf-regional:DeleteSizeConstraintSet"
      DeleteSqlInjectionMatchSet = "waf-regional:DeleteSqlInjectionMatchSet"
      DeleteWebACL = "waf-regional:DeleteWebACL"
      DeleteXssMatchSet = "waf-regional:DeleteXssMatchSet"
      DisassociateWebACL = "waf-regional:DisassociateWebACL"
      GetByteMatchSet = "waf-regional:GetByteMatchSet"
      GetChangeToken = "waf-regional:GetChangeToken"
      GetChangeTokenStatus = "waf-regional:GetChangeTokenStatus"
      GetGeoMatchSet = "waf-regional:GetGeoMatchSet"
      GetIPSet = "waf-regional:GetIPSet"
      GetLoggingConfiguration = "waf-regional:GetLoggingConfiguration"
      GetPermissionPolicy = "waf-regional:GetPermissionPolicy"
      GetRateBasedRule = "waf-regional:GetRateBasedRule"
      GetRateBasedRuleManagedKeys = "waf-regional:GetRateBasedRuleManagedKeys"
      GetRegexMatchSet = "waf-regional:GetRegexMatchSet"
      GetRegexPatternSet = "waf-regional:GetRegexPatternSet"
      GetRule = "waf-regional:GetRule"
      GetRuleGroup = "waf-regional:GetRuleGroup"
      GetSampledRequests = "waf-regional:GetSampledRequests"
      GetSizeConstraintSet = "waf-regional:GetSizeConstraintSet"
      GetSqlInjectionMatchSet = "waf-regional:GetSqlInjectionMatchSet"
      GetWebACL = "waf-regional:GetWebACL"
      GetWebACLForResource = "waf-regional:GetWebACLForResource"
      GetXssMatchSet = "waf-regional:GetXssMatchSet"
      ListActivatedRulesInRuleGroup = "waf-regional:ListActivatedRulesInRuleGroup"
      ListByteMatchSets = "waf-regional:ListByteMatchSets"
      ListGeoMatchSets = "waf-regional:ListGeoMatchSets"
      ListIPSets = "waf-regional:ListIPSets"
      ListLoggingConfigurations = "waf-regional:ListLoggingConfigurations"
      ListRateBasedRules = "waf-regional:ListRateBasedRules"
      ListRegexMatchSets = "waf-regional:ListRegexMatchSets"
      ListRegexPatternSets = "waf-regional:ListRegexPatternSets"
      ListResourcesForWebACL = "waf-regional:ListResourcesForWebACL"
      ListRuleGroups = "waf-regional:ListRuleGroups"
      ListRules = "waf-regional:ListRules"
      ListSizeConstraintSets = "waf-regional:ListSizeConstraintSets"
      ListSqlInjectionMatchSets = "waf-regional:ListSqlInjectionMatchSets"
      ListSubscribedRuleGroups = "waf-regional:ListSubscribedRuleGroups"
      ListTagsForResource = "waf-regional:ListTagsForResource"
      ListWebACLs = "waf-regional:ListWebACLs"
      ListXssMatchSets = "waf-regional:ListXssMatchSets"
      PutLoggingConfiguration = "waf-regional:PutLoggingConfiguration"
      PutPermissionPolicy = "waf-regional:PutPermissionPolicy"
      TagResource = "waf-regional:TagResource"
      UntagResource = "waf-regional:UntagResource"
      UpdateByteMatchSet = "waf-regional:UpdateByteMatchSet"
      UpdateGeoMatchSet = "waf-regional:UpdateGeoMatchSet"
      UpdateIPSet = "waf-regional:UpdateIPSet"
      UpdateRateBasedRule = "waf-regional:UpdateRateBasedRule"
      UpdateRegexMatchSet = "waf-regional:UpdateRegexMatchSet"
      UpdateRegexPatternSet = "waf-regional:UpdateRegexPatternSet"
      UpdateRule = "waf-regional:UpdateRule"
      UpdateRuleGroup = "waf-regional:UpdateRuleGroup"
      UpdateSizeConstraintSet = "waf-regional:UpdateSizeConstraintSet"
      UpdateSqlInjectionMatchSet = "waf-regional:UpdateSqlInjectionMatchSet"
      UpdateWebACL = "waf-regional:UpdateWebACL"
      UpdateXssMatchSet = "waf-regional:UpdateXssMatchSet"
    }
    waf = {
      AllActions = "waf:*"
      CreateByteMatchSet = "waf:CreateByteMatchSet"
      CreateGeoMatchSet = "waf:CreateGeoMatchSet"
      CreateIPSet = "waf:CreateIPSet"
      CreateRateBasedRule = "waf:CreateRateBasedRule"
      CreateRegexMatchSet = "waf:CreateRegexMatchSet"
      CreateRegexPatternSet = "waf:CreateRegexPatternSet"
      CreateRule = "waf:CreateRule"
      CreateRuleGroup = "waf:CreateRuleGroup"
      CreateSizeConstraintSet = "waf:CreateSizeConstraintSet"
      CreateSqlInjectionMatchSet = "waf:CreateSqlInjectionMatchSet"
      CreateWebACL = "waf:CreateWebACL"
      CreateWebACLMigrationStack = "waf:CreateWebACLMigrationStack"
      CreateXssMatchSet = "waf:CreateXssMatchSet"
      DeleteByteMatchSet = "waf:DeleteByteMatchSet"
      DeleteGeoMatchSet = "waf:DeleteGeoMatchSet"
      DeleteIPSet = "waf:DeleteIPSet"
      DeleteLoggingConfiguration = "waf:DeleteLoggingConfiguration"
      DeletePermissionPolicy = "waf:DeletePermissionPolicy"
      DeleteRateBasedRule = "waf:DeleteRateBasedRule"
      DeleteRegexMatchSet = "waf:DeleteRegexMatchSet"
      DeleteRegexPatternSet = "waf:DeleteRegexPatternSet"
      DeleteRule = "waf:DeleteRule"
      DeleteRuleGroup = "waf:DeleteRuleGroup"
      DeleteSizeConstraintSet = "waf:DeleteSizeConstraintSet"
      DeleteSqlInjectionMatchSet = "waf:DeleteSqlInjectionMatchSet"
      DeleteWebACL = "waf:DeleteWebACL"
      DeleteXssMatchSet = "waf:DeleteXssMatchSet"
      GetByteMatchSet = "waf:GetByteMatchSet"
      GetChangeToken = "waf:GetChangeToken"
      GetChangeTokenStatus = "waf:GetChangeTokenStatus"
      GetGeoMatchSet = "waf:GetGeoMatchSet"
      GetIPSet = "waf:GetIPSet"
      GetLoggingConfiguration = "waf:GetLoggingConfiguration"
      GetPermissionPolicy = "waf:GetPermissionPolicy"
      GetRateBasedRule = "waf:GetRateBasedRule"
      GetRateBasedRuleManagedKeys = "waf:GetRateBasedRuleManagedKeys"
      GetRegexMatchSet = "waf:GetRegexMatchSet"
      GetRegexPatternSet = "waf:GetRegexPatternSet"
      GetRule = "waf:GetRule"
      GetRuleGroup = "waf:GetRuleGroup"
      GetSampledRequests = "waf:GetSampledRequests"
      GetSizeConstraintSet = "waf:GetSizeConstraintSet"
      GetSqlInjectionMatchSet = "waf:GetSqlInjectionMatchSet"
      GetWebACL = "waf:GetWebACL"
      GetXssMatchSet = "waf:GetXssMatchSet"
      ListActivatedRulesInRuleGroup = "waf:ListActivatedRulesInRuleGroup"
      ListByteMatchSets = "waf:ListByteMatchSets"
      ListGeoMatchSets = "waf:ListGeoMatchSets"
      ListIPSets = "waf:ListIPSets"
      ListLoggingConfigurations = "waf:ListLoggingConfigurations"
      ListRateBasedRules = "waf:ListRateBasedRules"
      ListRegexMatchSets = "waf:ListRegexMatchSets"
      ListRegexPatternSets = "waf:ListRegexPatternSets"
      ListRuleGroups = "waf:ListRuleGroups"
      ListRules = "waf:ListRules"
      ListSizeConstraintSets = "waf:ListSizeConstraintSets"
      ListSqlInjectionMatchSets = "waf:ListSqlInjectionMatchSets"
      ListSubscribedRuleGroups = "waf:ListSubscribedRuleGroups"
      ListTagsForResource = "waf:ListTagsForResource"
      ListWebACLs = "waf:ListWebACLs"
      ListXssMatchSets = "waf:ListXssMatchSets"
      PutLoggingConfiguration = "waf:PutLoggingConfiguration"
      PutPermissionPolicy = "waf:PutPermissionPolicy"
      TagResource = "waf:TagResource"
      UntagResource = "waf:UntagResource"
      UpdateByteMatchSet = "waf:UpdateByteMatchSet"
      UpdateGeoMatchSet = "waf:UpdateGeoMatchSet"
      UpdateIPSet = "waf:UpdateIPSet"
      UpdateRateBasedRule = "waf:UpdateRateBasedRule"
      UpdateRegexMatchSet = "waf:UpdateRegexMatchSet"
      UpdateRegexPatternSet = "waf:UpdateRegexPatternSet"
      UpdateRule = "waf:UpdateRule"
      UpdateRuleGroup = "waf:UpdateRuleGroup"
      UpdateSizeConstraintSet = "waf:UpdateSizeConstraintSet"
      UpdateSqlInjectionMatchSet = "waf:UpdateSqlInjectionMatchSet"
      UpdateWebACL = "waf:UpdateWebACL"
      UpdateXssMatchSet = "waf:UpdateXssMatchSet"
    }
    wafv2 = {
      AllActions = "wafv2:*"
      AssociateWebACL = "wafv2:AssociateWebACL"
      CheckCapacity = "wafv2:CheckCapacity"
      CreateAPIKey = "wafv2:CreateAPIKey"
      CreateIPSet = "wafv2:CreateIPSet"
      CreateRegexPatternSet = "wafv2:CreateRegexPatternSet"
      CreateRuleGroup = "wafv2:CreateRuleGroup"
      CreateWebACL = "wafv2:CreateWebACL"
      DeleteAPIKey = "wafv2:DeleteAPIKey"
      DeleteFirewallManagerRuleGroups = "wafv2:DeleteFirewallManagerRuleGroups"
      DeleteIPSet = "wafv2:DeleteIPSet"
      DeleteLoggingConfiguration = "wafv2:DeleteLoggingConfiguration"
      DeletePermissionPolicy = "wafv2:DeletePermissionPolicy"
      DeleteRegexPatternSet = "wafv2:DeleteRegexPatternSet"
      DeleteRuleGroup = "wafv2:DeleteRuleGroup"
      DeleteWebACL = "wafv2:DeleteWebACL"
      DescribeAllManagedProducts = "wafv2:DescribeAllManagedProducts"
      DescribeManagedProductsByVendor = "wafv2:DescribeManagedProductsByVendor"
      DescribeManagedRuleGroup = "wafv2:DescribeManagedRuleGroup"
      DisassociateFirewallManager = "wafv2:DisassociateFirewallManager"
      DisassociateWebACL = "wafv2:DisassociateWebACL"
      GenerateMobileSdkReleaseUrl = "wafv2:GenerateMobileSdkReleaseUrl"
      GetDecryptedAPIKey = "wafv2:GetDecryptedAPIKey"
      GetIPSet = "wafv2:GetIPSet"
      GetLoggingConfiguration = "wafv2:GetLoggingConfiguration"
      GetManagedRuleSet = "wafv2:GetManagedRuleSet"
      GetMobileSdkRelease = "wafv2:GetMobileSdkRelease"
      GetPermissionPolicy = "wafv2:GetPermissionPolicy"
      GetRateBasedStatementManagedKeys = "wafv2:GetRateBasedStatementManagedKeys"
      GetRegexPatternSet = "wafv2:GetRegexPatternSet"
      GetRuleGroup = "wafv2:GetRuleGroup"
      GetSampledRequests = "wafv2:GetSampledRequests"
      GetWebACL = "wafv2:GetWebACL"
      GetWebACLForResource = "wafv2:GetWebACLForResource"
      ListAPIKeys = "wafv2:ListAPIKeys"
      ListAvailableManagedRuleGroupVersions = "wafv2:ListAvailableManagedRuleGroupVersions"
      ListAvailableManagedRuleGroups = "wafv2:ListAvailableManagedRuleGroups"
      ListIPSets = "wafv2:ListIPSets"
      ListLoggingConfigurations = "wafv2:ListLoggingConfigurations"
      ListManagedRuleSets = "wafv2:ListManagedRuleSets"
      ListMobileSdkReleases = "wafv2:ListMobileSdkReleases"
      ListRegexPatternSets = "wafv2:ListRegexPatternSets"
      ListResourcesForWebACL = "wafv2:ListResourcesForWebACL"
      ListRuleGroups = "wafv2:ListRuleGroups"
      ListTagsForResource = "wafv2:ListTagsForResource"
      ListWebACLs = "wafv2:ListWebACLs"
      PutFirewallManagerRuleGroups = "wafv2:PutFirewallManagerRuleGroups"
      PutLoggingConfiguration = "wafv2:PutLoggingConfiguration"
      PutManagedRuleSetVersions = "wafv2:PutManagedRuleSetVersions"
      PutPermissionPolicy = "wafv2:PutPermissionPolicy"
      TagResource = "wafv2:TagResource"
      UntagResource = "wafv2:UntagResource"
      UpdateIPSet = "wafv2:UpdateIPSet"
      UpdateManagedRuleSetVersionExpiryDate = "wafv2:UpdateManagedRuleSetVersionExpiryDate"
      UpdateRegexPatternSet = "wafv2:UpdateRegexPatternSet"
      UpdateRuleGroup = "wafv2:UpdateRuleGroup"
      UpdateWebACL = "wafv2:UpdateWebACL"
    }
    wam = {
      AllActions = "wam:*"
      AuthenticatePackager = "wam:AuthenticatePackager"
    }
    wellarchitected = {
      AllActions = "wellarchitected:*"
      AssociateLenses = "wellarchitected:AssociateLenses"
      AssociateProfiles = "wellarchitected:AssociateProfiles"
      ConfigureIntegration = "wellarchitected:ConfigureIntegration"
      CreateLensShare = "wellarchitected:CreateLensShare"
      CreateLensVersion = "wellarchitected:CreateLensVersion"
      CreateMilestone = "wellarchitected:CreateMilestone"
      CreateProfile = "wellarchitected:CreateProfile"
      CreateProfileShare = "wellarchitected:CreateProfileShare"
      CreateReviewTemplate = "wellarchitected:CreateReviewTemplate"
      CreateTemplateShare = "wellarchitected:CreateTemplateShare"
      CreateWorkload = "wellarchitected:CreateWorkload"
      CreateWorkloadShare = "wellarchitected:CreateWorkloadShare"
      DeleteLens = "wellarchitected:DeleteLens"
      DeleteLensShare = "wellarchitected:DeleteLensShare"
      DeleteProfile = "wellarchitected:DeleteProfile"
      DeleteProfileShare = "wellarchitected:DeleteProfileShare"
      DeleteReviewTemplate = "wellarchitected:DeleteReviewTemplate"
      DeleteTemplateShare = "wellarchitected:DeleteTemplateShare"
      DeleteWorkload = "wellarchitected:DeleteWorkload"
      DeleteWorkloadShare = "wellarchitected:DeleteWorkloadShare"
      DisassociateLenses = "wellarchitected:DisassociateLenses"
      DisassociateProfiles = "wellarchitected:DisassociateProfiles"
      ExportLens = "wellarchitected:ExportLens"
      GetAnswer = "wellarchitected:GetAnswer"
      GetConsolidatedReport = "wellarchitected:GetConsolidatedReport"
      GetGlobalSettings = "wellarchitected:GetGlobalSettings"
      GetLens = "wellarchitected:GetLens"
      GetLensReview = "wellarchitected:GetLensReview"
      GetLensReviewReport = "wellarchitected:GetLensReviewReport"
      GetLensVersionDifference = "wellarchitected:GetLensVersionDifference"
      GetMilestone = "wellarchitected:GetMilestone"
      GetProfile = "wellarchitected:GetProfile"
      GetProfileTemplate = "wellarchitected:GetProfileTemplate"
      GetReviewTemplate = "wellarchitected:GetReviewTemplate"
      GetReviewTemplateAnswer = "wellarchitected:GetReviewTemplateAnswer"
      GetReviewTemplateLensReview = "wellarchitected:GetReviewTemplateLensReview"
      GetWorkload = "wellarchitected:GetWorkload"
      ImportLens = "wellarchitected:ImportLens"
      ListAnswers = "wellarchitected:ListAnswers"
      ListCheckDetails = "wellarchitected:ListCheckDetails"
      ListCheckSummaries = "wellarchitected:ListCheckSummaries"
      ListLensReviewImprovements = "wellarchitected:ListLensReviewImprovements"
      ListLensReviews = "wellarchitected:ListLensReviews"
      ListLensShares = "wellarchitected:ListLensShares"
      ListLenses = "wellarchitected:ListLenses"
      ListMilestones = "wellarchitected:ListMilestones"
      ListNotifications = "wellarchitected:ListNotifications"
      ListProfileNotifications = "wellarchitected:ListProfileNotifications"
      ListProfileShares = "wellarchitected:ListProfileShares"
      ListProfiles = "wellarchitected:ListProfiles"
      ListReviewTemplateAnswers = "wellarchitected:ListReviewTemplateAnswers"
      ListReviewTemplates = "wellarchitected:ListReviewTemplates"
      ListShareInvitations = "wellarchitected:ListShareInvitations"
      ListTagsForResource = "wellarchitected:ListTagsForResource"
      ListTemplateShares = "wellarchitected:ListTemplateShares"
      ListWorkloadShares = "wellarchitected:ListWorkloadShares"
      ListWorkloads = "wellarchitected:ListWorkloads"
      TagResource = "wellarchitected:TagResource"
      UntagResource = "wellarchitected:UntagResource"
      UpdateAnswer = "wellarchitected:UpdateAnswer"
      UpdateGlobalSettings = "wellarchitected:UpdateGlobalSettings"
      UpdateIntegration = "wellarchitected:UpdateIntegration"
      UpdateLensReview = "wellarchitected:UpdateLensReview"
      UpdateProfile = "wellarchitected:UpdateProfile"
      UpdateReviewTemplate = "wellarchitected:UpdateReviewTemplate"
      UpdateReviewTemplateAnswer = "wellarchitected:UpdateReviewTemplateAnswer"
      UpdateReviewTemplateLensReview = "wellarchitected:UpdateReviewTemplateLensReview"
      UpdateShareInvitation = "wellarchitected:UpdateShareInvitation"
      UpdateWorkload = "wellarchitected:UpdateWorkload"
      UpdateWorkloadShare = "wellarchitected:UpdateWorkloadShare"
      UpgradeLensReview = "wellarchitected:UpgradeLensReview"
      UpgradeProfileVersion = "wellarchitected:UpgradeProfileVersion"
      UpgradeReviewTemplateLensReview = "wellarchitected:UpgradeReviewTemplateLensReview"
    }
    wickr = {
      AllActions = "wickr:*"
      CreateAdminSession = "wickr:CreateAdminSession"
      CreateNetwork = "wickr:CreateNetwork"
      ListNetworks = "wickr:ListNetworks"
      ListTagsForResource = "wickr:ListTagsForResource"
      TagResource = "wickr:TagResource"
      UntagResource = "wickr:UntagResource"
      UpdateNetworkDetails = "wickr:UpdateNetworkDetails"
    }
    wisdom = {
      AllActions = "wisdom:*"
      CreateAssistant = "wisdom:CreateAssistant"
      CreateAssistantAssociation = "wisdom:CreateAssistantAssociation"
      CreateContent = "wisdom:CreateContent"
      CreateContentAssociation = "wisdom:CreateContentAssociation"
      CreateKnowledgeBase = "wisdom:CreateKnowledgeBase"
      CreateQuickResponse = "wisdom:CreateQuickResponse"
      CreateSession = "wisdom:CreateSession"
      DeleteAssistant = "wisdom:DeleteAssistant"
      DeleteAssistantAssociation = "wisdom:DeleteAssistantAssociation"
      DeleteContent = "wisdom:DeleteContent"
      DeleteContentAssociation = "wisdom:DeleteContentAssociation"
      DeleteImportJob = "wisdom:DeleteImportJob"
      DeleteKnowledgeBase = "wisdom:DeleteKnowledgeBase"
      DeleteQuickResponse = "wisdom:DeleteQuickResponse"
      GetAssistant = "wisdom:GetAssistant"
      GetAssistantAssociation = "wisdom:GetAssistantAssociation"
      GetContent = "wisdom:GetContent"
      GetContentAssociation = "wisdom:GetContentAssociation"
      GetContentSummary = "wisdom:GetContentSummary"
      GetImportJob = "wisdom:GetImportJob"
      GetKnowledgeBase = "wisdom:GetKnowledgeBase"
      GetQuickResponse = "wisdom:GetQuickResponse"
      GetRecommendations = "wisdom:GetRecommendations"
      GetSession = "wisdom:GetSession"
      ListAssistantAssociations = "wisdom:ListAssistantAssociations"
      ListAssistants = "wisdom:ListAssistants"
      ListContentAssociations = "wisdom:ListContentAssociations"
      ListContents = "wisdom:ListContents"
      ListImportJobs = "wisdom:ListImportJobs"
      ListKnowledgeBases = "wisdom:ListKnowledgeBases"
      ListQuickResponses = "wisdom:ListQuickResponses"
      ListTagsForResource = "wisdom:ListTagsForResource"
      NotifyRecommendationsReceived = "wisdom:NotifyRecommendationsReceived"
      PutFeedback = "wisdom:PutFeedback"
      QueryAssistant = "wisdom:QueryAssistant"
      RemoveKnowledgeBaseTemplateUri = "wisdom:RemoveKnowledgeBaseTemplateUri"
      SearchContent = "wisdom:SearchContent"
      SearchQuickResponses = "wisdom:SearchQuickResponses"
      SearchSessions = "wisdom:SearchSessions"
      StartContentUpload = "wisdom:StartContentUpload"
      StartImportJob = "wisdom:StartImportJob"
      TagResource = "wisdom:TagResource"
      UntagResource = "wisdom:UntagResource"
      UpdateContent = "wisdom:UpdateContent"
      UpdateKnowledgeBaseTemplateUri = "wisdom:UpdateKnowledgeBaseTemplateUri"
      UpdateQuickResponse = "wisdom:UpdateQuickResponse"
      UpdateSession = "wisdom:UpdateSession"
    }
    workdocs = {
      AllActions = "workdocs:*"
      AbortDocumentVersionUpload = "workdocs:AbortDocumentVersionUpload"
      ActivateUser = "workdocs:ActivateUser"
      AddNotificationPermissions = "workdocs:AddNotificationPermissions"
      AddResourcePermissions = "workdocs:AddResourcePermissions"
      AddUserToGroup = "workdocs:AddUserToGroup"
      CheckAlias = "workdocs:CheckAlias"
      CreateComment = "workdocs:CreateComment"
      CreateCustomMetadata = "workdocs:CreateCustomMetadata"
      CreateFolder = "workdocs:CreateFolder"
      CreateInstance = "workdocs:CreateInstance"
      CreateLabels = "workdocs:CreateLabels"
      CreateNotificationSubscription = "workdocs:CreateNotificationSubscription"
      CreateUser = "workdocs:CreateUser"
      DeactivateUser = "workdocs:DeactivateUser"
      DeleteComment = "workdocs:DeleteComment"
      DeleteCustomMetadata = "workdocs:DeleteCustomMetadata"
      DeleteDocument = "workdocs:DeleteDocument"
      DeleteDocumentVersion = "workdocs:DeleteDocumentVersion"
      DeleteFolder = "workdocs:DeleteFolder"
      DeleteFolderContents = "workdocs:DeleteFolderContents"
      DeleteInstance = "workdocs:DeleteInstance"
      DeleteLabels = "workdocs:DeleteLabels"
      DeleteNotificationPermissions = "workdocs:DeleteNotificationPermissions"
      DeleteNotificationSubscription = "workdocs:DeleteNotificationSubscription"
      DeleteUser = "workdocs:DeleteUser"
      DeregisterDirectory = "workdocs:DeregisterDirectory"
      DescribeActivities = "workdocs:DescribeActivities"
      DescribeAvailableDirectories = "workdocs:DescribeAvailableDirectories"
      DescribeComments = "workdocs:DescribeComments"
      DescribeDocumentVersions = "workdocs:DescribeDocumentVersions"
      DescribeFolderContents = "workdocs:DescribeFolderContents"
      DescribeGroups = "workdocs:DescribeGroups"
      DescribeInstanceExports = "workdocs:DescribeInstanceExports"
      DescribeInstances = "workdocs:DescribeInstances"
      DescribeNotificationPermissions = "workdocs:DescribeNotificationPermissions"
      DescribeNotificationSubscriptions = "workdocs:DescribeNotificationSubscriptions"
      DescribeResourcePermissions = "workdocs:DescribeResourcePermissions"
      DescribeRootFolders = "workdocs:DescribeRootFolders"
      DescribeUsers = "workdocs:DescribeUsers"
      DownloadDocumentVersion = "workdocs:DownloadDocumentVersion"
      GetCurrentUser = "workdocs:GetCurrentUser"
      GetDocument = "workdocs:GetDocument"
      GetDocumentPath = "workdocs:GetDocumentPath"
      GetDocumentVersion = "workdocs:GetDocumentVersion"
      GetFolder = "workdocs:GetFolder"
      GetFolderPath = "workdocs:GetFolderPath"
      GetGroup = "workdocs:GetGroup"
      GetResources = "workdocs:GetResources"
      InitiateDocumentVersionUpload = "workdocs:InitiateDocumentVersionUpload"
      RegisterDirectory = "workdocs:RegisterDirectory"
      RemoveAllResourcePermissions = "workdocs:RemoveAllResourcePermissions"
      RemoveResourcePermission = "workdocs:RemoveResourcePermission"
      RestoreDocumentVersions = "workdocs:RestoreDocumentVersions"
      SearchResources = "workdocs:SearchResources"
      StartInstanceExport = "workdocs:StartInstanceExport"
      UpdateDocument = "workdocs:UpdateDocument"
      UpdateDocumentVersion = "workdocs:UpdateDocumentVersion"
      UpdateFolder = "workdocs:UpdateFolder"
      UpdateInstanceAlias = "workdocs:UpdateInstanceAlias"
      UpdateUser = "workdocs:UpdateUser"
      UpdateUserAdministrativeSettings = "workdocs:UpdateUserAdministrativeSettings"
    }
    worklink = {
      AllActions = "worklink:*"
      AssociateDomain = "worklink:AssociateDomain"
      AssociateWebsiteAuthorizationProvider = "worklink:AssociateWebsiteAuthorizationProvider"
      AssociateWebsiteCertificateAuthority = "worklink:AssociateWebsiteCertificateAuthority"
      CreateFleet = "worklink:CreateFleet"
      DeleteFleet = "worklink:DeleteFleet"
      DescribeAuditStreamConfiguration = "worklink:DescribeAuditStreamConfiguration"
      DescribeCompanyNetworkConfiguration = "worklink:DescribeCompanyNetworkConfiguration"
      DescribeDevice = "worklink:DescribeDevice"
      DescribeDevicePolicyConfiguration = "worklink:DescribeDevicePolicyConfiguration"
      DescribeDomain = "worklink:DescribeDomain"
      DescribeFleetMetadata = "worklink:DescribeFleetMetadata"
      DescribeIdentityProviderConfiguration = "worklink:DescribeIdentityProviderConfiguration"
      DescribeWebsiteCertificateAuthority = "worklink:DescribeWebsiteCertificateAuthority"
      DisassociateDomain = "worklink:DisassociateDomain"
      DisassociateWebsiteAuthorizationProvider = "worklink:DisassociateWebsiteAuthorizationProvider"
      DisassociateWebsiteCertificateAuthority = "worklink:DisassociateWebsiteCertificateAuthority"
      ListDevices = "worklink:ListDevices"
      ListDomains = "worklink:ListDomains"
      ListFleets = "worklink:ListFleets"
      ListTagsForResource = "worklink:ListTagsForResource"
      ListWebsiteAuthorizationProviders = "worklink:ListWebsiteAuthorizationProviders"
      ListWebsiteCertificateAuthorities = "worklink:ListWebsiteCertificateAuthorities"
      RestoreDomainAccess = "worklink:RestoreDomainAccess"
      RevokeDomainAccess = "worklink:RevokeDomainAccess"
      SearchEntity = "worklink:SearchEntity"
      SignOutUser = "worklink:SignOutUser"
      TagResource = "worklink:TagResource"
      UntagResource = "worklink:UntagResource"
      UpdateAuditStreamConfiguration = "worklink:UpdateAuditStreamConfiguration"
      UpdateCompanyNetworkConfiguration = "worklink:UpdateCompanyNetworkConfiguration"
      UpdateDevicePolicyConfiguration = "worklink:UpdateDevicePolicyConfiguration"
      UpdateDomainMetadata = "worklink:UpdateDomainMetadata"
      UpdateFleetMetadata = "worklink:UpdateFleetMetadata"
      UpdateIdentityProviderConfiguration = "worklink:UpdateIdentityProviderConfiguration"
    }
    workmail = {
      AllActions = "workmail:*"
      AllowVendedLogDeliveryForResource = "workmail:AllowVendedLogDeliveryForResource"
      AssociateDelegateToResource = "workmail:AssociateDelegateToResource"
      AssociateMemberToGroup = "workmail:AssociateMemberToGroup"
      AssumeImpersonationRole = "workmail:AssumeImpersonationRole"
      CancelMailboxExportJob = "workmail:CancelMailboxExportJob"
      CreateAlias = "workmail:CreateAlias"
      CreateAvailabilityConfiguration = "workmail:CreateAvailabilityConfiguration"
      CreateGroup = "workmail:CreateGroup"
      CreateImpersonationRole = "workmail:CreateImpersonationRole"
      CreateInboundMailFlowRule = "workmail:CreateInboundMailFlowRule"
      CreateMailDomain = "workmail:CreateMailDomain"
      CreateMobileDeviceAccessRule = "workmail:CreateMobileDeviceAccessRule"
      CreateOrganization = "workmail:CreateOrganization"
      CreateOutboundMailFlowRule = "workmail:CreateOutboundMailFlowRule"
      CreateResource = "workmail:CreateResource"
      CreateSmtpGateway = "workmail:CreateSmtpGateway"
      CreateUser = "workmail:CreateUser"
      DeleteAccessControlRule = "workmail:DeleteAccessControlRule"
      DeleteAlias = "workmail:DeleteAlias"
      DeleteAvailabilityConfiguration = "workmail:DeleteAvailabilityConfiguration"
      DeleteEmailMonitoringConfiguration = "workmail:DeleteEmailMonitoringConfiguration"
      DeleteGroup = "workmail:DeleteGroup"
      DeleteImpersonationRole = "workmail:DeleteImpersonationRole"
      DeleteInboundMailFlowRule = "workmail:DeleteInboundMailFlowRule"
      DeleteMailDomain = "workmail:DeleteMailDomain"
      DeleteMailboxPermissions = "workmail:DeleteMailboxPermissions"
      DeleteMobileDevice = "workmail:DeleteMobileDevice"
      DeleteMobileDeviceAccessOverride = "workmail:DeleteMobileDeviceAccessOverride"
      DeleteMobileDeviceAccessRule = "workmail:DeleteMobileDeviceAccessRule"
      DeleteOrganization = "workmail:DeleteOrganization"
      DeleteOutboundMailFlowRule = "workmail:DeleteOutboundMailFlowRule"
      DeleteResource = "workmail:DeleteResource"
      DeleteRetentionPolicy = "workmail:DeleteRetentionPolicy"
      DeleteSmtpGateway = "workmail:DeleteSmtpGateway"
      DeleteUser = "workmail:DeleteUser"
      DeregisterFromWorkMail = "workmail:DeregisterFromWorkMail"
      DeregisterMailDomain = "workmail:DeregisterMailDomain"
      DescribeEmailMonitoringConfiguration = "workmail:DescribeEmailMonitoringConfiguration"
      DescribeEntity = "workmail:DescribeEntity"
      DescribeGroup = "workmail:DescribeGroup"
      DescribeInboundDmarcSettings = "workmail:DescribeInboundDmarcSettings"
      DescribeInboundMailFlowRule = "workmail:DescribeInboundMailFlowRule"
      DescribeMailDomains = "workmail:DescribeMailDomains"
      DescribeMailboxExportJob = "workmail:DescribeMailboxExportJob"
      DescribeOrganization = "workmail:DescribeOrganization"
      DescribeOutboundMailFlowRule = "workmail:DescribeOutboundMailFlowRule"
      DescribeResource = "workmail:DescribeResource"
      DescribeSmtpGateway = "workmail:DescribeSmtpGateway"
      DescribeUser = "workmail:DescribeUser"
      DisassociateDelegateFromResource = "workmail:DisassociateDelegateFromResource"
      DisassociateMemberFromGroup = "workmail:DisassociateMemberFromGroup"
      EnableMailDomain = "workmail:EnableMailDomain"
      GetAccessControlEffect = "workmail:GetAccessControlEffect"
      GetDefaultRetentionPolicy = "workmail:GetDefaultRetentionPolicy"
      GetImpersonationRole = "workmail:GetImpersonationRole"
      GetImpersonationRoleEffect = "workmail:GetImpersonationRoleEffect"
      GetJournalingRules = "workmail:GetJournalingRules"
      GetMailDomain = "workmail:GetMailDomain"
      GetMailDomainDetails = "workmail:GetMailDomainDetails"
      GetMailboxDetails = "workmail:GetMailboxDetails"
      GetMobileDeviceAccessEffect = "workmail:GetMobileDeviceAccessEffect"
      GetMobileDeviceAccessOverride = "workmail:GetMobileDeviceAccessOverride"
      GetMobileDeviceDetails = "workmail:GetMobileDeviceDetails"
      GetMobileDevicesForUser = "workmail:GetMobileDevicesForUser"
      GetMobilePolicyDetails = "workmail:GetMobilePolicyDetails"
      ListAccessControlRules = "workmail:ListAccessControlRules"
      ListAliases = "workmail:ListAliases"
      ListAvailabilityConfigurations = "workmail:ListAvailabilityConfigurations"
      ListGroupMembers = "workmail:ListGroupMembers"
      ListGroups = "workmail:ListGroups"
      ListGroupsForEntity = "workmail:ListGroupsForEntity"
      ListImpersonationRoles = "workmail:ListImpersonationRoles"
      ListInboundMailFlowRules = "workmail:ListInboundMailFlowRules"
      ListMailDomains = "workmail:ListMailDomains"
      ListMailboxExportJobs = "workmail:ListMailboxExportJobs"
      ListMailboxPermissions = "workmail:ListMailboxPermissions"
      ListMobileDeviceAccessOverrides = "workmail:ListMobileDeviceAccessOverrides"
      ListMobileDeviceAccessRules = "workmail:ListMobileDeviceAccessRules"
      ListOrganizations = "workmail:ListOrganizations"
      ListOutboundMailFlowRules = "workmail:ListOutboundMailFlowRules"
      ListResourceDelegates = "workmail:ListResourceDelegates"
      ListResources = "workmail:ListResources"
      ListSmtpGateways = "workmail:ListSmtpGateways"
      ListTagsForResource = "workmail:ListTagsForResource"
      ListUsers = "workmail:ListUsers"
      PutAccessControlRule = "workmail:PutAccessControlRule"
      PutEmailMonitoringConfiguration = "workmail:PutEmailMonitoringConfiguration"
      PutInboundDmarcSettings = "workmail:PutInboundDmarcSettings"
      PutMailboxPermissions = "workmail:PutMailboxPermissions"
      PutMobileDeviceAccessOverride = "workmail:PutMobileDeviceAccessOverride"
      PutRetentionPolicy = "workmail:PutRetentionPolicy"
      RegisterMailDomain = "workmail:RegisterMailDomain"
      RegisterToWorkMail = "workmail:RegisterToWorkMail"
      ResetPassword = "workmail:ResetPassword"
      SearchMembers = "workmail:SearchMembers"
      SetDefaultMailDomain = "workmail:SetDefaultMailDomain"
      SetJournalingRules = "workmail:SetJournalingRules"
      SetMobilePolicyDetails = "workmail:SetMobilePolicyDetails"
      StartMailboxExportJob = "workmail:StartMailboxExportJob"
      TagResource = "workmail:TagResource"
      TestAvailabilityConfiguration = "workmail:TestAvailabilityConfiguration"
      TestInboundMailFlowRules = "workmail:TestInboundMailFlowRules"
      TestOutboundMailFlowRules = "workmail:TestOutboundMailFlowRules"
      UntagResource = "workmail:UntagResource"
      UpdateAvailabilityConfiguration = "workmail:UpdateAvailabilityConfiguration"
      UpdateDefaultMailDomain = "workmail:UpdateDefaultMailDomain"
      UpdateGroup = "workmail:UpdateGroup"
      UpdateImpersonationRole = "workmail:UpdateImpersonationRole"
      UpdateInboundMailFlowRule = "workmail:UpdateInboundMailFlowRule"
      UpdateMailboxQuota = "workmail:UpdateMailboxQuota"
      UpdateMobileDeviceAccessRule = "workmail:UpdateMobileDeviceAccessRule"
      UpdateOutboundMailFlowRule = "workmail:UpdateOutboundMailFlowRule"
      UpdatePrimaryEmailAddress = "workmail:UpdatePrimaryEmailAddress"
      UpdateResource = "workmail:UpdateResource"
      UpdateSmtpGateway = "workmail:UpdateSmtpGateway"
      UpdateUser = "workmail:UpdateUser"
      WipeMobileDevice = "workmail:WipeMobileDevice"
    }
    workmailmessageflow = {
      AllActions = "workmailmessageflow:*"
      GetRawMessageContent = "workmailmessageflow:GetRawMessageContent"
      PutRawMessageContent = "workmailmessageflow:PutRawMessageContent"
    }
    workspaces-web = {
      AllActions = "workspaces-web:*"
      AssociateBrowserSettings = "workspaces-web:AssociateBrowserSettings"
      AssociateIpAccessSettings = "workspaces-web:AssociateIpAccessSettings"
      AssociateNetworkSettings = "workspaces-web:AssociateNetworkSettings"
      AssociateTrustStore = "workspaces-web:AssociateTrustStore"
      AssociateUserAccessLoggingSettings = "workspaces-web:AssociateUserAccessLoggingSettings"
      AssociateUserSettings = "workspaces-web:AssociateUserSettings"
      CreateBrowserSettings = "workspaces-web:CreateBrowserSettings"
      CreateIdentityProvider = "workspaces-web:CreateIdentityProvider"
      CreateIpAccessSettings = "workspaces-web:CreateIpAccessSettings"
      CreateNetworkSettings = "workspaces-web:CreateNetworkSettings"
      CreatePortal = "workspaces-web:CreatePortal"
      CreateTrustStore = "workspaces-web:CreateTrustStore"
      CreateUserAccessLoggingSettings = "workspaces-web:CreateUserAccessLoggingSettings"
      CreateUserSettings = "workspaces-web:CreateUserSettings"
      DeleteBrowserSettings = "workspaces-web:DeleteBrowserSettings"
      DeleteIdentityProvider = "workspaces-web:DeleteIdentityProvider"
      DeleteIpAccessSettings = "workspaces-web:DeleteIpAccessSettings"
      DeleteNetworkSettings = "workspaces-web:DeleteNetworkSettings"
      DeletePortal = "workspaces-web:DeletePortal"
      DeleteTrustStore = "workspaces-web:DeleteTrustStore"
      DeleteUserAccessLoggingSettings = "workspaces-web:DeleteUserAccessLoggingSettings"
      DeleteUserSettings = "workspaces-web:DeleteUserSettings"
      DisassociateBrowserSettings = "workspaces-web:DisassociateBrowserSettings"
      DisassociateIpAccessSettings = "workspaces-web:DisassociateIpAccessSettings"
      DisassociateNetworkSettings = "workspaces-web:DisassociateNetworkSettings"
      DisassociateTrustStore = "workspaces-web:DisassociateTrustStore"
      DisassociateUserAccessLoggingSettings = "workspaces-web:DisassociateUserAccessLoggingSettings"
      DisassociateUserSettings = "workspaces-web:DisassociateUserSettings"
      GetBrowserSettings = "workspaces-web:GetBrowserSettings"
      GetIdentityProvider = "workspaces-web:GetIdentityProvider"
      GetIpAccessSettings = "workspaces-web:GetIpAccessSettings"
      GetNetworkSettings = "workspaces-web:GetNetworkSettings"
      GetPortal = "workspaces-web:GetPortal"
      GetPortalServiceProviderMetadata = "workspaces-web:GetPortalServiceProviderMetadata"
      GetTrustStore = "workspaces-web:GetTrustStore"
      GetTrustStoreCertificate = "workspaces-web:GetTrustStoreCertificate"
      GetUserAccessLoggingSettings = "workspaces-web:GetUserAccessLoggingSettings"
      GetUserSettings = "workspaces-web:GetUserSettings"
      ListBrowserSettings = "workspaces-web:ListBrowserSettings"
      ListIdentityProviders = "workspaces-web:ListIdentityProviders"
      ListIpAccessSettings = "workspaces-web:ListIpAccessSettings"
      ListNetworkSettings = "workspaces-web:ListNetworkSettings"
      ListPortals = "workspaces-web:ListPortals"
      ListTagsForResource = "workspaces-web:ListTagsForResource"
      ListTrustStoreCertificates = "workspaces-web:ListTrustStoreCertificates"
      ListTrustStores = "workspaces-web:ListTrustStores"
      ListUserAccessLoggingSettings = "workspaces-web:ListUserAccessLoggingSettings"
      ListUserSettings = "workspaces-web:ListUserSettings"
      TagResource = "workspaces-web:TagResource"
      UntagResource = "workspaces-web:UntagResource"
      UpdateBrowserSettings = "workspaces-web:UpdateBrowserSettings"
      UpdateIdentityProvider = "workspaces-web:UpdateIdentityProvider"
      UpdateIpAccessSettings = "workspaces-web:UpdateIpAccessSettings"
      UpdateNetworkSettings = "workspaces-web:UpdateNetworkSettings"
      UpdatePortal = "workspaces-web:UpdatePortal"
      UpdateTrustStore = "workspaces-web:UpdateTrustStore"
      UpdateUserAccessLoggingSettings = "workspaces-web:UpdateUserAccessLoggingSettings"
      UpdateUserSettings = "workspaces-web:UpdateUserSettings"
    }
    workspaces = {
      AllActions = "workspaces:*"
      AcceptAccountLinkInvitation = "workspaces:AcceptAccountLinkInvitation"
      AssociateConnectionAlias = "workspaces:AssociateConnectionAlias"
      AssociateIpGroups = "workspaces:AssociateIpGroups"
      AssociateWorkspaceApplication = "workspaces:AssociateWorkspaceApplication"
      AuthorizeIpRules = "workspaces:AuthorizeIpRules"
      CopyWorkspaceImage = "workspaces:CopyWorkspaceImage"
      CreateAccountLinkInvitation = "workspaces:CreateAccountLinkInvitation"
      CreateConnectClientAddIn = "workspaces:CreateConnectClientAddIn"
      CreateConnectionAlias = "workspaces:CreateConnectionAlias"
      CreateIpGroup = "workspaces:CreateIpGroup"
      CreateStandbyWorkspaces = "workspaces:CreateStandbyWorkspaces"
      CreateTags = "workspaces:CreateTags"
      CreateUpdatedWorkspaceImage = "workspaces:CreateUpdatedWorkspaceImage"
      CreateWorkspaceBundle = "workspaces:CreateWorkspaceBundle"
      CreateWorkspaceImage = "workspaces:CreateWorkspaceImage"
      CreateWorkspaces = "workspaces:CreateWorkspaces"
      DeleteAccountLinkInvitation = "workspaces:DeleteAccountLinkInvitation"
      DeleteClientBranding = "workspaces:DeleteClientBranding"
      DeleteConnectClientAddIn = "workspaces:DeleteConnectClientAddIn"
      DeleteConnectionAlias = "workspaces:DeleteConnectionAlias"
      DeleteIpGroup = "workspaces:DeleteIpGroup"
      DeleteTags = "workspaces:DeleteTags"
      DeleteWorkspaceBundle = "workspaces:DeleteWorkspaceBundle"
      DeleteWorkspaceImage = "workspaces:DeleteWorkspaceImage"
      DeployWorkspaceApplications = "workspaces:DeployWorkspaceApplications"
      DeregisterWorkspaceDirectory = "workspaces:DeregisterWorkspaceDirectory"
      DescribeAccount = "workspaces:DescribeAccount"
      DescribeAccountModifications = "workspaces:DescribeAccountModifications"
      DescribeApplicationAssociations = "workspaces:DescribeApplicationAssociations"
      DescribeApplications = "workspaces:DescribeApplications"
      DescribeBundleAssociations = "workspaces:DescribeBundleAssociations"
      DescribeClientBranding = "workspaces:DescribeClientBranding"
      DescribeClientProperties = "workspaces:DescribeClientProperties"
      DescribeConnectClientAddIns = "workspaces:DescribeConnectClientAddIns"
      DescribeConnectionAliasPermissions = "workspaces:DescribeConnectionAliasPermissions"
      DescribeConnectionAliases = "workspaces:DescribeConnectionAliases"
      DescribeImageAssociations = "workspaces:DescribeImageAssociations"
      DescribeIpGroups = "workspaces:DescribeIpGroups"
      DescribeTags = "workspaces:DescribeTags"
      DescribeWorkspaceAssociations = "workspaces:DescribeWorkspaceAssociations"
      DescribeWorkspaceBundles = "workspaces:DescribeWorkspaceBundles"
      DescribeWorkspaceDirectories = "workspaces:DescribeWorkspaceDirectories"
      DescribeWorkspaceImagePermissions = "workspaces:DescribeWorkspaceImagePermissions"
      DescribeWorkspaceImages = "workspaces:DescribeWorkspaceImages"
      DescribeWorkspaceSnapshots = "workspaces:DescribeWorkspaceSnapshots"
      DescribeWorkspaces = "workspaces:DescribeWorkspaces"
      DescribeWorkspacesConnectionStatus = "workspaces:DescribeWorkspacesConnectionStatus"
      DisassociateConnectionAlias = "workspaces:DisassociateConnectionAlias"
      DisassociateIpGroups = "workspaces:DisassociateIpGroups"
      DisassociateWorkspaceApplication = "workspaces:DisassociateWorkspaceApplication"
      GetAccountLink = "workspaces:GetAccountLink"
      ImportClientBranding = "workspaces:ImportClientBranding"
      ImportWorkspaceImage = "workspaces:ImportWorkspaceImage"
      ListAccountLinks = "workspaces:ListAccountLinks"
      ListAvailableManagementCidrRanges = "workspaces:ListAvailableManagementCidrRanges"
      MigrateWorkspace = "workspaces:MigrateWorkspace"
      ModifyAccount = "workspaces:ModifyAccount"
      ModifyCertificateBasedAuthProperties = "workspaces:ModifyCertificateBasedAuthProperties"
      ModifyClientProperties = "workspaces:ModifyClientProperties"
      ModifySamlProperties = "workspaces:ModifySamlProperties"
      ModifySelfservicePermissions = "workspaces:ModifySelfservicePermissions"
      ModifyWorkspaceAccessProperties = "workspaces:ModifyWorkspaceAccessProperties"
      ModifyWorkspaceCreationProperties = "workspaces:ModifyWorkspaceCreationProperties"
      ModifyWorkspaceProperties = "workspaces:ModifyWorkspaceProperties"
      ModifyWorkspaceState = "workspaces:ModifyWorkspaceState"
      RebootWorkspaces = "workspaces:RebootWorkspaces"
      RebuildWorkspaces = "workspaces:RebuildWorkspaces"
      RegisterWorkspaceDirectory = "workspaces:RegisterWorkspaceDirectory"
      RejectAccountLinkInvitation = "workspaces:RejectAccountLinkInvitation"
      RestoreWorkspace = "workspaces:RestoreWorkspace"
      RevokeIpRules = "workspaces:RevokeIpRules"
      StartWorkspaces = "workspaces:StartWorkspaces"
      StopWorkspaces = "workspaces:StopWorkspaces"
      Stream = "workspaces:Stream"
      TerminateWorkspaces = "workspaces:TerminateWorkspaces"
      UpdateConnectClientAddIn = "workspaces:UpdateConnectClientAddIn"
      UpdateConnectionAliasPermission = "workspaces:UpdateConnectionAliasPermission"
      UpdateRulesOfIpGroup = "workspaces:UpdateRulesOfIpGroup"
      UpdateWorkspaceBundle = "workspaces:UpdateWorkspaceBundle"
      UpdateWorkspaceImagePermission = "workspaces:UpdateWorkspaceImagePermission"
    }
    xray = {
      AllActions = "xray:*"
      BatchGetTraceSummaryById = "xray:BatchGetTraceSummaryById"
      BatchGetTraces = "xray:BatchGetTraces"
      CreateGroup = "xray:CreateGroup"
      CreateSamplingRule = "xray:CreateSamplingRule"
      DeleteGroup = "xray:DeleteGroup"
      DeleteResourcePolicy = "xray:DeleteResourcePolicy"
      DeleteSamplingRule = "xray:DeleteSamplingRule"
      GetDistinctTraceGraphs = "xray:GetDistinctTraceGraphs"
      GetEncryptionConfig = "xray:GetEncryptionConfig"
      GetGroup = "xray:GetGroup"
      GetGroups = "xray:GetGroups"
      GetInsight = "xray:GetInsight"
      GetInsightEvents = "xray:GetInsightEvents"
      GetInsightImpactGraph = "xray:GetInsightImpactGraph"
      GetInsightSummaries = "xray:GetInsightSummaries"
      GetSamplingRules = "xray:GetSamplingRules"
      GetSamplingStatisticSummaries = "xray:GetSamplingStatisticSummaries"
      GetSamplingTargets = "xray:GetSamplingTargets"
      GetServiceGraph = "xray:GetServiceGraph"
      GetTimeSeriesServiceStatistics = "xray:GetTimeSeriesServiceStatistics"
      GetTraceGraph = "xray:GetTraceGraph"
      GetTraceSummaries = "xray:GetTraceSummaries"
      Link = "xray:Link"
      ListResourcePolicies = "xray:ListResourcePolicies"
      ListTagsForResource = "xray:ListTagsForResource"
      PutEncryptionConfig = "xray:PutEncryptionConfig"
      PutResourcePolicy = "xray:PutResourcePolicy"
      PutTelemetryRecords = "xray:PutTelemetryRecords"
      PutTraceSegments = "xray:PutTraceSegments"
      TagResource = "xray:TagResource"
      UntagResource = "xray:UntagResource"
      UpdateGroup = "xray:UpdateGroup"
      UpdateSamplingRule = "xray:UpdateSamplingRule"
    }
  }
}
